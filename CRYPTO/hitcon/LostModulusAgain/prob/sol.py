#coding=utf-8
import time
from Crypto.Util.number import *

e = 1048583
d = 20899585599499852848600179189763086698516108548228367107221738096450499101070075492197700491683249172909869748620431162381087017866603003080844372390109407618883775889949113518883655204495367156356586733638609604914325927159037673858380872827051492954190012228501796895529660404878822550757780926433386946425164501187561418082866346427628551763297010068329425460680225523270632454412376673863754258135691783420342075219153761633410012733450586771838248239221434791288928709490210661095249658730871114233033907339401132548352479119599592161475582267434069666373923164546185334225821332964035123667137917080001159691927
iqmp = 22886390627173202444468626406642274959028635116543626995297684671305848436910064602418012808595951325519844918478912090039470530649857775854959462500919029371215000179065185673136642143061689849338228110909931445119687113803523924040922470616407096745128917352037282612768345609735657018628096338779732460743
ipmq = 138356012157150927033117814862941924437637775040379746970778376921933744927520585574595823734209547857047013402623714044512594300691782086053475259157899010363944831564630625623351267412232071416191142966170634950729938561841853176635423819365023039470901382901261884795304947251115006930995163847675576699331
cipher = '32074de818f2feeb788e36d7d3ee09f0000381584a72b2fba0dcc9a2ebe5fd79cf2d6fd40c4dbfea27d3489704f2c1a30b17a783baa67229d02043c5bc9bdb995ae984d80a96bd79370ea2c356f39f85a12d16983598c1fb772f9183441fea5dfeb5b26455df75de18ce70a6a9e9dbc0a4ca434ba94cf4d1e5347395cf7aafa756c8a5bd6fd166bc30245a4bded28f5baac38d024042a166369f7515e8b0c479a1965b5988b350064648738f6585c0a0d1463bd536d11a105bb926b44236593b5c6c71ef5b132cd9c211e8ad9131aa53ffde88f5b0df18e7c45bcdb6244edcaa8d386196d25297c259fca3be37f0f2015f40cb5423a918c51383390dfd5a8703'

'''
# get phi
factor = [int(''.join(i.split(' '))) for i in '2 × 2 × 2 × 2 × 2 × 3 × 3 × 3 × 3 × 3 × 5 × 13 × 31 × 47 × 331 × 449 × 1381 × 37693 × 2 444137 × 7731 502019 × 203 560350 540241 114863 429835 289761 257239 483717 040193 233874 117904 230169 286234 571482 421387 546631 832059 449971 585954 738357 051759 957677 556703 265583 032619 176493 432315 622968 547519 256392 594813 436875 530796 380978 972639 071067 604902 867158 059055 183572 699320 156399 296460 100239 708804 816649 576605 492689 112864 813270 324565 325930 424653 852574 984603 584730 127790 999375 871038 185295 950722 323523 126290 532972 720746 428285 428362 949221 776576 353836 507632 212665 527900 259111 518152 929325 537963 809556 478012 703900 203723 351332 139532 798741 458461 424009 021983 902742 970898 100142 104817 157523 104393 840272 925587 625053 051536 569203'.split(' × ')]

print factor

def recur(k, arr):
  if arr == []:
    return
  if inverse(e, k) == d:
    print k
    exit(0)
  for i in range(len(arr)):
    new_arr = arr[0:i] + arr[i+1:]
    new_k = k * arr[i]
    recur(new_k, new_arr)
fir, arr = factor[0], factor[1:]
recur(fir, arr)
'''

phi = 581406366346015286645895038742985348462317052233224892324619738370263807574280714451891369078361936366894382262426911350729508621113102612673998740719446395066245891120646043057638814243901137582942689277026879668635519159478025128470607029729873866139161796423715270583534818038602668578814267826447886462827004169176152454237822464015122959000696912118405909262633722968924988484469083644445308976698540772404758290916772579387312535008617425754767884048166231336166363329620183207578069479770594688027416062920734825324306571848011544516396956483506727322722189097427444255392630217372637945513980805600479028818080
