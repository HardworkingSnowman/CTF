Gadgets information
============================================================
0x00000000004b2d60 : adc ah, bh ; sti ; jmp qword ptr [rbx]
0x000000000043d68f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d6f9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004af4e8 : adc al, 0 ; add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000048d28d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047e07a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004275a8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042dad5 : adc al, 0x13 ; jmp rdx
0x0000000000425d95 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cfaa : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e8b1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000444a60 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000496024 : adc al, 0x69 ; sti ; call rax
0x0000000000471f28 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043eb20 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d24e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042dad1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d260 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000424997 : adc al, 0xa ; jmp r10
0x0000000000425f03 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000446fdf : adc al, 0xe ; cmp rdi, rdx ; jb 0x446ff2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a37a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042c04a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000403f4f : adc al, 0xf ; retf 0xfa83
0x0000000000412a0b : adc al, 0xf6 ; ret 0x7420
0x000000000048d32d : adc al, 0xf7 ; ret
0x0000000000494011 : adc al, 0xf9 ; call qword ptr [rax - 0x2f0006eb]
0x00000000004b30e1 : adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004245b6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048cbfd : adc al, bh ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000043d837 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d8a1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428f58 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acb49 : adc al, byte ptr [rax] ; add byte ptr [rbx + rbx*2 - 0xa], al ; jmp rdi
0x000000000040102a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004189b8 : adc al, ch ; retf 0xfe7a
0x00000000004248fa : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000494801 : adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494641 : adc bh, dl ; call rsi
0x000000000049463d : adc bh, dl ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000494444 : adc bl, ah ; stc ; call qword ptr [rax]
0x0000000000440f25 : adc bl, ch ; call 0xffffffffc414987a
0x0000000000440e45 : adc bl, ch ; call 0xffffffffc43c979a
0x0000000000482ed2 : adc bl, ch ; jno 0x482f28 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000444396 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444407 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444367 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444395 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f34a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419295 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000048393e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045c0e9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484153 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045b305 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045bae6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481e2f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411692 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041887f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c44f : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004116bd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042b286 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004447da : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000048414d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041eb03 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae3c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1b8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423af6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481e30 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041310e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411693 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410a97 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a28a : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044b097 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004af4ec : adc byte ptr [rax + rax], bh ; add byte ptr [rax], dh ; ret 0xfff7
0x0000000000400e5e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000494340 : adc byte ptr [rax - 0x461f0007], bh ; stc ; jmp rax
0x0000000000475b85 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004158f3 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000488e2f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409539 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406048
0x000000000041ca9d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c185 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458a08 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470bb7 : adc byte ptr [rax - 0x77], cl ; jo 0x470bd5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b77 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000470b7b : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004222af : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041de71 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000418880 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000470fe0 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041705f : adc byte ptr [rax - 0x78], al ; jl 0x417081 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004114e3 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441107 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441143 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401030 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000419933 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004556e8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044ac99 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000047fbd9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47fc31 ; mov esi, ebx ; syscall
0x000000000043d2e2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a3da : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043edf8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043f0ec : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043da41 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000449bf3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004482bc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000427a28 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043b2f8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000494a44 : adc byte ptr [rax], cl ; cli ; call qword ptr [rax + 0x10fffa07]
0x000000000048e258 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b0b8 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045c099 : adc byte ptr [rbp + 0x39], cl ; retf
0x00000000004942b8 : adc byte ptr [rbp - 0x490f0007], dh ; stc ; call rax
0x0000000000413d44 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410903 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419296 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3b6f : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c193 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c192 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418462 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004710ae : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004942d4 : adc byte ptr [rbx - 0x4b0f0007], dh ; stc ; call rax
0x0000000000407000 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x000000000041964c : adc byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004116be : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004121c0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x00000000004721b3 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000494358 : adc byte ptr [rcx + rdi*8 - 0x64a0f01], dh ; call rax
0x00000000004943a4 : adc byte ptr [rcx - 0x44ef0007], bh ; stc ; call qword ptr [rax]
0x000000000044b102 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048acbf : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048aaee : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044ab21 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004191e7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000482d24 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045c081 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a40d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000495034 : adc byte ptr [rcx - 6], cl ; jmp qword ptr [rax]
0x0000000000494608 : adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x000000000048278a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448c19 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004853d0 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000418465 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000494a3c : adc byte ptr [rcx], cl ; cli ; call qword ptr [rax + 0x10fffa08]
0x0000000000412007 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049429c : adc byte ptr [rdi - 0x470f0007], dh ; stc ; jmp rax
0x0000000000494a4c : adc byte ptr [rdi], al ; cli ; call qword ptr [rax + 0x10fffa06]
0x00000000004ac560 : adc byte ptr [rdi], al ; wait ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x0000000000403f3f : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000048393f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045c0ea : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444c73 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a7f1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a8e1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a701 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b149 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042aca1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a431 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042ae81 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a611 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042b061 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042af71 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a8b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9a3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a521 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a6d3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4f3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5e3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a403 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b306 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045bae7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044a089 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000484001 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000048333d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000476a94 : adc byte ptr [rdx + 0x3948fff8], bl ; ret
0x00000000004ad1fb : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042dfc9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004afaec : adc byte ptr [rdx], al ; add byte ptr [rax - 0x7d], dh ; stc ; call qword ptr [rbx]
0x000000000042cf0b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000446c0f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042cdba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c3b5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c7b5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c789
0x000000000042c833 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42c807
0x000000000042ccc5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cc99
0x000000000042cd43 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd17
0x000000000042c7b0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c78e
0x000000000042c82e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c80c
0x000000000042ccc0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cc9e
0x000000000042cd3e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd1c
0x0000000000424ae5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000494a54 : adc byte ptr [rsi], al ; cli ; call qword ptr [rax + 0x10fffa05]
0x00000000004b50e0 : adc byte ptr [rsi], dh ; std ; jmp qword ptr [rcx]
0x0000000000494448 : adc ch, ah ; stc ; call qword ptr [rax]
0x00000000004244da : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004945a0 : adc cl, 0xf9 ; call rax
0x000000000046333c : adc cl, 0xf9 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494440 : adc cl, ah ; stc ; call qword ptr [rax]
0x0000000000494005 : adc cl, bh ; call rax
0x00000000004158f6 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045d5cf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c74a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440e35 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045d5d2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000048600a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045c3a5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004946b0 : adc cl, byte ptr [rip + 0x1382fffa] ; cli ; call qword ptr [rdx]
0x00000000004ab7e9 : adc dh, bh ; call qword ptr [rcx]
0x00000000004ab819 : adc dh, bh ; call rcx
0x00000000004ab825 : adc dh, bh ; dec dword ptr [rdx] ; adc esi, edi ; jmp rcx
0x00000000004ab809 : adc dh, bh ; jmp qword ptr [rax + 0x11fffe10]
0x00000000004ab81d : adc dh, bh ; jmp rsp
0x00000000004ab7f5 : adc dh, bh ; push qword ptr [rax + rdx - 2] ; call qword ptr [rcx]
0x000000000041c4ee : adc dh, dh ; ret 0xf0f
0x00000000004946d5 : adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000494651 : adc dl, bh ; call qword ptr [rsi]
0x0000000000494811 : adc dl, bh ; call rax
0x000000000049480d : adc dl, bh ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494791 : adc dl, bh ; jmp rsp
0x00000000004945c8 : adc dl, cl ; stc ; jmp qword ptr [rax - 0x35]
0x000000000049516c : adc dl, dh ; cli ; jmp qword ptr [rax]
0x0000000000494810 : adc dl, dil ; call rax
0x000000000047012b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045acad : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004116af : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041cc66 : adc dword ptr [rax - 0x3f], ecx ; jmp 0x41cc78
0x000000000048ad0f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040514f : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000471744 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f0eb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d9d7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043efef : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004278a8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045b315 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000494190 : adc dword ptr [rbx - 0x6c6e0007], edx ; stc ; jmp qword ptr [rcx]
0x0000000000447238 : adc dword ptr [rbx], eax ; ret
0x00000000004471b1 : adc dword ptr [rbx], esp ; ret
0x0000000000438937 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004471ac : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000494180 : adc dword ptr [rcx - 0x6e6e0007], edx ; stc ; call qword ptr [rcx]
0x0000000000489976 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004385d2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438596 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f52e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f504
0x0000000000435a3b : adc dword ptr [rdi + 0x28], eax ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447233 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f93 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447115 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044711a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000004470f2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000004470f7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004941ac : adc dword ptr [rdi - 0x68710007], edx ; stc ; jmp qword ptr [rsi]
0x0000000000494178 : adc dword ptr [rdi - 0x6fee0007], ecx ; stc ; call qword ptr [rcx]
0x0000000000438a99 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446f90 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000451292 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000446d8c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000494188 : adc dword ptr [rdx - 0x6d6e0007], edx ; stc ; call qword ptr [rcx]
0x0000000000479f6e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000446ebf : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f5c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000446d5e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048af36 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d9d6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004187fa : adc eax, 0x1002a35 ; ret
0x00000000004245b4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000494015 : adc eax, 0x16d0fff9 ; stc ; call qword ptr [rax]
0x0000000000423900 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424790 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424525 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000423899 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045ac89 : adc eax, 0x25fe2a ; je 0x45aca0 ; ret
0x000000000044d567 : adc eax, 0x26b54c ; pop rbx ; ret
0x00000000004238d0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000419184 : adc eax, 0x2a06a7 ; ret
0x00000000004a7da4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x00000000004744cb : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bd22 : adc eax, 0x4000003 ; ret
0x000000000047bc72 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004239da : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d561 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469785 : adc eax, 0x83fffffd ; ret
0x0000000000478e21 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000428c78 : adc eax, 0x894d0000 ; retf
0x0000000000417063 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047499a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000424854 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424714 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447de4 : adc eax, 0xf880272 ; ret
0x0000000000473e05 : adc eax, 0xfffd4186 ; cmove rax, rdx ; ret
0x000000000043ee4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000427728 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042389b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004844b9 : adc eax, eax ; ret
0x00000000004845f6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a7a45 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412d37 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475b8c : adc ebx, esi ; ret
0x000000000041727a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea71 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004579d4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468f76 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000494009 : adc ecx, edi ; call qword ptr [rax]
0x000000000047f1ee : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f28b : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004946b5 : adc edi, edx ; call qword ptr [rdx]
0x00000000004945f9 : adc edi, edx ; call rax
0x00000000004945f5 : adc edi, edx ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000494635 : adc edi, edx ; jmp qword ptr [rsi]
0x00000000004947f5 : adc edi, edx ; jmp rax
0x00000000004ab831 : adc edi, esi ; call rsp
0x0000000000494609 : adc edx, edi ; call qword ptr [rax]
0x0000000000494805 : adc edx, edi ; jmp qword ptr [rax]
0x00000000004946c9 : adc edx, edi ; jmp rdx
0x00000000004a8f5e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416643 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e0cc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412a09 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab829 : adc esi, edi ; jmp rcx
0x00000000004103a0 : adc esi, esi ; ret 0x7520
0x0000000000438936 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004385d1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438595 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438a98 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446ebe : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446f5b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000446d5d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000494640 : adc r15b, dl ; call rsi
0x00000000004845f5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004b18bf : add ah, ah ; pop rdi ; add byte ptr [rax], al ; cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x00000000004b1d9f : add ah, al ; add byte ptr fs:[rax], al ; jl 0x4b1d8d ; cli ; call qword ptr [rsi]
0x00000000004ac68b : add ah, al ; cmp dh, dh ; call qword ptr [rdi]
0x00000000004abd9b : add ah, al ; xchg eax, edx ; cmc ; call rsp
0x000000000044820e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004482eb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448259 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004af6b7 : add ah, bl ; cmp eax, 0x95940000 ; clc ; jmp qword ptr [rsi]
0x00000000004a8f87 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000446eba : add ah, byte ptr [rdx - 0xf] ; jl 0x446f0f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2a92 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b15c7 : add ah, ch ; pop rsp ; add byte ptr [rax], al ; and al, 0x73 ; cli ; jmp rax
0x00000000004b5043 : add ah, cl ; xor al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b154b : add ah, dh ; jb 0x4b154d ; call qword ptr [rdx]
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004b0e6b : add ah, dl ; add bh, dl ; jmp qword ptr [rdx]
0x00000000004abd99 : add al, 0 ; add ah, al ; xchg eax, edx ; cmc ; call rsp
0x0000000000453313 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453307 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045700f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411230 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048c2dd : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042ad67 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f446 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043fd0f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad95 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e1f0 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e217 ; ret
0x0000000000474a23 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044974f : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000428628 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000472740 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a011 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac14 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ed0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424505 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000044c1f2 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000455017 : add al, 0 ; mov edx, 0x1d0 ; call 0x401af9
0x0000000000455092 : add al, 0 ; mov edx, 0x305 ; call 0x401af9
0x00000000004558c9 : add al, 0 ; mov edx, 0x309 ; call 0x401af9
0x00000000004493d1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004481b5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000475b8b : add al, 0x11 ; ret
0x00000000004482a4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425d91 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000425d2a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486e00 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ae37 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048ab3b : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489d34 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045acea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048440b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484457 ; leave ; ret
0x000000000040e977 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004192fa : add al, 0x2a ; add bl, dh ; ret
0x000000000047356e : add al, 0x31 ; ret
0x0000000000476498 : add al, 0x35 ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000047346a : add al, 0x37 ; ret
0x0000000000417aff : add al, 0x3a ; ret
0x00000000004a7066 : add al, 0x3d ; retf
0x000000000047fac6 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa7a ; xor eax, eax ; ret
0x00000000004448cb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000443dd9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443deb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048d340 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x00000000004354da : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442619 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000473844 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e856 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e804 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000474108 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000045664a : add al, 0x4d ; cmp ebp, ebx ; jb 0x4566c0 ; mov rdx, rax ; jmp 0x456617
0x0000000000443de7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442627 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004579d2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000453c99 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047d8ca : add al, 0x75 ; retf
0x000000000046ec28 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d24b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb23 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f47 : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000004487e8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d8 ; ret
0x000000000043ae57 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d639 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c1da : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466d49 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004744f9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048cadb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046eabc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b189 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f258 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443dd6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000442616 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048af63 : add al, 0x88 ; add rax, r8 ; jmp rax
0x00000000004580b6 : add al, 0x89 ; retf
0x0000000000488179 : add al, 0x89 ; retf 0xeac0
0x00000000004b42e0 : add al, 0x8a ; add byte ptr [rax], al ; retf
0x00000000004487eb : add al, 0x8a ; je 0x4487d5 ; ret
0x0000000000448273 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c713 : add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004493d5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c26f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb97 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000417187 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004481b9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046be20 : add al, 0xc6 ; jmp rax
0x0000000000460fba : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046161a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460f70 : add al, 0xc7 ; jmp rax
0x000000000046be5b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000048454d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4845a9
0x000000000048834d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4883a9
0x00000000004592c1 : add al, 0xe8 ; test rax, rax ; je 0x4592d1 ; call rax
0x0000000000454fa0 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000465a7d : add al, 0xe9 ; retf 0xfffb
0x00000000004569dc : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000484df8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a376 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000040499a : add al, 0xf ; retf
0x0000000000446ccb : add al, 0xf ; sub rax, rsi ; ret
0x0000000000435843 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000449a4b : add al, 0xf3 ; ret
0x0000000000460a2e : add al, 0xf8 ; jmp rax
0x0000000000494a21 : add al, 0xfa ; call qword ptr [rax]
0x0000000000494865 : add al, 0xfa ; jmp rax
0x0000000000494a65 : add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004b2ef9 : add al, 0xfc ; jmp rdx
0x000000000040ef97 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d617 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463568 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463591 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf3e8
0x000000000044023d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046be1c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440458 : add al, 7 ; ret
0x0000000000425eff : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b010f : add al, ah ; pushfq ; stc ; call qword ptr [rbx]
0x00000000004974bf : add al, ah ; sub edi, esp ; call rax
0x00000000004afa9b : add al, al ; add byte ptr [r8], al ; jo 0x4afa2c ; stc ; call qword ptr [rax]
0x00000000004b059b : add al, al ; add byte ptr [rax], r8b ; loopne 0x4b0562 ; stc ; jmp qword ptr [rcx]
0x000000000049f267 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004951e8 : add al, bh ; cli ; jmp qword ptr [rax]
0x00000000004b0927 : add al, bh ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b1a87 : add al, bh ; hlt ; std ; call rdx
0x0000000000448305 : add al, bh ; jg 0x448307 ; int1 ; mov eax, eax ; ret
0x00000000004b5397 : add al, bh ; pop rax ; std ; call qword ptr [rdx]
0x00000000004b18d3 : add al, bh ; pop rdi ; add byte ptr [rax], al ; xchg rax, rsp ; cli ; call qword ptr [rcx]
0x00000000004b2d47 : add al, bh ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004af6f7 : add al, bl ; fdivr st(0) ; call qword ptr [rax]
0x000000000040d732 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000440e31 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040102b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004556da : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000045530d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b0d0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041e01d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000045f8b3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b272 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048822e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045ad7d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401015 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468c14 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004234b3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c44a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478585 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000047001d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004477f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004217ba : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454aab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042af47 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e8e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af75 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d733 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045ac72 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dd46 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a829 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040dbbc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000004747b4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004858bc : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487dba : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004287a8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446274 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410c96 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485b34 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046cbf4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044aa30 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041ae86 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004244b3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042389c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d925 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000004857f7 : add al, byte ptr [rax] ; mov edx, 0x50 ; call 0x401af9
0x000000000048af32 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c26b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047cb93 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484f7a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d57a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d56e
0x000000000044b105 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044bf4e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac13d : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000424881 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042466d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004abe27 : add al, ch ; cwde ; cmc ; call rax
0x00000000004857fd : add al, ch ; in eax, dx ; ret 0xfff7
0x00000000004130af : add al, ch ; jmp 0x4130b2
0x000000000044d4e1 : add al, ch ; jmp 0x4944d4ac
0x000000000046fc4b : add al, ch ; lahf ; ret 0xfffd
0x000000000041fb45 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b10c3 : add al, ch ; push rdi ; add byte ptr [rax], al ; js 0x4b10f1 ; cli ; call qword ptr [rdi]
0x0000000000455098 : add al, ch ; push rdx ; retf 0xfffa
0x000000000044fbc4 : add al, ch ; push rsi ; ret
0x000000000040fbb6 : add al, ch ; ret
0x0000000000414bcf : add al, ch ; retf
0x0000000000482600 : add al, ch ; retf 0xfc6a
0x000000000047e510 : add al, ch ; retf 0xfcb2
0x000000000041fb89 : add al, ch ; xchg eax, ecx ; ret
0x00000000004af6a3 : add al, cl ; cmp eax, 0x95980000 ; clc ; call qword ptr [rax]
0x00000000004ac2a3 : add al, cl ; or dword ptr [rax], eax ; add byte ptr [rax], cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b0aa3 : add al, cl ; push rcx ; add byte ptr [rax], al ; jg 0x4b0aac ; hlt ; jmp qword ptr [rbx]
0x00000000004af6cb : add al, dh ; cmp eax, 0xb7b00000 ; clc ; call qword ptr [rax]
0x000000000049601f : add al, dh ; imul edi, ebx, -1 ; adc al, 0x69 ; sti ; call rax
0x00000000004b41ab : add al, dl ; mov byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0cab : add al, dl ; push rbx ; add byte ptr [rax], al ; push rax ; cli ; std ; jmp qword ptr [rdx]
0x00000000004b4086 : add bh, ah ; ret
0x000000000044e9bf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045ec07 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea6f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040102d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004859ff : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000049447c : add bh, bl ; stc ; jmp rax
0x0000000000484689 : add bh, byte ptr [rax + 1] ; ret
0x00000000004847e6 : add bh, byte ptr [rax + 2] ; ret
0x000000000044976b : add bh, byte ptr [rax - 1] ; ret
0x0000000000446642 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004ab391 : add bh, dh ; call rsp
0x00000000004951c0 : add bh, dh ; cli ; call qword ptr [rax]
0x0000000000400dfa : add bh, dh ; ret 0
0x0000000000453309 : add bh, dh ; ret 0xf800
0x000000000040f0af : add bh, dh ; ret 0xffef
0x0000000000494831 : add bh, dl ; call qword ptr [rax + 0x10fffa0a]
0x0000000000494a31 : add bh, dl ; jmp qword ptr [rax]
0x00000000004b0e6d : add bh, dl ; jmp qword ptr [rdx]
0x00000000004945b4 : add bl, 0xf9 ; call rax
0x00000000004747b1 : add bl, al ; mov eax, 2 ; ret
0x000000000048824a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000463799 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x463732 ; ret
0x000000000048a15b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485cc9 : add bl, ch ; ret
0x000000000040f348 : add bl, ch ; ret 0x1f0f
0x000000000048af33 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x00000000004a4ebf : add bl, dh ; xchg ch, bh ; ljmp [rax] ; je 0x4a4ecc ; jmp rax
0x000000000041b17e : add bl, sil ; ret
0x000000000044aa73 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000455503 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x00000000004554ee : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455518 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000482945 : add byte ptr [r8 + 0x39], r9b ; retf
0x00000000004816e0 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004729e6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004554b5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e16a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004af9e9 : add byte ptr [r8], al ; je 0x4afa6d ; stc ; call rsp
0x00000000004afa9d : add byte ptr [r8], al ; jo 0x4afa2a ; stc ; call qword ptr [rax]
0x00000000004b026d : add byte ptr [r8], al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004758eb : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b2d5b : add byte ptr [rax + 0x10000074], al ; cld ; sti ; jmp qword ptr [rbx]
0x000000000044c1f3 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004235af : add byte ptr [rax + 0x16], bh ; ret
0x00000000004496bf : add byte ptr [rax + 0x18], bh ; syscall
0x00000000004496be : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044a7af : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004b10c7 : add byte ptr [rax + 0x1f], bh ; cli ; call qword ptr [rdi]
0x00000000004886ef : add byte ptr [rax + 0x26], bh ; syscall
0x00000000004b1893 : add byte ptr [rax + 0x2800005f], bh ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004122b0 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452a91 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004535f7 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465f58 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa5a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004221e4 : add byte ptr [rax + 0x29], cl ; retf
0x00000000004556dc : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000465309 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047ea00 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000042358f : add byte ptr [rax + 0x31], dl ; shr al, 0x48 ; ret
0x00000000004b50dc : add byte ptr [rax + 0x36100000], bl ; std ; jmp qword ptr [rcx]
0x00000000004af243 : add byte ptr [rax + 0x39], ch ; add byte ptr [rax], al ; cmp byte ptr [rdi - 9], al ; jmp qword ptr [rbx]
0x000000000040ea4f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b133 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041328f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b1c8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b0d2 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041d050 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000047842e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000482946 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042deb6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004347af : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041e01f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004109cd : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000446de8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042d9d6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004480f3 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000447f30 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485a98 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004b026b : add byte ptr [rax + 0x40000049], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004afb3b : add byte ptr [rax + 0x42], ah ; add byte ptr [rax], al ; mov al, 0x84 ; stc ; call qword ptr [rbx]
0x0000000000449bf6 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b0923 : add byte ptr [rax + 0x50], cl ; add byte ptr [rax], al ; clc ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b158b : add byte ptr [rax + 0x5c], dh ; std ; jmp qword ptr [rdi]
0x000000000040d25d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046ec25 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f44 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f255 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004493d2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004481b6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459817 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cc03 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000468905 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000471d4f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046f723 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dd31 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004756bf : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004ac363 : add byte ptr [rax + 0x6800000a], cl ; sub dh, dh ; call qword ptr [rax]
0x00000000004adc93 : add byte ptr [rax + 0x68000023], bh ; mov dl, 0xf6 ; call qword ptr [rsi]
0x00000000004756df : add byte ptr [rax + 0x68], bh ; syscall
0x00000000004756cf : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000044912f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004ac38b : add byte ptr [rax + 0x7000000a], dh ; sub dh, dh ; jmp qword ptr [rax]
0x0000000000489973 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004b2d43 : add byte ptr [rax + 0x74], ch ; add byte ptr [rax], al ; clc ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000440e2f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b2f3b : add byte ptr [rax + 0x76], ah ; add byte ptr [rax], al ; and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x00000000004b2f53 : add byte ptr [rax + 0x76], bh ; add byte ptr [rax], al ; sub byte ptr [rsi], cl ; cld ; jmp qword ptr [rbx]
0x000000000044486f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b3353 : add byte ptr [rax + 0x7a], bh ; add byte ptr [rax], al ; cmp byte ptr [rbx], ah ; cld ; jmp qword ptr [rcx]
0x000000000044a77f : add byte ptr [rax + 0xa], bh ; syscall
0x0000000000493fef : add byte ptr [rax + 0xa], dl ; stc ; call qword ptr [rax - 0x2f0006f5]
0x000000000044a74f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000047b6f9 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449434 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbbf : add byte ptr [rax + 0xe], bh ; syscall
0x00000000004247d9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448287 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041560f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004733d5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044fd8f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041ce04 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b266 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000423924 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412fba : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041deb3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b2b5 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000004481fa : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042389d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042459d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454128 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x0000000000448d38 : add byte ptr [rax + 1], bh ; jmp 0x448d0a
0x000000000048464c : add byte ptr [rax + 1], bh ; ret
0x0000000000449b0f : add byte ptr [rax + 1], bh ; syscall
0x000000000042b274 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411232 : add byte ptr [rax + 1], cl ; ret
0x0000000000483858 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000488230 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043486d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044cd70 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402e70 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000450bb5 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484855 : add byte ptr [rax + 2], bh ; ret
0x0000000000449dbf : add byte ptr [rax + 3], bh ; syscall
0x00000000004abe23 : add byte ptr [rax + 5], cl ; add byte ptr [rax], al ; call 0xffffffffd14ab3cd
0x00000000004b4a0f : add byte ptr [rax + 5], dl ; std ; jmp rdx
0x0000000000449b3f : add byte ptr [rax + 8], bh ; syscall
0x0000000000449b3e : add byte ptr [rax + 8], dil ; syscall
0x00000000004816e1 : add byte ptr [rax + 9], cl ; ret 0x840f
0x00000000004762d0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e20b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004505e3 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047273f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424504 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041dd5b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473de7 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b510f : add byte ptr [rax + rbx*4], dh ; add byte ptr [rax], al ; std ; jmp rsp
0x000000000045ac8d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045ad7f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000049f3b7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000046f297 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047bb24 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041d26f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b4217 : add byte ptr [rax - 0x33], bh ; cld ; jmp qword ptr [rsi]
0x00000000004b4137 : add byte ptr [rax - 0x36], ch ; cld ; jmp qword ptr [rcx]
0x0000000000401017 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc33 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004652fb : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d5bf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dbe7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004234b5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468285 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000474a0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474a4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004749ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000474a3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045ae7f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004589d9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004589b0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458310 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482845 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004abd83 : add byte ptr [rax - 0x47fffffc], ch ; xchg eax, edx ; cmc ; call qword ptr [rdx]
0x00000000004616bf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b026f : add byte ptr [rax - 0x5b], al ; stc ; jmp qword ptr [rcx]
0x00000000004b5c8b : add byte ptr [rax - 0x5fffff5d], dh ; cdq ; std ; call qword ptr [rdx]
0x00000000004add6b : add byte ptr [rax - 0x5fffffdc], dl ; mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004b18d7 : add byte ptr [rax - 0x6c], cl ; cli ; call qword ptr [rcx]
0x00000000004552aa : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045742d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d52f : add byte ptr [rax - 0x73], cl ; add eax, 0x26cdc9 ; ret
0x000000000045744b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457469 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004780d6 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000482ac7 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041c4ea : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041eaff : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae38 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b8fb : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b51d ; jmp rax
0x000000000047c44c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041992f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000486007 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048ab38 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461617 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460f6d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x0000000000460a2b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000457b2f : add byte ptr [rax - 0x75], cl ; add eax, 0x264341 ; ret
0x000000000044f62f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d2f1 ; ret
0x000000000041875f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a09b9 ; ret
0x000000000040df0b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044ea7f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042298f : add byte ptr [rax - 0x75], cl ; je 0x4229c1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b71b : add byte ptr [rax - 0x75], cl ; jl 0x45b74c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e9a2 : add byte ptr [rax - 0x75], cl ; js 0x40e9cc ; call rdx
0x000000000047203f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486d50 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401e13 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000400edd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f3ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482bc2 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004123cf : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000470fdd : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000484ae6 : add byte ptr [rax - 0x77], cl ; add eax, 0x23757a ; ret
0x00000000004197fa : add byte ptr [rax - 0x77], cl ; add eax, 0x2a005e ; ret
0x00000000004192f5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a04f3 ; ret
0x00000000004192cd : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0513 ; ret
0x00000000004192ad : add byte ptr [rax - 0x77], cl ; add eax, 0x2a052b ; ret
0x0000000000412a52 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045a129 : add byte ptr [rax - 0x77], cl ; enter -0x3fcf, -0x18 ; retf
0x0000000000410353 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004554b6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000454ea0 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000045f9f4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b5de : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041834b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004017c1 : add byte ptr [rax - 0x77], cl ; jbe 0x4017db ; syscall
0x000000000044c19f : add byte ptr [rax - 0x77], cl ; jo 0x44c1c9 ; ret
0x000000000047fbdb : add byte ptr [rax - 0x77], cl ; jrcxz 0x47fc2f ; mov esi, ebx ; syscall
0x0000000000412ba3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000485c71 : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call 0x422707
0x000000000042360f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040383f : add byte ptr [rax - 0x77], cl ; ret
0x00000000004495cb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041dd07 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411306 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131da : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e9ac : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449677 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402dbe : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fde8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041afbc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b3f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004100e8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004493a3 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e0ff : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456518 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403153 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a447 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f37d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414938 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004495e2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000449047 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043d2e4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042a3dc : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045e54b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000410d37 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000455ab7 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042a31a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456269 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d166 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043ecdc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000447050 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481d61 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cd1f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b7d3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041001f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045d1f8 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45d1c8
0x000000000048ac16 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047383f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000471a9b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000463549 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000048c2df : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000048ee5e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e397 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12fa7
0x000000000047e396 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12fa8
0x000000000041fcbc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d0f7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd54 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047fa7d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042385d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a79 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000041134a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000461b23 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a941 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000416b8f : add byte ptr [rax - 0x7d], cl ; jg 0x416bd5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041f142 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000471a56 : add byte ptr [rax - 0x7d], cl ; js 0x471a94 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f4f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c547 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f267 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f1cf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456174 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000485a7f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dd4a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dd14 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a409 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e797 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e0df : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f448 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424260 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d3c3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a437 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047e007 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000419dda : add byte ptr [rax - 0x7d], cl ; retf
0x00000000004222e9 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d735 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041cef0 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d795 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000425e3f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047397f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041039a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000004896e2 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004afac7 : add byte ptr [rax - 0x7d], cl ; stc ; call qword ptr [rdx]
0x00000000004afaef : add byte ptr [rax - 0x7d], dh ; stc ; call qword ptr [rbx]
0x00000000004afa9f : add byte ptr [rax - 0x7e], dh ; stc ; call qword ptr [rax]
0x0000000000421b18 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045ac74 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043306b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b5393 : add byte ptr [rax - 0x7ffff66], bh ; pop rax ; std ; call qword ptr [rdx]
0x00000000004b1a83 : add byte ptr [rax - 0x7ffff9f], ch ; hlt ; std ; call rdx
0x00000000004af71f : add byte ptr [rax - 0xc], ah ; clc ; call qword ptr [rax]
0x0000000000411d6a : add byte ptr [rax - 1], bh ; ret
0x00000000004b0caf : add byte ptr [rax - 6], dl ; std ; jmp qword ptr [rdx]
0x000000000046fc48 : add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000041fb42 : add byte ptr [rax], 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044fbc1 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x000000000040fbb3 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421b1c : add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000041fb86 : add byte ptr [rax], 0 ; add al, ch ; xchg eax, ecx ; ret
0x0000000000415ada : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000447f2d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043486a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000414935 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043584b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044823b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418573 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c0cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449a3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042c631 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b2f3f : add byte ptr [rax], ah ; or edi, esp ; jmp qword ptr [rax]
0x00000000004b2d5e : add byte ptr [rax], al ; adc ah, bh ; sti ; jmp qword ptr [rbx]
0x00000000004b30df : add byte ptr [rax], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004af4ea : add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add byte ptr [rax], dh ; ret 0xfff7
0x00000000004afaea : add byte ptr [rax], al ; adc byte ptr [rdx], al ; add byte ptr [rax - 0x7d], dh ; stc ; call qword ptr [rbx]
0x00000000004b50de : add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; jmp qword ptr [rcx]
0x00000000004b42de : add byte ptr [rax], al ; add al, 0x8a ; add byte ptr [rax], al ; retf
0x00000000004974bd : add byte ptr [rax], al ; add al, ah ; sub edi, esp ; call rax
0x00000000004857fb : add byte ptr [rax], al ; add al, ch ; in eax, dx ; ret 0xfff7
0x000000000046fc49 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xfffd
0x000000000041fb43 : add byte ptr [rax], al ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044fbc2 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x000000000040fbb4 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000414bcd : add byte ptr [rax], al ; add al, ch ; retf
0x00000000004825fe : add byte ptr [rax], al ; add al, ch ; retf 0xfc6a
0x000000000047e50e : add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x000000000041fb87 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x00000000004b41a9 : add byte ptr [rax], al ; add al, dl ; mov byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000045ec4e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea6d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859fd : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004747af : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485cc7 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f346 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000415adb : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004886ed : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000468c68 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465f56 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa58 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000465307 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e9fe : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004b50da : add byte ptr [rax], al ; add byte ptr [rax + 0x36100000], bl ; std ; jmp qword ptr [rcx]
0x000000000041f32f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b131 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041328d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b1c6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042deb4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004372a1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004109cb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000447f2e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000449bf4 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046b384 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000471d4d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004756dd : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000004756cd : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000044912d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000044486d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044a74d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044bf2f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449432 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dbbd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000448285 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041ce02 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485242 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453112 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041deb1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000004481f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004744cd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000454126 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048464a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000449b0d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483189 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483856 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043486b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000450bb3 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484853 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046f295 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000044a5a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc31 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x0000000000449a0d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004589d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004589ae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045830e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482843 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045742b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000457449 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457467 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041992d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e9a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e9ce ; call rdx
0x0000000000401e11 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041878d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454e9e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000045f9f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000048b5dc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004017bf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017dd ; syscall
0x000000000044c19d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c1cb ; ret
0x0000000000485c6f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call 0x422709
0x000000000042360d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410061 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411304 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000460244 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b98d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a6e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f37b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414936 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044b5a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045e549 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042a318 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456267 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d164 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043ecda : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048cd1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048ac14 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000405f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485a7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dd48 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b123 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e0dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472cfe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ea81 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425e3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004896e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434864 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000411d68 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004974bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; sub edi, esp ; call rax
0x00000000004912e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000414bcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040ea6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041874b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000471d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045d5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x0000000000449a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041878b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c1cd ; ret
0x000000000041b98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cd1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004974ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4974f6 ; cld ; call rax
0x0000000000417376 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0092 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0582 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f742 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a00d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a05c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f73a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004190eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044697b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042618b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000459aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000412d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004227bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004749cc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481c0f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a20bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a126c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004481f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d2e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d2cc ; ret
0x0000000000485cc6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485c94
0x000000000046007d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444eac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444edc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400bc6 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004974bc : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4974f4 ; cld ; call rax
0x000000000044486c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044424c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004886ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004756dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004756cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000044912c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a74c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041870c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484649 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000449b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484852 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004490ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043584c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c19c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041877c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041878c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000048109c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000412d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044823c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043599c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004190ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004118cc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417378 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a108c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1824 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0094 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f744 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a10c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1864 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a00d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a05c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f73c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004ae1d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rax], eax ; add byte ptr [rax], dl ; retf
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b97c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041768c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000047382c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000444c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b30da : add byte ptr [rax], al ; add byte ptr [rax], bh ; add byte ptr [rax], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000480fdc : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004b405d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfffc
0x00000000004af4e9 : add byte ptr [rax], al ; add byte ptr [rax], dl ; cmp al, 0 ; add byte ptr [rax], dh ; ret 0xfff7
0x0000000000449724 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048517d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1f1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x0000000000475a3b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481fa2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481ee2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000457a55 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482103 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048440e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a83d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449954 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475909 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449178 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x38 ; ret
0x0000000000449ce4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a653 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004884d8 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045adcc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048509a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d326 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041f0c9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000461d36 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x41a
0x000000000044bdd8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042b0d8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457c89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043512d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004142e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417294 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbd9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d2e5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046d07d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046608a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004604fb : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004115f4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460b67 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c948 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469656 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d8e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044697d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e0f3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004921cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473c0d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000049192d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f4d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b488 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b497 ; call r12
0x000000000044b4b8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b4c7 ; call r12
0x00000000004586f9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045f461 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047de : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479e52 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041cf25 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042618d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bb50 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb76 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000044a703 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ec82 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b45a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048d053 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048d07b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048ddca : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000459aad : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x00000000004634c3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040db94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481184 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448185 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043592d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043599d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004543f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000044823d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000412d0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b49d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004589f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465721 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000476970 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d255 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b42dd : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4], al ; add byte ptr [rax], al ; retf
0x00000000004853b0 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c632 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419e8d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b3c2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004b30de : add byte ptr [rax], al ; add byte ptr [rsp + rdi*8], dl ; jmp qword ptr [rax]
0x0000000000455573 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ee88 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454d26 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000423424 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048ac5e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400bc7 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046a166 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e990 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000045117c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004227bd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a6ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004460d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b158e : add byte ptr [rax], al ; add dl, dh ; std ; jmp qword ptr [rdi]
0x00000000004abe22 : add byte ptr [rax], al ; add rax, -0x67180000 ; cmc ; call rax
0x00000000004749ce : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b273 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000411992 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d290 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004849dc : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad53 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041620b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449849 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000449bdc : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040150c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044b37e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481c11 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b15ca : add byte ptr [rax], al ; and al, 0x73 ; cli ; jmp rax
0x00000000004b2f3e : add byte ptr [rax], al ; and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x0000000000448286 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042b49e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440ac0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004733d4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004558ce : add byte ptr [rax], al ; call 0x401af4
0x00000000004130ae : add byte ptr [rax], al ; call 0x4129a8
0x000000000046fc4a : add byte ptr [rax], al ; call 0x44bef4
0x000000000046fcf2 : add byte ptr [rax], al ; call 0x44bf24
0x000000000040ddf1 : add byte ptr [rax], al ; call 0x45b079
0x00000000004b10c2 : add byte ptr [rax], al ; call 0x784b1129
0x00000000004abe26 : add byte ptr [rax], al ; call 0xffffffffd14ab3ca
0x00000000004b46c2 : add byte ptr [rax], al ; call 0xffffffffd84b475f
0x000000000040102c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040ea6e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048d059 : add byte ptr [rax], al ; call r14
0x000000000040e97b : add byte ptr [rax], al ; call rax
0x00000000004859fe : add byte ptr [rax], al ; call rbx
0x00000000004a20be : add byte ptr [rax], al ; call rdi
0x000000000040e8b5 : add byte ptr [rax], al ; call rdx
0x00000000004a126e : add byte ptr [rax], al ; call rsp
0x00000000004b0926 : add byte ptr [rax], al ; clc ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b1a86 : add byte ptr [rax], al ; clc ; hlt ; std ; call rdx
0x0000000000448304 : add byte ptr [rax], al ; clc ; jg 0x448308 ; int1 ; mov eax, eax ; ret
0x00000000004b5396 : add byte ptr [rax], al ; clc ; pop rax ; std ; call qword ptr [rdx]
0x00000000004b18d2 : add byte ptr [rax], al ; clc ; pop rdi ; add byte ptr [rax], al ; xchg rax, rsp ; cli ; call qword ptr [rcx]
0x00000000004b2d46 : add byte ptr [rax], al ; clc ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000448231 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000004481f9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004244dc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004238d3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b18c2 : add byte ptr [rax], al ; cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x00000000004b3356 : add byte ptr [rax], al ; cmp byte ptr [rbx], ah ; cld ; jmp qword ptr [rcx]
0x00000000004b4212 : add byte ptr [rax], al ; cmp byte ptr [rcx - 0x32880000], cl ; cld ; jmp qword ptr [rsi]
0x00000000004af246 : add byte ptr [rax], al ; cmp byte ptr [rdi - 9], al ; jmp qword ptr [rbx]
0x000000000047fa7c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041f747 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f718 ; ret
0x00000000004b02ea : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b50db : add byte ptr [rax], al ; cwde ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; jmp qword ptr [rcx]
0x00000000004b1bc6 : add byte ptr [rax], al ; cwde ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004af6a6 : add byte ptr [rax], al ; cwde ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x000000000049e21a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a226e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049f3c6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004af6a2 : add byte ptr [rax], al ; enter 0x3d, 0 ; cwde ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004b0aa2 : add byte ptr [rax], al ; enter 0x51, 0 ; jg 0x4b0aad ; hlt ; jmp qword ptr [rbx]
0x000000000049ebc6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049efc6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a246e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a266e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a286e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a2a6e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a2c6e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a2e6e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a306e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a326e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a346e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b3db2 : add byte ptr [rax], al ; fadd dword ptr [rax + rax - 0xb386e00] ; jmp qword ptr [rcx]
0x00000000004af6f6 : add byte ptr [rax], al ; fcomp st(0) ; clc ; call qword ptr [rax]
0x00000000004af6b6 : add byte ptr [rax], al ; fdivr qword ptr [rip - 0x6a6c0000] ; clc ; jmp qword ptr [rsi]
0x00000000004b46c6 : add byte ptr [rax], al ; fsubr st(1) ; cld ; jmp qword ptr [rcx]
0x00000000004b154a : add byte ptr [rax], al ; hlt ; jb 0x4b154e ; call qword ptr [rdx]
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b18be : add byte ptr [rax], al ; in al, 0x5f ; add byte ptr [rax], al ; cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x00000000004b15c6 : add byte ptr [rax], al ; in al, dx ; pop rsp ; add byte ptr [rax], al ; and al, 0x73 ; cli ; jmp rax
0x00000000004acb46 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; add byte ptr [rbx + rbx*2 - 0xa], al ; jmp rdi
0x00000000004b1546 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rsp ; add byte ptr [rax], al ; hlt ; jb 0x4b1552 ; call qword ptr [rdx]
0x000000000048ddcb : add byte ptr [rax], al ; ja 0x48ddd8 ; sbb eax, eax ; ret
0x00000000004129a6 : add byte ptr [rax], al ; je 0x4129b1 ; ret
0x0000000000424540 : add byte ptr [rax], al ; je 0x42450f ; ret
0x0000000000473de9 : add byte ptr [rax], al ; je 0x473df5 ; ret
0x000000000048d256 : add byte ptr [rax], al ; je 0x48d244 ; add rsp, 0x18 ; ret
0x000000000048d2e6 : add byte ptr [rax], al ; je 0x48d2ca ; ret
0x000000000048d327 : add byte ptr [rax], al ; je 0x48d338 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004af9ea : add byte ptr [rax], al ; je 0x4afa6c ; stc ; call rsp
0x00000000004b0aa6 : add byte ptr [rax], al ; jg 0x4b0aa9 ; hlt ; jmp qword ptr [rbx]
0x00000000004b1da2 : add byte ptr [rax], al ; jl 0x4b1d8a ; cli ; call qword ptr [rsi]
0x000000000040f347 : add byte ptr [rax], al ; jmp 0x40f310
0x0000000000448d3c : add byte ptr [rax], al ; jmp 0x448d06
0x0000000000449561 : add byte ptr [rax], al ; jmp 0x4493f3
0x000000000045d15f : add byte ptr [rax], al ; jmp 0x45d128
0x0000000000485cc8 : add byte ptr [rax], al ; jmp 0x485c92
0x000000000044a82b : add byte ptr [rax], al ; jmp rax
0x000000000041a06e : add byte ptr [rax], al ; jne 0x41a081 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c132 : add byte ptr [rax], al ; jne 0x42c048 ; ret
0x00000000004488cd : add byte ptr [rax], al ; jne 0x4488fd ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044915a : add byte ptr [rax], al ; jne 0x449191 ; mov eax, 0x77 ; syscall
0x0000000000449179 : add byte ptr [rax], al ; jne 0x4491cb ; add rsp, 0x38 ; ret
0x0000000000449725 : add byte ptr [rax], al ; jne 0x449741 ; add rsp, 0x28 ; ret
0x0000000000449955 : add byte ptr [rax], al ; jne 0x4499a3 ; add rsp, 0x58 ; ret
0x0000000000449ce5 : add byte ptr [rax], al ; jne 0x449d3b ; add rsp, 0x68 ; ret
0x000000000044a654 : add byte ptr [rax], al ; jne 0x44a66f ; add rsp, 0x28 ; ret
0x000000000045adcd : add byte ptr [rax], al ; jne 0x45adde ; add rsp, 0x18 ; ret
0x000000000047590a : add byte ptr [rax], al ; jne 0x47595b ; add rsp, 0x58 ; ret
0x0000000000475a3c : add byte ptr [rax], al ; jne 0x475a63 ; add rsp, 0x38 ; ret
0x0000000000481de8 : add byte ptr [rax], al ; jne 0x481dfb ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481ee3 : add byte ptr [rax], al ; jne 0x481f1b ; add rsp, 0x38 ; ret
0x0000000000481fa3 : add byte ptr [rax], al ; jne 0x481fd6 ; add rsp, 0x68 ; ret
0x0000000000482104 : add byte ptr [rax], al ; jne 0x482146 ; add rsp, 0x78 ; ret
0x00000000004823d3 : add byte ptr [rax], al ; jne 0x482406 ; add rsp, 0x68 ; ret
0x000000000048440f : add byte ptr [rax], al ; jne 0x484453 ; leave ; ret
0x000000000048509b : add byte ptr [rax], al ; jne 0x4850ac ; add rsp, 0x38 ; ret
0x000000000048517e : add byte ptr [rax], al ; jne 0x48519c ; add rsp, 0x38 ; ret
0x0000000000487949 : add byte ptr [rax], al ; jne 0x487954 ; pop rbx ; ret
0x00000000004884d9 : add byte ptr [rax], al ; jne 0x4884f4 ; add rsp, 0x38 ; ret
0x000000000048e1f2 : add byte ptr [rax], al ; jne 0x48e215 ; ret
0x00000000004afa9e : add byte ptr [rax], al ; jo 0x4afa29 ; stc ; call qword ptr [rax]
0x00000000004afaee : add byte ptr [rax], al ; jo 0x4afa7a ; stc ; call qword ptr [rbx]
0x00000000004afaed : add byte ptr [rax], al ; jo 0x4afa7b ; stc ; call qword ptr [rbx]
0x00000000004b10c6 : add byte ptr [rax], al ; js 0x4b10ee ; cli ; call qword ptr [rdi]
0x00000000004b2f52 : add byte ptr [rax], al ; js 0x4b2fd5 ; add byte ptr [rax], al ; sub byte ptr [rsi], cl ; cld ; jmp qword ptr [rbx]
0x00000000004b30db : add byte ptr [rax], al ; js 0x4b30e7 ; add byte ptr [rax], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b3352 : add byte ptr [rax], al ; js 0x4b33d9 ; add byte ptr [rax], al ; cmp byte ptr [rbx], ah ; cld ; jmp qword ptr [rcx]
0x00000000004b4216 : add byte ptr [rax], al ; js 0x4b41ec ; cld ; jmp qword ptr [rsi]
0x0000000000444e9e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000444eae : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000444ebe : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000444ece : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000444ede : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000444dfd : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000444e1e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000444e2e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000444e3e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000444e4e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000444e5e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000444e6e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000444daa : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000444e7e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000444e8e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000444e0e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044d52e : add byte ptr [rax], al ; lea rax, [rip + 0x26cdc9] ; ret
0x000000000046b8fa : add byte ptr [rax], al ; lea rsi, [rip + 0x24b51d] ; jmp rax
0x0000000000400b6b : add byte ptr [rax], al ; leave ; ret
0x00000000004acd92 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x00000000004b4062 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfffc
0x00000000004974be : add byte ptr [rax], al ; loopne 0x4974f2 ; cld ; call rax
0x00000000004b010e : add byte ptr [rax], al ; loopne 0x4b00b3 ; stc ; call qword ptr [rbx]
0x00000000004b010d : add byte ptr [rax], al ; loopne 0x4b00b4 ; stc ; call qword ptr [rbx]
0x00000000004b059e : add byte ptr [rax], al ; loopne 0x4b055f ; stc ; jmp qword ptr [rcx]
0x00000000004acd8e : add byte ptr [rax], al ; mov ah, 0x14 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x00000000004ad34a : add byte ptr [rax], al ; mov ah, 0x8c ; idiv bh ; retf
0x00000000004b158a : add byte ptr [rax], al ; mov al, 0x5c ; add byte ptr [rax], al ; add dl, dh ; std ; jmp qword ptr [rdi]
0x00000000004afb3e : add byte ptr [rax], al ; mov al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b5e6e : add byte ptr [rax], al ; mov al, 0xa0 ; std ; jmp qword ptr [rax]
0x00000000004af6ce : add byte ptr [rax], al ; mov al, 0xb7 ; clc ; call qword ptr [rax]
0x0000000000443d7e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000412a4e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044486e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044424e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004b2ef6 : add byte ptr [rax], al ; mov byte ptr [rsp + rdi*8], al ; jmp rdx
0x0000000000471b3b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041930c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a04f8], eax ; ret
0x000000000044425e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042382e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044a7ae : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000004886ee : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000004b1892 : add byte ptr [rax], al ; mov eax, 0x2800005f ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000449bf5 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004756be : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000004756de : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000004adc92 : add byte ptr [rax], al ; mov eax, 0x68000023 ; mov dl, 0xf6 ; call qword ptr [rsi]
0x00000000004756ce : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000044912e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044a77e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044a74e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000044bf30 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040dbbe : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000449433 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004b5392 : add byte ptr [rax], al ; mov eax, 0xf800009a ; pop rax ; std ; call qword ptr [rdx]
0x0000000000411d69 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048464b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000449b0e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484854 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041842e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f66e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f689 ; ret
0x000000000048f89e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f8b9 ; ret
0x000000000040db89 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e7df : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000468942 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004660e1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044428e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048d054 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048d07c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004490ee : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043512e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043584e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bfe6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004abd96 : add byte ptr [rax], al ; mov esp, 0xc4000004 ; xchg eax, edx ; cmc ; call rsp
0x000000000044c19e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000485018 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481d60 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488552 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488626 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b7a4 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d37e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484668 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004192cc : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0513], rax ; ret
0x00000000004192ac : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a052b], rax ; ret
0x00000000004017c0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000485c70 : add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call 0x422708
0x00000000004179be : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045ae7e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000004749ee : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004749fe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000474a0e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000474a1e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000474a2e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000474a3e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000474a4e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cd73 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118be : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481c1e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c58e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047203e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041877e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d2fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d38e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d3ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d3de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d39e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000457b2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264341] ; ret
0x000000000044f63e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d2f1] ; ret
0x000000000041875e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a09b9] ; ret
0x000000000048b0ce : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473c0e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413e34 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4f8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410352 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041878e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dd5e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047fbda : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044704f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b489 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e9a1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004921ce : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000049192e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046f09f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043568e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456517 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4564d4
0x00000000004203a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dd6e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042360e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004b0e66 : add byte ptr [rax], al ; mov word ptr [rbp], ss ; add ah, dl ; add bh, dl ; jmp qword ptr [rdx]
0x00000000004b026e : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000048109e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b185 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f254 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a4bd : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459fbe : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000412d0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044823e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004352be : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043599e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043592e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b026a : add byte ptr [rax], al ; nop ; add byte ptr [r8], al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ade0e : add byte ptr [rax], al ; nop ; mov ah, 0xf6 ; call qword ptr [rsi]
0x000000000048545c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044be7c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474f5c : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x00000000004b5e6a : add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xa0 ; std ; jmp qword ptr [rax]
0x00000000004b1bae : add byte ptr [rax], al ; nop ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000044c0b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004af9e6 : add byte ptr [rax], al ; or al, 0x41 ; add byte ptr [rax], al ; je 0x4afa70 ; stc ; call rsp
0x00000000004b02e6 : add byte ptr [rax], al ; or al, 0x4a ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b4132 : add byte ptr [rax], al ; pop rax ; mov byte ptr [rax], al ; add byte ptr [rax - 0x36], ch ; cld ; jmp qword ptr [rcx]
0x000000000044a83e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046608b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000457c8a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x00000000004142e3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417295 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fbda : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d96 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b2236 : add byte ptr [rax], al ; pop rsp ; imul eax, dword ptr [rax], 0xfb935400 ; jmp qword ptr [rax]
0x00000000004b2d42 : add byte ptr [rax], al ; push -0x7ffff8c ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004b0922 : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; clc ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b0cae : add byte ptr [rax], al ; push rax ; cli ; std ; jmp qword ptr [rdx]
0x0000000000493fee : add byte ptr [rax], al ; push rax ; or bh, cl ; call qword ptr [rax - 0x2f0006f5]
0x00000000004b102e : add byte ptr [rax], al ; push rsp ; push rdi ; add byte ptr [rax], al ; sub al, 0x16 ; cli ; call rcx
0x00000000004b223a : add byte ptr [rax], al ; push rsp ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004ade22 : add byte ptr [rax], al ; pushfq ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004ac376 : add byte ptr [rax], al ; pushfq ; or al, byte ptr [rax] ; add byte ptr [rdx + rbp - 0xa], ah ; call qword ptr [rdx]
0x00000000004b0caa : add byte ptr [rax], al ; rcl byte ptr [rbx], 1 ; add byte ptr [rax - 6], dl ; std ; jmp qword ptr [rdx]
0x00000000004b18aa : add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; add byte ptr [rax], dh ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x0000000000498446 : add byte ptr [rax], al ; ret 0
0x000000000049f3be : add byte ptr [rax], al ; ret 0x10
0x00000000004a108e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1826 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0096 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0586 : add byte ptr [rax], al ; ret 0x33
0x000000000049ebbe : add byte ptr [rax], al ; ret 0xa
0x000000000049efbe : add byte ptr [rax], al ; ret 0xd
0x00000000004a2462 : add byte ptr [rax], al ; ret 1
0x00000000004a2662 : add byte ptr [rax], al ; ret 2
0x00000000004a2862 : add byte ptr [rax], al ; ret 3
0x00000000004a2a62 : add byte ptr [rax], al ; ret 4
0x00000000004a2c62 : add byte ptr [rax], al ; ret 5
0x000000000049e766 : add byte ptr [rax], al ; ret 6
0x00000000004a3062 : add byte ptr [rax], al ; ret 7
0x00000000004a3262 : add byte ptr [rax], al ; ret 8
0x00000000004a3462 : add byte ptr [rax], al ; ret 9
0x000000000049846a : add byte ptr [rax], al ; retf
0x0000000000498466 : add byte ptr [rax], al ; retf 0
0x000000000049f51e : add byte ptr [rax], al ; retf 0x11
0x00000000004a10c6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1866 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a00d6 : add byte ptr [rax], al ; retf 0x24
0x00000000004a05c6 : add byte ptr [rax], al ; retf 0x33
0x000000000049ed1e : add byte ptr [rax], al ; retf 0xb
0x000000000049f11e : add byte ptr [rax], al ; retf 0xe
0x000000000049f73e : add byte ptr [rax], al ; retf 1
0x00000000004a2672 : add byte ptr [rax], al ; retf 2
0x00000000004a2872 : add byte ptr [rax], al ; retf 3
0x000000000049e5c6 : add byte ptr [rax], al ; retf 4
0x00000000004a2c72 : add byte ptr [rax], al ; retf 5
0x00000000004a2e72 : add byte ptr [rax], al ; retf 6
0x00000000004a3072 : add byte ptr [rax], al ; retf 7
0x00000000004a3272 : add byte ptr [rax], al ; retf 8
0x00000000004a3472 : add byte ptr [rax], al ; retf 9
0x00000000004a2a5e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004afa9a : add byte ptr [rax], al ; rol byte ptr [rcx], 0 ; jo 0x4afa2d ; stc ; call qword ptr [rax]
0x000000000049ee66 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b49f2 : add byte ptr [rax], al ; sbb byte ptr [rcx + 0x5380000], dl ; std ; jmp qword ptr [rdx]
0x00000000004af6f2 : add byte ptr [rax], al ; sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; fcomp st(0) ; clc ; call qword ptr [rax]
0x000000000041eddc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b158f : add byte ptr [rax], al ; std ; jmp qword ptr [rdi]
0x00000000004b5112 : add byte ptr [rax], al ; std ; jmp rsp
0x00000000004b1032 : add byte ptr [rax], al ; sub al, 0x16 ; cli ; call rcx
0x00000000004b5902 : add byte ptr [rax], al ; sub byte ptr [rax - 0x7b480000], ah ; std ; call qword ptr [rbx]
0x00000000004b2f56 : add byte ptr [rax], al ; sub byte ptr [rsi], cl ; cld ; jmp qword ptr [rbx]
0x00000000004ac37a : add byte ptr [rax], al ; sub dh, dh ; call qword ptr [rdx]
0x00000000004ae1db : add byte ptr [rax], al ; sub dword ptr [rax], eax ; add byte ptr [rax], dl ; retf
0x000000000042d07c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000417b06 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000446b91 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000047b6fd : add byte ptr [rax], al ; syscall
0x00000000004b1a82 : add byte ptr [rax], al ; test al, 0x61 ; add byte ptr [rax], al ; clc ; hlt ; std ; call rdx
0x00000000004afa5e : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rdx + rax*4 - 7], cl ; call qword ptr [rdx]
0x00000000004b414a : add byte ptr [rax], al ; test dl, cl ; cld ; call rdx
0x000000000044bdd9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b97e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004a4ebe : add byte ptr [rax], al ; xchg ch, bh ; ljmp [rax] ; je 0x4a4ecd ; jmp rax
0x00000000004b1bda : add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004af6ba : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004b18d6 : add byte ptr [rax], al ; xchg rax, rsp ; cli ; call qword ptr [rcx]
0x00000000004b510e : add byte ptr [rax], al ; xor al, 0x98 ; add byte ptr [rax], al ; std ; jmp rsp
0x00000000004b2d5a : add byte ptr [rax], al ; xor byte ptr [rax + rax], 0x10 ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004b010a : add byte ptr [rax], al ; xor byte ptr [rax], cl ; add al, ah ; pushfq ; stc ; call qword ptr [rbx]
0x00000000004b4a0a : add byte ptr [rax], al ; xor byte ptr [rcx + 0x5500000], dl ; std ; jmp rdx
0x000000000045cb17 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475e66 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ec83 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d505 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f236 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449a3e : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042b8ca : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044a51a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000457a56 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000444c4e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b30dc : add byte ptr [rax], bh ; add byte ptr [rax], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b3357 : add byte ptr [rax], bh ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004b4213 : add byte ptr [rax], bh ; mov dword ptr [rax], eax ; add byte ptr [rax - 0x33], bh ; cld ; jmp qword ptr [rsi]
0x0000000000480fde : add byte ptr [rax], bh ; retf 0x850f
0x00000000004b42db : add byte ptr [rax], bl ; add byte ptr [rax], al ; add byte ptr [rdx + rcx*4], al ; add byte ptr [rax], al ; retf
0x00000000004af6f3 : add byte ptr [rax], bl ; add byte ptr ds:[rax], al ; fcomp st(0) ; clc ; call qword ptr [rax]
0x00000000004b0257 : add byte ptr [rax], ch ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b1897 : add byte ptr [rax], ch ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000449ff5 : add byte ptr [rax], cl ; add al, ch ; ret
0x000000000048bace : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2306d9], 8 ; ret
0x000000000048bad5 : add byte ptr [rax], cl ; ret
0x00000000004ac2a7 : add byte ptr [rax], cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b010b : add byte ptr [rax], dh ; add byte ptr [rax], al ; loopne 0x4b00b6 ; stc ; call qword ptr [rbx]
0x00000000004af4ef : add byte ptr [rax], dh ; ret 0xfff7
0x00000000004b18af : add byte ptr [rax], dh ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004afaeb : add byte ptr [rax], dl ; add byte ptr [rax], al ; jo 0x4afa7d ; stc ; call qword ptr [rbx]
0x00000000004b405f : add byte ptr [rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfffc
0x00000000004b2d5f : add byte ptr [rax], dl ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004af4eb : add byte ptr [rax], dl ; cmp al, 0 ; add byte ptr [rax], dh ; ret 0xfff7
0x00000000004b023f : add byte ptr [rax], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ae1df : add byte ptr [rax], dl ; retf
0x00000000004b50df : add byte ptr [rax], dl ; std ; jmp qword ptr [rcx]
0x000000000044b37d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004130ad : add byte ptr [rax], r8b ; call 0x4129a9
0x00000000004b059d : add byte ptr [rax], r8b ; loopne 0x4b0560 ; stc ; jmp qword ptr [rcx]
0x000000000042382d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044a7ad : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x00000000004756bd : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044a77d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000004188bd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041842d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044427d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004442bd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004203a5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484d6d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x000000000044664d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449726 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048517f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1f3 : add byte ptr [rbp + 0x1a], dh ; ret
0x0000000000475a3d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004488ce : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481fa4 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x000000000044915b : add byte ptr [rbp + 0x2a], dh ; mov eax, 0x77 ; syscall
0x0000000000481ee4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000047fde3 : add byte ptr [rbp + 0x2d], dh ; call qword ptr [rip + 0x23ca74]
0x000000000041318a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000457a57 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482105 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484410 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a83f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449956 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047590b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000044917a : add byte ptr [rbp + 0x46], dh ; add rsp, 0x38 ; ret
0x00000000004164e7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449ce6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004127c7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x000000000040fdec : add byte ptr [rbp + 0xa], dh ; jmp 0x40fe1b
0x000000000045caf2 : add byte ptr [rbp + 0xa], dh ; jmp 0x45cb20
0x0000000000490ff2 : add byte ptr [rbp + 0xa], dh ; jmp 0x491020
0x0000000000403b91 : add byte ptr [rbp + 0xb], dh ; jmp 0x403bc1
0x000000000040fd9e : add byte ptr [rbp + 0xb], dh ; jmp 0x40fdcf
0x0000000000416341 : add byte ptr [rbp + 0xb], dh ; jmp 0x416371
0x000000000044f825 : add byte ptr [rbp + 0xb], dh ; jmp 0x44f855
0x000000000048303f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482f2f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a655 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004884da : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048794a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045adce : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048509c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041a06f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d328 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d240 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049efb7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000047805f : add byte ptr [rbp + rcx*4 + 0x2d], cl ; outsb dx, byte ptr [rsi] ; ret 2
0x0000000000467655 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x000000000041f0cb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004721ae : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000004722a8 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004723a2 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004858be : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487dbc : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000048c19c : add byte ptr [rbp + rcx*4 + 5], cl ; cld ; jmp qword ptr [rdx]
0x000000000048af56 : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x203
0x0000000000461d38 : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x41a
0x00000000004b0843 : add byte ptr [rbp + rcx*8 - 7], bl ; jmp qword ptr [rdx]
0x00000000004b0e67 : add byte ptr [rbp + rdx*2 + 0x2d40000], cl ; cli ; jmp qword ptr [rdx]
0x0000000000490284 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044bdda : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f263 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448f27 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000486c44 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000482bbf : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000468e09 : add byte ptr [rbp - 0x75], cl ; je 0x468e3a ; and byte ptr [rax + 1], cl ; ret
0x000000000042734d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d545 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f617 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000043d249 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000491613 : add byte ptr [rbx + 0x2281fa3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048547d : add byte ptr [rbx + 0x236cdc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fe65 : add byte ptr [rbx + 0x23a37b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004239af : add byte ptr [rbx + 0x29843a15], cl ; add bh, dh ; ret 0
0x000000000042031f : add byte ptr [rbx + 0x2994ee3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004187f7 : add byte ptr [rbx + 0x2a351505], al ; add byte ptr [rcx], al ; ret
0x0000000000419def : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000457c8b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044428f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443dbf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000043512f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000421aaf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412498 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004142e4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405da1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbdb : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459fbf : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f66f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044aa74 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x0000000000473dea : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004acb4b : add byte ptr [rbx + rbx*2 - 0xa], al ; jmp rdi
0x000000000048d2e7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004845e7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004883e7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b223b : add byte ptr [rbx + rdx*4 - 5], dl ; jmp qword ptr [rax]
0x00000000004b15cb : add byte ptr [rbx + rsi*2], ah ; cli ; jmp rax
0x00000000004482b8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004482c6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004482bf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004482d4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004482cd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004482b1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471ff9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046d07f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044852e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000046608c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446276 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406ee5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040a9b1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040ac16 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409dc4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000410c98 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c5c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000407012 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040707e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409e2f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ed2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000412d17 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048f08f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x0000000000496054 : add byte ptr [rbx - 5], ch ; jmp rax
0x000000000047b7d7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004604fd : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000467345 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042a365 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000041168f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000004115f6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489b42 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004739af : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fc9d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419290 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412d00 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000471b3c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042dace : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048b186 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a4be : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042c32c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444108 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000460b69 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c94a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485b36 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000469658 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d8e4 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461e8f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466ef7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046bf0a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044697f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e0f5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c3d5 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041926d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004021b2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004afa5f : add byte ptr [rcx + rax*2 - 0x7db40000], al ; stc ; call qword ptr [rdx]
0x00000000004af9e7 : add byte ptr [rcx + rax*2], cl ; add byte ptr [rax], al ; je 0x4afa6f ; stc ; call rsp
0x00000000004758ec : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004acde3 : add byte ptr [rcx + rbp*2 - 0xa], cl ; call qword ptr [rax]
0x00000000004b2237 : add byte ptr [rcx + rbp*2], bl ; add byte ptr [rbx + rdx*4 - 5], dl ; jmp qword ptr [rax]
0x0000000000416b94 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004921cf : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473c0f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dd6f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000049192f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f4f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f748 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f717 ; ret
0x00000000004af9eb : add byte ptr [rcx + rdi*2 - 7], dh ; call rsp
0x000000000045556f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045af42 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f1eb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f288 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e167 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b48a : add byte ptr [rcx - 0x75], cl ; jge 0x44b495 ; call r12
0x000000000044b4ba : add byte ptr [rcx - 0x75], cl ; jge 0x44b4c5 ; call r12
0x00000000004922df : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044bf47 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c30e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046ae27 : add byte ptr [rcx - 0x77], al ; retf
0x00000000004586fb : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045eb47 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047e0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491982 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479e54 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044be4f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048ab0a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048ac19 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004715fb : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048ae1f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x0000000000461322 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045b317 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042a3ff : add byte ptr [rcx - 0x7d], cl ; jmp 0x42a41b
0x000000000041cf27 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004194af : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b58e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042618f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044aa32 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000042bb52 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb78 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000455ab4 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000494030 : add byte ptr [rcx], ah ; stc ; jmp qword ptr [rax]
0x000000000048b5da : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000446b8f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eb6f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fe6b : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004187fd : add byte ptr [rcx], al ; ret
0x0000000000494cf8 : add byte ptr [rcx], bh ; cli ; call qword ptr [rax + 0x20fffa38]
0x000000000044d55c : add byte ptr [rcx], bh ; ret
0x000000000047810c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044a705 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000422d14 : add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0xc2 ; retf
0x000000000040ec84 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b45c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000475a7a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475ab1 ; ret
0x0000000000482d5f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abf80
0x00000000004148bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148d9 ; ret
0x000000000044d57b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000432f7a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048d055 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048d07d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048ddcc : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b1da3 : add byte ptr [rdi + rbx*8 - 6], bh ; call qword ptr [rsi]
0x00000000004825b7 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000459aaf : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x00000000004634c5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b083f : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rbp + rcx*8 - 7], bl ; jmp qword ptr [rdx]
0x00000000004b102f : add byte ptr [rdi + rdx*2], dl ; add byte ptr [rsi + rdx], ch ; cli ; call rcx
0x00000000004b503f : add byte ptr [rdi + rdx*4], ah ; add ah, cl ; xor al, 0xfd ; jmp qword ptr [rdx]
0x0000000000495128 : add byte ptr [rdi - 0x646f0006], ch ; cli ; jmp qword ptr [rax]
0x0000000000495030 : add byte ptr [rdi - 6], al ; call qword ptr [rax]
0x00000000004b0aa7 : add byte ptr [rdi - 6], bh ; hlt ; jmp qword ptr [rbx]
0x00000000004940d0 : add byte ptr [rdi - 7], dl ; push qword ptr [rax + 0x58] ; stc ; jmp rax
0x000000000040db96 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481186 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004348f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448187 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043592f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043599f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004543fb : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455504 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x00000000004554ef : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455519 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000044823f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000425d3f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000412d0f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c0bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bbff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000046262b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b48f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b49f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c944 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047bb33 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000004589fb : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000465723 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042a35f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040db7b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x00000000004111a6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000421cbe : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000469ab8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042071e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476973 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f9c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000455018 : add byte ptr [rdx + 0x1d0], bh ; call 0x401af8
0x0000000000455093 : add byte ptr [rdx + 0x305], bh ; call 0x401af8
0x00000000004558ca : add byte ptr [rdx + 0x309], bh ; call 0x401af8
0x0000000000443d7f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004425cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d257 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004857f8 : add byte ptr [rdx + 0x50], bh ; call 0x401af8
0x000000000047c26c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb94 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004129a7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004afab3 : add byte ptr [rdx + rax*4 - 7], ch ; jmp rbx
0x00000000004afa63 : add byte ptr [rdx + rax*4 - 7], cl ; call qword ptr [rdx]
0x00000000004ac37b : add byte ptr [rdx + rbp - 0xa], ah ; call qword ptr [rdx]
0x000000000049ebb7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004b02e7 : add byte ptr [rdx + rcx*2], cl ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b42df : add byte ptr [rdx + rcx*4], al ; add byte ptr [rax], al ; retf
0x00000000004572c0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000000004572bf : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000494a64 : add byte ptr [rdx + rdi*8], al ; push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004acb47 : add byte ptr [rdx + rdx], ch ; add byte ptr [rbx + rbx*2 - 0xa], al ; jmp rdi
0x0000000000494a30 : add byte ptr [rdx], 0xfa ; jmp qword ptr [rax]
0x00000000004197ff : add byte ptr [rdx], ch ; add bl, dh ; ret
0x0000000000494d68 : add byte ptr [rdx], ch ; cli ; push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x0000000000494050 : add byte ptr [rdx], ch ; stc ; jmp qword ptr [rax]
0x0000000000494800 : add byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x20fffa11]
0x0000000000494b20 : add byte ptr [rip + 0x3490fffa], dh ; cli ; jmp qword ptr [rax]
0x0000000000494860 : add byte ptr [rip + 0x470fffa], al ; cli ; jmp rax
0x00000000004129a3 : add byte ptr [rsi + 0x2a], ah ; add byte ptr [rax], al ; je 0x4129b4 ; ret
0x000000000044bfe7 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004853b2 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042c634 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046356a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a457 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000419e8f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004662ea : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x9ce8
0x0000000000463593 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf3e8
0x0000000000463531 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046628c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042b3c4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a456 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000424541 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000044e2f7 : add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004b1033 : add byte ptr [rsi + rdx], ch ; cli ; call rcx
0x00000000004b5113 : add byte ptr [rsi + rsi - 3], cl ; jmp rsp
0x0000000000456080 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000045607f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000048545d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044be7d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474f5d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004b02eb : add byte ptr [rsi - 7], al ; call rsi
0x0000000000424507 : add byte ptr [rsi - 9], dh ; ret 0
0x0000000000494628 : add byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x26fffa0d]
0x0000000000417185 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004abd97 : add byte ptr [rsp + rax - 0x6d3c0000], bh ; cmc ; call rsp
0x00000000004b1547 : add byte ptr [rsp + rbx*2], ch ; add ah, dh ; jb 0x4b1551 ; call qword ptr [rdx]
0x0000000000400dce : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004b30e0 : add byte ptr [rsp + rdi*8], dl ; jmp qword ptr [rax]
0x00000000004b18c3 : add byte ptr [rsp + rdx*4], bh ; cli ; call qword ptr [rcx]
0x0000000000452d3c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004af6f5 : add byte ptr ds:[rax], al ; fcomp st(0) ; clc ; call qword ptr [rax]
0x0000000000449055 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044f824 : add byte ptr es:[rbp + 0xb], dh ; jmp 0x44f856
0x000000000044d544 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044e2f6 : add byte ptr es:[rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004b41a8 : add byte ptr fs:[rax], al ; add al, dl ; mov byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000044bdd7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b1da1 : add byte ptr fs:[rax], al ; jl 0x4b1d8b ; cli ; call qword ptr [rsi]
0x000000000049efc3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004156f2 : add ch, al ; pop rax ; ret
0x00000000004157f9 : add ch, al ; push rcx ; ret 0xffff
0x00000000004737bf : add ch, al ; std ; xlatb ; retf 0xc985
0x000000000041f878 : add ch, al ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000494498 : add ch, bl ; stc ; jmp rax
0x00000000004a9a9c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a9a9d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b40dd : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471eba : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422e4a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469693 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004acccf : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048bec7 : add ch, cl ; retf 0xfffc
0x0000000000448268 : add cl, al ; call 0xffffffff84070b80
0x000000000049520c : add cl, bh ; cli ; jmp qword ptr [rax]
0x00000000004a8e6a : add cl, bl ; retf 0xea91
0x00000000004425f7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469e72 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x00000000004552ae : add cl, byte ptr [rax + 0x39] ; ret
0x00000000004693c6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000455508 : add cl, byte ptr [rax + 0x39] ; retf
0x0000000000432b7a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000447f54 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041d0fb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd58 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004247dc : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411794 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004116b3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450e4c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000455846 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004425f8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442565 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004856b5 : add cl, byte ptr [rax - 0x77] ; je 0x4856e6 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e804 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418412 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440dc0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440e23 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004841ad : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048bec3 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000471400 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000435772 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004585b8 : add cl, byte ptr [rcx + 0x39] ; retf
0x0000000000451f7a : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000404859 : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000446c7b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000477fd7 : add cl, ch ; jmp 0x477fe1
0x00000000004487a7 : add cl, ch ; ret
0x000000000045ee8a : add cl, ch ; ret 0xfffa
0x0000000000454d28 : add cl, ch ; ret 0xfffd
0x0000000000409e40 : add cl, ch ; retf
0x000000000043b2fa : add cl, ch ; retf 0xfffe
0x0000000000400b6c : add cl, cl ; ret
0x00000000004a8d23 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a8d22 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a2c6b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046a168 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e992 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a7b5e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a20b7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435923 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x000000000049451c : add dh, bl ; stc ; jmp rax
0x000000000042457e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad201 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000494bcc : add dh, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa36]
0x000000000041ae88 : add dh, dh ; ret
0x000000000045117e : add dh, dh ; ret 0x4801
0x00000000004227bf : add dh, dh ; ret 0x4804
0x000000000047c718 : add dh, dh ; ret 0x7403
0x000000000044a6ef : add dh, dh ; ret 0x7404
0x0000000000444ca7 : add dh, dh ; ret 0x7501
0x0000000000444cb4 : add dh, dh ; ret 0x7502
0x0000000000444cc1 : add dh, dh ; ret 0x7504
0x0000000000444c79 : add dh, dh ; ret 0x7510
0x0000000000444c86 : add dh, dh ; ret 0x7520
0x00000000004247ac : add dh, dh ; ret 0x7540
0x0000000000422ae3 : add dh, dh ; ret 0xf02
0x000000000045a418 : add dh, dh ; ret 0xf04
0x000000000041adb9 : add dh, dh ; ret 0xf08
0x0000000000466d51 : add dh, dh ; ret 0xf40
0x0000000000466d37 : add dh, dh ; ret 0xf50
0x0000000000494534 : add dl, bl ; stc ; call rax
0x00000000004946d4 : add dl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000495168 : add dl, dh ; cli ; call qword ptr [rax]
0x00000000004b1590 : add dl, dh ; std ; jmp qword ptr [rdi]
0x0000000000479add : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000470127 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046ef45 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044fd93 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443d81 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046594a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046590f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000004569f8 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000455875 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000416d8d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fca9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fcbb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b5df : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464d2a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045cfd3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045cf5d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000004554f3 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000417068 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000457430 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e0e3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c6ce : add dword ptr [rax + 1], ecx ; retf
0x000000000047a959 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482077 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daca : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004792d5 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041debe : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000004792a7 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044aa77 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x00000000004759c0 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a891b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a8987 ; retf
0x00000000004613a3 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402c1f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422e94 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000470128 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004425d1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419181 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a06a7 ; ret
0x0000000000442562 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f3f3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23cfb5 ; ret
0x000000000045e290 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f3c : add dword ptr [rax - 0x77], ecx ; ret
0x00000000004502f7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414156 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045d3ac : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000485a92 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047f3f2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23cfb5 ; ret
0x000000000040eea6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045ba49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046ef46 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c69 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000004508e6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f597 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e3cb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469ed9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e9d5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000449db5 : add dword ptr [rax - 1], edi ; jmp 0x449d86
0x0000000000405970 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000410024 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004480f1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000419a3a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468283 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004552a8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004780d4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041eafd : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000470fdb : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000475bcd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004495c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e9aa : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456516 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048cef5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000455ab5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044704e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000471a99 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000411348 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041f140 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468558 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b8ac : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456172 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b037 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e795 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042425e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ffaf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b065 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d793 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044e9c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a20ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a126a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a1092 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a108a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1822 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a10ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a10c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1862 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048d057 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cfad : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048ddc9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48ddda ; sbb eax, eax ; ret
0x000000000040f345 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f312
0x0000000000448d3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x448d08
0x000000000045d15d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45d12a
0x0000000000460fbd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475f12 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044bf2e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000449431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e7dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d660 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484666 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046f09d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417293 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048698e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fe71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004687c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000449a7b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000413188 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048af54 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x203
0x0000000000428928 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048ce46 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e1f2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e2d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000004922dd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000461320 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000047810a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444ca5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444cb2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000444cbf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444c77 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444c84 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444c91 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a416 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004247d8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042399c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000423903 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fc9c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405da0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c821 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8e64 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000466810 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000448ec9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044b22d : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045e812 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a924a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004357e2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a7e2a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046c345 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000004891c9 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d4be : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000047623c : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x00000000004688ff : add dword ptr [rcx + 0x2522260d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045c4a2 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044af83 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044aa36 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e10a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442601 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ed3e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004543ff : add dword ptr [rcx - 0x77], eax ; retf
0x0000000000459ae8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c615 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467411 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x0000000000478a1b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x00000000004757da : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000414de3 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000464823 : add dword ptr [rcx], edi ; retf
0x00000000004a8d75 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000447de2 : add dword ptr [rdi + 0x15], esi ; jb 0x447df0 ; mov byte ptr [rdi], cl ; ret
0x00000000004b40a5 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b403d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b4071 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b404e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b4082 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b40b6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b076d : add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004569f0 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e8e7 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041e6bb : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448531 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000454361 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000479ade : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446ddc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043866d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004854bb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a8a4f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000044d579 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b324c : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5cc4 : add dword ptr [rdx], 0x55 ; ret
0x00000000004af180 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5c80 : add dword ptr [rdx], 0x76 ; ret
0x00000000004acd72 : add dword ptr [rdx], eax ; retf
0x00000000004187f8 : add dword ptr [rip + 0x2a3515], 1 ; ret
0x00000000004acccb : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004425e2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000417189 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000044d578 : add dword ptr fs:[rdx], 0x39d23100 ; ret
0x000000000048a15d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045add0 : add eax, 0x18c48348 ; ret
0x00000000004248f9 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000423999 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x00000000004497aa : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b92a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004244b0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000424839 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x00000000004246f9 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424599 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004248a0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424760 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f731 : add eax, 0x22cc4e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f621 : add eax, 0x22cd5e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424600 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042487f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042473f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004245df : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000423920 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487890 : add eax, 0x234fc2 ; jne 0x4878c6 ; ret
0x000000000042466b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485661 : add eax, 0x23725a ; ret
0x0000000000484ae9 : add eax, 0x23757a ; ret
0x0000000000484ace : add eax, 0x237595 ; add rsp, 8 ; ret
0x000000000042464e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042469f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f55c : add eax, 0x23ce47 ; mov qword ptr [rsi], rax ; ret
0x000000000047f4eb : add eax, 0x23cec0 ; ret
0x000000000047f4b2 : add eax, 0x23cef9 ; add rsp, 8 ; ret
0x000000000047f3f6 : add eax, 0x23cfb5 ; ret
0x000000000046caa7 : add eax, 0x24a774 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046ca54 : add eax, 0x24a7c7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c527 : add eax, 0x24a7f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c8c6 : add eax, 0x24a955 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c881 : add eax, 0x24a99a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c83c : add eax, 0x24a9df ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c7ed : add eax, 0x24aa2e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460f18 : add eax, 0x255703 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004612c7 : add eax, 0x255854 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461279 : add eax, 0x2558a2 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004611ca : add eax, 0x255951 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046116e : add eax, 0x2559ad ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460ece : add eax, 0x255c4d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e80 : add eax, 0x255c9b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460a27 : add eax, 0x255df4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457b32 : add eax, 0x264341 ; ret
0x000000000044d532 : add eax, 0x26cdc9 ; ret
0x000000000044f632 : add eax, 0x26d2f1 ; ret
0x0000000000452a8f : add eax, 0x29480000 ; ret 0x349
0x0000000000424819 : add eax, 0x2975d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004246d9 : add eax, 0x297712 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424579 : add eax, 0x297872 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8d7 : add eax, 0x299f84 ; ret
0x000000000041f8e1 : add eax, 0x29c486 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004197fd : add eax, 0x2a005e ; ret
0x00000000004192f8 : add eax, 0x2a04f3 ; ret
0x000000000041930f : add eax, 0x2a04f8 ; ret
0x00000000004192d0 : add eax, 0x2a0513 ; ret
0x00000000004192b0 : add eax, 0x2a052b ; ret
0x00000000004191a6 : add eax, 0x2a069d ; ret
0x0000000000419196 : add eax, 0x2a06a5 ; ret
0x0000000000419146 : add eax, 0x2a06ad ; ret
0x0000000000419136 : add eax, 0x2a06c5 ; ret
0x0000000000418762 : add eax, 0x2a09b9 ; ret
0x00000000004197b1 : add eax, 0x2a25b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419325 : add eax, 0x2a2a6a ; ret
0x000000000041885d : add eax, 0x2a34b2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401e0e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b230c : add eax, 0x3400e4e ; ret
0x000000000048509e : add eax, 0x38c48348 ; ret
0x000000000041d04e : add eax, 0x39480000 ; ret 0xf275
0x000000000042b94a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000494861 : add eax, 0x470fffa ; cli ; jmp rax
0x0000000000443e18 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000442648 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444316 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000494a1d : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000443e99 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000442689 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004948d9 : add eax, 0x552fffa ; cli ; call rdx
0x0000000000485240 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2c5d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000471a7a : add eax, 0x5c415d5b ; ret
0x00000000004a2c6d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042b96a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004248c9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004244d9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042453d : add eax, 0x79ee ; je 0x424512 ; ret
0x000000000042ac77 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e5a1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042aca5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041ceee : add eax, 0x83480000 ; retf 0x4901
0x000000000045f195 : add eax, 0x83ffffef ; ret
0x0000000000443e1b : add eax, 0x8428d48 ; ret
0x000000000040db98 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458fb3 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491980 : add eax, 0x89490000 ; ret 0x8349
0x00000000004284a8 : add eax, 0x894d0000 ; retf
0x0000000000481188 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abe25 : add eax, 0x98e80000 ; cmc ; call rax
0x0000000000472989 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473d99 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d36a : add eax, 0xc0310000 ; ret
0x0000000000443e9d : add eax, 0xc428d48 ; ret
0x000000000044497d : add eax, 0xc478d48 ; ret
0x0000000000455095 : add eax, 0xe8000003 ; push rdx ; retf 0xfffa
0x000000000040fc9b : add eax, 0xe8890001 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000455572 : add eax, 0xe9000000 ; ret
0x0000000000472959 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048d32a : add eax, 0xf7148948 ; ret
0x00000000004357d3 : add eax, 0xf7f0ff3 ; ret
0x000000000048f63a : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e9a5 : add eax, 1 ; push rax ; call rbx
0x00000000004749c1 : add eax, 1 ; ret
0x00000000004749b8 : add eax, 2 ; ret
0x00000000004749d1 : add eax, 3 ; ret
0x000000000045ace9 : add eax, dword ptr [0] ; ret
0x0000000000455096 : add eax, dword ptr [rax] ; add al, ch ; push rdx ; retf 0xfffa
0x0000000000456b25 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000047b7d8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489971 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489fcc : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044cd6e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041c4e8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ae36 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400edb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041afba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fcba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fe80 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042ae57 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e741 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae85 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f584 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a83c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474a13 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000449d4b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042ae08 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044852c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489b40 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461e8d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044bf45 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044bfe5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c716 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041adb7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046ec24 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f36b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f3d9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448210 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d3dc : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b4051 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ba : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000475b8a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000454440 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004ad4a2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486e03 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b4085 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b40b9 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b2022 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c456 : add eax, dword ptr [rsi] ; call rax
0x000000000048af66 : add eax, eax ; jmp rax
0x00000000004021b4 : add eax, ebp ; jmp rax
0x00000000004874f0 : add eax, ebp ; retf 0xfff3
0x000000000047c777 : add eax, ebx ; call rax
0x000000000044d63c : add eax, ebx ; jmp rax
0x00000000004408c8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ec2b : add eax, ecx ; jmp rax
0x000000000042b279 : add eax, ecx ; ret
0x0000000000440c2d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7a6 : add eax, ecx ; vzeroupper ; ret
0x000000000042b276 : add eax, edi ; add rax, rcx ; ret
0x000000000042b7a3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f25b : add eax, edi ; jmp rax
0x000000000046f52f : add eax, edi ; mov rdx, r8 ; jmp 0x46f503
0x000000000042b4a4 : add eax, edi ; ret
0x00000000004853f0 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440ce5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8a : add eax, edi ; sub rax, rsi ; ret
0x000000000042b91a : add eax, edi ; vzeroupper ; ret
0x0000000000401f4a : add eax, edx ; jmp rax
0x0000000000440bd6 : add eax, edx ; sub rax, rdi ; ret
0x00000000004746bb : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004481bc : add eax, esi ; jmp rax
0x00000000004184bd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c1dd : add eax, esp ; jmp rax
0x00000000004631a8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000419dd8 : add ebp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004240c5 : add ebp, eax ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000413a71 : add ebp, ebp ; call 0x4004ac
0x00000000004a79b7 : add ebp, ebp ; retf
0x00000000004b4939 : add ebp, edi ; jmp qword ptr [rdx]
0x000000000047c452 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a58a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004887c0 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416bd1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b4076 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e20f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e278 ; pop r12 ; ret
0x00000000004828b1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042c08b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000435993 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447dc7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447dbc ; ret
0x0000000000442635 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000047fb01 : add ecx, dword ptr [rax + 0x39] ; call 0xffffffff8b90e488
0x000000000045746d : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000045551d : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e06e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004512ca : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d5a8
0x0000000000442639 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e8a7 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fe83 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004347b4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048bc9f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea61 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480e6a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483380 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435702 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b4042 : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004442b4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442636 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448ecf : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f2d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac139 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465fd9 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000453aa5 : add ecx, ebp ; retf 0xfff6
0x000000000042d99b : add ecx, ebx ; jmp r9
0x000000000042c332 : add ecx, ebx ; jmp rcx
0x00000000004481e4 : add ecx, esi ; jmp rcx
0x000000000048e1ee : add edi, dword ptr [rax + 4] ; jne 0x48e219 ; ret
0x000000000045a4c4 : add edi, ebx ; jmp rdi
0x000000000042d998 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004948e9 : add edi, edx ; jmp qword ptr [rdx]
0x0000000000494a69 : add edi, edx ; jmp rax
0x000000000040d54c : add edi, edx ; jmp rdi
0x000000000047424b : add edi, esp ; call 0x400494
0x0000000000460f19 : add edx, dword ptr [rdi + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004872b4 : add edx, eax ; jmp 0x4872c2
0x00000000004835e2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000412300 : add edx, ecx ; jmp 0x412312
0x000000000040d263 : add edx, edi ; jmp rdx
0x0000000000468f78 : add edx, esp ; call qword ptr [r10 + rax*8]
0x000000000045443a : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000458876 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459fc5 : add esi, eax ; jmp rsi
0x00000000004358b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446fe5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044975c : add esi, ebx ; ret
0x000000000041ede0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000400b69 : add esi, edi ; add byte ptr [rax], al ; leave ; ret
0x00000000004482ee : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d995 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416701 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410901 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449d8f : add esp, 0x10 ; pop rbx ; ret
0x0000000000412005 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446b8d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482788 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbde : add esp, 0x118 ; ret
0x0000000000465f40 : add esp, 0x14 ; jmp 0x4644b7
0x000000000045b01a : add esp, 0x148 ; ret
0x000000000041a219 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4cb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fae6 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d35a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411995 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045add2 : add esp, 0x18 ; ret
0x0000000000421940 : add esp, 0x20 ; call 0x40fe89
0x000000000041720d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416ded : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000417246 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482809 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b5f : add esp, 0x20 ; pop rbx ; ret
0x0000000000448d12 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044972a : add esp, 0x28 ; ret
0x000000000044f718 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004849df : add esp, 0x30 ; pop rbx ; ret
0x000000000048ad56 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040da94 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041620e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044917e : add esp, 0x38 ; ret
0x00000000004885ec : add esp, 0x40 ; pop rbx ; ret
0x0000000000481d1c : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449402 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004886d3 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481caa : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044995a : add esp, 0x58 ; ret
0x000000000044984c : add esp, 0x68 ; ret
0x0000000000473eb4 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449bdf : add esp, 0x78 ; ret
0x000000000046893e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475533 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415ad8 : add esp, 0x80 ; ret
0x000000000044bd2d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d92 : add esp, 0x88 ; pop rbx ; ret
0x000000000040150f : add esp, 0x98 ; ret
0x0000000000475653 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457c86 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040fa47 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fbd6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f755 : add esp, 0xd8 ; ret
0x0000000000411d0f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd7b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff6e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b370 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a5ac : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167b9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488529 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004137c4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ba3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000423969 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a90ab : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000045582a : add qword ptr [rax + 0x39], rcx ; retf
0x00000000004543fe : add qword ptr [rcx - 0x77], r8 ; retf
0x0000000000435992 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435922 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000047424a : add r15, r12 ; call 0x400495
0x000000000042ae84 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045443f : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042d99a : add r9, r11 ; jmp r9
0x00000000004a8e69 : add r9b, bl ; retf 0xea91
0x000000000045744e : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045746c : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465fd8 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004abe24 : add rax, -0x67180000 ; cmc ; call rax
0x00000000004749c0 : add rax, 1 ; ret
0x00000000004749b7 : add rax, 2 ; ret
0x00000000004749d0 : add rax, 3 ; ret
0x000000000045ace8 : add rax, qword ptr [0] ; ret
0x000000000047c455 : add rax, qword ptr [r14] ; call rax
0x000000000047d3db : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486e02 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045ace7 : add rax, qword ptr fs:[0] ; ret
0x000000000047c776 : add rax, r11 ; call rax
0x000000000048c1dc : add rax, r12 ; jmp rax
0x00000000004021b3 : add rax, r13 ; jmp rax
0x000000000048cadd : add rax, r14 ; jmp rax
0x000000000048b18b : add rax, r15 ; jmp rax
0x000000000048af65 : add rax, r8 ; jmp rax
0x000000000048c715 : add rax, r9 ; jmp rax
0x000000000044d6b3 : add rax, rbp ; jmp rax
0x000000000044d63b : add rax, rbx ; jmp rax
0x00000000004408c7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ec2a : add rax, rcx ; jmp rax
0x000000000042b278 : add rax, rcx ; ret
0x0000000000440c2c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7a5 : add rax, rcx ; vzeroupper ; ret
0x000000000042b275 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b7a2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f25a : add rax, rdi ; jmp rax
0x000000000042b4a3 : add rax, rdi ; ret
0x00000000004853ef : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440ce4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c89 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b919 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f49 : add rax, rdx ; jmp rax
0x0000000000440bd5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004481bb : add rax, rsi ; jmp rax
0x0000000000413a70 : add rbp, r13 ; call 0x4004ad
0x000000000047c451 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000455849 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042c331 : add rcx, r11 ; jmp rcx
0x00000000004481e3 : add rcx, rsi ; jmp rcx
0x000000000040d54b : add rdi, r10 ; jmp rdi
0x000000000045a4c3 : add rdi, r11 ; jmp rdi
0x000000000042d997 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468f77 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004835e1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004872b3 : add rdx, rax ; jmp 0x4872c3
0x00000000004122ff : add rdx, rcx ; jmp 0x412313
0x000000000040d262 : add rdx, rdi ; jmp rdx
0x0000000000459fc4 : add rsi, r8 ; jmp rsi
0x0000000000416700 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410900 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449d8e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482787 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbdd : add rsp, 0x118 ; ret
0x000000000045b019 : add rsp, 0x148 ; ret
0x000000000041a218 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4ca : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fae5 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000411994 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045add1 : add rsp, 0x18 ; ret
0x000000000041720c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416dec : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000417245 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482808 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b5e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449729 : add rsp, 0x28 ; ret
0x000000000044f717 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004849de : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad55 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041620d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044917d : add rsp, 0x38 ; ret
0x00000000004885eb : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481d1b : add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004886d2 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481ca9 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449959 : add rsp, 0x58 ; ret
0x000000000044984b : add rsp, 0x68 ; ret
0x0000000000473eb3 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449bde : add rsp, 0x78 ; ret
0x0000000000475532 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415ad7 : add rsp, 0x80 ; ret
0x000000000044bd2c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d91 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040150e : add rsp, 0x98 ; ret
0x0000000000475652 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040fa46 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fbd5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f754 : add rsp, 0xd8 ; ret
0x0000000000411d0e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd7a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff6d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b36f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a5ab : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167b8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488528 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401ba2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000423968 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004247d7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004854ba : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000494aec : and ah, bh ; stc ; dec dword ptr [rsi + 0x33] ; cli ; call rax
0x0000000000494518 : and ah, bl ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000494a98 : and ah, dh ; stc ; jmp qword ptr [rax + 0x20fff9f5]
0x000000000046b901 : and al, 0 ; jmp rax
0x000000000046c52a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d3c8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004884c1 : and al, 0x10 ; call 0x484ef4
0x000000000048ef80 : and al, 0x10 ; call r14
0x000000000044a998 : and al, 0x10 ; call rax
0x000000000048274b : and al, 0x10 ; call rdx
0x000000000041ca9c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409538 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406049
0x00000000004721b2 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ed68 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401145 : and al, 0x18 ; call rax
0x0000000000475860 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044e928 : and al, 0x18 ; mov r9, r13 ; call rbx
0x00000000004720cd : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004743cf : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482746 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000451007 : and al, 0x20 ; call r15
0x000000000045323e : and al, 0x20 ; call rax
0x0000000000474090 : and al, 0x20 ; call rbx
0x0000000000449cc6 : and al, 0x20 ; je 0x449cf9 ; mov eax, 0x48 ; syscall
0x0000000000450ed2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7be4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041fae3 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000451002 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000422993 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000004518e3 : and al, 0x30 ; call r14
0x0000000000451abb : and al, 0x30 ; call rbx
0x000000000047427e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000452d3a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451da5 : and al, 0x38 ; call r12
0x00000000004523dd : and al, 0x38 ; call r14
0x00000000004553a1 : and al, 0x38 ; call r15
0x00000000004515eb : and al, 0x38 ; call rbx
0x0000000000473f68 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x00000000004512f7 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004518de : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451ab6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046744c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004572be : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045607e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481d19 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ca7 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045381c : and al, 0x40 ; call r15
0x0000000000455fc8 : and al, 0x40 ; call rbx
0x0000000000453239 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451da0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004523d8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045539c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004515e6 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486e01 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416728 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048ae38 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048ab3c : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413404 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048de6e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453817 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455fc3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048de1f : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489d87 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489d35 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x00000000004512ce : and al, 0x50 ; call 0x44d5a4
0x00000000004512cd : and al, 0x50 ; call 0x44d5a5
0x0000000000404941 : and al, 0x60 ; jmp 0x4043bc
0x00000000004203ab : and al, 0x68 ; call rax
0x0000000000403f97 : and al, 0x68 ; je 0x403fe0 ; xor edi, edi ; call 0x4201b8
0x00000000004b15cc : and al, 0x73 ; cli ; jmp rax
0x0000000000463b1e : and al, 0x83 ; ret
0x000000000041718b : and al, 0x83 ; retf 0x4c01
0x000000000045797d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419293 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047dc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004517fe : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004921cb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049192b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000045228b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451c80 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000457a53 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cfab : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000449d8c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449d0f : and al, 0xc ; jne 0x449ce0 ; neg eax ; jmp 0x449ce0
0x0000000000449d0e : and al, 0xc ; jne 0x449ce1 ; neg eax ; jmp 0x449ce1
0x0000000000449c33 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000416712 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x4129a8
0x0000000000401140 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479e50 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416cec : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048af38 : and al, 0xd8 ; ret
0x0000000000418303 : and al, 0xe9 ; ret 0xfffd
0x000000000044d5b0 : and al, 0xe9 ; retf 0x31b
0x000000000045269e : and al, 0xf6 ; ret
0x0000000000416e1d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040953d : and al, 8 ; call 0x406044
0x000000000040953c : and al, 8 ; call 0x406045
0x000000000041d0b6 : and al, 8 ; call 0x419354
0x000000000040df0f : and al, 8 ; call rax
0x000000000041caa1 : and al, 8 ; call rcx
0x00000000004039ce : and al, 8 ; je 0x403a0b ; mov rdi, rax ; call 0x4004c9
0x000000000048ea6c : and al, 8 ; jmp 0x48ea86
0x000000000044a993 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411330 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000049501f : and al, al ; cli ; call rax
0x000000000048f624 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490283 : and al, byte ptr [rax] ; jne 0x49026d ; pop rbx ; ret
0x0000000000490ff1 : and al, byte ptr [rax] ; jne 0x491007 ; jmp 0x491021
0x000000000048f616 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f627 ; ret
0x000000000048f726 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f737 ; ret
0x0000000000440e3a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004901e8 : and al, ch ; ret 0xf8ff
0x0000000000494a78 : and al, ch ; stc ; jmp qword ptr [rax + 0x20fff9e9]
0x0000000000494acc : and al, dh ; stc ; jmp qword ptr [rax + 0x20fff9f1]
0x0000000000494ab4 : and bh, ah ; stc ; jmp qword ptr [rax + 0x20fff9e8]
0x0000000000469691 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000045323f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000495860 : and bh, byte ptr [rsi] ; sti ; call rdx
0x0000000000494aa0 : and bh, dh ; stc ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494568 : and bl, ah ; stc ; jmp qword ptr [rax]
0x000000000046f29b : and bl, ch ; retf 0x9066
0x0000000000494a80 : and bl, ch ; stc ; jmp qword ptr [rax + 0x20fff9ec]
0x0000000000494ad4 : and bl, dh ; stc ; jmp qword ptr [rax + 0x20fff9f4]
0x00000000004115c9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004115f9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041bf6f : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000041155e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042b7b6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004407da : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b92c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004115fa : and byte ptr [rax + 1], cl ; ret
0x0000000000400ee1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046654e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000440aa8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440bcd : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004739ee : and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000004a3bac : and byte ptr [rax - 0x509f0004], dh ; cld ; call qword ptr [rax]
0x0000000000450ed3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004773b8 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a6c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a6d8 ; call rax
0x000000000044fc16 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d4a6 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467f84 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041bf70 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412f22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000049501d : and byte ptr [rax], ah ; and al, al ; cli ; call rax
0x000000000049501b : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and al, al ; cli ; call rax
0x000000000049501a : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and byte ptr [rax], ah ; sar byte ptr [rsi], 0xfa ; call rax
0x000000000049501c : and byte ptr [rax], ah ; and byte ptr [rax], ah ; sar byte ptr [rsi], 0xfa ; call rax
0x000000000049501e : and byte ptr [rax], ah ; sar byte ptr [rsi], 0xfa ; call rax
0x000000000046025b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d479 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004482ca : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494a04 : and byte ptr [rax], cl ; cli ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000430865 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000004943d4 : and byte ptr [rbp - 0x592f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000049248c : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000492357 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004a9988 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048280b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004681e3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x00000000004115ca : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004b2f40 : and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x000000000045de80 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041720f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000041155f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000049410c : and byte ptr [rcx - 7], ch ; call qword ptr [rax]
0x00000000004949fc : and byte ptr [rcx], cl ; cli ; jmp qword ptr [rax + 0x20fffa08]
0x000000000047f694 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000494a0c : and byte ptr [rdi], al ; cli ; jmp qword ptr [rax + 0x20fffa06]
0x0000000000494d40 : and byte ptr [rdi], ch ; cli ; jmp qword ptr [rax + 0x20fffa2e]
0x0000000000447231 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fbfb : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444c80 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494d58 : and byte ptr [rdx + rdi*8], ch ; jmp qword ptr [rax + 0x20fffa2b]
0x0000000000494324 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x00000000004ad4a5 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000494a34 : and byte ptr [rdx], cl ; cli ; jmp qword ptr [rax + 0x10fffa09]
0x0000000000494d50 : and byte ptr [rip + 0x2ca0fffa], ch ; cli ; jmp qword ptr [rax]
0x0000000000494a1c : and byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x000000000042c3ca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b2025 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000494a14 : and byte ptr [rsi], al ; cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000494d48 : and byte ptr [rsi], ch ; cli ; jmp qword ptr [rax + 0x20fffa2d]
0x00000000004749b2 : and ch, 0xf ; je 0x4749d9 ; add rax, 2 ; ret
0x0000000000448288 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000494a70 : and ch, 0xf9 ; jmp qword ptr [rax + 0x20fff9e6]
0x00000000004247da : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000049456c : and ch, ah ; stc ; call rax
0x000000000047373b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000494ac4 : and ch, ch ; stc ; jmp qword ptr [rax + 0x20fff9ee]
0x000000000047499d : and cl, 0xf ; je 0x4749c5 ; ret
0x0000000000494564 : and cl, ah ; stc ; jmp qword ptr [rax]
0x0000000000494ae4 : and cl, bh ; stc ; jmp qword ptr [rax + 0x20fff9fa]
0x000000000041785a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044c911 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f494 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423f53 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042bc0d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473d9a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494a90 : and cl, dh ; stc ; jmp qword ptr [rax + 0x20fff9f2]
0x00000000004490fd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044c189 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000494a88 : and dh, ch ; stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494adc : and dh, dh ; stc ; jmp qword ptr [rax + 0x20fff9f7]
0x0000000000469690 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000494aa8 : and dl, bh ; stc ; jmp qword ptr [rax - 0x1f000605]
0x0000000000494abc : and dl, ch ; stc ; jmp qword ptr [rax + 0x20fff9eb]
0x0000000000469208 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469209 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9702 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000417a17 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a6f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041889e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004244b2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a67b9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9701 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045aceb : and eax, 0 ; ret
0x000000000048440c : and eax, 0x28 ; jne 0x484456 ; leave ; ret
0x00000000004197b3 : and eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e978 : and eax, 0x30 ; call rax
0x000000000040e8b2 : and eax, 0x30 ; call rdx
0x000000000040e99e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044820d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448258 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000460a2a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448303 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004482a7 : and eax, 0x7ff80000 ; ret
0x0000000000453c9b : and eax, 0x833fe283 ; retf 0x4180
0x000000000044bfc7 : and eax, 0xc ; cmp eax, 4 ; je 0x44bfd8 ; ret
0x000000000045ac8c : and eax, 0xf3087400 ; ret
0x00000000004828ac : and eax, 2 ; sub eax, 1 ; ret
0x0000000000487948 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f4b5 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004854b8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000047fde2 : and eax, dword ptr [rax] ; jne 0x47fe1a ; call qword ptr [rip + 0x23ca74]
0x0000000000487893 : and eax, dword ptr [rax] ; jne 0x4878c3 ; ret
0x0000000000484f0a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484ae5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23757a], rax ; ret
0x000000000047f55f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f3f9 : and eax, dword ptr [rax] ; ret
0x000000000047bc62 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000452a8e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000417a18 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a70 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044bf62 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44bf75 ; ret
0x00000000004a7eb4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042d945 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042d078 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b6ba : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000044f829 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rax
0x0000000000403b95 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000494031 : and ecx, edi ; jmp qword ptr [rax]
0x00000000004b3359 : and edi, esp ; jmp qword ptr [rcx]
0x00000000004122fc : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x412316
0x0000000000487892 : and r8, qword ptr [r8] ; jne 0x4878c4 ; ret
0x00000000004122fb : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412317
0x000000000044c188 : and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004744f7 : bnd je 0x474506 ; test edx, edx ; jne 0x4744f8 ; ret
0x000000000042b57a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b4a0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b991 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b4b0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b4c0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b490 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042b3ef : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000440453 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440a76 : bsf eax, edx ; ret
0x00000000004745a7 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440bd2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440570 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000440ac2 : bsf rax, rdx ; ret
0x00000000004745a6 : bsf rax, rdx ; shr rax, 2 ; ret
0x00000000004733d7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047365b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473569 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000473465 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000004733d6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047365a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473568 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000473464 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047ddab : call 0x110a60fb
0x0000000000469d66 : call 0x21469d64
0x0000000000469edc : call 0x21469eda
0x000000000046a16b : call 0x2146a169
0x000000000046a630 : call 0x2146a62e
0x000000000046a7ee : call 0x2146a7ec
0x000000000046adbf : call 0x2146adbd
0x000000000046aff8 : call 0x2146aff6
0x00000000004039fd : call 0x40043a
0x000000000045d674 : call 0x40043e
0x0000000000478bd8 : call 0x40048f
0x000000000047424d : call 0x400492
0x0000000000413a39 : call 0x4004aa
0x0000000000448b3c : call 0x4004ae
0x0000000000468af2 : call 0x4004af
0x00000000004039d5 : call 0x4004c2
0x0000000000461d05 : call 0x4004c6
0x00000000004558d0 : call 0x401af2
0x0000000000456b71 : call 0x401af8
0x000000000040953f : call 0x406042
0x0000000000421948 : call 0x40dc12
0x000000000040e1bb : call 0x40de56
0x000000000041a8c1 : call 0x40f8e8
0x0000000000421943 : call 0x40fe86
0x00000000004210f3 : call 0x40fe87
0x00000000004157fa : call 0x411a52
0x0000000000416718 : call 0x4129a2
0x00000000004130b0 : call 0x4129a6
0x000000000041d0b8 : call 0x419352
0x0000000000421b35 : call 0x41dd72
0x000000000049229d : call 0x41ed22
0x0000000000403f9d : call 0x4201b2
0x0000000000409e3c : call 0x4201b6
0x0000000000485c76 : call 0x422702
0x0000000000483be8 : call 0x43fed7
0x00000000004007e8 : call 0x448176
0x00000000004006b1 : call 0x448636
0x000000000044d4e2 : call 0x4490d8
0x000000000046fc4c : call 0x44bef2
0x000000000046fcf4 : call 0x44bf22
0x00000000004562a9 : call 0x44c018
0x00000000004512d0 : call 0x44d5a2
0x000000000040fdd8 : call 0x44f658
0x000000000044e2fa : call 0x45ad92
0x000000000040ddf3 : call 0x45b077
0x0000000000461552 : call 0x45d7f2
0x0000000000419c6b : call 0x468998
0x00000000004884c3 : call 0x484ef2
0x0000000000489992 : call 0x488767
0x000000000045d1d6 : call 0x49085b2a
0x0000000000482d64 : call 0x490abf7b
0x00000000004a90fa : call 0x4c14bab5
0x00000000004505e7 : call 0x4d078f3b
0x0000000000482a3c : call 0x4d0abc53
0x0000000000434f1a : call 0x4fc25f18
0x0000000000434f19 : call 0x4fc25f19
0x0000000000437a3a : call 0x4fc28a38
0x0000000000437a39 : call 0x4fc28a39
0x00000000004b10c4 : call 0x784b1127
0x000000000047b741 : call 0x86c03d5
0x000000000046c8ed : call 0xa3f4c29
0x0000000000453a0b : call 0xffffffff810fbd31
0x0000000000453cb6 : call 0xffffffff810fbfdc
0x000000000044826a : call 0xffffffff84070b7e
0x000000000047fb04 : call 0xffffffff8b90e485
0x00000000004a905a : call 0xffffffffab585b50
0x00000000004a7223 : call 0xffffffffaf0d1099
0x000000000044c88d : call 0xffffffffc268e621
0x0000000000464d29 : call 0xffffffffc27f9533
0x000000000041de70 : call 0xffffffffc2cb2689
0x000000000041efb0 : call 0xffffffffc2cb37c9
0x000000000041fd6a : call 0xffffffffc2cb4583
0x000000000042186d : call 0xffffffffc2cb6086
0x0000000000421d72 : call 0xffffffffc2cb658b
0x00000000004222ae : call 0xffffffffc2cb6ac7
0x000000000047e39a : call 0xffffffffc2d12fa4
0x000000000041dcf0 : call 0xffffffffc37b24fa
0x000000000041f0b9 : call 0xffffffffc37b38c3
0x000000000046abfe : call 0xffffffffc3caac06
0x0000000000440f27 : call 0xffffffffc4149878
0x0000000000440e47 : call 0xffffffffc43c9798
0x00000000004844c4 : call 0xffffffffca94d019
0x00000000004882c4 : call 0xffffffffca950e19
0x00000000004844d1 : call 0xffffffffce9cd02b
0x00000000004882d1 : call 0xffffffffce9d0e2b
0x00000000004abe28 : call 0xffffffffd14ab3c8
0x00000000004b46c4 : call 0xffffffffd84b475d
0x000000000044b375 : call 0xffffffffe14410d8
0x0000000000465a7c : call 0xfffffffffc114388
0x00000000004035a2 : call 2
0x000000000048f79d : call 9
0x0000000000468f7a : call qword ptr [r10 + rax*8]
0x0000000000489be0 : call qword ptr [r14]
0x00000000004018e0 : call qword ptr [r15 + rbx*8]
0x0000000000494a57 : call qword ptr [rax + 0x10fffa05]
0x0000000000494a4f : call qword ptr [rax + 0x10fffa06]
0x0000000000494a47 : call qword ptr [rax + 0x10fffa07]
0x0000000000494a3f : call qword ptr [rax + 0x10fffa08]
0x0000000000494833 : call qword ptr [rax + 0x10fffa0a]
0x00000000004942eb : call qword ptr [rax + 0x20fff9be]
0x0000000000494803 : call qword ptr [rax + 0x20fffa11]
0x0000000000494b23 : call qword ptr [rax + 0x20fffa34]
0x0000000000494cfb : call qword ptr [rax + 0x20fffa38]
0x000000000049512b : call qword ptr [rax + 0x20fffa9b]
0x000000000049462b : call qword ptr [rax + 0x26fffa0d]
0x000000000040e1fe : call qword ptr [rax + 0x458b41]
0x00000000004950fb : call qword ptr [rax - 0x1f000560]
0x00000000004945e7 : call qword ptr [rax - 0x1f00062c]
0x0000000000494593 : call qword ptr [rax - 0x1f000633]
0x000000000049441b : call qword ptr [rax - 0x1f000658]
0x00000000004943c7 : call qword ptr [rax - 0x1f00065f]
0x0000000000494023 : call qword ptr [rax - 0x2f0006e6]
0x0000000000494013 : call qword ptr [rax - 0x2f0006eb]
0x0000000000494003 : call qword ptr [rax - 0x2f0006f0]
0x0000000000493ff3 : call qword ptr [rax - 0x2f0006f5]
0x00000000004942e7 : call qword ptr [rax - 0x6f000644]
0x000000000049433f : call qword ptr [rax]
0x000000000049416f : call qword ptr [rbp + 0x41fff98d]
0x000000000040102e : call qword ptr [rbx + 0x10]
0x000000000040ea70 : call qword ptr [rbx]
0x0000000000494183 : call qword ptr [rcx + 0x11fff991]
0x000000000049418b : call qword ptr [rcx + 0x11fff992]
0x0000000000494193 : call qword ptr [rcx + 0x21fff993]
0x0000000000489d90 : call qword ptr [rcx]
0x00000000004018e1 : call qword ptr [rdi + rbx*8]
0x00000000004ac68f : call qword ptr [rdi]
0x00000000004946d7 : call qword ptr [rdx + 0x22fffa0f]
0x0000000000494bcf : call qword ptr [rdx + 0x22fffa36]
0x0000000000468f7b : call qword ptr [rdx + rax*8]
0x00000000004946af : call qword ptr [rdx]
0x000000000047fde6 : call qword ptr [rip + 0x23ca74]
0x000000000047fd9d : call qword ptr [rip + 0x23cabd]
0x00000000004941db : call qword ptr [rsi + 0x26fff994]
0x0000000000494633 : call qword ptr [rsi + 0x26fffa13]
0x0000000000489be1 : call qword ptr [rsi]
0x000000000047c837 : call r10
0x000000000040092c : call r11
0x000000000044a890 : call r12
0x000000000044ec30 : call r14
0x000000000044add2 : call r15
0x00000000004945b7 : call rax
0x000000000040092d : call rbx
0x000000000041caa3 : call rcx
0x000000000044add3 : call rdi
0x000000000040e8b7 : call rdx
0x000000000044ec31 : call rsi
0x00000000004ab7d3 : call rsp
0x0000000000428f57 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c714 : cdq ; add rax, r9 ; jmp rax
0x00000000004a8f60 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000484ee3 : cdq ; jno 0x484f0e ; add cl, ch ; retf
0x0000000000461553 : cdq ; ret 0xffff
0x000000000040707b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004b5c91 : cdq ; std ; call qword ptr [rdx]
0x000000000047d8c9 : clc ; add al, 0x75 ; retf
0x00000000004780b4 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469e71 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041d0fa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd57 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e803 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d4bd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004887bf : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fe82 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b277 : clc ; add rax, rcx ; ret
0x000000000042b7a4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af6aa : clc ; call qword ptr [rax]
0x0000000000495209 : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000495201 : clc ; cli ; inc eax ; clc ; cli ; jmp rax
0x00000000004951e9 : clc ; cli ; jmp qword ptr [rax]
0x0000000000495205 : clc ; cli ; jmp rax
0x0000000000422e98 : clc ; cmovne rax, rcx ; ret
0x000000000042d8e9 : clc ; cmp rcx, rax ; jne 0x42d91b ; xor eax, eax ; ret
0x000000000042d8e8 : clc ; cmp rcx, rax ; jne 0x42d91c ; xor eax, eax ; ret
0x0000000000476a96 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047fa80 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423860 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004729c0 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fca4 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cbfe : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a7c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fed9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000041134d : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000478bdb : clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004922c5 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000461b26 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045face : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004b0928 : clc ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b1a88 : clc ; hlt ; std ; call rdx
0x000000000045ee83 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004598f2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004482aa : clc ; jg 0x448279 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448306 : clc ; jg 0x448306 ; int1 ; mov eax, eax ; ret
0x0000000000454197 : clc ; jg 0x454126 ; ret 0xdb76
0x0000000000454197 : clc ; jg 0x45412a ; ret 0xdb76
0x00000000004af6be : clc ; jmp qword ptr [rsi]
0x0000000000460a2f : clc ; jmp rax
0x000000000048d6a3 : clc ; leave ; ret
0x00000000004a7bc2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000412a24 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f3e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fd57 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff57 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c17 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430157 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b87 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f403 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447dee : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447f6d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043863c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044707a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d821 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f530 : clc ; mov rdx, r8 ; jmp 0x46f502
0x0000000000412a3c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5398 : clc ; pop rax ; std ; call qword ptr [rdx]
0x000000000041ac66 : clc ; pop rbp ; pop r12 ; ret
0x00000000004b18d4 : clc ; pop rdi ; add byte ptr [rax], al ; xchg rax, rsp ; cli ; call qword ptr [rcx]
0x0000000000471a77 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475623 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004910b8 : clc ; push rbx ; ret
0x0000000000412a55 : clc ; ret
0x000000000043edc4 : clc ; rol ch, 1 ; jns 0x43eda5 ; retf 0xead3
0x000000000043ef14 : clc ; rol ch, 1 ; jns 0x43eef5 ; retf 0xead3
0x000000000043f064 : clc ; rol ch, 1 ; jns 0x43f045 ; retf 0xead3
0x000000000043f1b4 : clc ; rol ch, 1 ; jns 0x43f195 ; retf 0xead3
0x000000000043f304 : clc ; rol ch, 1 ; jns 0x43f2e5 ; retf 0xead3
0x000000000043f454 : clc ; rol ch, 1 ; jns 0x43f435 ; retf 0xead3
0x000000000043f5a4 : clc ; rol ch, 1 ; jns 0x43f585 ; retf 0xead3
0x000000000043f6f4 : clc ; rol ch, 1 ; jns 0x43f6d5 ; retf 0xead3
0x000000000043f844 : clc ; rol ch, 1 ; jns 0x43f825 ; retf 0xead3
0x000000000043f994 : clc ; rol ch, 1 ; jns 0x43f975 ; retf 0xead3
0x000000000043fae4 : clc ; rol ch, 1 ; jns 0x43fac5 ; retf 0xead3
0x000000000043fc34 : clc ; rol ch, 1 ; jns 0x43fc15 ; retf 0xead3
0x000000000043fd84 : clc ; rol ch, 1 ; jns 0x43fd65 ; retf 0xead3
0x000000000043fed4 : clc ; rol ch, 1 ; jns 0x43feb5 ; retf 0xead3
0x0000000000440024 : clc ; rol ch, 1 ; jns 0x440005 ; retf 0xead3
0x0000000000482f7a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004746bf : clc ; shr rax, 2 ; ret
0x0000000000494aa5 : clc ; stc ; jmp qword ptr [rax]
0x0000000000481bed : clc ; std ; jbe 0x481bfd ; ret
0x00000000004b2d48 : clc ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004853f1 : clc ; sub rax, r8 ; ret
0x0000000000440ce6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8b : clc ; sub rax, rsi ; ret
0x000000000042b91b : clc ; vzeroupper ; ret
0x000000000047fd99 : clc ; xor dword ptr [rsi + 0x63], esi ; call qword ptr [rip + 0x23cabd]
0x00000000004ab830 : cld ; adc edi, esi ; call rsp
0x000000000044820f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004122fe : cld ; add rdx, rcx ; jmp 0x412314
0x00000000004974c6 : cld ; call qword ptr [rax]
0x00000000004974c2 : cld ; call rax
0x00000000004b414e : cld ; call rdx
0x00000000004a3df6 : cld ; call rsp
0x000000000047bdbe : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004482ec : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044825a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a3baa : cld ; jmp qword ptr [rax]
0x00000000004b2f5a : cld ; jmp qword ptr [rbx]
0x00000000004b335a : cld ; jmp qword ptr [rcx]
0x000000000048c1a0 : cld ; jmp qword ptr [rdx]
0x00000000004b421a : cld ; jmp qword ptr [rsi]
0x00000000004974d6 : cld ; jmp rax
0x00000000004b2efa : cld ; jmp rdx
0x00000000004974ce : cld ; ljmp [rax + 0x78fffc2b] ; sub bh, ah ; jmp rax
0x00000000004a8945 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a8914 ; retf
0x000000000042fb72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd75 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff75 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430175 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447df6 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f78 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043864e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000447088 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000447082 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7a6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e36 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f986 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d36 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f5c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449e97 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000042f451 : cld ; ret
0x0000000000409540 : cld ; retf 0xffff
0x00000000004a7063 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000494aed : cld ; stc ; dec dword ptr [rsi + 0x33] ; cli ; call rax
0x00000000004b2d61 : cld ; sti ; jmp qword ptr [rbx]
0x00000000004a7076 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447912 : cld ; vzeroupper ; ret
0x00000000004156f1 : cli ; add ch, al ; pop rax ; ret
0x00000000004157f8 : cli ; add ch, al ; push rcx ; ret 0xffff
0x00000000004693c5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004116b2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447de1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447df1 ; mov byte ptr [rdi], cl ; ret
0x0000000000446ddb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043866c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448ece : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f2c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a9059 : cli ; call 0xffffffffab585b51
0x0000000000494a56 : cli ; call qword ptr [rax + 0x10fffa05]
0x0000000000494a4e : cli ; call qword ptr [rax + 0x10fffa06]
0x0000000000494a46 : cli ; call qword ptr [rax + 0x10fffa07]
0x0000000000494a3e : cli ; call qword ptr [rax + 0x10fffa08]
0x0000000000494832 : cli ; call qword ptr [rax + 0x10fffa0a]
0x0000000000494802 : cli ; call qword ptr [rax + 0x20fffa11]
0x0000000000494b22 : cli ; call qword ptr [rax + 0x20fffa34]
0x0000000000494cfa : cli ; call qword ptr [rax + 0x20fffa38]
0x000000000049512a : cli ; call qword ptr [rax + 0x20fffa9b]
0x000000000049462a : cli ; call qword ptr [rax + 0x26fffa0d]
0x00000000004950fa : cli ; call qword ptr [rax - 0x1f000560]
0x000000000049460a : cli ; call qword ptr [rax]
0x00000000004b1bb2 : cli ; call qword ptr [rbx]
0x00000000004b18b2 : cli ; call qword ptr [rcx]
0x00000000004b10ca : cli ; call qword ptr [rdi]
0x00000000004946d6 : cli ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000494bce : cli ; call qword ptr [rdx + 0x22fffa36]
0x00000000004946ae : cli ; call qword ptr [rdx]
0x0000000000494632 : cli ; call qword ptr [rsi + 0x26fffa13]
0x0000000000494652 : cli ; call qword ptr [rsi]
0x00000000004945fa : cli ; call rax
0x00000000004b1036 : cli ; call rcx
0x00000000004946e6 : cli ; call rdx
0x0000000000494642 : cli ; call rsi
0x0000000000494ca6 : cli ; call rsp
0x000000000044c435 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d5de : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f620 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c595 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004506ce : cli ; dec dword ptr [rbx + rcx*4 + 0x25] ; push rcx ; ret 0x26
0x0000000000471cc7 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004b0aa9 : cli ; hlt ; jmp qword ptr [rbx]
0x000000000049480e : cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004945f6 : cli ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000494d06 : cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000495106 : cli ; inc dword ptr [rax - 0x2f00055c] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000494a6e : cli ; inc dword ptr [rax - 0x5f00061b] ; out 0xf9, al ; jmp qword ptr [rax]
0x00000000004950f6 : cli ; inc dword ptr [rax - 0x61] ; cli ; call qword ptr [rax - 0x1f000560]
0x00000000004950ce : cli ; inc dword ptr [rax - 0x6b] ; cli ; jmp rax
0x00000000004950ae : cli ; inc dword ptr [rax - 0x78] ; cli ; jmp rax
0x00000000004947fe : cli ; inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494a62 : cli ; inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x000000000049485e : cli ; inc dword ptr [rax] ; add eax, 0x470fffa ; cli ; jmp rax
0x00000000004951e6 : cli ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x000000000049502e : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494cf6 : cli ; inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x00000000004951be : cli ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000495126 : cli ; inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax + 0x20fffa9b]
0x000000000049520a : cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494d66 : cli ; inc dword ptr [rax] ; sub bh, dl ; push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x0000000000494b1e : cli ; inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x00000000004598ef : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000045264d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455935 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000494dea : cli ; inc dword ptr [rdx + 0x29] ; cli ; call rdx
0x0000000000494bda : cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x00000000004946e2 : cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x00000000004946d2 : cli ; inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x000000000049463e : cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000494b36 : cli ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x0000000000494ca2 : cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x0000000000495202 : cli ; inc eax ; clc ; cli ; jmp rax
0x00000000004951ae : cli ; inc eax ; idiv dl ; call rax
0x00000000004951de : cli ; inc eax ; idiv edx ; jmp rax
0x0000000000495156 : cli ; inc eax ; int1 ; cli ; call rax
0x0000000000495222 : cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000494b56 : cli ; inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000438627 : cli ; jg 0x43863a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446da6 : cli ; jg 0x446db8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004473d9 : cli ; jg 0x4473ec ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447841 : cli ; jg 0x447854 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447f62 : cli ; jg 0x447f72 ; vzeroupper ; ret
0x0000000000448138 : cli ; jg 0x448148 ; vzeroupper ; ret
0x0000000000494a1e : cli ; jmp qword ptr [rax + 0x10fffa04]
0x0000000000494a36 : cli ; jmp qword ptr [rax + 0x10fffa09]
0x0000000000494f26 : cli ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494a16 : cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000494a0e : cli ; jmp qword ptr [rax + 0x20fffa06]
0x0000000000494a06 : cli ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004949fe : cli ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000494d5a : cli ; jmp qword ptr [rax + 0x20fffa2b]
0x0000000000494d52 : cli ; jmp qword ptr [rax + 0x20fffa2c]
0x0000000000494d4a : cli ; jmp qword ptr [rax + 0x20fffa2d]
0x0000000000494d42 : cli ; jmp qword ptr [rax + 0x20fffa2e]
0x0000000000494d3a : cli ; jmp qword ptr [rax + 0x20fffa2f]
0x0000000000494826 : cli ; jmp qword ptr [rax + 0x30fffa0d]
0x0000000000494806 : cli ; jmp qword ptr [rax]
0x00000000004946da : cli ; jmp qword ptr [rdx]
0x000000000049462e : cli ; jmp qword ptr [rsi]
0x000000000049461e : cli ; jmp rax
0x000000000040d264 : cli ; jmp rdx
0x0000000000494666 : cli ; jmp rsi
0x0000000000494792 : cli ; jmp rsp
0x00000000004946aa : cli ; ljmp [rbp + rcx - 6] ; call qword ptr [rdx]
0x0000000000494eee : cli ; ljmp [rdx + 0x50fffa28] ; xor dl, bh ; call rax
0x0000000000454fac : cli ; loopne 0x455029 ; jae 0x454f3f ; retf 0xb941
0x000000000042ff78 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004039f9 : cli ; mov rdi, rax ; call 0x40043e
0x000000000040d546 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042bc28 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a6d6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a94e1 : cli ; push 0x6e ; ja 0x4a946e ; ret 0x48f
0x0000000000494d6a : cli ; push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x000000000049480a : cli ; push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004945f2 : cli ; push qword ptr [rax + 0x40fffa13] ; adc edi, edx ; call rax
0x0000000000494a66 : cli ; push qword ptr [rax + 3] ; cli ; jmp rax
0x0000000000494862 : cli ; push qword ptr [rax + 4] ; cli ; jmp rax
0x0000000000495152 : cli ; push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x0000000000494f22 : cli ; push qword ptr [rax] ; sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494d36 : cli ; push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x20fffa2f]
0x000000000049463a : cli ; push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x0000000000494b32 : cli ; push qword ptr [rsi + 0x46fffa39] ; cmp edx, edi ; call rsi
0x0000000000494c9e : cli ; push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x000000000049518e : cli ; push rax ; cli ; call qword ptr [rax]
0x000000000049502a : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004951ba : cli ; push rax ; idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000495162 : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494d12 : cli ; push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000447d19 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7f85 : cli ; ret 0xac65
0x000000000044beeb : cli ; setae al ; ret
0x0000000000494aa9 : cli ; stc ; jmp qword ptr [rax - 0x1f000605]
0x0000000000494ae9 : cli ; stc ; jmp qword ptr [rax]
0x00000000004b0cb1 : cli ; std ; jmp qword ptr [rdx]
0x00000000004a7e30 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000440b19 : cli ; test rdx, rdx ; je 0x440b39 ; bsf rax, rdx ; ret
0x0000000000473948 : cli ; test rdx, rdx ; je 0x473979 ; bsf rax, rdx ; ret
0x00000000004a6bca : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000044d2e5 : cmc ; add cl, ch ; retf
0x00000000004abd8a : cmc ; call qword ptr [rdx]
0x00000000004abe2a : cmc ; call rax
0x00000000004abd9e : cmc ; call rsp
0x00000000004abf42 : cmc ; jmp qword ptr [rax]
0x00000000004ab912 : cmc ; jmp qword ptr [rdx]
0x00000000004a9909 : cmc ; mov ch, 0xab ; ret
0x0000000000434dba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046ff97 : cmc ; mov rbp, rax ; jmp 0x46ff64
0x0000000000446163 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a67b7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000494a9d : cmc ; stc ; jmp qword ptr [rax]
0x0000000000446167 : cmc ; sub eax, edx ; ret
0x00000000004a8f45 : cmc ; xlatb ; ret 0x4e27
0x0000000000419119 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419118 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448234 : cmove eax, ecx ; pop rbx ; ret
0x0000000000472021 : cmove eax, ecx ; ret
0x0000000000423863 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000004481fc : cmove eax, edx ; pop rbx ; ret
0x000000000042399f : cmove eax, edx ; ret
0x0000000000414b6f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e908 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000472020 : cmove r8, rcx ; ret
0x0000000000448233 : cmove rax, rcx ; pop rbx ; ret
0x0000000000423862 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000004481fb : cmove rax, rdx ; pop rbx ; ret
0x000000000042399e : cmove rax, rdx ; ret
0x000000000047e907 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041655b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416559 ; ret
0x0000000000470b3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x470b39 ; ret
0x0000000000422e9a : cmovne eax, ecx ; ret
0x000000000044828c : cmovne eax, edx ; pop rbx ; ret
0x000000000042389f : cmovne eax, edx ; ret
0x00000000004406a4 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422e99 : cmovne rax, rcx ; ret
0x000000000044828b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042389e : cmovne rax, rdx ; ret
0x00000000004406a3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042b238 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x0000000000450cac : cmovs eax, edx ; ret
0x000000000048dd18 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471d88 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471d89 ; lea eax, [rdx + rdi] ; ret
0x00000000004481de : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448270 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446c78 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004af4ed : cmp al, 0 ; add byte ptr [rax], dh ; ret 0xfff7
0x0000000000488550 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000455ad2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f9c2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416727 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416716 : cmp al, 0x24 ; call 0x4129a4
0x000000000048de6d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d33c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d2cd : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7bc0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a6ac3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a95ab : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004b18c4 : cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x000000000045a4c1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d549 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000044b79d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000446626 : cmp al, byte ptr [rsi - 1] ; jne 0x44664c ; xor eax, eax ; ret
0x000000000042b496 : cmp al, dh ; ret
0x000000000042b495 : cmp al, r14b ; ret
0x000000000048b0b6 : cmp bh, 0x10 ; jne 0x48b0df ; xor eax, eax ; ret
0x000000000048e256 : cmp bh, 0x10 ; jne 0x48e275 ; xor eax, eax ; ret
0x000000000048f0b6 : cmp bh, 0x10 ; jne 0x48f0d5 ; xor eax, eax ; ret
0x000000000048fb26 : cmp bh, 0x10 ; jne 0x48fb4f ; xor eax, eax ; ret
0x000000000048e23c : cmp bh, 0x30 ; jne 0x48e271 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f09c : cmp bh, 0x30 ; jne 0x48f0d1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000410a92 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000041244f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476ea3 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004104ee : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412ef9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040169b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x00000000004829fe : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042b4d7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004706a5 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000470130 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004586ff : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045b127 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004512f8 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045b2a4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45b2d5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410a93 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e329 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000411320 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000046fed6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452c04 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000494b00 : cmp byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000042b4c6 : cmp byte ptr [rax], ah ; ret
0x0000000000416b93 : cmp byte ptr [rax], al ; je 0x416ba5 ; ret
0x000000000048d23f : cmp byte ptr [rax], al ; je 0x48d268 ; add rsp, 0x18 ; ret
0x0000000000446c12 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000440240 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b4b6 : cmp byte ptr [rax], dl ; ret
0x000000000042b4b5 : cmp byte ptr [rax], r10b ; ret
0x000000000042b4c5 : cmp byte ptr [rax], r12b ; ret
0x000000000044023f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046ae24 : cmp byte ptr [rbp - 0x76befffd], cl ; retf
0x00000000004b4081 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b40b5 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b404d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ad58 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040da96 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416210 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004acd6c : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x00000000004b3358 : cmp byte ptr [rbx], ah ; cld ; jmp qword ptr [rcx]
0x0000000000471ab0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d33b : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d34e ; mov qword ptr [rax], rdx ; ret
0x00000000004b4214 : cmp byte ptr [rcx - 0x32880000], cl ; cld ; jmp qword ptr [rsi]
0x0000000000403f4b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000458427 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004801f6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004af248 : cmp byte ptr [rdi - 9], al ; jmp qword ptr [rbx]
0x0000000000416b58 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042cdbd : cmp byte ptr [rdi], dl ; ret
0x000000000042d8d0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d8a2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d2cc : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d2f5 ; mov rax, qword ptr [rax] ; ret
0x00000000004a4fd8 : cmp byte ptr [rsi - 3], bh ; call rax
0x000000000048c874 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000488e32 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042dfa1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042e0f1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042e241 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042e391 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042e4e1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042e631 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042e781 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042e8d1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042ea21 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042eb71 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042ecc1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042ee11 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042ef61 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042f0b1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042f201 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004331da : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043335a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004334da : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043365a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004337da : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043395a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000433ada : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433c5a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433dda : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433f5a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004340da : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043425a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004343da : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043455a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004346da : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a9986 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000404807 : cmp cl, ch ; ret 0xfffb
0x00000000004406a1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044811a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004ac68d : cmp dh, dh ; call qword ptr [rdi]
0x000000000048b0b5 : cmp dil, 0x10 ; jne 0x48b0e0 ; xor eax, eax ; ret
0x000000000048e255 : cmp dil, 0x10 ; jne 0x48e276 ; xor eax, eax ; ret
0x000000000048f0b5 : cmp dil, 0x10 ; jne 0x48f0d6 ; xor eax, eax ; ret
0x000000000048fb25 : cmp dil, 0x10 ; jne 0x48fb50 ; xor eax, eax ; ret
0x0000000000447de0 : cmp dl, 1 ; ja 0x447e03 ; jb 0x447df2 ; mov byte ptr [rdi], cl ; ret
0x000000000043866b : cmp dl, 1 ; jb 0x43867d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446dda : cmp dl, 1 ; jb 0x446de8 ; mov byte ptr [rdi], cl ; ret
0x0000000000422f05 : cmp dl, al ; jne 0x422ef8 ; sub rax, 0x10 ; ret
0x0000000000494b01 : cmp dl, bh ; call qword ptr [rax]
0x0000000000494cfd : cmp dl, bh ; jmp qword ptr [rax]
0x0000000000494bc1 : cmp dl, bh ; jmp rdx
0x0000000000422f04 : cmp dl, r8b ; jne 0x422ef9 ; sub rax, 0x10 ; ret
0x0000000000471a58 : cmp dword ptr [rax + 0x30], 0 ; je 0x471a67 ; ret
0x0000000000429db7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a597 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040ea41 : cmp dword ptr [rax - 0x39], ecx ; ret
0x00000000004348f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000416b91 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416ba7 ; ret
0x00000000004246a1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047fa7f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000471a76 : cmp eax, -1 ; je 0x471a89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481bec : cmp eax, -3 ; jbe 0x481bfe ; ret
0x0000000000487945 : cmp eax, 0x23162d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460f69 : cmp eax, 0x2557b2 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000044e2f3 : cmp eax, 0x26bef4 ; je 0x44e2b1 ; call 0x45ad99
0x00000000004129a2 : cmp eax, 0x2a6600 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040383a : cmp eax, 0x2b5720 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004035ef : cmp eax, 0x2b88ac ; call 7
0x00000000004035a9 : cmp eax, 0x2b88f2 ; call 7
0x000000000047fd98 : cmp eax, 0x31 ; jbe 0x47fe08 ; call qword ptr [rip + 0x23cabd]
0x0000000000495825 : cmp eax, 0x3d81fffb ; sti ; call rdx
0x0000000000495849 : cmp eax, 0x3d94fffb ; sti ; call rdx
0x0000000000495881 : cmp eax, 0x3d94fffb ; sti ; jmp qword ptr [rax]
0x000000000049584d : cmp eax, 0x3dd2fffb ; sti ; call rdx
0x000000000049592d : cmp eax, 0x3dfafffb ; sti ; jmp rsi
0x000000000049585d : cmp eax, 0x3e22fffb ; sti ; call rdx
0x000000000044a8b2 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c60f : cmp eax, 0x83482f74 ; ret
0x000000000044c436 : cmp eax, 0x83497174 ; ret
0x00000000004736c4 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000454fa2 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004af6b9 : cmp eax, 0x95940000 ; clc ; jmp qword ptr [rsi]
0x00000000004af6a5 : cmp eax, 0x95980000 ; clc ; call qword ptr [rax]
0x00000000004a6eab : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004af6cd : cmp eax, 0xb7b00000 ; clc ; call qword ptr [rax]
0x0000000000403f9a : cmp eax, 0xee8ff31 ; ret 1
0x0000000000449756 : cmp eax, 0xfffff000 ; ja 0x449768 ; ret
0x00000000004497a4 : cmp eax, 0xfffff000 ; ja 0x4497b8 ; ret
0x00000000004499af : cmp eax, 0xfffff000 ; ja 0x449a18 ; ret
0x0000000000449a45 : cmp eax, 0xfffff000 ; ja 0x449a58 ; ret
0x0000000000449a82 : cmp eax, 0xfffff000 ; ja 0x449ae8 ; ret
0x0000000000449b18 : cmp eax, 0xfffff000 ; ja 0x449b30 ; ret
0x0000000000449b48 : cmp eax, 0xfffff000 ; ja 0x449b60 ; ret
0x0000000000449d52 : cmp eax, 0xfffff000 ; ja 0x449da0 ; ret
0x0000000000449dc8 : cmp eax, 0xfffff000 ; ja 0x449de0 ; ret
0x000000000044a521 : cmp eax, 0xfffff000 ; ja 0x44a538 ; ret
0x000000000045b0ae : cmp eax, 0xfffff000 ; ja 0x45b0c8 ; ret
0x0000000000475706 : cmp eax, 0xfffff000 ; ja 0x475718 ; ret
0x000000000047575a : cmp eax, 0xfffff000 ; ja 0x475770 ; ret
0x00000000004496c8 : cmp eax, 0xfffff001 ; jae 0x4496d7 ; ret
0x000000000044a758 : cmp eax, 0xfffff001 ; jae 0x44a767 ; ret
0x000000000044a788 : cmp eax, 0xfffff001 ; jae 0x44a797 ; ret
0x000000000044a7b8 : cmp eax, 0xfffff001 ; jae 0x44a7c7 ; ret
0x000000000044be5b : cmp eax, 0xfffff001 ; jae 0x44be6a ; ret
0x000000000044be88 : cmp eax, 0xfffff001 ; jae 0x44be97 ; ret
0x0000000000475698 : cmp eax, 0xfffff001 ; jae 0x4756a7 ; ret
0x00000000004886f8 : cmp eax, 0xfffff001 ; jae 0x488707 ; ret
0x000000000044879b : cmp eax, 2 ; je 0x4487af ; xor eax, eax ; ret
0x000000000044bfca : cmp eax, 4 ; je 0x44bfd5 ; ret
0x00000000004a8d77 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046f52b : cmp eax, ecx ; jg 0x46f548 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f507
0x0000000000446c2f : cmp eax, ecx ; jle 0x446c6f ; movsxd rax, ecx ; ret
0x0000000000446643 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041889b : cmp eax, edx ; jae 0x4188c7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e74 : cmp eax, esi ; je 0x487e85 ; ret
0x000000000046304f : cmp eax, esp ; je 0x462e86 ; jmp 0x463024
0x000000000046f52a : cmp eax, r9d ; jg 0x46f549 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f508
0x000000000045664c : cmp ebp, ebx ; jb 0x4566be ; mov rdx, rax ; jmp 0x456615
0x000000000044bf66 : cmp ebx, 0xa ; je 0x44bf71 ; ret
0x000000000044d57e : cmp ebx, eax ; setne dl ; jmp 0x44d56a
0x0000000000473de5 : cmp ecx, 0xc00 ; je 0x473df9 ; ret
0x000000000044c191 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c186 ; ret
0x00000000004872ae : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x4872bf ; add rdx, rax ; jmp 0x4872c8
0x00000000004826b8 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x000000000044ea82 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047fac8 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa78 ; xor eax, eax ; ret
0x000000000047201e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d8eb : cmp ecx, eax ; jne 0x42d919 ; xor eax, eax ; ret
0x000000000047e858 : cmp ecx, eax ; jne 0x47e802 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484412 : cmp ecx, ecx ; ret
0x0000000000471d8a : cmp ecx, esi ; jne 0x471d87 ; lea eax, [rdx + rdi] ; ret
0x000000000047e846 : cmp ecx, esi ; jne 0x47e825 ; ret
0x0000000000465fc0 : cmp edi, eax ; ja 0x465fa7 ; mov eax, r9d ; ret
0x0000000000475a7e : cmp edi, edx ; ja 0x475aad ; ret
0x0000000000446fe2 : cmp edi, edx ; jb 0x446fef ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465fbf : cmp edi, r8d ; ja 0x465fa8 ; mov eax, r9d ; ret
0x000000000041f74a : cmp edx, eax ; jne 0x41f715 ; ret
0x0000000000447dcb : cmp edx, ecx ; jne 0x447db8 ; ret
0x0000000000447f32 : cmp edx, ecx ; jne 0x447f1e ; vzeroupper ; ret
0x00000000004480f5 : cmp edx, ecx ; jne 0x4480d9 ; vzeroupper ; ret
0x0000000000494cf9 : cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x0000000000494b39 : cmp edx, edi ; call rsi
0x0000000000494b35 : cmp edx, edi ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x000000000044beea : cmp edx, edi ; setae al ; ret
0x00000000004744f6 : cmp edx, esi ; je 0x474507 ; test edx, edx ; jne 0x4744f9 ; ret
0x0000000000494b38 : cmp edx, r15d ; call rsi
0x00000000004188d9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000458874 : cmp esi, 3 ; je 0x458886 ; ret
0x00000000004473c5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8f44 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000417afa : cmp esi, ecx ; jne 0x417af7 ; lea eax, [rdx + rdi] ; ret
0x0000000000471a57 : cmp qword ptr [rax + 0x30], 0 ; je 0x471a68 ; ret
0x0000000000416b90 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416ba8 ; ret
0x000000000044bf65 : cmp r11d, 0xa ; je 0x44bf72 ; ret
0x000000000045664b : cmp r13, r11 ; jb 0x4566bf ; mov rdx, rax ; jmp 0x456616
0x0000000000449755 : cmp rax, -0x1000 ; ja 0x449769 ; ret
0x00000000004497a3 : cmp rax, -0x1000 ; ja 0x4497b9 ; ret
0x00000000004499ae : cmp rax, -0x1000 ; ja 0x449a19 ; ret
0x0000000000449a44 : cmp rax, -0x1000 ; ja 0x449a59 ; ret
0x0000000000449a81 : cmp rax, -0x1000 ; ja 0x449ae9 ; ret
0x0000000000449b17 : cmp rax, -0x1000 ; ja 0x449b31 ; ret
0x0000000000449b47 : cmp rax, -0x1000 ; ja 0x449b61 ; ret
0x0000000000449d51 : cmp rax, -0x1000 ; ja 0x449da1 ; ret
0x0000000000449dc7 : cmp rax, -0x1000 ; ja 0x449de1 ; ret
0x000000000044a520 : cmp rax, -0x1000 ; ja 0x44a539 ; ret
0x000000000045b0ad : cmp rax, -0x1000 ; ja 0x45b0c9 ; ret
0x0000000000475705 : cmp rax, -0x1000 ; ja 0x475719 ; ret
0x0000000000475759 : cmp rax, -0x1000 ; ja 0x475771 ; ret
0x00000000004496c7 : cmp rax, -0xfff ; jae 0x4496d8 ; ret
0x000000000044a757 : cmp rax, -0xfff ; jae 0x44a768 ; ret
0x000000000044a787 : cmp rax, -0xfff ; jae 0x44a798 ; ret
0x000000000044a7b7 : cmp rax, -0xfff ; jae 0x44a7c8 ; ret
0x000000000044be5a : cmp rax, -0xfff ; jae 0x44be6b ; ret
0x000000000044be87 : cmp rax, -0xfff ; jae 0x44be98 ; ret
0x0000000000475697 : cmp rax, -0xfff ; jae 0x4756a8 ; ret
0x00000000004886f7 : cmp rax, -0xfff ; jae 0x488708 ; ret
0x000000000047fa7e : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481beb : cmp rax, -3 ; jbe 0x481bff ; ret
0x000000000047fd97 : cmp rax, 0x31 ; jbe 0x47fe09 ; call qword ptr [rip + 0x23cabd]
0x000000000041889a : cmp rax, rdx ; jae 0x4188c8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e73 : cmp rax, rsi ; je 0x487e86 ; ret
0x000000000044c190 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c187 ; ret
0x000000000047fac7 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47fa79 ; xor eax, eax ; ret
0x000000000047201d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e857 : cmp rcx, r8 ; jne 0x47e803 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d8ea : cmp rcx, rax ; jne 0x42d91a ; xor eax, eax ; ret
0x0000000000471d89 : cmp rcx, rsi ; jne 0x471d88 ; lea eax, [rdx + rdi] ; ret
0x000000000047e845 : cmp rcx, rsi ; jne 0x47e826 ; ret
0x0000000000475a7d : cmp rdi, rdx ; ja 0x475aae ; ret
0x0000000000446fe1 : cmp rdi, rdx ; jb 0x446ff0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f749 : cmp rdx, r8 ; jne 0x41f716 ; ret
0x0000000000447dca : cmp rdx, rcx ; jne 0x447db9 ; ret
0x0000000000447dc9 : cmp rdx, rcx ; jne 0x447dba ; ret
0x0000000000447f31 : cmp rdx, rcx ; jne 0x447f1f ; vzeroupper ; ret
0x00000000004480f4 : cmp rdx, rcx ; jne 0x4480da ; vzeroupper ; ret
0x000000000044bee9 : cmp rdx, rdi ; setae al ; ret
0x0000000000417af9 : cmp rsi, rcx ; jne 0x417af8 ; lea eax, [rdx + rdi] ; ret
0x000000000042d369 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x00000000004a6f76 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6f42 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043e056 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9091 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004b02ed : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004943d9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x000000000041ceed : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047cb98 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000046c529 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004109c9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a6a5f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000494419 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000658]
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004b50dd : cwde ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; jmp qword ptr [rcx]
0x000000000047e50d : cwde ; add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x000000000048b130 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b1c5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004109ca : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004517ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004921cc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049192c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b5111 : cwde ; add byte ptr [rax], al ; std ; jmp rsp
0x00000000004abe29 : cwde ; cmc ; call rax
0x00000000004b1bc8 : cwde ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000463937 : cwde ; shl rdx, 3 ; call 0x40043f
0x000000000049589c : cwde ; sti ; ljmp [rdx + 0x3e] ; sti ; jmp qword ptr [rdx]
0x00000000004af6a8 : cwde ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x0000000000442341 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000442342 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044790d : dec byte ptr [rax + 0x7f] ; jl 0x447932 ; cld ; vzeroupper ; ret
0x000000000045ddd9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480ecf : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xcde8
0x0000000000472870 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480e6d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044aa02 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e3e6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044b093 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000474246 : dec byte ptr [rcx + rcx*4 - 0x11] ; add r15, r12 ; call 0x400499
0x000000000040df97 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481be9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481c01 ; ret
0x00000000004569f3 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041457e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000041135d : dec dword ptr [rax + 0x29] ; ret
0x0000000000442482 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482bb1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482cf1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e7d5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047649b : dec dword ptr [rax + 0x39] ; ret
0x000000000041318d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489399 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041db75 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041db47 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x00000000004848ae : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045ef0c : dec dword ptr [rax + 0x63] ; retf
0x000000000046ef42 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000473659 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047fa81 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423861 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473e09 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045b12b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004729c1 : dec dword ptr [rax + 1] ; ret
0x0000000000403013 : dec dword ptr [rax - 0x39] ; ret
0x000000000044964f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000004495f4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045de40 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449567 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468af6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004498e5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004494bc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048bedf : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000456904 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fca5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041ec28 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c3d2 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f20c : dec dword ptr [rax - 0x75] ; jne 0x44f1a6 ; call rsi
0x000000000046930b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cbff : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044ac95 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000481e2c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f8d4 : dec dword ptr [rax - 0x77] ; add eax, 0x299f84 ; ret
0x000000000048a587 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f621 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000401a7d : dec dword ptr [rax - 0x77] ; ret
0x0000000000475a6e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041f0cf : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042447b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x00000000004759cd : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041ee4c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004237d7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045af52 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046de96 : dec dword ptr [rax - 0x77] ; ret 0x89e8
0x000000000046dba0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x00000000004493e6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047883c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423ef6 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a715 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449541 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045691d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044952d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000424308 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046bc19 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000047ce57 : dec dword ptr [rax - 0x77] ; ret 0xd8e8
0x0000000000475fac : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046feda : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040581f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000041134e : dec dword ptr [rax - 0x77] ; retf
0x0000000000477fdc : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000462064 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000410cc9 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477f3d : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046d05f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000469b03 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481bea : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481c00 ; ret
0x000000000040476f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454721 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452e0b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d6b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004569f4 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e1c7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040d99c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x00000000004594f8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000047e509 : dec dword ptr [rax - 0x7f] ; in al, dx ; cwde ; add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x000000000044b7a0 : dec dword ptr [rax - 0x7f] ; ret
0x00000000004348fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004771ad : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048ebc4 : dec dword ptr [rax - 9] ; ret
0x0000000000458675 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000461d44 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x00000000004638e5 : dec dword ptr [rbp + rcx*4 + 0x35] ; retf
0x0000000000477ac2 : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 2
0x0000000000467f8d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045157d : dec dword ptr [rbp - 0x77] ; retf
0x000000000045c596 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424133 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400df4 : dec dword ptr [rbx + 0x2bb00115] ; add bh, dh ; ret 0
0x0000000000422e4d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004506cf : dec dword ptr [rbx + rcx*4 + 0x25] ; push rcx ; ret 0x26
0x0000000000479bdd : dec dword ptr [rbx + rcx*4 + 0x25] ; retf
0x0000000000471cc8 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047125b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c7f8 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c816 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c877 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000460583 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461c9f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c4f9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048ae6a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c882 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046b425 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046afa7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046d74e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000004021ad : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c84b : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c840 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c775 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x00000000004582fa : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f209 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000458451 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045872f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045dc36 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046cf83 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041bf6c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004922c6 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004895f7 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e25f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004604e7 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c840 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004047b1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d1e0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046af74 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041c306 : dec dword ptr [rcx - 0x7b] ; ret
0x00000000004602ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004607eb : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000450cab : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045330f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004464d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045facf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d93a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000460257 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004213dc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004188db : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004ab827 : dec dword ptr [rdx] ; adc esi, edi ; jmp rcx
0x0000000000494aef : dec dword ptr [rsi + 0x33] ; cli ; call rax
0x000000000049585b : dec eax ; cmp eax, 0x3e22fffb ; sti ; call rdx
0x000000000045b648 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000442481 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004910b6 : div al ; clc ; push rbx ; ret
0x0000000000473842 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e8a5 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000458871 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458889 ; ret
0x0000000000451342 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000465fd6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046ff96 : div ebp ; mov rbp, rax ; jmp 0x46ff65
0x0000000000448308 : div ecx ; mov eax, eax ; ret
0x00000000004482ef : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046ff95 : div r13 ; mov rbp, rax ; jmp 0x46ff66
0x0000000000465fd5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b9c7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e800 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000045a12d : enter -0x3fcf, -0x18 ; retf
0x0000000000446644 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000049585c : enter -0x4c3, -1 ; and bh, byte ptr [rsi] ; sti ; call rdx
0x000000000046a974 : enter -0x6a6, -1 ; jmp 0x46a942
0x000000000048393b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044233e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044247e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000476230 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042b7a7 : enter -0x73b, 0x77 ; ret
0x00000000004056d7 : enter -0x76b3, -0x19 ; jmp 0x4056ac
0x000000000047e90a : enter -0x76b8, -0x38 ; ret
0x000000000046481f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042c174 : enter -2, -1 ; ret
0x0000000000494585 : enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x00000000004945c5 : enter -7, 0x10 ; retf 0xfff9
0x000000000049e21c : enter 0, 0 ; retf
0x00000000004a2270 : enter 0, 0 ; retf 0
0x000000000049f3c8 : enter 0x10, 0 ; retf
0x000000000046f52c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f506
0x00000000004408c9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046be5c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484701 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000440c2e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000425d2d : enter 0x31c3, -0x40 ; ret
0x0000000000446c30 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004af6a4 : enter 0x3d, 0 ; cwde ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004b0aa4 : enter 0x51, 0 ; jg 0x4b0aab ; hlt ; jmp qword ptr [rbx]
0x00000000004a96fc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049ebc8 : enter 0xa, 0 ; retf
0x000000000049efc8 : enter 0xd, 0 ; retf
0x000000000042d416 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440291 : enter 0xf66, -0x15 ; ret
0x00000000004a2470 : enter 1, 0 ; retf 1
0x000000000049f780 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2670 : enter 2, 0 ; retf 2
0x00000000004a2870 : enter 3, 0 ; retf 3
0x00000000004a2a70 : enter 4, 0 ; retf 4
0x00000000004a2c70 : enter 5, 0 ; retf 5
0x00000000004a2e70 : enter 6, 0 ; retf 6
0x00000000004a3070 : enter 7, 0 ; retf 7
0x00000000004a3270 : enter 8, 0 ; retf 8
0x00000000004a3470 : enter 9, 0 ; retf 9
0x00000000004b3db4 : fadd dword ptr [rax + rax - 0xb386e00] ; jmp qword ptr [rcx]
0x000000000048d2e3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fbd8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f757 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000458225 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000465fc3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042cf61 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004900f4 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8d38 : fcmovb st(0), st(3) ; ret
0x0000000000440d4b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045ecb6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d2e9 : fcomi st(3) ; ret
0x0000000000410579 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410356 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a5b1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9ab9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7d20 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004af6f8 : fcomp st(0) ; clc ; call qword ptr [rax]
0x00000000004885e8 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004886cf : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004a3df0 : fdiv qword ptr [rsp + rdi*8 - 0x34ae301] ; call rsp
0x00000000004944f9 : fdiv st(1), st(0) ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494519 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x000000000048af39 : fdiv st(3) ; ret
0x00000000004944fd : fdivp st(1) ; jmp qword ptr [rax]
0x000000000049451d : fdivp st(1) ; jmp rax
0x00000000004218a4 : fdivr dword ptr [rdi + 0x29] ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004af6b8 : fdivr qword ptr [rip - 0x6a6c0000] ; clc ; jmp qword ptr [rsi]
0x00000000004af6f9 : fdivr st(0) ; call qword ptr [rax]
0x0000000000494511 : fdivr st(1) ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x00000000004a7075 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000446648 : fdivr st(7) ; ret
0x000000000040eff8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000471403 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x00000000004125da : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004a9906 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000488245 : fidivr dword ptr [rax + 1] ; ret
0x0000000000459815 : fild dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000046c83d : fild qword ptr [rcx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000424791 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464db2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424792 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419d7c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000004554b9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480ec7 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046594d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000486934 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000465912 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042a4f6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c2cd : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404994 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x0000000000450e4f : fimul word ptr [rax + 1] ; ret
0x000000000048458c : fimul word ptr [rbp + 0x11] ; retf
0x000000000048454e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4845a8
0x000000000048834e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4883a8
0x0000000000421b31 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41dd76
0x000000000041fda1 : fistp dword ptr [rdx - 0x7cb7ffd7] ; retf 0x4901
0x0000000000449aaf : fistp qword ptr [rax + 1] ; syscall
0x00000000004167be : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470f30 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000485a6e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a8c
0x0000000000458a87 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483541 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046679c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f696 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000047810e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c710 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048355b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455197 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d7b4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420fcb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405d8e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000457dea : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480ed2 : fisttp word ptr [rax - 0x77] ; ret 0xcde8
0x00000000004018e3 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004835df : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000449d6d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000043f38d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042d331 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d031 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483854 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7d61 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000473692 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x00000000004736f2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000414503 : fldcw word ptr [rdx + 0x2a] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042b3d9 : fldenv [rsi + 0xf] ; je 0x42b436 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6b7 : fldenv [rsi + 0xf] ; je 0x42b714 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d3b1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2d1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000454ea3 : fldl2t ; retf 0xfffd
0x00000000004687bc : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004845f4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ae7f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000446917 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412258 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e071 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489b44 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044c65c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000004771b0 : fmul dword ptr [rcx + 0x21] ; ret
0x00000000004691a0 : fmul dword ptr [rdi] ; ret
0x000000000047a6c3 : fmul qword ptr [rax - 0x75] ; je 0x47a6f3 ; sbb al, ch ; retf 0xf85d
0x0000000000486dd2 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048f17e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000424ae9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f8af : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457fe8 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000004946a8 : fmul qword ptr [rip + 0xd6cfffa] ; cli ; call qword ptr [rdx]
0x0000000000473690 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042464f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045664d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456614
0x00000000004a95aa : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dae9 : fpatan ; ret
0x000000000042d131 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7a47 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7dc0 : fstp st(0) ; ret 0xde5d
0x00000000004a6f8b : fstp st(3), st(0) ; retf 0xeb83
0x00000000004496d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449768 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d431 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004411b4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a9378 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x0000000000446a5b : fsub qword ptr [rsi + 0xf] ; jmp 0x446a27
0x000000000042d231 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004403ac : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004b46c8 : fsubr st(1) ; cld ; jmp qword ptr [rcx]
0x0000000000449d14 : fsubr st(3) ; ret 0xf66
0x00000000004a9a98 : fucom st(5) ; loop 0x4a9af1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a341 : fucomi st(3) ; ret 0x1f0f
0x000000000045d673 : fucomip st(0) ; mov edi, 0xe9fffa2d ; retf
0x000000000045f9f7 : fucomip st(0) ; ret
0x000000000048b5e1 : fucomip st(1) ; ret
0x00000000004a90de : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004b0929 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494471 : fyl2xp1 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000494491 : fyl2xp1 ; jmp qword ptr [rax]
0x000000000044add1 : hlt ; call r15
0x00000000004af721 : hlt ; clc ; call qword ptr [rax]
0x0000000000493f45 : hlt ; clc ; jmp rax
0x000000000045264c : hlt ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000046c528 : hlt ; cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004b154c : hlt ; jb 0x4b154c ; call qword ptr [rdx]
0x00000000004a7e48 : hlt ; jmp 0x4a7e1d
0x00000000004b0aaa : hlt ; jmp qword ptr [rbx]
0x00000000004b3dba : hlt ; jmp qword ptr [rcx]
0x0000000000434d3a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9ee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004490fe : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044e2f4 : hlt ; mov esi, 0xae740026 ; call 0x45ad98
0x0000000000446153 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000460a28 : hlt ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000494a99 : hlt ; stc ; jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494ad9 : hlt ; stc ; jmp qword ptr [rax]
0x00000000004b1a89 : hlt ; std ; call rdx
0x00000000004a7f83 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446157 : hlt ; sub eax, edx ; ret
0x000000000045dc3c : idiv bh ; call rax
0x000000000045ee84 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e996 : idiv bh ; jmp qword ptr [rax]
0x00000000004ad34e : idiv bh ; retf
0x0000000000450ca6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000494add : idiv cl ; jmp qword ptr [rax + 0x20fff9f7]
0x00000000004951b1 : idiv dl ; call rax
0x00000000004951bd : idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x00000000004951b5 : idiv dl ; jmp rax
0x0000000000494aa1 : idiv ecx ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ae1 : idiv ecx ; jmp qword ptr [rax]
0x000000000045df56 : idiv edi ; call qword ptr [rax]
0x000000000045ef0a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045de3e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a941 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469b9d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004951c1 : idiv edx ; call qword ptr [rax]
0x00000000004951e5 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x00000000004951dd : idiv edx ; inc eax ; idiv edx ; jmp rax
0x00000000004951e1 : idiv edx ; jmp rax
0x0000000000478bd7 : imul al ; stosd dword ptr [rdi], eax ; js 0x478bdc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000409bdf : imul eax ; retf
0x0000000000402ee0 : imul eax ; retf 0x1d2
0x00000000004b2239 : imul eax, dword ptr [rax], 0xfb935400 ; jmp qword ptr [rax]
0x0000000000444cb1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000428927 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468282 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000428327 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000429687 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042a867 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000428027 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ad4a7 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000490281 : imul edi, dword ptr [rdx - 0x1e8affde], 0x5b ; ret
0x0000000000496021 : imul edi, ebx, -1 ; adc al, 0x69 ; sti ; call rax
0x0000000000496051 : imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x0000000000494119 : imul edi, ecx, -1 ; loopne 0x494190 ; stc ; call rax
0x0000000000404944 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000427a27 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000427727 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000427427 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000041834e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044412c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004a93c1 : in al, 0x4c ; pop rax ; retf
0x00000000004b18c0 : in al, 0x5f ; add byte ptr [rax], al ; cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x0000000000440e3c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c433 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045e530 : in al, 0xf ; lahf ; ret
0x0000000000434d1a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447dce : in al, 0xf3 ; ret
0x0000000000494489 : in al, 0xf9 ; call rax
0x000000000046fc47 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000041fb41 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044fbc0 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x000000000040fbb2 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421b1b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000041fb85 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; xchg eax, ecx ; ret
0x000000000045e9d4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e811 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000047e50c : in al, dx ; cwde ; add byte ptr [rax], al ; add al, ch ; retf 0xfcb2
0x0000000000432f60 : in al, dx ; jno 0x432f91 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000414b71 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f9ea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043511a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000048d347 : in al, dx ; or al, ch ; ret 0xf808
0x0000000000472757 : in al, dx ; or al, ch ; ret 0xf8dc
0x000000000041ee6f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a8e4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b15c8 : in al, dx ; pop rsp ; add byte ptr [rax], al ; and al, 0x73 ; cli ; jmp rax
0x00000000004a95ad : in al, dx ; retf 0xae32
0x000000000048dec9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a944 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494a85 : in al, dx ; stc ; jmp qword ptr [rax]
0x00000000004a94de : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9471 ; ret 0x48f
0x00000000004a94dd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9472 ; ret 0x48f
0x0000000000449436 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004a7be3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004848b2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6e79 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c40a : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046379d : in eax, 0xdf ; loopne 0x46372e ; ret
0x00000000004a9a99 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a7c3a : in eax, 0xe5 ; retf 0x2a91
0x00000000004749b3 : in eax, 0xf ; je 0x4749d8 ; add rax, 2 ; ret
0x0000000000448289 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434d9a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000494449 : in eax, 0xf9 ; call qword ptr [rax]
0x000000000049456d : in eax, 0xf9 ; call rax
0x0000000000494a71 : in eax, 0xf9 ; jmp qword ptr [rax + 0x20fff9e6]
0x0000000000494ab1 : in eax, 0xf9 ; jmp qword ptr [rax]
0x00000000004a8f61 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004247db : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466d48 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469ed8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x0000000000413a72 : in eax, dx ; call 0x4004ab
0x000000000044a88a : in eax, dx ; jne 0x44a8a7 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3f5 : in eax, dx ; jne 0x44b41f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b428 : in eax, dx ; jne 0x44b478 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b454 : in eax, dx ; jne 0x44b4d8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049013f : in eax, dx ; jne 0x490121 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490392 : in eax, dx ; jne 0x49037f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f4c : in eax, dx ; jne 0x490f37 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446972 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000042f7fa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043519a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482d27 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000416562 : in eax, dx ; ret
0x00000000004857ff : in eax, dx ; ret 0xfff7
0x00000000004a79b8 : in eax, dx ; retf
0x0000000000494ac5 : in eax, dx ; stc ; jmp qword ptr [rax + 0x20fff9ee]
0x0000000000469b01 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446ac2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446dd8 : inc bl ; cmp dl, 1 ; jb 0x446dea ; mov byte ptr [rdi], cl ; ret
0x0000000000416b52 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044aa1c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000458875 : inc byte ptr [rbx] ; je 0x458885 ; ret
0x000000000047f348 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049480f : inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004945f7 : inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000494d07 : inc dword ptr [rax + 0x37] ; cli ; call rax
0x00000000004944fb : inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494457 : inc dword ptr [rax - 0x23] ; stc ; jmp qword ptr [rax]
0x0000000000494473 : inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000494513 : inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x00000000004945e3 : inc dword ptr [rax - 0x2d] ; stc ; call qword ptr [rax - 0x1f00062c]
0x0000000000495107 : inc dword ptr [rax - 0x2f00055c] ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp qword ptr [rax]
0x000000000049459f : inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x00000000004943d3 : inc dword ptr [rax - 0x2f00065b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x000000000049458f : inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x000000000049439f : inc dword ptr [rax - 0x49] ; stc ; call qword ptr [rax]
0x0000000000494277 : inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494417 : inc dword ptr [rax - 0x59] ; stc ; call qword ptr [rax - 0x1f000658]
0x0000000000494a6f : inc dword ptr [rax - 0x5f00061b] ; out 0xf9, al ; jmp qword ptr [rax]
0x00000000004943c3 : inc dword ptr [rax - 0x60] ; stc ; call qword ptr [rax - 0x1f00065f]
0x00000000004950f7 : inc dword ptr [rax - 0x61] ; cli ; call qword ptr [rax - 0x1f000560]
0x00000000004950cf : inc dword ptr [rax - 0x6b] ; cli ; jmp rax
0x0000000000494253 : inc dword ptr [rax - 0x6d] ; stc ; call rax
0x00000000004950af : inc dword ptr [rax - 0x78] ; cli ; jmp rax
0x0000000000404c49 : inc dword ptr [rax - 0x80] ; jmp qword ptr [rax + rcx*2 - 0x73]
0x000000000046a62d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045eec5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x00000000004947ff : inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x0000000000494a63 : inc dword ptr [rax] ; add al, 0xfa ; push qword ptr [rax + 3] ; cli ; jmp rax
0x00000000004604f9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045ee86 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044822f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d947 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000049485f : inc dword ptr [rax] ; add eax, 0x470fffa ; cli ; jmp rax
0x000000000049402f : inc dword ptr [rax] ; and ecx, edi ; jmp qword ptr [rax]
0x00000000004951e7 : inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x000000000049502f : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494cf7 : inc dword ptr [rax] ; cmp edx, edi ; call qword ptr [rax + 0x20fffa38]
0x000000000049451b : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004951bf : inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x00000000004940cf : inc dword ptr [rax] ; push rdi ; stc ; push qword ptr [rax + 0x58] ; stc ; jmp rax
0x0000000000495127 : inc dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax + 0x20fffa9b]
0x000000000049520b : inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x000000000049404f : inc dword ptr [rax] ; sub bh, cl ; jmp qword ptr [rax]
0x0000000000494d67 : inc dword ptr [rax] ; sub bh, dl ; push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x0000000000494b1f : inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000455194 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004056d3 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x4056b0
0x000000000047bdbf : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000048273c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402740 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040d4bb : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e439 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x00000000004598f0 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c633 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045ee44 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x00000000004482ed : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044825b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f349 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460212 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046cf89 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000488174 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000481082 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000041283b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000046f9d1 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x46f9a7
0x000000000049419f : inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x0000000000494173 : inc dword ptr [rcx - 0x72] ; stc ; call qword ptr [rcx]
0x000000000045264e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455936 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004598f3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046dd46 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044a707 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000469b9f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004652af : inc dword ptr [rcx] ; retf
0x0000000000494deb : inc dword ptr [rdx + 0x29] ; cli ; call rdx
0x0000000000494bdb : inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x00000000004946e3 : inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x00000000004946d3 : inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x000000000043fb6d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000049463f : inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000494b37 : inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x000000000048e212 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004941d7 : inc dword ptr [rsi] ; xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x0000000000494ca3 : inc dword ptr [rsp + rsi - 6] ; call rsp
0x0000000000495203 : inc eax ; clc ; cli ; jmp rax
0x00000000004945c3 : inc eax ; enter -7, 0x10 ; retf 0xfff9
0x00000000004951af : inc eax ; idiv dl ; call rax
0x00000000004951df : inc eax ; idiv edx ; jmp rax
0x0000000000495157 : inc eax ; int1 ; cli ; call rax
0x00000000004942cb : inc eax ; mov esi, 0xb150fff9 ; stc ; call qword ptr [rax]
0x00000000004943f7 : inc eax ; pushfq ; stc ; call qword ptr [rax]
0x0000000000495223 : inc eax ; stc ; cli ; jmp rax
0x00000000004943e3 : inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000049424f : inc eax ; xchg eax, edx ; stc ; inc dword ptr [rax - 0x6d] ; stc ; call rax
0x000000000042c29c : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000047202c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000446649 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000494b57 : inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x00000000004acb48 : insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; add byte ptr [rbx + rbx*2 - 0xa], al ; jmp rdi
0x00000000004248cb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042b064 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000403f96 : insb byte ptr [rdi], dx ; and al, 0x68 ; je 0x403fe1 ; xor edi, edi ; call 0x4201b9
0x000000000048ea6b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48ea87
0x00000000004854b7 : insb byte ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a9a9e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b1548 : insb byte ptr [rdi], dx ; pop rsp ; add byte ptr [rax], al ; hlt ; jb 0x4b1550 ; call qword ptr [rdx]
0x000000000045d5d5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x000000000045ff7f : insb byte ptr [rdi], dx ; retf 0x25
0x00000000004a8e66 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000049411d : insb byte ptr [rdi], dx ; stc ; call rax
0x00000000004245e0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453306 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409ecf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004244db : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004901c2 : insd dword ptr [rdi], dx ; js 0x49023f ; ret 0x8b48
0x00000000004033f2 : insd dword ptr [rdi], dx ; or byte ptr [rcx - 0x77ba7639], 0xe8 ; ret 0x578
0x00000000004a9a9f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7e4d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000044f3e7 : insd dword ptr [rdi], dx ; retf 0x26
0x00000000004a8d5f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000450e65 : int 0x19
0x000000000046827a : int 0x80
0x00000000004ab7d0 : int 0xe
0x00000000004556d6 : int 0xf
0x00000000004743d6 : int1 ; call rbx
0x0000000000495159 : int1 ; cli ; call rax
0x0000000000495165 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495155 : int1 ; cli ; inc eax ; int1 ; cli ; call rax
0x000000000049515d : int1 ; cli ; jmp rax
0x0000000000456512 : int1 ; je 0x4566c1 ; mov rdx, rax ; jmp 0x4564d9
0x0000000000456917 : int1 ; je 0x4566c1 ; mov rdx, rax ; jmp 0x4568de
0x000000000045698e : int1 ; je 0x4566c1 ; mov rdx, rax ; jmp 0x456955
0x0000000000446d5b : int1 ; jl 0x446dac ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d7c : int1 ; jl 0x446dcd ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d8f : int1 ; jl 0x446de0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e64 : int1 ; jl 0x446eb5 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446ebc : int1 ; jl 0x446f0d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f59 : int1 ; jl 0x446faa ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004481e5 : int1 ; jmp rcx
0x0000000000471d8b : int1 ; jne 0x471d86 ; lea eax, [rdx + rdi] ; ret
0x000000000047e847 : int1 ; jne 0x47e824 ; ret
0x00000000004a8d24 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000448309 : int1 ; mov eax, eax ; ret
0x0000000000434b8b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446123 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004482f0 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a9476 : int1 ; ret 0x5803
0x0000000000494a91 : int1 ; stc ; jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494ad1 : int1 ; stc ; jmp qword ptr [rax]
0x0000000000446127 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000044415d : iretd ; syscall
0x0000000000405d9d : ja 0x405d7e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004138d8 : ja 0x41390a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000438a93 : ja 0x438a97 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444277 : ja 0x44427d ; ret
0x0000000000444293 : ja 0x44429d ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d4 : ja 0x4442e3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444359 : ja 0x44436d ; ret
0x00000000004443af : ja 0x4443c7 ; ret
0x0000000000444431 : ja 0x44444d ; ret
0x0000000000444897 : ja 0x4448a1 ; lea rax, [rdi + 2] ; ret
0x00000000004448b3 : ja 0x4448c1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444904 : ja 0x444917 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004449e9 : ja 0x444a01 ; lea rax, [rdi + 0x10] ; ret
0x0000000000444a5f : ja 0x444a7b ; lea rax, [rdi + 0x14] ; ret
0x0000000000444ae1 : ja 0x444b01 ; lea rax, [rdi + 0x18] ; ret
0x0000000000447064 : ja 0x447095 ; jb 0x447076 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473c4 : ja 0x44740a ; jb 0x4473d6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447814 : ja 0x447872 ; jb 0x447826 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447de3 : ja 0x447e00 ; jb 0x447def ; mov byte ptr [rdi], cl ; ret
0x0000000000447f51 : ja 0x447f88 ; jb 0x447f60 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448119 : ja 0x44815e ; jb 0x448128 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004490fc : ja 0x449128 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044915f : ja 0x449165 ; add byte ptr [rax], al ; syscall
0x000000000044975b : ja 0x449763 ; ret
0x00000000004497a9 : ja 0x4497b3 ; ret
0x00000000004499b4 : ja 0x449a13 ; ret
0x0000000000449a4a : ja 0x449a53 ; ret
0x0000000000449a87 : ja 0x449ae3 ; ret
0x0000000000449b1d : ja 0x449b2b ; ret
0x0000000000449b4d : ja 0x449b5b ; ret
0x0000000000449d57 : ja 0x449d9b ; ret
0x0000000000449dcd : ja 0x449ddb ; ret
0x000000000044a526 : ja 0x44a533 ; ret
0x000000000044c910 : ja 0x44c93d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d635 : ja 0x44d689 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045b0b3 : ja 0x45b0c3 ; ret
0x0000000000465fc2 : ja 0x465fa5 ; mov eax, r9d ; ret
0x0000000000474e99 : ja 0x474e67 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047570b : ja 0x475713 ; ret
0x000000000047575f : ja 0x47576b ; ret
0x0000000000475a80 : ja 0x475aab ; ret
0x0000000000478cb0 : ja 0x478caf ; dec dword ptr [rax - 0x77] ; ret
0x000000000047d924 : ja 0x47d930 ; add byte ptr [rax + 0x15], bh ; syscall
0x0000000000482fde : ja 0x483030 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048ddcd : ja 0x48ddd6 ; sbb eax, eax ; ret
0x00000000004965f8 : ja 0x49666f ; sti ; jmp qword ptr [rcx]
0x00000000004a94e4 : ja 0x4a946b ; ret 0x48f
0x000000000041889d : jae 0x4188c5 ; movzx eax, byte ptr [rax] ; ret
0x00000000004190b3 : jae 0x4190b8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004496cd : jae 0x4496d2 ; ret
0x000000000044a75d : jae 0x44a762 ; ret
0x000000000044a78d : jae 0x44a792 ; ret
0x000000000044a7bd : jae 0x44a7c2 ; ret
0x000000000044be60 : jae 0x44be65 ; ret
0x000000000044be8d : jae 0x44be92 ; ret
0x000000000044c194 : jae 0x44c183 ; ret
0x0000000000454faf : jae 0x454f3c ; retf 0xb941
0x000000000045ae5e : jae 0x45aea5 ; xor eax, eax ; pop rbx ; ret
0x000000000047569d : jae 0x4756a2 ; ret
0x000000000047facb : jae 0x47fa75 ; xor eax, eax ; ret
0x0000000000488244 : jae 0x488227 ; mov eax, 1 ; ret
0x00000000004886fd : jae 0x488702 ; ret
0x000000000048ed56 : jae 0x48ed69 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004a7aa2 : jae 0x4a7a84 ; jo 0x4a7b20 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a893e : jae 0x4a8919 ; push rsi ; pop rdx ; je 0x4a890e ; ret 0xacfc
0x00000000004ad202 : jae 0x4ad210 ; ret
0x00000000004b15cd : jae 0x4b15cb ; jmp rax
0x000000000041dd27 : jb 0x41dd11 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042457a : jb 0x4245fc ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042dfca : jb 0x42dfda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e11a : jb 0x42e12a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e26a : jb 0x42e27a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3ba : jb 0x42e3ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e50a : jb 0x42e51a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e65a : jb 0x42e66a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7aa : jb 0x42e7ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8fa : jb 0x42e90a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea4a : jb 0x42ea5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb9a : jb 0x42ebaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ecea : jb 0x42ecfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee3a : jb 0x42ee4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef8a : jb 0x42ef9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0da : jb 0x42f0ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f22a : jb 0x42f23a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043099a : jb 0x4309aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aea : jb 0x430afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c3a : jb 0x430c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d8a : jb 0x430d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eda : jb 0x430eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043102a : jb 0x43103a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043117a : jb 0x43118a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312ca : jb 0x4312da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043141a : jb 0x43142a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043156a : jb 0x43157a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316ba : jb 0x4316ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043180a : jb 0x43181a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043195a : jb 0x43196a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aaa : jb 0x431aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bfa : jb 0x431c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043866e : jb 0x43867a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446dc5 : jb 0x446dd4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446dd0 : jb 0x446de3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446ddd : jb 0x446de5 ; mov byte ptr [rdi], cl ; ret
0x0000000000446fe4 : jb 0x446fed ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447066 : jb 0x447074 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447065 : jb 0x447075 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473c6 : jb 0x4473d4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447816 : jb 0x447824 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447de5 : jb 0x447ded ; mov byte ptr [rdi], cl ; ret
0x0000000000447f53 : jb 0x447f5e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044811b : jb 0x448126 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044921e : jb 0x449220 ; dec dword ptr [rax - 0x77] ; ret
0x000000000045664e : jb 0x4566bc ; mov rdx, rax ; jmp 0x456613
0x00000000004965f9 : jb 0x4965f8 ; jmp qword ptr [rcx]
0x00000000004965f5 : jb 0x4965f8 ; push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x00000000004a90f8 : jb 0x4a9152 ; call 0x4c14bab7
0x00000000004b154d : jb 0x4b154b ; call qword ptr [rdx]
0x00000000004017c4 : jbe 0x4017d8 ; syscall
0x000000000040f341 : jbe 0x40f301 ; mov r11d, 1 ; jmp 0x40f316
0x00000000004108ff : jbe 0x410952 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b4d6 : jbe 0x42b515 ; add rax, rdi ; ret
0x000000000042b4e6 : jbe 0x42b517 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b4f6 : jbe 0x42b517 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b506 : jbe 0x42b517 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042b917 : jbe 0x42b988 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456082 : jbe 0x45607c ; ret
0x000000000045d159 : jbe 0x45d119 ; mov r11d, 1 ; jmp 0x45d12e
0x000000000047fd9b : jbe 0x47fe05 ; call qword ptr [rip + 0x23cabd]
0x0000000000481bef : jbe 0x481bfb ; ret
0x0000000000495748 : jbe 0x49578c ; sti ; jmp rsi
0x00000000004a4f41 : jbe 0x4a4f42 ; jmp qword ptr [rax]
0x00000000004a4f51 : jbe 0x4a4f52 ; call rax
0x00000000004a937c : jbe 0x4a934f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a937b : jbe 0x4a9350 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004b2f3d : jbe 0x4b2f45 ; add byte ptr [rax], ah ; or edi, esp ; jmp qword ptr [rax]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004039d0 : je 0x403a09 ; mov rdi, rax ; call 0x4004c7
0x0000000000403f99 : je 0x403fde ; xor edi, edi ; call 0x4201b6
0x000000000040596e : je 0x40597e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000041244d : je 0x412478 ; cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004129a8 : je 0x4129af ; ret
0x000000000041457c : je 0x4145b3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000416711 : je 0x416740 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129a9
0x0000000000416b95 : je 0x416ba3 ; ret
0x000000000041901c : je 0x419021 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422992 : je 0x4229be ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422e83 : je 0x422e96 ; lea rax, [rdx - 0x10] ; ret
0x0000000000423090 : je 0x42301d ; retf 0x4c89
0x000000000042308f : je 0x42301e ; retf 0x4c89
0x0000000000424542 : je 0x42450d ; ret
0x000000000042a2c3 : je 0x42a28d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b1aa : je 0x42b1b2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b3dc : je 0x42b433 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6ba : je 0x42b711 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c085 : je 0x42c097 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d6a7 : je 0x42d6b1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d0e3 : je 0x43d0ad ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ec73 : je 0x43ec3d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000440451 : je 0x440469 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000440a74 : je 0x440a7e ; bsf eax, edx ; ret
0x0000000000440a74 : je 0x440a7f ; bsf eax, edx ; ret
0x0000000000440b1d : je 0x440b35 ; bsf rax, rdx ; ret
0x0000000000440b1d : je 0x440b36 ; bsf rax, rdx ; ret
0x0000000000440abc : je 0x440b49 ; bsf rax, rdx ; ret
0x00000000004470f3 : je 0x447114 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044879e : je 0x4487ac ; xor eax, eax ; ret
0x0000000000448799 : je 0x4487b9 ; cmp eax, 2 ; je 0x4487b1 ; xor eax, eax ; ret
0x00000000004487ed : je 0x4487d3 ; ret
0x0000000000449cc8 : je 0x449cf7 ; mov eax, 0x48 ; syscall
0x000000000044a087 : je 0x44a0b2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a5ea : je 0x44a5f1 ; ret
0x000000000044a5ea : je 0x44a5f5 ; ret
0x000000000044bf69 : je 0x44bf6e ; ret
0x000000000044bfcd : je 0x44bfd2 ; ret
0x000000000044c81c : je 0x44c82f ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044d548 : je 0x44d553 ; ret
0x000000000044d564 : je 0x44d579 ; mov dword ptr [rip + 0x26b54c], edx ; pop rbx ; ret
0x000000000044e2f8 : je 0x44e2ac ; call 0x45ad94
0x00000000004515e5 : je 0x451613 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000451d9f : je 0x451dce ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045208f : je 0x4520be ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004523d7 : je 0x452406 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452616 : je 0x452645 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452c7e : je 0x452cac ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453816 : je 0x453845 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004548a2 : je 0x4548d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045539b : je 0x4553ca ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455743 : je 0x455772 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455b87 : je 0x455bb6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455fc2 : je 0x455ff0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456584 : je 0x4565b3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456513 : je 0x4566c0 ; mov rdx, rax ; jmp 0x4564d8
0x0000000000456918 : je 0x4566c0 ; mov rdx, rax ; jmp 0x4568dd
0x000000000045698f : je 0x4566c0 ; mov rdx, rax ; jmp 0x456954
0x00000000004568b3 : je 0x4568e2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456dc7 : je 0x456df6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457202 : je 0x457230 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458877 : je 0x458883 ; ret
0x0000000000458872 : je 0x458888 ; cmp esi, 3 ; je 0x458888 ; ret
0x00000000004591ca : je 0x4591d0 ; call rsi
0x00000000004592c6 : je 0x4592cc ; call rax
0x000000000045a6cb : je 0x45a6d1 ; call rax
0x000000000045ac8e : je 0x45ac9b ; ret
0x0000000000463051 : je 0x462e84 ; jmp 0x463022
0x0000000000468e0c : je 0x468e37 ; and byte ptr [rax + 1], cl ; ret
0x000000000046caa8 : je 0x46ca59 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000470c06 : je 0x470c56 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470c05 : je 0x470c57 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000471a5c : je 0x471a63 ; ret
0x0000000000471a79 : je 0x471a86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471ab3 : je 0x471b15 ; pop rbp ; pop r12 ; ret
0x0000000000471b3f : je 0x471ba1 ; pop rbp ; pop r12 ; ret
0x0000000000471cca : je 0x471cf4 ; or al, 0xeb ; ret 0x5590
0x000000000047394c : je 0x473975 ; bsf rax, rdx ; ret
0x000000000047394c : je 0x473976 ; bsf rax, rdx ; ret
0x00000000004738dc : je 0x473989 ; bsf rax, rdx ; ret
0x0000000000473deb : je 0x473df3 ; ret
0x00000000004743ce : je 0x4743fd ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000004744f8 : je 0x474505 ; test edx, edx ; jne 0x4744f7 ; ret
0x0000000000474999 : je 0x4749b9 ; mov cl, dl ; and cl, 0xf ; je 0x4749c9 ; ret
0x00000000004749a0 : je 0x4749c2 ; ret
0x00000000004749b5 : je 0x4749d6 ; add rax, 2 ; ret
0x00000000004758ed : je 0x47591f ; mov eax, 0x101 ; syscall
0x0000000000475e62 : je 0x475f61 ; xor eax, eax ; leave ; ret
0x000000000047a6c6 : je 0x47a6f0 ; sbb al, ch ; retf 0xf85d
0x000000000047e8a6 : je 0x47e8b3 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000048107d : je 0x480fcf ; sub eax, r8d ; ret
0x00000000004851b2 : je 0x4851c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004856b8 : je 0x4856e3 ; or byte ptr [rax + 1], cl ; ret
0x00000000004872ad : je 0x4872f2 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4872c9
0x0000000000487e76 : je 0x487e83 ; ret
0x000000000048acbd : je 0x48ace8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d258 : je 0x48d242 ; add rsp, 0x18 ; ret
0x000000000048d241 : je 0x48d266 ; add rsp, 0x18 ; ret
0x000000000048d2e8 : je 0x48d2c8 ; ret
0x000000000048d329 : je 0x48d336 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f61a : je 0x48f623 ; ret
0x000000000048f653 : je 0x48f664 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f669 ; ret
0x000000000048f72a : je 0x48f733 ; ret
0x0000000000490ec3 : je 0x490ece ; call rax
0x00000000004a4ec5 : je 0x4a4ec6 ; jmp rax
0x00000000004a6eac : je 0x4a6eda ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a7c08 : je 0x4a7bd3 ; xor al, 0xd8 ; ret
0x00000000004a7e47 : je 0x4a7e44 ; jmp 0x4a7e1e
0x00000000004a8942 : je 0x4a890a ; ret 0xacfc
0x00000000004af9ec : je 0x4afa6a ; stc ; call rsp
0x00000000004b2d45 : je 0x4b2d4d ; add al, bh ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004b2d5d : je 0x4b2d65 ; add byte ptr [rax], dl ; cld ; sti ; jmp qword ptr [rbx]
0x0000000000416b92 : jg 0x416bd2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004218a5 : jg 0x4218d5 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000042fba9 : jg 0x42fbfc ; ret
0x000000000042fbf0 : jg 0x42fc40 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000042fbf5 : jg 0x42fc48 ; retf
0x000000000042fc2f : jg 0x42fc7a ; ret
0x000000000042fc6f : jg 0x42fcba ; retf
0x000000000042fda9 : jg 0x42fdfc ; ret 0x894c
0x000000000042fdf0 : jg 0x42fe40 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000042fdf5 : jg 0x42fe48 ; retf 0x894c
0x000000000042fe2f : jg 0x42fe7a ; ret 0x894c
0x000000000042fe6b : jg 0x42feb6 ; retf 0x894c
0x0000000000432579 : jg 0x4325cc ; ret
0x00000000004325c0 : jg 0x432610 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004325c5 : jg 0x432618 ; retf
0x00000000004325ff : jg 0x43264a ; ret
0x000000000043263f : jg 0x43268a ; retf
0x0000000000432779 : jg 0x4327cc ; ret 0x894c
0x00000000004327c0 : jg 0x432810 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004327c5 : jg 0x432818 ; retf 0x894c
0x00000000004327ff : jg 0x43284a ; ret 0x894c
0x000000000043283b : jg 0x432886 ; retf 0x894c
0x0000000000434b68 : jg 0x434bb9 ; loope 0x434b67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bdf : jg 0x434c2a ; ret 0xff2
0x0000000000434bf8 : jg 0x434c49 ; loop 0x434bf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c6f : jg 0x434cba ; ret
0x0000000000434c88 : jg 0x434cd9 ; jrcxz 0x434c87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d18 : jg 0x434d69 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d98 : jg 0x434de9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e18 : jg 0x434e69 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e98 : jg 0x434ee9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434f18 : jg 0x434f69 ; call 0x4fc25f1a
0x0000000000434f98 : jg 0x434fe9 ; jmp 0x4fc25f9a
0x0000000000434ff5 : jg 0x435045 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434fff : jg 0x43504a ; retf 0xff2
0x0000000000435075 : jg 0x4350c5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043507f : jg 0x4350ca ; retf
0x0000000000435118 : jg 0x435169 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435198 : jg 0x4351e9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435228 : jg 0x435279 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004352a8 : jg 0x4352f9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043531c : jg 0x435327 ; ret
0x0000000000435376 : jg 0x435389 ; ret
0x0000000000435371 : jg 0x4353c1 ; psllq mm1, qword ptr [rdi] ; jg 0x43538e ; ret
0x00000000004353e6 : jg 0x4353f9 ; ret
0x0000000000435456 : jg 0x435469 ; ret
0x0000000000435451 : jg 0x4354a1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004354c6 : jg 0x4354d9 ; ret
0x00000000004354c1 : jg 0x435511 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435536 : jg 0x435549 ; ret
0x0000000000435531 : jg 0x435581 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355a6 : jg 0x4355b9 ; ret
0x00000000004355a1 : jg 0x4355f1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435616 : jg 0x435629 ; ret
0x0000000000435611 : jg 0x435661 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435686 : jg 0x435699 ; ret
0x0000000000435681 : jg 0x4356d1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356f6 : jg 0x435709 ; ret
0x0000000000435766 : jg 0x435779 ; ret
0x00000000004357d6 : jg 0x4357e9 ; ret
0x00000000004357d1 : jg 0x435821 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435846 : jg 0x435859 ; ret
0x0000000000435841 : jg 0x435891 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358b6 : jg 0x4358c9 ; ret
0x00000000004358b1 : jg 0x435901 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435926 : jg 0x435939 ; ret
0x0000000000435921 : jg 0x435971 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435996 : jg 0x4359a9 ; ret
0x0000000000435991 : jg 0x4359e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437688 : jg 0x4376d9 ; loope 0x437687 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376ff : jg 0x43774a ; ret 0xff2
0x0000000000437718 : jg 0x437769 ; loop 0x437717 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043778f : jg 0x4377da ; ret
0x00000000004377a8 : jg 0x4377f9 ; jrcxz 0x4377a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437838 : jg 0x437889 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378b8 : jg 0x437909 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437938 : jg 0x437989 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004379b8 : jg 0x437a09 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437a38 : jg 0x437a89 ; call 0x4fc28a3a
0x0000000000437ab8 : jg 0x437b09 ; jmp 0x4fc28aba
0x0000000000437b15 : jg 0x437b65 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000437b1f : jg 0x437b6a ; retf 0xff2
0x0000000000437b95 : jg 0x437be5 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000437b9f : jg 0x437bea ; retf
0x0000000000437c38 : jg 0x437c89 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cb8 : jg 0x437d09 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437d48 : jg 0x437d99 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437dc8 : jg 0x437e19 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437e3c : jg 0x437e47 ; ret
0x0000000000437e96 : jg 0x437ea9 ; ret
0x0000000000437e91 : jg 0x437ee1 ; psllq mm1, qword ptr [rdi] ; jg 0x437eae ; ret
0x0000000000437f06 : jg 0x437f19 ; ret
0x0000000000437f76 : jg 0x437f89 ; ret
0x0000000000437f71 : jg 0x437fc1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437fe6 : jg 0x437ff9 ; ret
0x0000000000437fe1 : jg 0x438031 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438056 : jg 0x438069 ; ret
0x0000000000438051 : jg 0x4380a1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380c6 : jg 0x4380d9 ; ret
0x00000000004380c1 : jg 0x438111 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438136 : jg 0x438149 ; ret
0x0000000000438131 : jg 0x438181 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004381a6 : jg 0x4381b9 ; ret
0x00000000004381a1 : jg 0x4381f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438216 : jg 0x438229 ; ret
0x0000000000438286 : jg 0x438299 ; ret
0x00000000004382f6 : jg 0x438309 ; ret
0x00000000004382f1 : jg 0x438341 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438366 : jg 0x438379 ; ret
0x0000000000438361 : jg 0x4383b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004383d6 : jg 0x4383e9 ; ret
0x00000000004383d1 : jg 0x438421 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438446 : jg 0x438459 ; ret
0x0000000000438441 : jg 0x438491 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004384b6 : jg 0x4384c9 ; ret
0x00000000004384b1 : jg 0x438501 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438614 : jg 0x438625 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438628 : jg 0x438639 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000438a9a : jg 0x438a96 ; ret
0x0000000000444346 : jg 0x444351 ; ret
0x0000000000444356 : jg 0x444364 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044436a : jg 0x444379 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444389 : jg 0x444397 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444399 : jg 0x4443a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443a9 : jg 0x4443ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004443ca : jg 0x4443d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443ea : jg 0x4443f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044440a : jg 0x444419 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044442a : jg 0x44443c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044446d : jg 0x44447f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044448d : jg 0x44449f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004444ab : jg 0x4444bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444cb : jg 0x4444db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444eb : jg 0x4444fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044450b : jg 0x44451b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004449d6 : jg 0x4449e5 ; lea rax, [rdi + 0xf] ; ret
0x00000000004449e6 : jg 0x4449f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444a19 : jg 0x444a2b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000444a39 : jg 0x444a4b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000444b5f : jg 0x444bbf ; or eax, 0x1c478d48 ; ret
0x0000000000446da7 : jg 0x446db7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446d9d : jg 0x446dbd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447234 : jg 0x44726c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447302 : jg 0x44733a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004473da : jg 0x4473eb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044756b : jg 0x447595 ; vzeroupper ; ret
0x0000000000447612 : jg 0x44761c ; vzeroupper ; ret
0x000000000044769e : jg 0x4476c8 ; vzeroupper ; ret
0x000000000044772e : jg 0x447738 ; vzeroupper ; ret
0x0000000000447842 : jg 0x447853 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447a26 : jg 0x447a50 ; vzeroupper ; ret
0x0000000000447a25 : jg 0x447a51 ; vzeroupper ; ret
0x0000000000447aec : jg 0x447af6 ; vzeroupper ; ret
0x0000000000447aeb : jg 0x447af7 ; vzeroupper ; ret
0x0000000000447bbf : jg 0x447be9 ; vzeroupper ; ret
0x0000000000447bbe : jg 0x447bea ; vzeroupper ; ret
0x0000000000447c92 : jg 0x447c9c ; vzeroupper ; ret
0x0000000000447c91 : jg 0x447c9d ; vzeroupper ; ret
0x0000000000447cfc : jg 0x447d07 ; ret
0x0000000000447d4c : jg 0x447d57 ; ret
0x0000000000447dc3 : jg 0x447e0f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000447e54 : jg 0x447e62 ; vzeroupper ; ret
0x0000000000447ea4 : jg 0x447eb2 ; vzeroupper ; ret
0x0000000000447f63 : jg 0x447f71 ; vzeroupper ; ret
0x0000000000447fe1 : jg 0x447fef ; vzeroupper ; ret
0x0000000000447fe0 : jg 0x447ff0 ; vzeroupper ; ret
0x0000000000448041 : jg 0x44804f ; vzeroupper ; ret
0x0000000000448040 : jg 0x448050 ; vzeroupper ; ret
0x000000000044812b : jg 0x448139 ; vzeroupper ; ret
0x0000000000448139 : jg 0x448147 ; vzeroupper ; ret
0x0000000000448190 : jg 0x4481cd ; ret 0x2b77
0x00000000004482ab : jg 0x448278 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448307 : jg 0x448305 ; int1 ; mov eax, eax ; ret
0x000000000044e4f6 : jg 0x44e47d ; retf
0x0000000000454198 : jg 0x454125 ; ret 0xdb76
0x0000000000454198 : jg 0x454129 ; ret 0xdb76
0x000000000045f192 : jg 0x45f1ab ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469782 : jg 0x46979b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046abfa : jg 0x46ac13 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046acf7 : jg 0x46ad10 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f52d : jg 0x46f546 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f505
0x000000000047f537 : jg 0x47f549 ; test rdi, rdi ; jne 0x47f518 ; ret
0x000000000048ab08 : jg 0x48ab12 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004b0aa8 : jg 0x4b0aa7 ; hlt ; jmp qword ptr [rbx]
0x000000000040df0a : jge 0x40df13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a8b5 : jge 0x44a8ba ; call r12
0x000000000044a8dd : jge 0x44a8e2 ; call r12
0x000000000044adcd : jge 0x44ad7d ; mov r12d, r14d ; call r15
0x000000000044b42d : jge 0x44b432 ; call r12
0x000000000044b459 : jge 0x44b45e ; call r12
0x000000000044b48d : jge 0x44b492 ; call r12
0x000000000044b4bd : jge 0x44b4c2 ; call r12
0x000000000044b4e5 : jge 0x44b4ea ; call r12
0x000000000044b515 : jge 0x44b51a ; call r12
0x000000000048d6a2 : jge 0x48d69f ; leave ; ret
0x000000000048d820 : jge 0x48d823 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d96c : jge 0x48d969 ; leave ; ret
0x000000000048d9b8 : jge 0x48d9bb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048db47 : jge 0x48db4a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dca7 : jge 0x48dca4 ; leave ; ret
0x000000000048dcf8 : jge 0x48dcfb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a6f0a : jge 0x4a6eeb ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a8854 : jge 0x4a88c5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040113f : jl 0x40116d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a46 : jl 0x404a71 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d438 : jl 0x40d463 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417062 : jl 0x41707e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041eaab : jl 0x41eaa5 ; ret 0x7508
0x0000000000438594 : jl 0x4385e3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004385d0 : jl 0x43861f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004387ce : jl 0x43881d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438935 : jl 0x438984 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438a97 : jl 0x438ae6 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000446d5c : jl 0x446dab ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d7d : jl 0x446dcc ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d90 : jl 0x446ddf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e65 : jl 0x446eb4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446ebd : jl 0x446f0c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f5a : jl 0x446fa9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447910 : jl 0x44792f ; cld ; vzeroupper ; ret
0x000000000044a992 : jl 0x44a9c0 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450ed1 : jl 0x450eff ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004512f6 : jl 0x451324 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000453238 : jl 0x453266 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045381b : jl 0x453845 ; call r15
0x000000000045426a : jl 0x454298 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000455b8c : jl 0x455bb6 ; call r15
0x0000000000455fc7 : jl 0x455ff0 ; call rbx
0x000000000045607d : jl 0x4560aa ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004567ad : jl 0x4567d7 ; or al, 0xe9 ; ret
0x0000000000456dcc : jl 0x456df6 ; call r15
0x0000000000457207 : jl 0x457230 ; call rbx
0x00000000004572bd : jl 0x4572ea ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045b2a7 : jl 0x45b2d2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b71e : jl 0x45b749 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045ba66 : jl 0x45ba91 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000046744b : jl 0x467478 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468b35 : jl 0x468b60 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047585f : jl 0x47588d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047b735 : jl 0x47b760 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482745 : jl 0x482773 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004a8a52 : jl 0x4a8ab1 ; leave ; retf
0x00000000004b1da4 : jl 0x4b1d88 ; cli ; call qword ptr [rsi]
0x0000000000440abe : jle 0x440ac7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000440abe : jle 0x440ac8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446c31 : jle 0x446c6d ; movsxd rax, ecx ; ret
0x00000000004588c2 : jle 0x4588d5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000495744 : jle 0x49578b ; sti ; push qword ptr [rsi + 0x3f] ; sti ; jmp rsi
0x00000000004a4fd9 : jle 0x4a4fda ; call rax
0x00000000004a6f02 : jle 0x4a6e9b ; xlatb ; retf 0xa1eb
0x00000000004a8ac5 : jle 0x4a8b00 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004249bd : jmp 0x100c7309
0x0000000000424a66 : jmp 0x100c73b2
0x0000000000424ba6 : jmp 0x100c74f2
0x0000000000424ce6 : jmp 0x100c7632
0x0000000000424e26 : jmp 0x100c7772
0x0000000000424f66 : jmp 0x100c78b2
0x00000000004250a6 : jmp 0x100c79f2
0x00000000004251e6 : jmp 0x100c7b32
0x0000000000425326 : jmp 0x100c7c72
0x0000000000425466 : jmp 0x100c7db2
0x00000000004255a6 : jmp 0x100c7ef2
0x00000000004256e6 : jmp 0x100c8032
0x0000000000425826 : jmp 0x100c8172
0x0000000000425966 : jmp 0x100c82b2
0x0000000000425aa6 : jmp 0x100c83f2
0x0000000000425be6 : jmp 0x100c8532
0x00000000004260ad : jmp 0x100c89f9
0x0000000000426156 : jmp 0x100c8aa2
0x0000000000426276 : jmp 0x100c8bc2
0x0000000000426396 : jmp 0x100c8ce2
0x00000000004264b6 : jmp 0x100c8e02
0x00000000004265d6 : jmp 0x100c8f22
0x00000000004266f6 : jmp 0x100c9042
0x0000000000426816 : jmp 0x100c9162
0x0000000000426936 : jmp 0x100c9282
0x0000000000426a56 : jmp 0x100c93a2
0x0000000000426b76 : jmp 0x100c94c2
0x0000000000426c96 : jmp 0x100c95e2
0x0000000000426db6 : jmp 0x100c9702
0x0000000000426ed6 : jmp 0x100c9822
0x0000000000426ff6 : jmp 0x100c9942
0x0000000000427116 : jmp 0x100c9a62
0x000000000042732d : jmp 0x100c9c79
0x0000000000427406 : jmp 0x100c9d52
0x0000000000427586 : jmp 0x100c9ed2
0x0000000000427706 : jmp 0x100ca052
0x0000000000427886 : jmp 0x100ca1d2
0x0000000000427a06 : jmp 0x100ca352
0x0000000000427b86 : jmp 0x100ca4d2
0x0000000000427d06 : jmp 0x100ca652
0x0000000000427e86 : jmp 0x100ca7d2
0x0000000000428006 : jmp 0x100ca952
0x0000000000428186 : jmp 0x100caad2
0x0000000000428306 : jmp 0x100cac52
0x0000000000428486 : jmp 0x100cadd2
0x0000000000428606 : jmp 0x100caf52
0x0000000000428786 : jmp 0x100cb0d2
0x0000000000428906 : jmp 0x100cb252
0x0000000000428b7d : jmp 0x100cb4c9
0x0000000000428c56 : jmp 0x100cb5a2
0x0000000000428dc6 : jmp 0x100cb712
0x0000000000428f36 : jmp 0x100cb882
0x00000000004290a6 : jmp 0x100cb9f2
0x0000000000429216 : jmp 0x100cbb62
0x0000000000429386 : jmp 0x100cbcd2
0x00000000004294f6 : jmp 0x100cbe42
0x0000000000429666 : jmp 0x100cbfb2
0x00000000004297d6 : jmp 0x100cc122
0x0000000000429946 : jmp 0x100cc292
0x0000000000429ab6 : jmp 0x100cc402
0x0000000000429c26 : jmp 0x100cc572
0x0000000000429d96 : jmp 0x100cc6e2
0x0000000000429f06 : jmp 0x100cc852
0x000000000042a076 : jmp 0x100cc9c2
0x000000000042a2e9 : jmp 0x100ccc35
0x000000000042a396 : jmp 0x100ccce2
0x000000000042a486 : jmp 0x100ccdd2
0x000000000042a576 : jmp 0x100ccec2
0x000000000042a666 : jmp 0x100ccfb2
0x000000000042a756 : jmp 0x100cd0a2
0x000000000042a846 : jmp 0x100cd192
0x000000000042a936 : jmp 0x100cd282
0x000000000042aa26 : jmp 0x100cd372
0x000000000042ab16 : jmp 0x100cd462
0x000000000042ac06 : jmp 0x100cd552
0x000000000042acf6 : jmp 0x100cd642
0x000000000042ade6 : jmp 0x100cd732
0x000000000042aed6 : jmp 0x100cd822
0x000000000042afc6 : jmp 0x100cd912
0x000000000042b0b6 : jmp 0x100cda02
0x0000000000438dc7 : jmp 0x100db713
0x0000000000438f4c : jmp 0x100db898
0x000000000043915c : jmp 0x100dbaa8
0x000000000043936c : jmp 0x100dbcb8
0x000000000043957c : jmp 0x100dbec8
0x000000000043978c : jmp 0x100dc0d8
0x000000000043999c : jmp 0x100dc2e8
0x0000000000439bac : jmp 0x100dc4f8
0x0000000000439dbc : jmp 0x100dc708
0x0000000000439fcc : jmp 0x100dc918
0x000000000043a1dc : jmp 0x100dcb28
0x000000000043a3ec : jmp 0x100dcd38
0x000000000043a5fc : jmp 0x100dcf48
0x000000000043a80c : jmp 0x100dd158
0x000000000043aa1c : jmp 0x100dd368
0x000000000043ac2c : jmp 0x100dd578
0x000000000043b007 : jmp 0x100dd953
0x000000000043b18c : jmp 0x100ddad8
0x000000000043b38c : jmp 0x100ddcd8
0x000000000043b58c : jmp 0x100dded8
0x000000000043b78c : jmp 0x100de0d8
0x000000000043b98c : jmp 0x100de2d8
0x000000000043bb8c : jmp 0x100de4d8
0x000000000043bd8c : jmp 0x100de6d8
0x000000000043bf8c : jmp 0x100de8d8
0x000000000043c18c : jmp 0x100dead8
0x000000000043c38c : jmp 0x100decd8
0x000000000043c58c : jmp 0x100deed8
0x000000000043c78c : jmp 0x100df0d8
0x000000000043c98c : jmp 0x100df2d8
0x000000000043cb8c : jmp 0x100df4d8
0x000000000043cd8c : jmp 0x100df6d8
0x000000000043d14f : jmp 0x100dfa9b
0x000000000043d2b8 : jmp 0x100dfc04
0x000000000043d458 : jmp 0x100dfda4
0x000000000043d5f8 : jmp 0x100dff44
0x000000000043d798 : jmp 0x100e00e4
0x000000000043d938 : jmp 0x100e0284
0x000000000043dad8 : jmp 0x100e0424
0x000000000043dc78 : jmp 0x100e05c4
0x000000000043de18 : jmp 0x100e0764
0x000000000043dfb8 : jmp 0x100e0904
0x000000000043e158 : jmp 0x100e0aa4
0x000000000043e2f8 : jmp 0x100e0c44
0x000000000043e498 : jmp 0x100e0de4
0x000000000043e638 : jmp 0x100e0f84
0x000000000043e7d8 : jmp 0x100e1124
0x000000000043e978 : jmp 0x100e12c4
0x000000000043ecc5 : jmp 0x100e1611
0x000000000043edce : jmp 0x100e171a
0x000000000043ef1e : jmp 0x100e186a
0x000000000043f06e : jmp 0x100e19ba
0x000000000043f1be : jmp 0x100e1b0a
0x000000000043f30e : jmp 0x100e1c5a
0x000000000043f45e : jmp 0x100e1daa
0x000000000043f5ae : jmp 0x100e1efa
0x000000000043f6fe : jmp 0x100e204a
0x000000000043f84e : jmp 0x100e219a
0x000000000043f99e : jmp 0x100e22ea
0x000000000043faee : jmp 0x100e243a
0x000000000043fc3e : jmp 0x100e258a
0x000000000043fd8e : jmp 0x100e26da
0x000000000043fede : jmp 0x100e282a
0x000000000044002e : jmp 0x100e297a
0x000000000042395e : jmp 0x40043a
0x0000000000403b94 : jmp 0x403bbe
0x0000000000404943 : jmp 0x4043ba
0x00000000004056db : jmp 0x4056a8
0x000000000040f349 : jmp 0x40f30e
0x000000000040fda1 : jmp 0x40fdcc
0x000000000040fdef : jmp 0x40fe18
0x0000000000411c44 : jmp 0x411ba5
0x00000000004130b1 : jmp 0x4130b0
0x00000000004147f2 : jmp 0x4147b8
0x0000000000416344 : jmp 0x41636e
0x000000000041cc69 : jmp 0x41cc75
0x000000000041d617 : jmp 0x41cec7
0x000000000041d8de : jmp 0x41d408
0x0000000000423845 : jmp 0x423813
0x000000000042a402 : jmp 0x42a418
0x000000000042c7b8 : jmp 0x42c786
0x000000000042c836 : jmp 0x42c804
0x000000000042ccc8 : jmp 0x42cc96
0x000000000042cd46 : jmp 0x42cd14
0x0000000000440294 : jmp 0x44025a
0x00000000004403e8 : jmp 0x4403ad
0x00000000004404ac : jmp 0x440472
0x00000000004405f8 : jmp 0x4405bd
0x000000000044691e : jmp 0x4468e4
0x00000000004469ef : jmp 0x4469b5
0x0000000000446a5e : jmp 0x446a24
0x00000000004485a8 : jmp 0x448576
0x0000000000448d3e : jmp 0x448d04
0x0000000000449563 : jmp 0x4493f1
0x0000000000449531 : jmp 0x4493f2
0x00000000004498e1 : jmp 0x44983e
0x0000000000449c71 : jmp 0x449bd1
0x0000000000449d15 : jmp 0x449cda
0x0000000000449dbb : jmp 0x449d80
0x000000000044f828 : jmp 0x44f852
0x000000000044e2d2 : jmp 0x45ad42
0x000000000045caf5 : jmp 0x45cb1d
0x000000000045d161 : jmp 0x45d126
0x000000000045d1fe : jmp 0x45d1c2
0x000000000045fcae : jmp 0x45df04
0x000000000045f543 : jmp 0x45f548
0x0000000000463057 : jmp 0x46301c
0x0000000000465f43 : jmp 0x4644b4
0x000000000046a978 : jmp 0x46a93e
0x000000000046b4b3 : jmp 0x46b481
0x000000000046f2a4 : jmp 0x46f269
0x000000000046f2a3 : jmp 0x46f26a
0x000000000046f9d5 : jmp 0x46f9a3
0x000000000046ff9b : jmp 0x46ff60
0x0000000000472653 : jmp 0x472619
0x00000000004758a1 : jmp 0x4757f3
0x0000000000477cd6 : jmp 0x4777c4
0x0000000000477fd9 : jmp 0x477fdf
0x000000000047a342 : jmp 0x47a307
0x000000000047e578 : jmp 0x47e545
0x0000000000484552 : jmp 0x4845a4
0x0000000000485cca : jmp 0x485c90
0x0000000000488352 : jmp 0x4883a4
0x000000000048ea6e : jmp 0x48ea84
0x0000000000490ff5 : jmp 0x49101d
0x000000000044d4e3 : jmp 0x4944d4aa
0x00000000004a710a : jmp 0x4a7149
0x00000000004a7e49 : jmp 0x4a7e1c
0x00000000004a8ac9 : jmp 0x4a8a97
0x00000000004a8e40 : jmp 0x4a8dd4
0x00000000004a8e3f : jmp 0x4a8dd5
0x00000000004a9016 : jmp 0x4a8fe4
0x0000000000434f9a : jmp 0x4fc25f98
0x0000000000434f99 : jmp 0x4fc25f99
0x0000000000437aba : jmp 0x4fc28ab8
0x0000000000437ab9 : jmp 0x4fc28ab9
0x00000000004a70b7 : jmp 0xffffffff91148a8e
0x0000000000482fe1 : jmp 0xffffffffc357b936
0x000000000047bb29 : jmp 0xffffffffeb097db9
0x0000000000475633 : jmp 0xfffffffff67918c3
0x0000000000411be2 : jmp 0xfffffffffef59fff
0x000000000044c95d : jmp qword ptr [r14]
0x0000000000494a1f : jmp qword ptr [rax + 0x10fffa04]
0x0000000000494a37 : jmp qword ptr [rax + 0x10fffa09]
0x0000000000494f27 : jmp qword ptr [rax + 0x10fffa29]
0x00000000004ab80b : jmp qword ptr [rax + 0x11fffe10]
0x0000000000494a73 : jmp qword ptr [rax + 0x20fff9e6]
0x0000000000494ab7 : jmp qword ptr [rax + 0x20fff9e8]
0x0000000000494a7b : jmp qword ptr [rax + 0x20fff9e9]
0x0000000000494abf : jmp qword ptr [rax + 0x20fff9eb]
0x0000000000494a83 : jmp qword ptr [rax + 0x20fff9ec]
0x0000000000494ac7 : jmp qword ptr [rax + 0x20fff9ee]
0x0000000000494a8b : jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494acf : jmp qword ptr [rax + 0x20fff9f1]
0x0000000000494a93 : jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494ad7 : jmp qword ptr [rax + 0x20fff9f4]
0x0000000000494a9b : jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494adf : jmp qword ptr [rax + 0x20fff9f7]
0x0000000000494aa3 : jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ae7 : jmp qword ptr [rax + 0x20fff9fa]
0x0000000000494a17 : jmp qword ptr [rax + 0x20fffa05]
0x0000000000494a0f : jmp qword ptr [rax + 0x20fffa06]
0x0000000000494a07 : jmp qword ptr [rax + 0x20fffa07]
0x00000000004949ff : jmp qword ptr [rax + 0x20fffa08]
0x0000000000494d5b : jmp qword ptr [rax + 0x20fffa2b]
0x0000000000494d53 : jmp qword ptr [rax + 0x20fffa2c]
0x0000000000494d4b : jmp qword ptr [rax + 0x20fffa2d]
0x0000000000494d43 : jmp qword ptr [rax + 0x20fffa2e]
0x0000000000494d3b : jmp qword ptr [rax + 0x20fffa2f]
0x0000000000494827 : jmp qword ptr [rax + 0x30fffa0d]
0x0000000000404c4c : jmp qword ptr [rax + rcx*2 - 0x73]
0x0000000000494aab : jmp qword ptr [rax - 0x1f000605]
0x000000000049413b : jmp qword ptr [rax - 0x2e000670]
0x00000000004945cb : jmp qword ptr [rax - 0x35]
0x0000000000494043 : jmp qword ptr [rax - 0x3f0006da]
0x000000000040e311 : jmp qword ptr [rax]
0x000000000047a2bd : jmp qword ptr [rbx]
0x0000000000494197 : jmp qword ptr [rcx]
0x00000000004a9704 : jmp qword ptr [rdi]
0x0000000000469855 : jmp qword ptr [rdx + rax*8]
0x00000000004ab38b : jmp qword ptr [rdx + rax]
0x000000000048c1a1 : jmp qword ptr [rdx]
0x000000000049414f : jmp qword ptr [rsi + 0x52fff98d]
0x0000000000448449 : jmp qword ptr [rsi + 0xf]
0x000000000044c8a8 : jmp qword ptr [rsi]
0x0000000000424999 : jmp r10
0x00000000004801f0 : jmp r11
0x000000000042d99d : jmp r9
0x0000000000400a91 : jmp rax
0x00000000004801f1 : jmp rbx
0x0000000000422502 : jmp rcx
0x000000000040d54e : jmp rdi
0x000000000040d265 : jmp rdx
0x0000000000459fc7 : jmp rsi
0x000000000049281f : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000403b92 : jne 0x403ba6 ; jmp 0x403bc0
0x0000000000405dbc : jne 0x405dd0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dae8 : jne 0x40dac6 ; ret
0x000000000040dbdb : jne 0x40dc05 ; add rsp, 0x118 ; ret
0x000000000040f752 : jne 0x40f765 ; add rsp, 0xd8 ; ret
0x000000000040fd9f : jne 0x40fdb4 ; jmp 0x40fdce
0x000000000040fded : jne 0x40fe00 ; jmp 0x40fe1a
0x00000000004148c5 : jne 0x4148d3 ; ret
0x0000000000416342 : jne 0x416356 ; jmp 0x416370
0x00000000004164e8 : jne 0x41653c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416561 : jne 0x416553 ; ret
0x000000000041747e : jne 0x417473 ; ret
0x0000000000417ab1 : jne 0x417a77 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417afc : jne 0x417af5 ; lea eax, [rdx + rdi] ; ret
0x0000000000418416 : jne 0x41840b ; ret
0x000000000041a070 : jne 0x41a07f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f74c : jne 0x41f713 ; ret
0x00000000004222e7 : jne 0x422317 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000422bfa : jne 0x422b81 ; ret
0x0000000000422f07 : jne 0x422ef6 ; sub rax, 0x10 ; ret
0x0000000000425fec : jne 0x425fd6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b487 : jne 0x42b4e4 ; xor eax, eax ; ret
0x000000000042b457 : jne 0x42b508 ; xor eax, eax ; ret
0x000000000042b903 : jne 0x42b927 ; xor eax, eax ; vzeroupper ; ret
0x000000000042c03a : jne 0x42c045 ; vzeroupper ; ret
0x000000000042c134 : jne 0x42c046 ; ret
0x000000000042c27f : jne 0x42c049 ; vzeroupper ; ret
0x000000000042d8ed : jne 0x42d917 ; xor eax, eax ; ret
0x000000000042cee1 : jne 0x42d91b ; xor eax, eax ; ret
0x000000000042cf09 : jne 0x42d927 ; xor eax, eax ; ret
0x0000000000444cc5 : jne 0x444c56 ; lea rax, [rdi + 3] ; ret
0x0000000000444c97 : jne 0x444c56 ; lea rax, [rdi + 7] ; ret
0x0000000000444c96 : jne 0x444c57 ; lea rax, [rdi + 7] ; ret
0x0000000000446424 : jne 0x446638 ; xor eax, eax ; ret
0x0000000000446629 : jne 0x446649 ; xor eax, eax ; ret
0x00000000004464d1 : jne 0x44664d ; xor eax, eax ; ret
0x0000000000446641 : jne 0x44664e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446751 : jne 0x446742 ; ret
0x0000000000446801 : jne 0x4467f2 ; ret
0x0000000000446971 : jne 0x446966 ; lea rax, [rcx - 1] ; ret
0x0000000000446ac1 : jne 0x446ab6 ; sub rax, 1 ; ret
0x0000000000447dcd : jne 0x447db6 ; ret
0x0000000000447f34 : jne 0x447f1c ; vzeroupper ; ret
0x00000000004480f7 : jne 0x4480d7 ; vzeroupper ; ret
0x00000000004485a2 : jne 0x4484d7 ; jmp 0x44857c
0x00000000004488cf : jne 0x4488fb ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044915c : jne 0x44918f ; mov eax, 0x77 ; syscall
0x000000000044917b : jne 0x4491c9 ; add rsp, 0x38 ; ret
0x0000000000449727 : jne 0x44973f ; add rsp, 0x28 ; ret
0x0000000000449957 : jne 0x4499a1 ; add rsp, 0x58 ; ret
0x00000000004499a8 : jne 0x4499c4 ; xor eax, eax ; syscall
0x0000000000449a78 : jne 0x449a97 ; mov eax, 1 ; syscall
0x0000000000449bb5 : jne 0x449c1f ; mov eax, 0x48 ; syscall
0x0000000000449d11 : jne 0x449cde ; neg eax ; jmp 0x449cde
0x0000000000449ce7 : jne 0x449d39 ; add rsp, 0x68 ; ret
0x0000000000449d48 : jne 0x449d67 ; mov eax, 3 ; syscall
0x000000000044a656 : jne 0x44a66d ; add rsp, 0x28 ; ret
0x000000000044a88b : jne 0x44a8a6 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a8b1 : jne 0x44a8f7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a8d9 : jne 0x44a917 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3f6 : jne 0x44b41e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b429 : jne 0x44b477 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b455 : jne 0x44b4d7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b4e1 : jne 0x44b548 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b511 : jne 0x44b579 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bf12 : jne 0x44bf09 ; pop rdx ; pop r10 ; ret
0x000000000044bf02 : jne 0x44bf14 ; nop ; mov eax, 0xca ; syscall
0x000000000044f20f : jne 0x44f1a3 ; call rsi
0x000000000044f826 : jne 0x44f83a ; jmp 0x44f854
0x000000000045adcf : jne 0x45addc ; add rsp, 0x18 ; ret
0x000000000045b017 : jne 0x45b06c ; add rsp, 0x148 ; ret
0x000000000045caf3 : jne 0x45cb05 ; jmp 0x45cb1f
0x0000000000463547 : jne 0x463553 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000468a32 : jne 0x468a45 ; add rsp, 0xd8 ; ret
0x0000000000470b41 : jne 0x470b33 ; ret
0x0000000000471d8c : jne 0x471d85 ; lea eax, [rdx + rdi] ; ret
0x0000000000473843 : jne 0x47384e ; xor rax, rax ; ret
0x0000000000473c43 : jne 0x473c78 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004744fc : jne 0x4744f3 ; ret
0x0000000000474503 : jne 0x47450e ; xor rax, rax ; ret
0x000000000047479b : jne 0x474756 ; mov rax, rdx ; ret
0x00000000004757d7 : jne 0x47583d ; mov eax, 0x101 ; syscall
0x000000000047590c : jne 0x475959 ; add rsp, 0x58 ; ret
0x000000000047598f : jne 0x4759a2 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000475a3e : jne 0x475a61 ; add rsp, 0x38 ; ret
0x000000000047e85a : jne 0x47e800 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e848 : jne 0x47e823 ; ret
0x000000000047f4e7 : jne 0x47f501 ; mov rax, qword ptr [rip + 0x23cec0] ; ret
0x000000000047f53c : jne 0x47f513 ; ret
0x000000000047fde4 : jne 0x47fe18 ; call qword ptr [rip + 0x23ca74]
0x0000000000480ff9 : jne 0x480fd1 ; movsx eax, cl ; neg eax ; ret
0x0000000000481dea : jne 0x481df9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481ee5 : jne 0x481f19 ; add rsp, 0x38 ; ret
0x0000000000481fa5 : jne 0x481fd4 ; add rsp, 0x68 ; ret
0x0000000000482106 : jne 0x482144 ; add rsp, 0x78 ; ret
0x00000000004823d5 : jne 0x482404 ; add rsp, 0x68 ; ret
0x0000000000484411 : jne 0x484451 ; leave ; ret
0x00000000004848b1 : jne 0x48489d ; mov rax, rsi ; ret
0x0000000000484935 : jne 0x484915 ; mov rax, rsi ; ret
0x000000000048509d : jne 0x4850aa ; add rsp, 0x38 ; ret
0x0000000000485180 : jne 0x48519a ; add rsp, 0x38 ; ret
0x0000000000487896 : jne 0x4878c0 ; ret
0x0000000000487895 : jne 0x4878c1 ; ret
0x000000000048794b : jne 0x487952 ; pop rbx ; ret
0x00000000004884db : jne 0x4884f2 ; add rsp, 0x38 ; ret
0x00000000004885e9 : jne 0x488603 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004886d0 : jne 0x4886eb ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b0b9 : jne 0x48b0dc ; xor eax, eax ; ret
0x000000000048b0a1 : jne 0x48b0e1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d2d0 : jne 0x48d2f1 ; mov rax, qword ptr [rax] ; ret
0x000000000048d33f : jne 0x48d34a ; mov qword ptr [rax], rdx ; ret
0x000000000048d69e : jne 0x48d697 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d968 : jne 0x48d961 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dca3 : jne 0x48dc9c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e1f4 : jne 0x48e213 ; ret
0x000000000048e214 : jne 0x48e22c ; mov eax, 8 ; ret
0x000000000048e23f : jne 0x48e26e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e259 : jne 0x48e272 ; xor eax, eax ; ret
0x000000000048f09f : jne 0x48f0ce ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f0b9 : jne 0x48f0d2 ; xor eax, eax ; ret
0x000000000048f659 : jne 0x48f663 ; ret
0x000000000048f674 : jne 0x48f683 ; ret
0x000000000048f8a4 : jne 0x48f8b3 ; ret
0x000000000048fb29 : jne 0x48fb4c ; xor eax, eax ; ret
0x00000000004900f5 : jne 0x4900e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490140 : jne 0x490120 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490285 : jne 0x49026b ; pop rbx ; ret
0x0000000000490393 : jne 0x49037e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f4d : jne 0x490f36 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490ff3 : jne 0x491005 ; jmp 0x49101f
0x00000000004910d1 : jne 0x4910e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000492297 : jne 0x49215b ; call 0x41ed28
0x00000000004a6f77 : jne 0x4a6f41 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a8f0b : jne 0x4a8f32 ; retf 0x32dd
0x000000000042d19e : jno 0x42d1ad ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432f61 : jno 0x432f90 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000438590 : jno 0x438599 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004387ca : jno 0x4387d3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438931 : jno 0x438942 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438a96 : jno 0x438b1a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482ed4 : jno 0x482f26 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484ee4 : jno 0x484f0d ; add cl, ch ; retf
0x00000000004941a8 : jno 0x494143 ; stc ; call qword ptr [rcx]
0x00000000004248a1 : jnp 0x4248d4 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004248a1 : jnp 0x4248d5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a7925 : jnp 0x4a78e2 ; ret
0x00000000004a8922 : jnp 0x4a8980 ; retf
0x00000000004a8d29 : jnp 0x4a8d76 ; retf 0x99e0
0x00000000004a9989 : jnp 0x4a99ca ; retf
0x00000000004056d6 : jns 0x4056a6 ; mov r15, r12 ; jmp 0x4056ad
0x000000000042453f : jns 0x424547 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438597 : jns 0x43859a ; ret
0x00000000004387d1 : jns 0x4387d4 ; ret
0x0000000000438938 : jns 0x438943 ; ret
0x000000000043edc7 : jns 0x43eda2 ; retf 0xead3
0x000000000043ef17 : jns 0x43eef2 ; retf 0xead3
0x000000000043f067 : jns 0x43f042 ; retf 0xead3
0x000000000043f1b7 : jns 0x43f192 ; retf 0xead3
0x000000000043f307 : jns 0x43f2e2 ; retf 0xead3
0x000000000043f457 : jns 0x43f432 ; retf 0xead3
0x000000000043f5a7 : jns 0x43f582 ; retf 0xead3
0x000000000043f6f7 : jns 0x43f6d2 ; retf 0xead3
0x000000000043f847 : jns 0x43f822 ; retf 0xead3
0x000000000043f997 : jns 0x43f972 ; retf 0xead3
0x000000000043fae7 : jns 0x43fac2 ; retf 0xead3
0x000000000043fc37 : jns 0x43fc12 ; retf 0xead3
0x000000000043fd87 : jns 0x43fd62 ; retf 0xead3
0x000000000043fed7 : jns 0x43feb2 ; retf 0xead3
0x0000000000440027 : jns 0x440002 ; retf 0xead3
0x000000000044b456 : jns 0x44b4a6 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000468af4 : jns 0x468af4 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000048af8e : jns 0x48af9b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d23e : jns 0x48d281 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048dfae : jns 0x48dfbb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fbae : jns 0x48fbbb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a6a2e : jns 0x4a69c4 ; ret 0xf869
0x00000000004a6a2d : jns 0x4a69c5 ; ret 0xf869
0x00000000004a8e3e : jns 0x4a8e95 ; jmp 0x4a8dd6
0x00000000004af9ed : jns 0x4af9ea ; call rsp
0x00000000004146e4 : jo 0x414735 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414714 : jo 0x414765 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c1a2 : jo 0x44c1c6 ; ret
0x0000000000453110 : jo 0x45311a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470bba : jo 0x470bd2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473eb6 : jo 0x473f18 ; pop rbp ; pop r12 ; ret
0x00000000004740cd : jo 0x47412f ; pop rbp ; pop r12 ; ret
0x00000000004822c4 : jo 0x48232a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000048f614 : jo 0x48f5ec ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f629 ; ret
0x00000000004922c4 : jo 0x4922c7 ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004940d4 : jo 0x494131 ; stc ; jmp rax
0x00000000004942b0 : jo 0x49426a ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494350 : jo 0x494309 ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004943e0 : jo 0x494392 ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004943f4 : jo 0x494398 ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x00000000004945ac : jo 0x49458c ; stc ; push qword ptr [rax - 0x7f000640] ; ret
0x00000000004945c0 : jo 0x494592 ; stc ; inc eax ; enter -7, 0x10 ; retf 0xfff9
0x0000000000494864 : jo 0x49486d ; cli ; jmp rax
0x0000000000494a68 : jo 0x494a70 ; cli ; jmp rax
0x0000000000494d6c : jo 0x494d9a ; cli ; jmp rsi
0x00000000004a7aa4 : jo 0x4a7b1e ; mov ebp, 0xfb67d10d ; ret
0x00000000004aeb3c : jo 0x4aeb43 ; ret 0xa01
0x00000000004afaa0 : jo 0x4afa27 ; stc ; call qword ptr [rax]
0x00000000004afaf0 : jo 0x4afa78 ; stc ; call qword ptr [rbx]
0x00000000004b3e7d : jo 0x4b3e84 ; retf
0x0000000000421daa : jp 0x421dda ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004572c2 : jp 0x4572bc ; ret
0x0000000000484aea : jp 0x484b65 ; and eax, dword ptr [rax] ; ret
0x00000000004a7c33 : jp 0x4a7bed ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b3355 : jp 0x4b335d ; add byte ptr [rax], bh ; and edi, esp ; jmp qword ptr [rcx]
0x0000000000434c8a : jrcxz 0x434c85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c89 : jrcxz 0x434c86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377aa : jrcxz 0x4377a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377a9 : jrcxz 0x4377a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044bf63 : jrcxz 0x44bf28 ; cmp r11d, 0xa ; je 0x44bf74 ; ret
0x000000000046837f : jrcxz 0x468385 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046837e : jrcxz 0x468386 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047fbde : jrcxz 0x47fc2c ; mov esi, ebx ; syscall
0x0000000000490394 : jrcxz 0x4903f6 ; pop rbp ; pop r12 ; ret
0x0000000000494445 : jrcxz 0x494442 ; call qword ptr [rax]
0x0000000000494569 : jrcxz 0x494566 ; jmp qword ptr [rax]
0x00000000004a6885 : jrcxz 0x4a68df ; ret
0x00000000004a8a4d : jrcxz 0x4a8a10 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a95a9 : jrcxz 0x4a958d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000040e9a5 : js 0x40e9c9 ; call rdx
0x0000000000471a59 : js 0x471a91 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000478bda : js 0x478bd9 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047bdc2 : js 0x47bdd5 ; pop rbx ; ret
0x000000000048d4f6 : js 0x48d503 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d503 : js 0x48d50f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004901c3 : js 0x49023e ; ret 0x8b48
0x00000000004974d4 : js 0x497503 ; cld ; jmp rax
0x00000000004a8988 : js 0x4a895c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a8921 : js 0x4a89a1 ; pop rdx ; retf
0x00000000004b10c8 : js 0x4b10ec ; cli ; call qword ptr [rdi]
0x00000000004b2f54 : js 0x4b2fd3 ; add byte ptr [rax], al ; sub byte ptr [rsi], cl ; cld ; jmp qword ptr [rbx]
0x00000000004b30dd : js 0x4b30e5 ; add byte ptr [rax], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b3354 : js 0x4b33d7 ; add byte ptr [rax], al ; cmp byte ptr [rbx], ah ; cld ; jmp qword ptr [rcx]
0x00000000004b4218 : js 0x4b41ea ; cld ; jmp qword ptr [rsi]
0x000000000046b383 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000456515 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041f13f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004950f9 : lahf ; cli ; call qword ptr [rax - 0x1f000560]
0x000000000044921d : lahf ; jb 0x449221 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8f63 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e85b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f8cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ec2f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a8852 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a9054 : lahf ; push -0x57d3205 ; call 0xffffffffab585b56
0x00000000004a7060 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044ab6b : lahf ; ret
0x0000000000418dbf : lahf ; ret 0x3949
0x0000000000418e72 : lahf ; ret 0x48e9
0x000000000044aa21 : lahf ; ret 0x8545
0x00000000004a67bd : lahf ; ret 0x871e
0x0000000000448189 : lahf ; ret 0xea81
0x000000000048c8b1 : lahf ; ret 0xf45
0x000000000046fc4d : lahf ; ret 0xfffd
0x000000000041f8d9 : lahf ; sub dword ptr [rax], eax ; ret
0x000000000043ff5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049589b : lcall [rax + 0x6afffb3e] ; sti ; jmp qword ptr [rdx]
0x00000000004a4f3f : lcall [rax] ; jbe 0x4a4f44 ; jmp qword ptr [rax]
0x000000000041ac62 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044e2cd : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45ad47
0x00000000004194c0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412025 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411dab : lcall [rbx + 0x5d] ; ret
0x000000000047fe86 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004106de : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000494137 : lcall [rsi - 0x5f000671] ; nop ; stc ; call rcx
0x0000000000435316 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000417b0b : lea eax, [r8 - 1] ; ret
0x000000000048afac : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4b4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042b4c4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042b494 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000417b0c : lea eax, [rax - 1] ; ret
0x000000000046ae25 : lea eax, [rbx] ; add byte ptr [rcx - 0x77], al ; retf
0x000000000047356d : lea eax, [rcx + rsi] ; ret
0x0000000000446974 : lea eax, [rcx - 1] ; ret
0x00000000004449ec : lea eax, [rdi + 0x10] ; ret
0x0000000000444a01 : lea eax, [rdi + 0x11] ; ret
0x0000000000444a1f : lea eax, [rdi + 0x12] ; ret
0x0000000000444a3f : lea eax, [rdi + 0x13] ; ret
0x0000000000444a62 : lea eax, [rdi + 0x14] ; ret
0x0000000000444a81 : lea eax, [rdi + 0x15] ; ret
0x0000000000444aa1 : lea eax, [rdi + 0x16] ; ret
0x0000000000444ac1 : lea eax, [rdi + 0x17] ; ret
0x0000000000444ae4 : lea eax, [rdi + 0x18] ; ret
0x0000000000444b09 : lea eax, [rdi + 0x19] ; ret
0x0000000000444b27 : lea eax, [rdi + 0x1a] ; ret
0x0000000000444b47 : lea eax, [rdi + 0x1b] ; ret
0x0000000000444b63 : lea eax, [rdi + 0x1c] ; ret
0x0000000000444b83 : lea eax, [rdi + 0x1d] ; ret
0x0000000000444ba3 : lea eax, [rdi + 0x1e] ; ret
0x0000000000444bc3 : lea eax, [rdi + 0x1f] ; ret
0x000000000044493d : lea eax, [rdi + 0xa] ; ret
0x000000000044495d : lea eax, [rdi + 0xb] ; ret
0x000000000044497f : lea eax, [rdi + 0xc] ; ret
0x000000000044499f : lea eax, [rdi + 0xd] ; ret
0x00000000004449bf : lea eax, [rdi + 0xe] ; ret
0x00000000004449d9 : lea eax, [rdi + 0xf] ; ret
0x0000000000444887 : lea eax, [rdi + 1] ; ret
0x000000000044489a : lea eax, [rdi + 2] ; ret
0x00000000004448a5 : lea eax, [rdi + 3] ; ret
0x00000000004448b8 : lea eax, [rdi + 4] ; ret
0x00000000004448cd : lea eax, [rdi + 5] ; ret
0x00000000004448eb : lea eax, [rdi + 6] ; ret
0x00000000004448f7 : lea eax, [rdi + 7] ; ret
0x000000000044490a : lea eax, [rdi + 8] ; ret
0x000000000044491f : lea eax, [rdi + 9] ; ret
0x000000000042b4e9 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042b4f9 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042b3f3 : lea eax, [rdi + rax + 0x30] ; ret
0x00000000004737b5 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440457 : lea eax, [rdi + rax] ; ret
0x0000000000446cca : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473469 : lea eax, [rdi + rsi] ; ret
0x0000000000444873 : lea eax, [rdi] ; ret
0x0000000000443e5d : lea eax, [rdx + 0xa] ; ret
0x0000000000443e7d : lea eax, [rdx + 0xb] ; ret
0x0000000000443e9f : lea eax, [rdx + 0xc] ; ret
0x0000000000443ebf : lea eax, [rdx + 0xd] ; ret
0x0000000000443edf : lea eax, [rdx + 0xe] ; ret
0x0000000000443d6f : lea eax, [rdx + 0xf] ; ret
0x0000000000443d97 : lea eax, [rdx + 1] ; ret
0x0000000000443dad : lea eax, [rdx + 2] ; ret
0x0000000000443dc5 : lea eax, [rdx + 3] ; ret
0x0000000000443ddb : lea eax, [rdx + 4] ; ret
0x0000000000443ded : lea eax, [rdx + 5] ; ret
0x0000000000443e0b : lea eax, [rdx + 6] ; ret
0x0000000000443d17 : lea eax, [rdx + 7] ; ret
0x0000000000443e1d : lea eax, [rdx + 8] ; ret
0x0000000000443e3d : lea eax, [rdx + 9] ; ret
0x0000000000417afe : lea eax, [rdx + rdi] ; ret
0x00000000004482a3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422e86 : lea eax, [rdx - 0x10] ; ret
0x0000000000443d85 : lea eax, [rdx] ; ret
0x00000000004248f8 : lea eax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000423998 : lea eax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x00000000004244af : lea eax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000424838 : lea eax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x00000000004246f8 : lea eax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424598 : lea eax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042489f : lea eax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042475f : lea eax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x00000000004245ff : lea eax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042487e : lea eax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042473e : lea eax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x00000000004245de : lea eax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x000000000042391f : lea eax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042466a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042464d : lea eax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042469e : lea eax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044d531 : lea eax, [rip + 0x26cdc9] ; ret
0x000000000048523f : lea eax, [rip + 0x5b] ; cmovne rax, rdx ; ret
0x00000000004248c8 : lea eax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x00000000004244d8 : lea eax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000042453c : lea eax, [rip + 0x79ee] ; je 0x424513 ; ret
0x0000000000472988 : lea eax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473d98 : lea eax, [rip + 0xa22] ; cmove rax, rdx ; ret
0x0000000000472958 : lea eax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000046b4ac : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b488
0x000000000045f8b1 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e031 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a7071 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473f6b : lea ecx, [rax + 1] ; call rbx
0x0000000000474106 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004723a4 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042da00 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000044410e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000468f74 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000485a74 : lea ecx, [rdx + rcx*8] ; jmp 0x485a86
0x0000000000422e96 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484550 : lea ecx, [rdx] ; jmp 0x4845a6
0x0000000000488350 : lea ecx, [rdx] ; jmp 0x4883a6
0x0000000000475b87 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004721b0 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000004720cb : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047408e : lea ecx, [rsp + 0x20] ; call rbx
0x000000000047427c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f66 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000044c81f : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035ee : lea edi, [rip + 0x2b88ac] ; call 8
0x00000000004035a8 : lea edi, [rip + 0x2b88f2] ; call 8
0x0000000000418421 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000485a70 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a8a
0x0000000000471f27 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042dad4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000424996 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042dec8 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000004245b3 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x00000000004238ff : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042478f : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424524 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000423898 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004238cf : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x00000000004744ca : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004239d9 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000424853 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424713 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048de21 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b8fd : lea esi, [rip + 0x24b51d] ; jmp rax
0x0000000000446fef : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e376 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000424995 : lea r10, [r10 + r9] ; jmp r10
0x000000000048de20 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042d9ff : lea r9, [r11 + r9] ; jmp r9
0x00000000004723a3 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048454f : lea r9, [rdx] ; jmp 0x4845a7
0x000000000048834f : lea r9, [rdx] ; jmp 0x4883a7
0x00000000004721af : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000004720ca : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047408d : lea r9, [rsp + 0x20] ; call rbx
0x000000000047427b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f65 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048afab : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4b3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042b4c3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042b493 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000047356c : lea rax, [rcx + rsi] ; ret
0x0000000000446973 : lea rax, [rcx - 1] ; ret
0x00000000004449eb : lea rax, [rdi + 0x10] ; ret
0x0000000000444a00 : lea rax, [rdi + 0x11] ; ret
0x0000000000444a1e : lea rax, [rdi + 0x12] ; ret
0x0000000000444a3e : lea rax, [rdi + 0x13] ; ret
0x0000000000444a61 : lea rax, [rdi + 0x14] ; ret
0x0000000000444a80 : lea rax, [rdi + 0x15] ; ret
0x0000000000444aa0 : lea rax, [rdi + 0x16] ; ret
0x0000000000444ac0 : lea rax, [rdi + 0x17] ; ret
0x0000000000444ae3 : lea rax, [rdi + 0x18] ; ret
0x0000000000444b08 : lea rax, [rdi + 0x19] ; ret
0x0000000000444b26 : lea rax, [rdi + 0x1a] ; ret
0x0000000000444b46 : lea rax, [rdi + 0x1b] ; ret
0x0000000000444b62 : lea rax, [rdi + 0x1c] ; ret
0x0000000000444b82 : lea rax, [rdi + 0x1d] ; ret
0x0000000000444ba2 : lea rax, [rdi + 0x1e] ; ret
0x0000000000444bc2 : lea rax, [rdi + 0x1f] ; ret
0x000000000044493c : lea rax, [rdi + 0xa] ; ret
0x000000000044495c : lea rax, [rdi + 0xb] ; ret
0x000000000044497e : lea rax, [rdi + 0xc] ; ret
0x000000000044499e : lea rax, [rdi + 0xd] ; ret
0x00000000004449be : lea rax, [rdi + 0xe] ; ret
0x00000000004449d8 : lea rax, [rdi + 0xf] ; ret
0x0000000000444886 : lea rax, [rdi + 1] ; ret
0x0000000000444899 : lea rax, [rdi + 2] ; ret
0x00000000004448a4 : lea rax, [rdi + 3] ; ret
0x00000000004448b7 : lea rax, [rdi + 4] ; ret
0x00000000004448cc : lea rax, [rdi + 5] ; ret
0x00000000004448ea : lea rax, [rdi + 6] ; ret
0x00000000004448f6 : lea rax, [rdi + 7] ; ret
0x0000000000444909 : lea rax, [rdi + 8] ; ret
0x000000000044491e : lea rax, [rdi + 9] ; ret
0x000000000042b4e8 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b4f8 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b3f2 : lea rax, [rdi + rax + 0x30] ; ret
0x00000000004737b4 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440456 : lea rax, [rdi + rax] ; ret
0x0000000000446cc9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473468 : lea rax, [rdi + rsi] ; ret
0x0000000000444872 : lea rax, [rdi] ; ret
0x0000000000443e5c : lea rax, [rdx + 0xa] ; ret
0x0000000000443e7c : lea rax, [rdx + 0xb] ; ret
0x0000000000443e9e : lea rax, [rdx + 0xc] ; ret
0x0000000000443ebe : lea rax, [rdx + 0xd] ; ret
0x0000000000443ede : lea rax, [rdx + 0xe] ; ret
0x0000000000443d6e : lea rax, [rdx + 0xf] ; ret
0x0000000000443d96 : lea rax, [rdx + 1] ; ret
0x0000000000443dac : lea rax, [rdx + 2] ; ret
0x0000000000443dc4 : lea rax, [rdx + 3] ; ret
0x0000000000443dda : lea rax, [rdx + 4] ; ret
0x0000000000443dec : lea rax, [rdx + 5] ; ret
0x0000000000443e0a : lea rax, [rdx + 6] ; ret
0x0000000000443d16 : lea rax, [rdx + 7] ; ret
0x0000000000443e1c : lea rax, [rdx + 8] ; ret
0x0000000000443e3c : lea rax, [rdx + 9] ; ret
0x0000000000422e85 : lea rax, [rdx - 0x10] ; ret
0x0000000000443d84 : lea rax, [rdx] ; ret
0x000000000044d530 : lea rax, [rip + 0x26cdc9] ; ret
0x000000000046b4ab : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b489
0x000000000040e030 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044410d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473f6a : lea rcx, [rax + 1] ; call rbx
0x0000000000474105 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485a73 : lea rcx, [rdx + rcx*8] ; jmp 0x485a87
0x0000000000422e95 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475b86 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c81e : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004035ed : lea rdi, [rip + 0x2b88ac] ; call 9
0x00000000004035a7 : lea rdi, [rip + 0x2b88f2] ; call 9
0x000000000042dad3 : lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000485a6f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a8b
0x000000000042dec7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046b8fc : lea rsi, [rip + 0x24b51d] ; jmp rax
0x0000000000446fee : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000429f27 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ae07 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457a5a : leave ; call r15
0x0000000000446750 : leave ; jne 0x446743 ; ret
0x0000000000446800 : leave ; jne 0x4467f3 ; ret
0x0000000000446ac0 : leave ; jne 0x446ab7 ; sub rax, 1 ; ret
0x000000000047479a : leave ; jne 0x474757 ; mov rax, rdx ; ret
0x0000000000446cc8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048af60 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046be19 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400b6d : leave ; ret
0x00000000004a8a54 : leave ; retf
0x00000000004a7221 : leave ; retf 0x6ee8
0x00000000004a6349 : leave ; retf 0xcccb
0x0000000000449053 : leave ; shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494589 : leave ; stc ; push rax ; retf 0xfff9
0x000000000047408a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004974cf : ljmp [rax + 0x78fffc2b] ; sub bh, ah ; jmp rax
0x000000000049604f : ljmp [rax] ; imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x00000000004a4ec3 : ljmp [rax] ; je 0x4a4ec8 ; jmp rax
0x00000000004946ab : ljmp [rbp + rcx - 6] ; call qword ptr [rdx]
0x00000000004ab813 : ljmp [rbx - 0x410001f0] ; adc dh, bh ; call rcx
0x000000000049589f : ljmp [rdx + 0x3e] ; sti ; jmp qword ptr [rdx]
0x0000000000494eef : ljmp [rdx + 0x50fffa28] ; xor dl, bh ; call rax
0x000000000042c6ee : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f347 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410060 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004460d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004a8946 : lodsb al, byte ptr [rsi] ; loop 0x4a8913 ; retf
0x00000000004acd94 : lodsb al, byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x000000000042a524 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a96fd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b4064 : lodsb al, byte ptr [rsi] ; ret 0xfffc
0x0000000000494429 : lodsb al, byte ptr [rsi] ; stc ; call rax
0x00000000004a6f7b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046131f : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8d25 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000046116f : lodsd eax, dword ptr [rsi] ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004240c7 : lodsd eax, dword ptr [rsi] ; ret
0x00000000004122fd : loop 0x4122ff ; add rdx, rcx ; jmp 0x412315
0x0000000000421b2e : loop 0x421b81 ; mov esi, ebx ; mov rdi, r13 ; call 0x41dd79
0x0000000000425fed : loop 0x426025 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434bfa : loop 0x434bf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bf9 : loop 0x434bf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043771a : loop 0x437715 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437719 : loop 0x437716 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044826f : loop 0x448289 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c1b3 : loop 0x44c206 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000046393a : loop 0x463943 ; call 0x40043c
0x0000000000468f79 : loop 0x468fc0 ; call qword ptr [rdx + rax*8]
0x000000000047295a : loop 0x472971 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047295a : loop 0x472972 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004759be : loop 0x475986 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004872b1 : loop 0x4872bc ; add rdx, rax ; jmp 0x4872c5
0x000000000048d259 : loop 0x48d2a8 ; add esp, 0x18 ; ret
0x0000000000494485 : loop 0x494482 ; call rax
0x00000000004a8947 : loop 0x4a8912 ; retf
0x00000000004a9a9a : loop 0x4a9aef ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000434b6a : loope 0x434b65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b69 : loope 0x434b66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043768a : loope 0x437685 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437689 : loope 0x437686 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444dfb : loope 0x444e05 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x00000000004487ee : loope 0x4487e5 ; ret
0x000000000044e20e : loope 0x44e21b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047499e : loope 0x4749b3 ; je 0x4749c4 ; ret
0x000000000047cb5b : loope 0x47cb61 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482ed7 : loope 0x482f29 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482f08 : loope 0x482f5b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482f7d : loope 0x482fd0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490286 : loope 0x4902e5 ; ret
0x0000000000490f4e : loope 0x490fb0 ; pop rbp ; pop r12 ; ret
0x0000000000494441 : loope 0x49443e ; call qword ptr [rax]
0x0000000000494565 : loope 0x494562 ; jmp qword ptr [rax]
0x00000000004a8a51 : loope 0x4a8ad3 ; pop rdx ; leave ; retf
0x000000000040f837 : loopne 0x40f89d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041ca7c : loopne 0x41ca90 ; xchg eax, esp ; ret 0x3de9
0x00000000004223ff : loopne 0x422465 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042df21 : loopne 0x42df38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df20 : loopne 0x42df39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e071 : loopne 0x42e088 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e070 : loopne 0x42e089 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c1 : loopne 0x42e1d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c0 : loopne 0x42e1d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e311 : loopne 0x42e328 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e310 : loopne 0x42e329 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e461 : loopne 0x42e478 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e460 : loopne 0x42e479 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b1 : loopne 0x42e5c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b0 : loopne 0x42e5c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e701 : loopne 0x42e718 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e700 : loopne 0x42e719 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e84f : loopne 0x42e866 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e84e : loopne 0x42e867 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a1 : loopne 0x42e9b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a0 : loopne 0x42e9b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf1 : loopne 0x42eb08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf0 : loopne 0x42eb09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec41 : loopne 0x42ec58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec40 : loopne 0x42ec59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed91 : loopne 0x42eda8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed90 : loopne 0x42eda9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee1 : loopne 0x42eef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee0 : loopne 0x42eef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f031 : loopne 0x42f048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f030 : loopne 0x42f049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f181 : loopne 0x42f198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f180 : loopne 0x42f199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f1 : loopne 0x430908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f0 : loopne 0x430909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a41 : loopne 0x430a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a40 : loopne 0x430a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b91 : loopne 0x430ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b90 : loopne 0x430ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce1 : loopne 0x430cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce0 : loopne 0x430cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e31 : loopne 0x430e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e30 : loopne 0x430e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f81 : loopne 0x430f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f80 : loopne 0x430f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310d1 : loopne 0x4310e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310d0 : loopne 0x4310e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043121f : loopne 0x431236 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043121e : loopne 0x431237 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431371 : loopne 0x431388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431370 : loopne 0x431389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c1 : loopne 0x4314d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c0 : loopne 0x4314d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431611 : loopne 0x431628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431610 : loopne 0x431629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431761 : loopne 0x431778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431760 : loopne 0x431779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b1 : loopne 0x4318c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b0 : loopne 0x4318c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a01 : loopne 0x431a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a00 : loopne 0x431a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b51 : loopne 0x431b68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b50 : loopne 0x431b69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004481dd : loopne 0x4481f7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bfc8 : loopne 0x44bfdd ; cmp eax, 4 ; je 0x44bfd7 ; ret
0x000000000044e212 : loopne 0x44e275 ; pop r12 ; ret
0x0000000000454fad : loopne 0x455028 ; jae 0x454f3e ; retf 0xb941
0x000000000045d5dc : loopne 0x45d612 ; cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000046379f : loopne 0x46372c ; ret
0x000000000046d90a : loopne 0x46d910 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ee39 : loopne 0x46ee9d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f615 : loopne 0x46f679 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004828ad : loopne 0x4828b6 ; sub eax, 1 ; ret
0x000000000049404c : loopne 0x49407d ; stc ; inc dword ptr [rax] ; sub bh, cl ; jmp qword ptr [rax]
0x000000000049411c : loopne 0x49418d ; stc ; call rax
0x00000000004942a4 : loopne 0x494263 ; stc ; jmp rax
0x00000000004942a4 : loopne 0x494267 ; stc ; jmp rax
0x00000000004942a8 : loopne 0x494269 ; stc ; jmp rax
0x0000000000494344 : loopne 0x494302 ; stc ; jmp rax
0x0000000000494344 : loopne 0x494306 ; stc ; jmp rax
0x0000000000494348 : loopne 0x494308 ; stc ; jmp rax
0x0000000000494480 : loopne 0x494465 ; stc ; call rax
0x0000000000494481 : loopne 0x49447e ; call rax
0x0000000000494ab0 : loopne 0x494a9a ; stc ; jmp qword ptr [rax]
0x00000000004951e4 : loopne 0x4951e4 ; cli ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x0000000000495208 : loopne 0x495209 ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004974c0 : loopne 0x4974f0 ; cld ; call rax
0x00000000004a7074 : loopne 0x4a7054 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b0110 : loopne 0x4b00b1 ; stc ; call qword ptr [rbx]
0x00000000004b05a0 : loopne 0x4b055d ; stc ; jmp qword ptr [rcx]
0x00000000004a6a8a : mov ah, 0x13 ; ret
0x00000000004acd90 : mov ah, 0x14 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsxd rsi, esi ; jmp rdx
0x00000000004921ca : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049192a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000494ca0 : mov ah, 0x34 ; cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004ad34c : mov ah, 0x8c ; idiv bh ; retf
0x00000000004a6f30 : mov ah, 0xa5 ; ret
0x00000000004ade11 : mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004942d9 : mov ah, 0xf9 ; call rax
0x0000000000494339 : mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494359 : mov ah, 0xf9 ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004a6884 : mov ah, bl ; push rsi ; ret
0x000000000048b0a6 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457a54 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000049480c : mov al, 0x10 ; cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004945f4 : mov al, 0x13 ; cli ; inc dword ptr [rax + 0x13] ; cli ; call rax
0x0000000000490f01 : mov al, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494f60 : mov al, 0x2a ; cli ; jmp qword ptr [rax]
0x0000000000400df8 : mov al, 0x2b ; add bh, dh ; ret 0
0x0000000000400dcc : mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000494d04 : mov al, 0x37 ; cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x00000000004940c4 : mov al, 0x52 ; stc ; jmp qword ptr [rax]
0x00000000004b158c : mov al, 0x5c ; add byte ptr [rax], al ; add dl, dh ; std ; jmp qword ptr [rdi]
0x0000000000494128 : mov al, 0x6f ; stc ; jmp rax
0x000000000044a3fc : mov al, 0x6f ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004afb40 : mov al, 0x84 ; stc ; call qword ptr [rbx]
0x00000000004b5e70 : mov al, 0xa0 ; std ; jmp qword ptr [rax]
0x00000000004af6d0 : mov al, 0xb7 ; clc ; call qword ptr [rax]
0x000000000044081f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000048d94f : mov al, 0xe8 ; retf
0x00000000004a8d36 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000040466f : mov al, 0xf ; retf
0x0000000000495154 : mov al, 0xf1 ; cli ; inc eax ; int1 ; cli ; call rax
0x0000000000495188 : mov al, 0xf2 ; cli ; call rax
0x00000000004951a8 : mov al, 0xf3 ; cli ; call rax
0x0000000000493f44 : mov al, 0xf4 ; clc ; jmp rax
0x0000000000494351 : mov al, 0xf9 ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004949f8 : mov al, 9 ; cli ; jmp qword ptr [rax]
0x000000000049402c : mov al, 9 ; stc ; inc dword ptr [rax] ; and ecx, edi ; jmp qword ptr [rax]
0x00000000004637ab : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x00000000004425f6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442614 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443d80 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425d0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004033f8 : mov al, ch ; ret 0x578
0x00000000004425e0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435931 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004a8dc0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x00000000004580b4 : mov bh, 0x43 ; add al, 0x89 ; retf
0x0000000000457c2f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444c98 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a9098 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7d64 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a6346 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000413469 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424715 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af6d1 : mov bh, 0xf8 ; call qword ptr [rax]
0x00000000004943a1 : mov bh, 0xf9 ; call qword ptr [rax]
0x000000000041db73 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f827 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487ecc : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a9473 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044658e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a90fb : mov bl, 0x29 ; retf 0xbf4b
0x000000000047479c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a4c2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8e43 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415c03 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004a90e0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004add71 : mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004942b5 : mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494275 : mov bl, 0xf9 ; inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494295 : mov bl, 0xf9 ; push qword ptr [rax] ; mov ch, 0xf9 ; call qword ptr [rax]
0x00000000004942d5 : mov bl, 0xf9 ; push rax ; mov ah, 0xf9 ; call rax
0x0000000000494278 : mov bpl, 0xf9 ; jmp qword ptr [rax]
0x00000000004a6a61 : mov bx, 0xf32d ; retf
0x0000000000481180 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000044e4ca : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000481181 : mov byte ptr [rax + 0x15], bh ; syscall
0x000000000044c18a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a2a6c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044e4cb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000004b4135 : mov byte ptr [rax], al ; add byte ptr [rax - 0x36], ch ; cld ; jmp qword ptr [rcx]
0x000000000044bd2f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d94 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b41ad : mov byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004347ac : mov byte ptr [rcx + 0x28], bl ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000046ed27 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459fc3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048af64 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405d9f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045eb43 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004449e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444358 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444a5e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004443ae : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444ae0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000444430 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444896 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444276 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004448b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444292 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a90f5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042f54b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000412a50 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438672 : mov byte ptr [rdi], cl ; ret
0x0000000000447f55 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444870 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444250 : mov byte ptr [rdi], dh ; ret
0x00000000004359a3 : mov byte ptr [rdi], dl ; ret
0x0000000000443da9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000004425f9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443dd7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000442617 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443d82 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004425d2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048bad0 : mov byte ptr [rip + 0x2306d9], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x000000000041dd29 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004848af : mov byte ptr [rsi], al ; jne 0x48489f ; mov rax, rsi ; ret
0x0000000000484933 : mov byte ptr [rsi], al ; jne 0x484917 ; mov rax, rsi ; ret
0x00000000004b2ef8 : mov byte ptr [rsp + rdi*8], al ; jmp rdx
0x00000000004a6882 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7bc3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f342 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f315
0x000000000045d15a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45d12d
0x00000000004a8856 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8f5f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a990a : mov ch, 0xab ; ret
0x000000000047f3f7 : mov ch, 0xcf ; and eax, dword ptr [rax] ; ret
0x0000000000471537 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000494299 : mov ch, 0xf9 ; call qword ptr [rax]
0x000000000049435d : mov ch, 0xf9 ; call rax
0x000000000049439d : mov ch, 0xf9 ; inc dword ptr [rax - 0x49] ; stc ; call qword ptr [rax]
0x0000000000494279 : mov ch, 0xf9 ; jmp qword ptr [rax]
0x00000000004942b9 : mov ch, 0xf9 ; push rax ; mov dh, 0xf9 ; call rax
0x00000000004a3df5 : mov ch, 0xfc ; call rsp
0x000000000042d266 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044f82b : mov cl, 0x35 ; call rax
0x0000000000403b97 : mov cl, 0x35 ; ret
0x000000000040fd99 : mov cl, 0x35 ; xchg eax, ecx ; retf
0x00000000004a9361 : mov cl, 0x3f ; retf
0x0000000000468af3 : mov cl, 0x79 ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049419c : mov cl, 0x94 ; stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x00000000004513cb : mov cl, 0xf ; retf 0xd285
0x00000000004942d1 : mov cl, 0xf9 ; call qword ptr [rax]
0x00000000004942f1 : mov cl, 0xf9 ; jmp rax
0x00000000004942b1 : mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000045abc7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043ae55 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000424994 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8d32 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c0b4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438670 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047499b : mov cl, dl ; and cl, 0xf ; je 0x4749c7 ; ret
0x00000000004a8fec : mov cs, edi ; ret 0x8b36
0x0000000000468232 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f3de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444270 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004849da : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e18f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416812 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412cff : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004188a0 : mov dh, 0 ; ret
0x000000000049463c : mov dh, 0x12 ; cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x00000000004359a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042bc04 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dae4 : mov dh, 0x17 ; test dl, dl ; jne 0x40daca ; ret
0x00000000004197b2 : mov dh, 0x25 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046680e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000494b34 : mov dh, 0x39 ; cli ; inc dword ptr [rsi + 0x39] ; cli ; call rsi
0x00000000004569c8 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046ed3c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004569de : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040da09 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004569f2 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046965b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446161 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446151 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446121 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446141 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446131 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e239 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000488177 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x00000000004543fd : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000045443e : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a7d22 : mov dh, 0x4e ; ret 0x474c
0x0000000000446165 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446155 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446125 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446135 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004634c8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f3a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040eea4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000455506 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048bec1 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004554f1 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000045551b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000455844 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000478e1f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000475992 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c1d6 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046eab8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048852d : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484dfa : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e9a1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448241 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415612 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8f64 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048af5f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042bc2a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c70f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000447069 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000425d41 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0c4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049433d : mov dh, 0xf9 ; call qword ptr [rax]
0x00000000004942bd : mov dh, 0xf9 ; call rax
0x000000000040d545 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000416821 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d11 : mov dh, 2 ; ret
0x000000000042c0c1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc01 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d44 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004487ec : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004943a0 : mov dil, 0xf9 ; call qword ptr [rax]
0x000000000041885e : mov dl, 0x34 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000494bd8 : mov dl, 0x35 ; cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x000000000040ea4d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000413852 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131d8 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004946e0 : mov dl, 0xe ; cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x00000000004adc99 : mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000494355 : mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004948e8 : mov dl, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004950b1 : mov dl, bh ; jmp rax
0x000000000042f5d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004950b0 : mov dl, dil ; jmp rax
0x000000000046262d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a937e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000438666 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438651 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c121 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470b79 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470bb9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471bb8 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c187 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c1a1 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000470b7d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471c3a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000450bdf : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450be2 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417535 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c125 : mov dword ptr [rax + 8], edx ; ret
0x00000000004660dd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f232 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041dd5a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x00000000004b4215 : mov dword ptr [rax], eax ; add byte ptr [rax - 0x33], bh ; cld ; jmp qword ptr [rsi]
0x0000000000484fbd : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484f0d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a862 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484fb1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d342 : mov dword ptr [rax], edx ; ret
0x0000000000471f2b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c831 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000463935 : mov dword ptr [rbp - 0x68], edx ; shl rdx, 3 ; call 0x400441
0x000000000048117f : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x000000000046984f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000040359c : mov dword ptr [rbp - 0x98], ecx ; call 8
0x000000000047d1d1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004588b2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b27 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481e2e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f0f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047fb1e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485cc3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485c97
0x0000000000481d63 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488555 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488629 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045ae5d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000416bcd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166b1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471dea : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041834d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004146e2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470c04 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471ab1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004588c7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485783 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416b5c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a589 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416bd0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402e6e : mov dword ptr [rbx], ebp ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000412a25 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471bbb : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410021 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d4e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450f35 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438667 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438652 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000438641 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000449db4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x449d87
0x00000000004496da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419294 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000004449fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x0000000000444a3b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000444abd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000004443ab : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044442d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044436d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444470 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444490 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444451 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000444b23 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000444473 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416593 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000444b05 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444b43 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000444455 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419291 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b7d5 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b7a7 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004165c3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d381 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000444a7d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000004443cd : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000444a1b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000444a9d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000044438b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004357e5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435628 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435775 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355b8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004448e7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435705 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435548 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442b7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004448c9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000004354d8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442a9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044497b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435468 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044431b : mov dword ptr [rdi + 5], edx ; ret
0x000000000044499b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000004353f8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044432b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000444939 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004449bb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435388 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442f9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004847fe : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416597 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000483014 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000444959 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000044491b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x00000000004844b4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004442eb : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447dfb : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000447095 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447df3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f75 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447085 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447deb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447077 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d32c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f295 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f7f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f61c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e38 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9ec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d38 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbbd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fdbd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c19 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b89 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f99d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f7b5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f999 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fd79 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f44f : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd76 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff76 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430176 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f299 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f2d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f44c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f548 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f494 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482f04 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000048300e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046885a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004448b5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444907 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000444894 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444274 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004448e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004442b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444937 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004442f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444957 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000444307 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446dc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444318 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444328 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444338 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004442a6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004442e8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446dd3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043538c : mov dword ptr [rdi], ecx ; ret
0x0000000000447f6f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000444884 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000004448a2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004448f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000435694 : mov dword ptr [rdi], edx ; ret
0x000000000043864f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484686 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043863e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438663 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044707c : mov dword ptr [rdi], esi ; ret
0x000000000042deb2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000412ba5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443e07 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000442637 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443de9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442629 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443e9b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000443e19 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000442649 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443ebb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000443e39 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000442659 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443e59 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443edb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000442669 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046b4b0 : mov dword ptr [rdx + 8], eax ; jmp 0x46b484
0x0000000000443e79 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000443d6b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000004425bb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004184c0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000443d94 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000443dc2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443d14 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000044976a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484688 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004847e5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000449a1a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442564 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484f9d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418428 : mov dword ptr [rdx], eax ; ret
0x000000000049027f : mov dword ptr [rip + 0x22ba6b], ebx ; jne 0x490271 ; pop rbx ; ret
0x0000000000484ae8 : mov dword ptr [rip + 0x23757a], eax ; ret
0x000000000047f3f5 : mov dword ptr [rip + 0x23cfb5], eax ; ret
0x000000000045ac88 : mov dword ptr [rip + 0x25fe2a], edx ; je 0x45aca1 ; ret
0x000000000044d566 : mov dword ptr [rip + 0x26b54c], edx ; pop rbx ; ret
0x000000000041f8d6 : mov dword ptr [rip + 0x299f84], eax ; ret
0x00000000004197fc : mov dword ptr [rip + 0x2a005e], eax ; ret
0x00000000004192f7 : mov dword ptr [rip + 0x2a04f3], eax ; ret
0x000000000041930e : mov dword ptr [rip + 0x2a04f8], eax ; ret
0x00000000004192cf : mov dword ptr [rip + 0x2a0513], eax ; ret
0x00000000004192af : mov dword ptr [rip + 0x2a052b], eax ; ret
0x00000000004191a5 : mov dword ptr [rip + 0x2a069d], eax ; ret
0x0000000000419195 : mov dword ptr [rip + 0x2a06a5], eax ; ret
0x0000000000419183 : mov dword ptr [rip + 0x2a06a7], edx ; ret
0x0000000000419145 : mov dword ptr [rip + 0x2a06ad], eax ; ret
0x0000000000419135 : mov dword ptr [rip + 0x2a06c5], eax ; ret
0x0000000000419324 : mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x00000000004017c3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000446dd6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446dc9 : mov dword ptr [rsi - 4], ecx ; ret
0x00000000004789c1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d36e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f562 : mov dword ptr [rsi], eax ; ret
0x000000000047e8a9 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045d1fa : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45d1c6
0x000000000041ca9a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cb57 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004512cc : mov dword ptr [rsp + 0x50], eax ; call 0x44d5a6
0x000000000041ca9f : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040953b : mov dword ptr [rsp + 8], ecx ; call 0x406046
0x000000000041132e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041d0b4 : mov dword ptr [rsp + 8], edx ; call 0x419356
0x000000000041d0b3 : mov dword ptr [rsp + 8], r10d ; call 0x419357
0x0000000000489d33 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000485c73 : mov dword ptr [rsp], ecx ; call 0x422705
0x0000000000413402 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416715 : mov dword ptr [rsp], edi ; call 0x4129a5
0x00000000004660dc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f231 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475a9c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449db3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x449d88
0x00000000004496d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449769 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000447084 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7b0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444260 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bc5 : mov eax, 0 ; leave ; ret
0x00000000004482bb : mov eax, 0x10 ; pop rbx ; ret
0x00000000004757d9 : mov eax, 0x101 ; syscall
0x0000000000475752 : mov eax, 0x106 ; syscall
0x000000000044a517 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047e079 : mov eax, 0x14 ; syscall
0x000000000044c1f4 : mov eax, 0x15 ; syscall
0x00000000004235b0 : mov eax, 0x16 ; ret
0x00000000004496c0 : mov eax, 0x18 ; syscall
0x000000000044be53 : mov eax, 0x19 ; syscall
0x000000000044a7b0 : mov eax, 0x1c ; syscall
0x00000000004482c9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004886f0 : mov eax, 0x26 ; syscall
0x0000000000485460 : mov eax, 0x27 ; syscall
0x00000000004b1894 : mov eax, 0x2800005f ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004482c2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000475690 : mov eax, 0x3f ; syscall
0x00000000004482d7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6e7b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000449bb7 : mov eax, 0x48 ; syscall
0x0000000000449e9b : mov eax, 0x4f ; syscall
0x0000000000457c88 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000004482d0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044be80 : mov eax, 0x63 ; syscall
0x00000000004756c0 : mov eax, 0x66 ; syscall
0x00000000004756e0 : mov eax, 0x68 ; syscall
0x00000000004adc94 : mov eax, 0x68000023 ; mov dl, 0xf6 ; call qword ptr [rsi]
0x00000000004756d0 : mov eax, 0x6b ; syscall
0x0000000000449130 : mov eax, 0x6c ; syscall
0x000000000044915e : mov eax, 0x77 ; syscall
0x00000000004482ad : mov eax, 0x80 ; pop rbx ; ret
0x0000000000489b3f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486d54 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004017bd : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044a780 : mov eax, 0xa ; syscall
0x000000000044a750 : mov eax, 0xb ; syscall
0x0000000000494341 : mov eax, 0xb9e0fff9 ; stc ; jmp rax
0x000000000040db92 : mov eax, 0xba ; syscall
0x0000000000494321 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004942a1 : mov eax, 0xbae0fff9 ; stc ; jmp rax
0x0000000000474f60 : mov eax, 0xc9 ; syscall
0x000000000047b6fa : mov eax, 0xca ; syscall
0x000000000040dbc0 : mov eax, 0xe ; syscall
0x0000000000449435 : mov eax, 0xe5 ; syscall
0x000000000040db9e : mov eax, 0xea ; syscall
0x000000000045ae81 : mov eax, 0xf ; syscall
0x00000000004b5394 : mov eax, 0xf800009a ; pop rax ; std ; call qword ptr [rdx]
0x000000000045844c : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000449db6 : mov eax, 0xffffffff ; jmp 0x449d85
0x0000000000412021 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411da7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412f23 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000411d6b : mov eax, 0xffffffff ; ret
0x0000000000448d39 : mov eax, 1 ; jmp 0x448d09
0x0000000000475f11 : mov eax, 1 ; leave ; ret
0x0000000000484665 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417292 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048698d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fe70 : mov eax, 1 ; pop rbx ; ret
0x00000000004687bf : mov eax, 1 ; ret
0x0000000000449a7a : mov eax, 1 ; syscall
0x00000000004747b3 : mov eax, 2 ; ret
0x0000000000474a11 : mov eax, 3 ; ret
0x0000000000449d4a : mov eax, 3 ; syscall
0x000000000048e1ef : mov eax, 4 ; jne 0x48e218 ; ret
0x0000000000474a21 : mov eax, 4 ; ret
0x000000000044974e : mov eax, 4 ; syscall
0x0000000000474a31 : mov eax, 5 ; ret
0x000000000044979c : mov eax, 5 ; syscall
0x0000000000474a41 : mov eax, 6 ; ret
0x00000000004756fe : mov eax, 6 ; syscall
0x0000000000474a51 : mov eax, 7 ; ret
0x00000000004482b4 : mov eax, 8 ; pop rbx ; ret
0x000000000044e9f0 : mov eax, 8 ; ret
0x0000000000449b40 : mov eax, 8 ; syscall
0x000000000044a6ac : mov eax, 9 ; syscall
0x00000000004118c1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000472044 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417478 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417479 ; ret
0x0000000000481c21 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004592c0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x4592d2 ; call rax
0x000000000046be5a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045accf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000460a2d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048afa9 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048af91 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fe89 : mov eax, dword ptr [rax] ; ret
0x000000000047c770 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c591 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004166fd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484fb9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416de9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004512c9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d5a9
0x0000000000442634 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442646 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442656 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442666 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442676 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d24a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb22 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443dc0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000442600 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443d11 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442561 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443d91 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004425e1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cd76 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471e9e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000418430 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418458 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490ebd : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490ed4 ; call rax
0x0000000000472041 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418781 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d301 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d351 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d391 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d3f1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d3e1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d3a1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460f6f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e71 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487e88 ; ret
0x0000000000418425 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419321 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x000000000048f655 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f667 ; ret
0x000000000048f670 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f687 ; ret
0x000000000048f8a0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f8b7 ; ret
0x000000000047e85c : mov eax, dword ptr [rdx + 4] ; ret
0x00000000004487e7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d9 ; ret
0x000000000043ae56 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418411 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418410 ; ret
0x0000000000485660 : mov eax, dword ptr [rip + 0x23725a] ; ret
0x000000000047f55b : mov eax, dword ptr [rip + 0x23ce47] ; mov qword ptr [rsi], rax ; ret
0x000000000047f4ea : mov eax, dword ptr [rip + 0x23cec0] ; ret
0x0000000000457b31 : mov eax, dword ptr [rip + 0x264341] ; ret
0x000000000044f631 : mov eax, dword ptr [rip + 0x26d2f1] ; ret
0x0000000000418761 : mov eax, dword ptr [rip + 0x2a09b9] ; ret
0x000000000048e242 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b0d1 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b0a4 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b0c1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e261 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046be1f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460fb9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461619 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x00000000004710af : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d3c6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a996 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401143 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000045323c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000449d8a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449d0d : mov eax, dword ptr [rsp + 0xc] ; jne 0x449ce2 ; neg eax ; jmp 0x449ce2
0x000000000040df0d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486dff : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ab3a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fe88 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a9d0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f9d3 : mov eax, eax ; jmp 0x46f9a5
0x00000000004499d9 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004227af : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004482f2 : mov eax, eax ; ret
0x0000000000474dd4 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000449102 : mov eax, eax ; syscall
0x0000000000473c11 : mov eax, eax ; vzeroupper ; ret
0x00000000004100cb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b374 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101e3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fc9e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d12 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041283d : mov eax, ebp ; syscall
0x00000000004845f3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004885e7 : mov eax, ebx ; jne 0x488605 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004886ce : mov eax, ebx ; jne 0x4886ed ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000410578 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410355 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a5b0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412b2b : mov eax, ebx ; pop rbx ; ret
0x00000000004844b7 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465fc5 : mov eax, ecx ; ret
0x000000000040db8b : mov eax, ecx ; syscall
0x0000000000412a23 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac65 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000412a54 : mov eax, edi ; ret
0x000000000041a865 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004106e0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046608e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000410789 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ff71 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004482f6 : mov eax, edx ; pop rbx ; ret
0x000000000041a871 : mov eax, edx ; ret
0x000000000040123a : mov eax, edx ; syscall
0x0000000000482867 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000413cfa : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fd04 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dd2d : mov eax, esi ; pop rbx ; ret
0x000000000041dd61 : mov eax, esi ; ret
0x00000000004490f2 : mov eax, esi ; syscall
0x000000000046ee38 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041283c : mov eax, r13d ; syscall
0x000000000046f9d2 : mov eax, r8d ; jmp 0x46f9a6
0x0000000000449101 : mov eax, r8d ; syscall
0x0000000000465fc4 : mov eax, r9d ; ret
0x00000000004125de : mov eax, r9d ; syscall
0x00000000004a8d74 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000049f264 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a633d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004733d8 : mov ebp, 0xf80148c0 ; ret
0x000000000047365c : mov ebp, 0xf80148c6 ; ret
0x00000000004a7aa6 : mov ebp, 0xfb67d10d ; ret
0x000000000046930e : mov ebp, 0xfffff730 ; call rax
0x000000000045dddc : mov ebp, 0xfffff758 ; call rax
0x000000000046c309 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x00000000004651e5 : mov ebp, 0xffffff40 ; call rax
0x0000000000412837 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d823 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048ea6a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48ea88
0x000000000046ff99 : mov ebp, eax ; jmp 0x46ff62
0x000000000047e576 : mov ebp, eax ; jmp 0x47e547
0x000000000048286d : mov ebp, ecx ; nop ; jmp rdx
0x00000000004a8ac4 : mov ebx, 0x1b5c347e ; jmp 0x4a8a9c
0x0000000000435077 : mov ebx, 0x46f00ff2 ; retf
0x0000000000403a41 : mov ebx, 0x48ffbfc5 ; mov edi, ebx ; call 0x4004c9
0x000000000042fbd4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000042fbf2 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000423cb9 : mov ebx, 0x85fffdc7 ; ror byte ptr [rdi], 0x84 ; retf
0x000000000044d571 : mov ebx, 0x89ffffbb ; ret
0x000000000044bf64 : mov ebx, 0xafb8341 ; je 0x44bf73 ; ret
0x00000000004a633b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000044a4ad : mov ebx, 0xe8ff894c ; retf 0x2ae
0x00000000004248fb : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f344 : mov ebx, 1 ; jmp 0x40f313
0x000000000045d15c : mov ebx, 1 ; jmp 0x45d12b
0x00000000004a90e4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045a6c6 : mov ebx, edi ; test rax, rax ; je 0x45a6d6 ; call rax
0x0000000000475550 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047fbdd : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000040db86 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004757fc : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6f79 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a8a4e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004943a5 : mov ecx, 0xbb10fff9 ; stc ; call qword ptr [rax]
0x0000000000494345 : mov ecx, 0xbbe0fff9 ; stc ; jmp rax
0x00000000004a6339 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000475a60 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046be5d : mov ecx, 1 ; jmp rax
0x000000000043864c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d9fe : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000047201b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043ae53 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a8f04 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a8f39 ; retf 0x32dd
0x000000000042fd73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430173 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444290 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004357e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435773 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435703 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435625 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435545 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435465 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435385 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444271 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481d17 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ca5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472651 : mov ecx, eax ; jmp 0x47261b
0x000000000044e92b : mov ecx, ebp ; call rbx
0x0000000000417210 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000447052 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041724a : mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004743d5 : mov ecx, esi ; call rbx
0x000000000048c6cc : mov edi, 0x148015b ; retf
0x000000000045f62a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x00000000004491ad : mov edi, 0xc7489066 ; ret 0xffc0
0x0000000000403a43 : mov edi, 0xdf8948ff ; call 0x4004c7
0x000000000045d675 : mov edi, 0xe9fffa2d ; retf
0x0000000000449824 : mov edi, 0xffffff9c ; syscall
0x000000000048d056 : mov edi, 1 ; call r14
0x000000000048cfac : mov edi, 1 ; call rax
0x000000000048dd1c : mov edi, 1 ; jmp rax
0x000000000040e9a4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044adcc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000412836 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045dddb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046930d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000004651e4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d6a1 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a8b4 : mov edi, dword ptr [rbp] ; call r12
0x000000000040df09 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a88e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c95f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f536 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f519 ; ret
0x00000000004a7d66 : mov edi, dword ptr [rdx] ; ret
0x00000000004884bf : mov edi, dword ptr [rsp + 0x10] ; call 0x484ef6
0x000000000048ef7e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000047585e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000482744 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000451005 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450ed0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004518e1 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000451ab9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451da3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x00000000004523db : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000045539f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004515e9 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x00000000004512f5 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045381a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455fc6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453237 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449c31 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040113e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416e1b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a991 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416726 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de6c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004039fb : mov edi, eax ; call 0x40043c
0x0000000000448b3a : mov edi, eax ; call 0x4004b0
0x00000000004039d3 : mov edi, eax ; call 0x4004c4
0x0000000000423614 : mov edi, eax ; call rcx
0x000000000042395c : mov edi, eax ; jmp 0x40043c
0x000000000040db90 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000474248 : mov edi, ebp ; add r15, r12 ; call 0x400497
0x0000000000468af0 : mov edi, ebp ; call 0x4004b1
0x0000000000421b33 : mov edi, ebp ; call 0x41dd74
0x0000000000489bde : mov edi, ebp ; call qword ptr [r14]
0x00000000004018de : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489cb2 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489d8e : mov edi, ebp ; call qword ptr [rcx]
0x00000000004582fc : mov edi, ebp ; call r12
0x000000000048ed5c : mov edi, ebp ; call r14
0x0000000000422996 : mov edi, ebp ; call rax
0x0000000000474281 : mov edi, ebp ; call rbx
0x000000000044a6aa : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000004125dc : mov edi, ebp ; mov eax, r9d ; syscall
0x00000000004743d2 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040df99 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045d672 : mov edi, ebx ; call 0x400440
0x0000000000403a46 : mov edi, ebx ; call 0x4004c4
0x000000000044ec2e : mov edi, ebx ; call r14
0x0000000000413406 : mov edi, ebx ; call rax
0x0000000000449aae : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000449d6c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004167bd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470f2f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004499de : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000409e3a : mov edi, edi ; call 0x4201b8
0x00000000004723a8 : mov edi, edi ; call r12
0x0000000000411333 : mov edi, edi ; call rax
0x000000000044f20b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004950b9 : mov edi, edx ; jmp qword ptr [rax]
0x0000000000484931 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x484919 ; mov rax, rsi ; ret
0x00000000004490f0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000004490ff : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000413a37 : mov edi, esi ; call 0x4004ac
0x0000000000458453 : mov edi, esi ; call rbx
0x0000000000458731 : mov edi, esi ; call rdx
0x000000000041d0b1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x419359
0x000000000048dd74 : mov edi, esp ; call r15
0x00000000004720d0 : mov edi, esp ; call rbx
0x00000000004056d9 : mov edi, esp ; jmp 0x4056aa
0x0000000000449e99 : mov edi, esp ; mov eax, 0x4f ; syscall
0x00000000004125db : mov edi, r13d ; mov eax, r9d ; syscall
0x00000000004481f6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412ba6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000455019 : mov edx, 0x1d0 ; call 0x401af7
0x0000000000455094 : mov edx, 0x305 ; call 0x401af7
0x00000000004558cb : mov edx, 0x309 ; call 0x401af7
0x0000000000434ff7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000042fdd4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042fdf2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004857f9 : mov edx, 0x50 ; call 0x401af7
0x000000000044bdd6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000040498c : mov edx, 0x8949ffff ; ret 0x149
0x0000000000454e2e : mov edx, 0x89fffff3 ; retf 0xe283
0x0000000000494325 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004942a5 : mov edx, 0xbce0fff9 ; stc ; jmp rax
0x00000000004a721e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d109e
0x0000000000490282 : mov edx, 0xe1750022 ; pop rbx ; ret
0x000000000048bee1 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000450ca7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e7dc : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045af44 : mov edx, 8 ; mov eax, ecx ; syscall
0x000000000045872a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048de70 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484f99 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043eb1f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d24d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484fad : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ed59 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004442b2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004442a3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004442f3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444303 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f7b1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042fb70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f401 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004448a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000435850 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004448f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435691 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000444881 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000444261 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482749 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cfa9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423619 : mov edx, eax ; jmp 0x4235cc
0x000000000045651a : mov edx, eax ; jmp 0x4564d1
0x0000000000456651 : mov edx, eax ; jmp 0x456610
0x000000000045691f : mov edx, eax ; jmp 0x4568d6
0x0000000000456996 : mov edx, eax ; jmp 0x45694d
0x000000000046f532 : mov edx, eax ; jmp 0x46f500
0x0000000000475fae : mov edx, eax ; jmp 0x475fa2
0x000000000040db9c : mov edx, eax ; mov eax, 0xea ; syscall
0x0000000000449d6e : mov edx, eax ; mov eax, 3 ; syscall
0x0000000000413a6e : mov edx, ebp ; add rbp, r13 ; call 0x4004af
0x0000000000489bd9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489cad : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d89 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b93 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475750 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044be51 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000004039f8 : mov edx, edi ; mov rdi, rax ; call 0x40043f
0x0000000000447d18 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000040e1b9 : mov edx, esp ; call 0x40de58
0x00000000004759bd : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040db9b : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000455dc9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453312 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475b89 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000450bdc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a8d26 : mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004759bf : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8dc3 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000494e70 : mov esi, 0x64fffa28 ; xor dl, bh ; jmp rsp
0x00000000004854b6 : mov esi, 0x6600236c ; add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a6eaa : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004965f4 : mov esi, 0x77fffb72 ; jb 0x4965fd ; jmp qword ptr [rcx]
0x000000000044bfe8 : mov esi, 0x80 ; syscall
0x000000000044fd92 : mov esi, 0x83480147 ; ret
0x000000000044e2f5 : mov esi, 0xae740026 ; call 0x45ad97
0x000000000047e8e9 : mov esi, 0xaf0f4907 ; retf 0x14c
0x00000000004942ed : mov esi, 0xb120fff9 ; stc ; jmp rax
0x00000000004942cd : mov esi, 0xb150fff9 ; stc ; call qword ptr [rax]
0x000000000046481e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004a633e : mov esi, 0xc2c1c0bf ; ret
0x00000000004ab818 : mov esi, 0xd1fffe10 ; adc dh, bh ; jmp rsp
0x0000000000448184 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000460fbc : mov esi, 1 ; jmp rax
0x000000000046f09c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a828 : mov esi, 2 ; jmp rax
0x000000000044a83b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x00000000004591c4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x4591d6 ; call rsi
0x000000000048d69d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f20e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ef7b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048de25 : mov esi, dword ptr [rsi] ; call r12
0x0000000000447083 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e926 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422991 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000451ab4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004515e4 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455fc1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004203a9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x0000000000449aac : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004499dc : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000413a34 : mov esi, ebp ; mov rdi, r14 ; call 0x4004af
0x0000000000423611 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421fc2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000423957 : mov esi, ebp ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400441
0x00000000004125d9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000421b30 : mov esi, ebx ; mov rdi, r13 ; call 0x41dd77
0x000000000047fbe0 : mov esi, ebx ; syscall
0x000000000044a515 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000449822 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048dd1a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045ddd8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e843 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e828 ; ret
0x000000000044974c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044979a : mov esi, edx ; mov eax, 5 ; syscall
0x00000000004756fc : mov esi, edx ; mov eax, 6 ; syscall
0x00000000004651e1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dd71 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489bdc : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489cb0 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d8c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b96 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470f2c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000444158 : mov esp, 0x1d8d4cd2 ; iretd ; syscall
0x00000000004441d2 : mov esp, 0x1d8d4cd2 ; push rbp ; syscall
0x000000000040d2db : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b491 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4c1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4b1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004948b0 : mov esp, 0x62fffa02 ; or bh, dl ; jmp rdx
0x00000000004047af : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417ab2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004517fd : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000451c7f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004942e9 : mov esp, 0xbe90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004abd98 : mov esp, 0xc4000004 ; xchg eax, edx ; cmc ; call rsp
0x0000000000440bd3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046fea4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000042b57b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b4a1 : mov esp, 0xf80148c0 ; ret
0x000000000042b992 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x448178
0x00000000004006af : mov esp, eax ; call 0x448638
0x000000000048286a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d827 : mov esp, ecx ; ret
0x000000000044add0 : mov esp, esi ; call r15
0x0000000000452a8d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x000000000045700d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048af93 : mov qword ptr [r10], r8 ; ret
0x0000000000438640 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c120 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470b78 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470bb8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471bb7 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c186 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c1a0 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000470b7c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471c39 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417534 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c124 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484fbc : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484f0c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484fb0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d341 : mov qword ptr [rax], rdx ; ret
0x0000000000471f2a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c830 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048117e : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000040359b : mov qword ptr [rbp - 0x98], rcx ; call 9
0x000000000047d1d0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004588b1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b26 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481e2d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f0e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047fb1d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485cc2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485c98
0x0000000000481d62 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488554 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488628 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004166b0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041834c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485782 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a588 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410020 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000048308e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000444abc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000044442c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044440c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044446f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044448f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444450 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416592 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b7d4 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b7a6 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004165c2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d380 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000444a7c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004443cc : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444a9c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000004443ec : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435627 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355b7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435547 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354d7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044497a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435467 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044431a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044499a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000004353f7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044432a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004449ba : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435387 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044433a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000004844b3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000483013 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004847fd : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416596 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447dea : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447076 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d32b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f294 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f7e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f61b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e37 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9eb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d37 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbbc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fdbc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c18 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b88 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482f09 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f298 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f44b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f547 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f493 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468859 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482ed8 : mov qword ptr [rdi], r9 ; ret
0x0000000000444906 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004442f6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444306 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444317 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444327 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444337 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004442e7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043538b : mov qword ptr [rdi], rcx ; ret
0x0000000000447f6e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004448f3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435693 : mov qword ptr [rdi], rdx ; ret
0x000000000043863d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044707b : mov qword ptr [rdi], rsi ; ret
0x0000000000412ba4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443e9a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000044268a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443eba : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004426aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443eda : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004426ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046b4af : mov qword ptr [rdx + 8], rax ; jmp 0x46b485
0x0000000000443d6a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004425ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004184bf : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443d13 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442563 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484f9c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418427 : mov qword ptr [rdx], rax ; ret
0x0000000000484ae7 : mov qword ptr [rip + 0x23757a], rax ; ret
0x000000000047f3f4 : mov qword ptr [rip + 0x23cfb5], rax ; ret
0x000000000041f8d5 : mov qword ptr [rip + 0x299f84], rax ; ret
0x00000000004197fb : mov qword ptr [rip + 0x2a005e], rax ; ret
0x00000000004192f6 : mov qword ptr [rip + 0x2a04f3], rax ; ret
0x00000000004192ce : mov qword ptr [rip + 0x2a0513], rax ; ret
0x00000000004192ae : mov qword ptr [rip + 0x2a052b], rax ; ret
0x00000000004191a4 : mov qword ptr [rip + 0x2a069d], rax ; ret
0x0000000000419194 : mov qword ptr [rip + 0x2a06a5], rax ; ret
0x0000000000419182 : mov qword ptr [rip + 0x2a06a7], rdx ; ret
0x0000000000419144 : mov qword ptr [rip + 0x2a06ad], rax ; ret
0x0000000000419134 : mov qword ptr [rip + 0x2a06c5], rax ; ret
0x00000000004017c2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004789c0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f561 : mov qword ptr [rsi], rax ; ret
0x000000000047e8a8 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045d1f9 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45d1c7
0x00000000004512cb : mov qword ptr [rsp + 0x50], rax ; call 0x44d5a7
0x000000000041ca9e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040953a : mov qword ptr [rsp + 8], rcx ; call 0x406047
0x000000000041132d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489d32 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000485c72 : mov qword ptr [rsp], rcx ; call 0x422706
0x0000000000413401 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416714 : mov qword ptr [rsp], rdi ; call 0x4129a6
0x000000000045acb5 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447075 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044be50 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434ff6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000042fdf1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004a721d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d109f
0x000000000045af43 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000435076 : mov r11d, 0x46f00ff2 ; retf
0x000000000042fbf1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040f343 : mov r11d, 1 ; jmp 0x40f314
0x000000000045d15b : mov r11d, 1 ; jmp 0x45d12c
0x00000000004007e5 : mov r12, rax ; call 0x448179
0x00000000004006ae : mov r12, rax ; call 0x448639
0x000000000044adcf : mov r12d, r14d ; call r15
0x000000000048d69c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d6a0 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004056d8 : mov r15, r12 ; jmp 0x4056ab
0x000000000048af90 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d94e : mov r8b, 0xe8 ; retf
0x00000000004033f7 : mov r8b, r13b ; ret 0x578
0x000000000044e92a : mov r9, r13 ; call rbx
0x00000000004743d4 : mov r9, r14 ; call rbx
0x00000000004179c0 : mov rax, -1 ; ret
0x000000000045ae80 : mov rax, 0xf ; syscall
0x00000000004749f0 : mov rax, 1 ; ret
0x0000000000474a00 : mov rax, 2 ; ret
0x0000000000474a10 : mov rax, 3 ; ret
0x0000000000474a20 : mov rax, 4 ; ret
0x0000000000474a30 : mov rax, 5 ; ret
0x0000000000474a40 : mov rax, 6 ; ret
0x0000000000474a50 : mov rax, 7 ; ret
0x0000000000486dfe : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cd75 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118c0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000472043 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481c20 : mov rax, qword ptr [rax + 8] ; ret
0x00000000004592bf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x4592d3 ; call rax
0x000000000046be59 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045acce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000460a2c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d2d2 : mov rax, qword ptr [rax] ; ret
0x000000000047c590 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004166fc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484fb8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416de8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442560 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490ebc : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490ed5 ; call rax
0x0000000000472040 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418780 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d300 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d350 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d390 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d3f0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d3e0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d3a0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460f6e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e70 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487e89 ; ret
0x0000000000418424 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418410 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418411 ; ret
0x000000000047f4e9 : mov rax, qword ptr [rip + 0x23cec0] ; ret
0x0000000000457b30 : mov rax, qword ptr [rip + 0x264341] ; ret
0x000000000044f630 : mov rax, qword ptr [rip + 0x26d2f1] ; ret
0x0000000000418760 : mov rax, qword ptr [rip + 0x2a09b9] ; ret
0x000000000048e241 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b0d0 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b0a3 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b0c0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e260 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046be1e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460fb8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461618 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d3c5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a995 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401142 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045323b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040df0c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048ab39 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ee37 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044ad5d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a9cf : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004227ae : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473c10 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b373 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101e2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413e36 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4fa : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414881 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410354 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a5af : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000412b2a : mov rax, rbx ; pop rbx ; ret
0x000000000047e8ab : mov rax, rcx ; ret
0x0000000000412a22 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac64 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000412a53 : mov rax, rdi ; ret
0x000000000041a864 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047549a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a21c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004482f5 : mov rax, rdx ; pop rbx ; ret
0x000000000041a870 : mov rax, rdx ; ret
0x000000000041dd2c : mov rax, rsi ; pop rbx ; ret
0x000000000041dd60 : mov rax, rsi ; ret
0x000000000048d822 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048ea69 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48ea89
0x000000000048286c : mov rbp, r9 ; nop ; jmp rdx
0x000000000046ff98 : mov rbp, rax ; jmp 0x46ff63
0x000000000047e575 : mov rbp, rax ; jmp 0x47e548
0x000000000045a6c5 : mov rbx, rdi ; test rax, rax ; je 0x45a6d7 ; call rax
0x000000000047554f : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047fbdc : mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004442d0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481d16 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481ca4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472650 : mov rcx, rax ; jmp 0x47261c
0x0000000000447051 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b48b : mov rdi, qword ptr [r13] ; call r12
0x000000000040df08 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e9a3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044adcb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045ddda : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046930c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004651e3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a8b3 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a88d : mov rdi, qword ptr [rbx] ; call r12
0x00000000004884be : mov rdi, qword ptr [rsp + 0x10] ; call 0x484ef7
0x000000000048ef7d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000451004 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004518e0 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451ab8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451da2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004523da : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045539e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004515e8 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453819 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455fc5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416725 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de6b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dd73 : mov rdi, r12 ; call r15
0x00000000004720cf : mov rdi, r12 ; call rbx
0x0000000000449e98 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000474247 : mov rdi, r13 ; add r15, r12 ; call 0x400498
0x0000000000421b32 : mov rdi, r13 ; call 0x41dd75
0x00000000004582fb : mov rdi, r13 ; call r12
0x000000000048ed5b : mov rdi, r13 ; call r14
0x00000000004921d0 : mov rdi, r13 ; call rax
0x000000000040df98 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000413a36 : mov rdi, r14 ; call 0x4004ad
0x0000000000458452 : mov rdi, r14 ; call rbx
0x0000000000458730 : mov rdi, r14 ; call rdx
0x0000000000409e39 : mov rdi, r15 ; call 0x4201b9
0x00000000004723a7 : mov rdi, r15 ; call r12
0x0000000000411332 : mov rdi, r15 ; call rax
0x000000000044f20a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004039fa : mov rdi, rax ; call 0x40043d
0x0000000000448b39 : mov rdi, rax ; call 0x4004b1
0x00000000004039d2 : mov rdi, rax ; call 0x4004c5
0x0000000000423613 : mov rdi, rax ; call rcx
0x000000000042395b : mov rdi, rax ; jmp 0x40043d
0x000000000040db8f : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000422995 : mov rdi, rbp ; call rax
0x0000000000474280 : mov rdi, rbp ; call rbx
0x000000000044a6a9 : mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004743d1 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000045d671 : mov rdi, rbx ; call 0x400441
0x0000000000403a45 : mov rdi, rbx ; call 0x4004c5
0x000000000044ec2d : mov rdi, rbx ; call r14
0x0000000000413405 : mov rdi, rbx ; call rax
0x00000000004167bc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470f2e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cfa8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ed58 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048de6f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484f98 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484fac : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f400 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435690 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482748 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000040e1b8 : mov rdx, r12 ; call 0x40de59
0x0000000000489bd8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489cac : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d88 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b92 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004039f7 : mov rdx, r15 ; mov rdi, rax ; call 0x400440
0x000000000046f531 : mov rdx, r8 ; jmp 0x46f501
0x0000000000423618 : mov rdx, rax ; jmp 0x4235cd
0x0000000000456519 : mov rdx, rax ; jmp 0x4564d2
0x0000000000456650 : mov rdx, rax ; jmp 0x456611
0x000000000045691e : mov rdx, rax ; jmp 0x4568d7
0x0000000000456995 : mov rdx, rax ; jmp 0x45694e
0x0000000000475fad : mov rdx, rax ; jmp 0x475fa3
0x0000000000413a6d : mov rdx, rbp ; add rbp, r13 ; call 0x4004b0
0x000000000047574f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000447d17 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048de24 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ef7a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x00000000004591c3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x4591d7 ; call rsi
0x000000000044f20d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e925 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422990 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004203a8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489bdb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489caf : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d8b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b95 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413a33 : mov rsi, r13 ; mov rdi, r14 ; call 0x4004b0
0x000000000048dd70 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x00000000004499db : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423610 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004125d8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000421b2f : mov rsi, rbx ; mov rdi, r13 ; call 0x41dd78
0x000000000047fbdf : mov rsi, rbx ; syscall
0x0000000000449821 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048dd19 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e842 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e829 ; ret
0x000000000044974b : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000449799 : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000004756fb : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482869 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d826 : mov rsp, rcx ; ret
0x000000000046c946 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438665 : mov word ptr [r9 - 2], cx ; ret
0x00000000004b0e68 : mov word ptr [rbp], ss ; add ah, dl ; add bh, dl ; jmp qword ptr [rdx]
0x00000000004449fc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044436c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444b04 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444454 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004358c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004448c8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004442a8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044491a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000004442ea : mov word ptr [rdi + 8], dx ; ret
0x0000000000447dfa : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000447094 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f99c : mov word ptr [rdi - 2], cx ; ret
0x000000000042f7b4 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f998 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444273 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446dd2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004358cb : mov word ptr [rdi], cx ; ret
0x0000000000447f84 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000444883 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435933 : mov word ptr [rdi], dx ; ret
0x0000000000438662 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000447099 : mov word ptr [rdi], si ; ret
0x0000000000443de8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000442628 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443d93 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004425e3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446dd5 : mov word ptr [rsi - 2], cx ; ret
0x0000000000463590 : mov word ptr [rsp + rax], es ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf3e8
0x00000000004047db : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000447093 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000447567 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000004a8e63 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004a8ac1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000482739 : movabs dword ptr [0x894f75c085fffd86], eax ; ret
0x00000000004a6f07 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x000000000047534b : movabs eax, dword ptr [0x8948c08548fffaa5] ; ret
0x00000000004a77ba : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042df22 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042df1e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dfcc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040db7c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000444340 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bbd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044450d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043559f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043552f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354bf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043544f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b5d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004444ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004353df : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004444cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043536f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004444ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043598f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043591f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043583f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357cf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043575f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043567f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043560f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447d6d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000434afb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434b6b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444354 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444397 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444387 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444408 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444368 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444509 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043531a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435374 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444341 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bbe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044450e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004355a0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435530 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354c0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435450 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b5e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004444ae : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000004353e0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004444ce : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435370 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000004444ee : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435990 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435920 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435840 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357d0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435760 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356f0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435680 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435610 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447cf5 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447d6e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000434afc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434b6c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352a7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435227 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435197 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435117 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435097 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435017 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f97 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f17 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e97 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e17 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d97 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d17 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c87 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bf7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449d5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444355 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004443a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444398 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444388 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444409 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444369 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044450a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043531b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435375 : movq qword ptr [rdi], mm1 ; ret
0x000000000045797c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446ff5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000495109 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rax
0x00000000004a7be2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8e3d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8e96 ; jmp 0x4a8dd7
0x0000000000446fe7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a6ac5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047facc : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004b5e6d : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xa0 ; std ; jmp qword ptr [rax]
0x000000000049510d : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp qword ptr [rax]
0x00000000004a90dd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a9475 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8d31 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046bf07 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000041fb47 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004ac563 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x00000000004943d5 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rax
0x00000000004b0241 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004a77c1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048af34 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480ffb : movsx eax, cl ; neg eax ; ret
0x00000000004810a0 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000424991 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432f7b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d9fb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048c1d8 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004021ae : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048cad9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b187 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048af61 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c711 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048af62 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000416bce : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044be81 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a7b60 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004021af : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044d6af : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d638 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000004613ed : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047c26d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046ec27 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c712 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x000000000044704d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000409e3e : movsxd rax, dword ptr [rcx] ; add cl, ch ; retf
0x000000000047c26e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047cb95 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048b188 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f257 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047cb96 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000401f46 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004493d4 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000048cada : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046eabb : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004481b8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448272 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048c1d9 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x00000000004853ed : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446c87 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446c34 : movsxd rax, ecx ; ret
0x00000000004a898a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000446c79 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c32d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444109 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000423e86 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x0000000000432f7c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042d9fc : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042c32e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044410a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000424992 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004481e0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446cc7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d547 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a4bf : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a4c0 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040d548 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042dacf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042dad0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d25f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000449649 : movsxd rdx, eax ; jmp 0x4493f3
0x0000000000459fc0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000459fc1 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000004acd95 : movsxd rsi, esi ; jmp rdx
0x00000000004460ec : movsxd rsi, esi ; ret 0x7520
0x00000000004471af : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447236 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447237 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004471b0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004471ab : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004471aa : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447232 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f92 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447119 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000004470f6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446f8f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048af35 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475991 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048852c : movzx eax, al ; neg eax ; ret
0x0000000000484df9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e9a0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415610 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e18e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416811 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412cfe : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041889f : movzx eax, byte ptr [rax] ; ret
0x000000000046be1a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425d28 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c0c0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc00 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d43 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000416820 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d10 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415611 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448240 : movzx eax, cl ; pop rbx ; ret
0x000000000044674a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446749 ; ret
0x00000000004467fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4467f9 ; ret
0x000000000042d1e4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447068 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425d40 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0c3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dae3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dacb ; ret
0x0000000000425f01 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a378 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042c048 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425d93 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446114 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446174 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446164 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446154 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446144 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446134 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446124 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004352c0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042cf97 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000004460fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004359a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042bc03 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042bc29 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435240 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435930 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004734a7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004729be : neg dl ; clc ; dec dword ptr [rax + 1] ; ret
0x0000000000449d13 : neg eax ; jmp 0x449cdc
0x00000000004496d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004188df : neg eax ; ret
0x0000000000494004 : nop ; adc cl, bh ; call rax
0x0000000000494014 : nop ; adc eax, 0x16d0fff9 ; stc ; call qword ptr [rax]
0x0000000000494804 : nop ; adc edx, edi ; jmp qword ptr [rax]
0x00000000004b026c : nop ; add byte ptr [r8], al ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004349f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004ae1d8 : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rax], eax ; add byte ptr [rax], dl ; retf
0x000000000044b4b7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b4c8 ; call r12
0x000000000042c64c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000475bcc : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044eadf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487ecf : nop ; add rsp, 8 ; ret
0x00000000004857df : nop ; call rax
0x000000000044f210 : nop ; call rsi
0x0000000000494cfc : nop ; cmp dl, bh ; jmp qword ptr [rax]
0x000000000044c18f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c188 ; ret
0x000000000048286f : nop ; jmp rdx
0x00000000004ade10 : nop ; mov ah, 0xf6 ; call qword ptr [rsi]
0x000000000042f5cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419323 : nop ; mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x000000000042f7af : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048545f : nop ; mov eax, 0x27 ; syscall
0x000000000047568f : nop ; mov eax, 0x3f ; syscall
0x000000000044be7f : nop ; mov eax, 0x63 ; syscall
0x0000000000474f5f : nop ; mov eax, 0xc9 ; syscall
0x000000000044bf04 : nop ; mov eax, 0xca ; syscall
0x0000000000416c3f : nop ; mov eax, 0xffffffff ; ret
0x000000000047fe6f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000042fb6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044489f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004942ec : nop ; mov esi, 0xb120fff9 ; stc ; jmp rax
0x00000000004942e8 : nop ; mov esp, 0xbe90fff9 ; stc ; jmp qword ptr [rax]
0x0000000000471f29 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004191a3 : nop ; mov qword ptr [rip + 0x2a069d], rax ; ret
0x0000000000419193 : nop ; mov qword ptr [rip + 0x2a06a5], rax ; ret
0x0000000000419143 : nop ; mov qword ptr [rip + 0x2a06ad], rax ; ret
0x0000000000419133 : nop ; mov qword ptr [rip + 0x2a06c5], rax ; ret
0x000000000048d34f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b0bf : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e25f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000044433f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004b5e6c : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xa0 ; std ; jmp qword ptr [rax]
0x0000000000494834 : nop ; or bh, dl ; call qword ptr [rax]
0x000000000046f29f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f26e
0x000000000046f29e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f26f
0x0000000000494a40 : nop ; or dl, bh ; call qword ptr [rax]
0x0000000000493ff4 : nop ; or edi, ecx ; call rax
0x00000000004004cf : nop ; ret
0x0000000000494024 : nop ; sbb bh, cl ; call rax
0x00000000004b1bb0 : nop ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000049417d : nop ; stc ; call qword ptr [rcx]
0x000000000049413d : nop ; stc ; call rcx
0x000000000041845f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049441c : nop ; test al, 0xf9 ; jmp rax
0x000000000049512c : nop ; wait ; cli ; jmp qword ptr [rax]
0x0000000000494b24 : nop ; xor al, 0xfa ; jmp qword ptr [rax]
0x00000000004148af : nop ; xor eax, eax ; ret
0x000000000040ea68 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419df8 : nop dword ptr [rax + rax] ; call rax
0x00000000004859f8 : nop dword ptr [rax + rax] ; call rbx
0x000000000044427b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004118c8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x000000000044664b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004749bc : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004235ad : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x00000000004496bc : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x0000000000472025 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000449dbd : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x0000000000449b3c : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041a86c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044886c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419ded : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418571 : nop dword ptr [rax] ; ret
0x00000000004147ed : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4147bd
0x0000000000416d75 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000449a39 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401234 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004859f7 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea67 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419df7 : nop word ptr [rax + rax] ; call rax
0x0000000000484d6a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000004747a2 : nop word ptr [rax + rax] ; ret
0x000000000044844a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004122f9 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412319
0x00000000004122f8 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x41231a
0x000000000042a4f7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a525 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475ab2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000475a61 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041dd5c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000429518 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473de8 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046bf08 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468f75 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000425d26 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041dd2a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000485c74 : or al, 0x24 ; call 0x422704
0x0000000000413403 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047fac9 : or al, 0x37 ; jae 0x47fa77 ; xor eax, eax ; ret
0x00000000004246a0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046f2a2 : or al, 0x40 ; jmp 0x46f26b
0x000000000046f2a1 : or al, 0x40 ; jmp 0x46f26c
0x00000000004af9e8 : or al, 0x41 ; add byte ptr [rax], al ; je 0x4afa6e ; stc ; call rsp
0x0000000000449d8d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416713 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129a7
0x0000000000401141 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004b02e8 : or al, 0x4a ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004851b3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046ed53 : or al, 0x7e ; ret 0x8944
0x0000000000400dd0 : or al, 0x81 ; retf 0x440
0x0000000000458873 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458887 ; ret
0x000000000045e23b : or al, 0x83 ; ret
0x0000000000423096 : or al, 0x83 ; retf 0x8902
0x00000000004481e1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000004634ca : or al, 0x89 ; ret 0xc689
0x000000000044826b : or al, 0x89 ; ret 0xe283
0x0000000000424993 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043ae54 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432f7d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d9fd : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000475b88 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042c32f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044410b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042da01 : or al, 0xb ; jmp r9
0x000000000044410f : or al, 0xb ; jmp rcx
0x0000000000485a75 : or al, 0xca ; jmp 0x485a85
0x00000000004114e8 : or al, 0xe8 ; ret 0xec
0x00000000004567af : or al, 0xe9 ; ret
0x0000000000471ccc : or al, 0xeb ; ret 0x5590
0x0000000000403f2f : or al, 0xf ; retf 0xd289
0x00000000004354c3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466c2d : or al, 0xf6 ; ret 0xf01
0x0000000000493ff9 : or al, 0xf9 ; call qword ptr [rax]
0x0000000000471cc6 : or al, 0xfa ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000422e51 : or al, 9 ; ret 0xbae9
0x000000000047fca3 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473d9b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a6d7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0c1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a705 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048d07a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044a781 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000428028 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ac379 : or al, byte ptr [rax] ; add byte ptr [rdx + rbp - 0xa], ah ; call qword ptr [rdx]
0x000000000040760d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aa9c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c746 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b4053 : or al, byte ptr [rcx] ; ret
0x000000000040953e : or al, ch ; cld ; retf 0xffff
0x000000000040949d : or al, ch ; popfq ; retf
0x00000000004095e4 : or al, ch ; push rsi ; retf 0xffff
0x000000000040bc77 : or al, ch ; ret
0x000000000048d348 : or al, ch ; ret 0xf808
0x0000000000472758 : or al, ch ; ret 0xf8dc
0x000000000040ad78 : or al, ch ; ret 0xffb2
0x000000000040716f : or al, ch ; retf
0x000000000041d0b7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000493ff1 : or bh, cl ; call qword ptr [rax - 0x2f0006f5]
0x0000000000424580 : or bh, dh ; ret 0
0x0000000000494835 : or bh, dl ; call qword ptr [rax]
0x0000000000494a35 : or bh, dl ; jmp qword ptr [rax + 0x10fffa09]
0x00000000004948b5 : or bh, dl ; jmp rdx
0x000000000041a86a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046b4b1 : or bl, bpl ; retf
0x0000000000405dbd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048ea6d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b4b2 : or bl, ch ; retf
0x0000000000435683 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a527 : or bl, dh ; ret
0x000000000044fe86 : or byte ptr [r15], 0x8e ; ret 1
0x00000000004116c1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e10d : or byte ptr [r8 + 0x39], cl ; ret
0x00000000004511d3 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004847ff : or byte ptr [r8 + 2], r15b ; ret
0x000000000041178f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f60a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004425b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047faf5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478e82 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b892 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000484844 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048cad7 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442677 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004116c2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412ef5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e10e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452a88 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000482d28 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000418899 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad1fe : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x00000000004511d4 : or byte ptr [rax + 0xf], cl ; ret
0x0000000000419946 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048698c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d8f1 : or byte ptr [rax + 1], cl ; ret
0x0000000000484800 : or byte ptr [rax + 2], bh ; ret
0x00000000004039cf : or byte ptr [rax + rsi + 0x48], dh ; mov edi, eax ; call 0x4004c8
0x0000000000411790 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000485a72 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a88
0x00000000004191e3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a994 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044b372 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe14410db
0x00000000004425bd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f60b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a5ae : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004167bb : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046b4ae : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x00000000004425b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f9b0 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000410e0b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004856a3 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046b4ad : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004895fa : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f538 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478e83 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b893 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000048984e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047faf6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004898a7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041ee70 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b720 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044ad42 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b737 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dda2 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c600 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411da6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047273e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ad25 : or byte ptr [rax], al ; add al, ch ; ret
0x000000000041a71d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041a50b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a9a7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e261 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8e5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417537 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045117a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045b0a2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045af45 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004482b5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e9f1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000449b41 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004281a8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041f746 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f719 ; ret
0x000000000042071c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d25c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f91e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d2cf : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485bab : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482c81 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004858c6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d33e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482903 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041cee2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004922e3 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044a3ac : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449ec3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486c47 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004137c6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401ba5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b1fe : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041de27 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041de26 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046f2a0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f26d
0x00000000004631a7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fd09 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044bfe4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b7a9 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004845eb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484845 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x00000000004816dd : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004792d2 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004792a4 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000410788 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000410577 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a525 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fd03 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048cad8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ed39 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004883eb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004835e0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489cab : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411331 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004039f6 : or byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, rax ; call 0x400441
0x00000000004845f2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b26b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442678 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004209b8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d43a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044aa3a : or byte ptr [rcx - 0x77], cl ; retf
0x00000000004033f3 : or byte ptr [rcx - 0x77ba7639], 0xe8 ; ret 0x578
0x000000000044aa06 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cee6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041489a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a96fe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bd20 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bc70 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000048f79f : or byte ptr [rdi + 0x58b48ff], dh ; out dx, eax ; retf
0x000000000045471b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000454aa7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fe87 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000042358d : or byte ptr [rdi], al ; add byte ptr [rax + 0x31], dl ; shr al, 0x48 ; ret
0x0000000000422d12 : or byte ptr [rdi], al ; add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0xc2 ; retf
0x000000000040eea2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475990 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048852b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000403f24 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042dfcb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041afb6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000483243 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401201 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000471aa3 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x0000000000494820 : or byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x0000000000457c31 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410c24 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410517 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000423b22 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d62e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486dfd : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b745 : or cl, ch ; ret
0x0000000000413a96 : or cl, ch ; retf
0x000000000047f8a9 : or cl, ch ; retf 0xfffd
0x00000000004a90e2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004355a3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f675 : or dh, bl ; ret
0x00000000004a8f0a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044cffc : or dh, dh ; ret 0x8902
0x000000000041ab07 : or dh, dh ; ret 0xf02
0x0000000000494a45 : or dl, bh ; call qword ptr [rax + 0x10fffa07]
0x0000000000494a41 : or dl, bh ; call qword ptr [rax]
0x00000000004948c5 : or dl, bh ; call rdx
0x0000000000494a05 : or dl, bh ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000494a01 : or dl, bh ; jmp qword ptr [rax]
0x000000000042071a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d63a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040da0b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000428de7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a82e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440e3e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047298b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488c30 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a8b7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a7f5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000411d67 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044a6ad : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004ac2a5 : or dword ptr [rax], eax ; add byte ptr [rax], cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004297f8 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045eb45 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f43 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a3797 : or dword ptr [rax], ecx ; retf
0x0000000000482e11 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a8853 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042d766 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412f20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004558cc : or dword ptr [rbx], eax ; add byte ptr [rax], al ; call 0x401af6
0x0000000000480fd8 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046f442 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046cbf0 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a90ae : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000424527 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fe66 : or dword ptr [rip + 0x23a37b], 1 ; pop rbx ; ret
0x00000000004b4050 : or eax, 0x10a0303 ; ret
0x00000000004b40a8 : or eax, 0x1370303 ; ret
0x00000000004946b1 : or eax, 0x1382fffa ; cli ; call qword ptr [rdx]
0x0000000000494631 : or eax, 0x1396fffa ; cli ; jmp qword ptr [rsi]
0x0000000000444b61 : or eax, 0x1c478d48 ; ret
0x00000000004b4040 : or eax, 0x34b0303 ; ret
0x00000000004b4074 : or eax, 0x35b0303 ; ret
0x000000000046f262 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046eaca : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a93a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440452 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042a407 : or eax, 0x83480000 ; ret 0x4910
0x000000000043dd81 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a435 : or eax, 0x83480000 ; ret 0xeb10
0x000000000042a3fd : or eax, 0x83490000 ; jmp 0x42a41d
0x0000000000427d28 : or eax, 0x894d0000 ; retf
0x00000000004910d2 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000474622 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004a6f01 : or eax, 0xcad7947e ; jmp 0x4a6ead
0x0000000000494829 : or eax, 0xd30fffa ; cli ; call rax
0x00000000004947e9 : or eax, 0xd3afffa ; cli ; jmp rax
0x00000000004946a9 : or eax, 0xd6cfffa ; cli ; call qword ptr [rdx]
0x000000000049efb9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049efc5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a9093 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000454365 : or eax, 0xea810000 ; ret 0
0x00000000004a8d33 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000435453 : or eax, 0xf7f0ff3 ; ret
0x00000000004496dd : or eax, 0xffffffff ; ret
0x000000000042c089 : or eax, 1 ; ret
0x000000000042a5e7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df21 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a615 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a751 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000427ea8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad200 : or eax, dword ptr [rdx] ; jae 0x4ad212 ; ret
0x00000000004b5382 : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000418454 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000044f827 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rax
0x0000000000403b93 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000412a3d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046af41 : or ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000435613 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004148c6 : or ebx, esi ; ret
0x000000000042339f : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004137b7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000410738 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000464d26 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f9536
0x00000000004242dc : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049114f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482ae3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x000000000049402d : or ecx, edi ; inc dword ptr [rax] ; and ecx, edi ; jmp qword ptr [rax]
0x0000000000493ff5 : or edi, ecx ; call rax
0x00000000004ab7ed : or edi, esi ; call qword ptr [rcx]
0x00000000004b2f41 : or edi, esp ; jmp qword ptr [rax]
0x000000000044a709 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000494a3d : or edx, edi ; call qword ptr [rax + 0x10fffa08]
0x0000000000494a39 : or edx, edi ; call qword ptr [rax]
0x00000000004948bd : or edx, edi ; call rdx
0x00000000004949fd : or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004949f9 : or edx, edi ; jmp qword ptr [rax]
0x0000000000435533 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045b0b4 : or esi, ebx ; ret
0x0000000000412f21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004aca0a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044a708 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000435682 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435612 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355a2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435532 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5381 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f8a8 : or r9b, bpl ; retf 0xfffd
0x0000000000457c30 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b40a7 : or rax, 0x1370303 ; ret
0x00000000004b403f : or rax, 0x34b0303 ; ret
0x00000000004b4073 : or rax, 0x35b0303 ; ret
0x000000000046f261 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046eac9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004496dc : or rax, 0xffffffffffffffff ; ret
0x000000000042a687 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad1ff : or rax, qword ptr [rdx] ; jae 0x4ad213 ; ret
0x00000000004aca09 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000424856 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424716 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000449ff0 : out 0x31, eax ; sar byte ptr [rdx + 0x80000], 0xe8 ; ret
0x000000000048dd75 : out 0x41, eax ; call rdi
0x0000000000486939 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470f2d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422f08 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004a8920 : out 0x78, al ; jnp 0x4a8982 ; retf
0x0000000000489bdd : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004018dd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489cb1 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489d8d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489b97 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a6eb1 : out 0xb3, al ; retf 0xe80
0x00000000004a7be0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004729bc : out 0xe8, al ; neg dl ; clc ; dec dword ptr [rax + 1] ; ret
0x00000000004062e8 : out 0xe8, eax ; ret 0x19e
0x000000000047424c : out 0xe8, eax ; ret 0xfff8
0x00000000004056da : out 0xeb, eax ; retf 0x8b49
0x0000000000434e1a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e9a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9908 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000494a75 : out 0xf9, al ; jmp qword ptr [rax]
0x0000000000494ab5 : out 0xf9, eax ; jmp qword ptr [rax + 0x20fff9e8]
0x0000000000461d42 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x00000000004762ce : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000045700e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8d37 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042453e : out dx, al ; jns 0x424548 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000449aad : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004499dd : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042f61a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000413a35 : out dx, al ; mov rdi, r14 ; call 0x4004ae
0x0000000000423612 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044a6a8 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000043522a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f67e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a9092 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a891f : out dx, al ; out 0x78, al ; jnp 0x4a8983 ; retf
0x0000000000421fc3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000423958 : out dx, al ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400440
0x000000000041ffd6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000494a89 : out dx, al ; stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494ac9 : out dx, al ; stc ; jmp qword ptr [rax]
0x0000000000474249 : out dx, eax ; add r15, r12 ; call 0x400496
0x0000000000417a19 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a71 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000430864 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000000000468af1 : out dx, eax ; call 0x4004b0
0x0000000000421b34 : out dx, eax ; call 0x41dd73
0x0000000000489bdf : out dx, eax ; call qword ptr [r14]
0x00000000004018df : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489cb3 : out dx, eax ; call qword ptr [rax]
0x0000000000489d8f : out dx, eax ; call qword ptr [rcx]
0x00000000004582fd : out dx, eax ; call r12
0x000000000048ed5d : out dx, eax ; call r14
0x0000000000422997 : out dx, eax ; call rax
0x0000000000474282 : out dx, eax ; call rbx
0x00000000004a9985 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044a6ab : out dx, eax ; mov eax, 9 ; syscall
0x00000000004125dd : out dx, eax ; mov eax, r9d ; syscall
0x000000000042f44a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f546 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f492 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004743d3 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040df9a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000413a6c : out dx, eax ; mov rdx, rbp ; add rbp, r13 ; call 0x4004b1
0x00000000004352aa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f77d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c7b3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c78b
0x000000000042c831 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c809
0x000000000042ccc3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cc9b
0x000000000042cd41 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd19
0x000000000042c3b3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3c8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3dd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446893 : out dx, eax ; ret 0xf66
0x000000000048f7a5 : out dx, eax ; retf
0x0000000000446876 : out dx, eax ; retf 0x4466
0x00000000004a905b : out dx, eax ; retf 0xab0d
0x000000000042493a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042d8cc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d89e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494a8d : out dx, eax ; stc ; jmp qword ptr [rax]
0x000000000048acd7 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d68e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444cbe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a94e3 : outsb dx, byte ptr [rsi] ; ja 0x4a946c ; ret 0x48f
0x000000000047d8f0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x0000000000478063 : outsb dx, byte ptr [rsi] ; ret 2
0x00000000004a7f12 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a7224 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a8858 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000419292 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424ae8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042fbd2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000042fdd2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000409e3d : outsd dx, dword ptr [rsi] ; movsxd rax, dword ptr [rcx] ; add cl, ch ; retf
0x000000000042d6cd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d76d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042d292 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042d312 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x00000000004734aa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d6d2 : outsd dx, dword ptr [rsi] ; ret
0x000000000046356d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a45a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7be6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419e92 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fd87 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004662ed : outsd dx, dword ptr [rsi] ; ret 0x9ce8
0x000000000042d772 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000004662c9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x0000000000463596 : outsd dx, dword ptr [rsi] ; ret 0xf3e8
0x00000000004734fa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fc52 : outsd dx, dword ptr [rsi] ; retf
0x000000000043d039 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042fe52 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042ccba : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042c7aa : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000463534 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046628f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000494129 : outsd dx, dword ptr [rsi] ; stc ; jmp rax
0x000000000044a3fd : outsd dx, dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a7be5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a2c2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004749b4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047499f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a2c1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a8fe5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8fe6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447f56 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b482 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b4e9 ; xor eax, eax ; ret
0x0000000000440a6f : pmovmskb edx, mm4 ; test edx, edx ; je 0x440a83 ; bsf eax, edx ; ret
0x000000000044bf15 : pop r10 ; ret
0x00000000004a946f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000460ecf : pop r12 ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044e2d0 : pop r12 ; jmp 0x45ad44
0x000000000044a841 : pop r12 ; jmp rax
0x000000000044a826 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fc : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f839 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100ce : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da99 : pop r12 ; pop r13 ; ret
0x0000000000405da4 : pop r12 ; ret
0x000000000041ffdb : pop r13 ; pop r14 ; jmp rax
0x00000000004224fe : pop r13 ; pop r14 ; jmp rcx
0x00000000004211a8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025b0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f83b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100d0 : pop r13 ; pop r14 ; ret
0x000000000040da9b : pop r13 ; ret
0x000000000041ffdd : pop r14 ; jmp rax
0x0000000000422500 : pop r14 ; jmp rcx
0x00000000004211aa : pop r14 ; pop r15 ; jmp rax
0x00000000004025b2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x000000000040f83d : pop r14 ; pop rbp ; ret
0x00000000004100d2 : pop r14 ; ret
0x00000000004211ac : pop r15 ; jmp rax
0x00000000004025b4 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x000000000041e794 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000046127b : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000045ef09 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045de3d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000045f542 : pop rax ; jmp 0x45f549
0x0000000000481cac : pop rax ; jmp qword ptr [rax]
0x00000000004b4134 : pop rax ; mov byte ptr [rax], al ; add byte ptr [rax - 0x36], ch ; cld ; jmp qword ptr [rcx]
0x00000000004922e2 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481d66 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004156f4 : pop rax ; ret
0x00000000004a93c3 : pop rax ; retf
0x00000000004940d5 : pop rax ; stc ; jmp rax
0x00000000004b5399 : pop rax ; std ; call qword ptr [rdx]
0x000000000048f181 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004ab7e8 : pop rbp ; adc dh, bh ; call qword ptr [rcx]
0x0000000000456649 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x4566c1 ; mov rdx, rax ; jmp 0x456618
0x0000000000460a29 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a8e65 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004167c0 : pop rbp ; jmp rax
0x0000000000400dcb : pop rbp ; mov al, 0x2b ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004757d8 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486d53 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x000000000042395a : pop rbp ; mov rdi, rax ; jmp 0x40043e
0x00000000004a77c0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000488c2f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e2cf : pop rbp ; pop r12 ; jmp 0x45ad45
0x000000000044a840 : pop rbp ; pop r12 ; jmp rax
0x000000000044a825 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004100cd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da98 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405da3 : pop rbp ; pop r12 ; ret
0x000000000041ffdc : pop rbp ; pop r14 ; jmp rax
0x00000000004224ff : pop rbp ; pop r14 ; jmp rcx
0x00000000004211a9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004025b1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f83c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004100d1 : pop rbp ; pop r14 ; ret
0x00000000004845f8 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x000000000045000f : pop rbp ; retf
0x000000000045000c : pop rbp ; test al, 0xe8 ; pop rbp ; retf
0x0000000000485241 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048c6cd : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a67b8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004482a6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a67b6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416704 : pop rbx ; jmp rax
0x000000000046d908 : pop rbx ; loopne 0x46d912 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fe87 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x00000000004482f1 : pop rbx ; mov eax, eax ; ret
0x00000000004106df : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046608d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417249 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041ac63 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f838 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000457c8c : pop rbx ; pop r12 ; ret
0x000000000048ad59 : pop rbx ; pop r14 ; ret
0x00000000004167bf : pop rbx ; pop rbp ; jmp rax
0x0000000000423959 : pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x40043f
0x000000000044e2ce : pop rbx ; pop rbp ; pop r12 ; jmp 0x45ad46
0x0000000000470f31 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a824 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fa : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410104 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da97 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405da2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401ba6 : pop rbx ; pop rbp ; ret
0x0000000000400d98 : pop rbx ; ret
0x00000000004a9aa0 : pop rbx ; ret 0x6f9
0x00000000004a6f7d : pop rbx ; retf
0x000000000044e210 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405dbe : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417212 : pop rbx ; xor edx, edx ; jmp rax
0x000000000042a097 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000461170 : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042a777 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004035a3 : pop rcx ; retf 0xffbf
0x000000000042dfc8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b18c1 : pop rdi ; add byte ptr [rax], al ; cmp al, 0x94 ; cli ; call qword ptr [rcx]
0x00000000004b18d5 : pop rdi ; add byte ptr [rax], al ; xchg rax, rsp ; cli ; call qword ptr [rcx]
0x000000000043fe0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042f9e9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f7f9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8d5e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004211ad : pop rdi ; jmp rax
0x00000000004a7d21 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b512 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044aa39 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044aa05 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f619 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f449 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f545 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f491 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004025b5 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000042ac76 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004a8941 : pop rdx ; je 0x4a890b ; ret 0xacfc
0x00000000004a8a53 : pop rdx ; leave ; retf
0x00000000004a9907 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044bf14 : pop rdx ; pop r10 ; ret
0x0000000000481d67 : pop rdx ; pop rbx ; ret
0x000000000044bf39 : pop rdx ; pop rsi ; ret
0x00000000004499b5 : pop rdx ; ret
0x00000000004a8923 : pop rdx ; retf
0x000000000045ff71 : pop rdx ; retf 0x25
0x00000000004a9470 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042c7b4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c78a
0x000000000042c832 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42c808
0x000000000042ccc4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cc9a
0x000000000042cd42 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cd18
0x000000000043fd0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004197fe : pop rsi ; add byte ptr [rdx], ch ; add bl, dh ; ret
0x00000000004204a6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000458426 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000041ffde : pop rsi ; jmp rax
0x0000000000422501 : pop rsi ; jmp rcx
0x000000000044b4e2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x000000000048f79e : pop rsi ; or byte ptr [rdi + 0x58b48ff], dh ; out dx, eax ; retf
0x00000000004211ab : pop rsi ; pop r15 ; jmp rax
0x00000000004025b3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x000000000040f83e : pop rsi ; pop rbp ; ret
0x00000000004100d3 : pop rsi ; ret
0x000000000043d8a0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af74 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b158d : pop rsp ; add byte ptr [rax], al ; add dl, dh ; std ; jmp qword ptr [rdi]
0x00000000004b15c9 : pop rsp ; add byte ptr [rax], al ; and al, 0x73 ; cli ; jmp rax
0x00000000004b1549 : pop rsp ; add byte ptr [rax], al ; hlt ; jb 0x4b154f ; call qword ptr [rdx]
0x000000000043e5a0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041ca9b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e82 : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004b2238 : pop rsp ; imul eax, dword ptr [rax], 0xfb935400 ; jmp qword ptr [rax]
0x000000000044e2d1 : pop rsp ; jmp 0x45ad43
0x000000000044a842 : pop rsp ; jmp rax
0x000000000044a827 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041ffda : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fd : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f83a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100cf : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040da9a : pop rsp ; pop r13 ; ret
0x0000000000401d53 : pop rsp ; ret
0x0000000000401e16 : pop rsp ; retf
0x0000000000482aca : pop rsp ; retf 0x4df0
0x00000000004a8ac7 : pop rsp ; sbb ebp, ebx ; retf
0x000000000047001c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000040f7e4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046abfd : popfq ; call 0xffffffffc3caac07
0x000000000046a93f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8a4c : popfq ; jrcxz 0x4a8a11 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000048c89e : popfq ; ret 0xf45
0x000000000040949f : popfq ; retf
0x00000000004a9802 : popfq ; retf 0xde4f
0x0000000000435372 : psllq mm1, qword ptr [r15] ; jg 0x43538d ; ret
0x0000000000437e92 : psllq mm1, qword ptr [r15] ; jg 0x437ead ; ret
0x0000000000435373 : psllq mm1, qword ptr [rdi] ; jg 0x43538c ; ret
0x0000000000437e93 : psllq mm1, qword ptr [rdi] ; jg 0x437eac ; ret
0x0000000000444386 : psllq mm1, qword ptr [rdi] ; jg 0x44439a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444385 : psllq mm1, qword ptr [rdi] ; jg 0x44439b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004443e7 : psllq mm1, qword ptr [rdi] ; jg 0x4443fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000494001 : psubw mm7, mm7 ; nop ; adc cl, bh ; call rax
0x000000000040359e : push -0x17000001 ; pop rcx ; retf 0xffbf
0x00000000004a7824 : push -0x30 ; retf 0xe72e
0x00000000004a6eae : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a9055 : push -0x57d3205 ; call 0xffffffffab585b55
0x00000000004a7061 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045e332 : push -0x7c000003 ; ret
0x00000000004b2d44 : push -0x7ffff8c ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000444ca4 : push -0x9ffffff ; ret 0x7501
0x0000000000403f98 : push -0xcec28c ; call 0x4201b7
0x00000000004a8855 : push 0x1b6e41b5 ; std ; retf
0x0000000000414504 : push 0x2a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000419326 : push 0x2a ; sub al, byte ptr [rax] ; ret
0x00000000004958a0 : push 0x3e ; sti ; jmp qword ptr [rdx]
0x0000000000411d0d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000488624 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479c55 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045872c : push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000494109 : push 0x6920fff9 ; stc ; call qword ptr [rax]
0x00000000004a94e2 : push 0x6e ; ja 0x4a946d ; ret 0x48f
0x0000000000417855 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000416137 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000041747a : push 0x75c08548 ; ret
0x00000000004a8dc2 : push 0xfd4cbe ; retf 0xf64
0x0000000000494d6b : push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x000000000049480b : push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004945f3 : push qword ptr [rax + 0x40fffa13] ; adc edi, edx ; call rax
0x00000000004940d3 : push qword ptr [rax + 0x58] ; stc ; jmp rax
0x000000000049402b : push qword ptr [rax + 0xfff909] ; and ecx, edi ; jmp qword ptr [rax]
0x0000000000494a67 : push qword ptr [rax + 3] ; cli ; jmp rax
0x0000000000494863 : push qword ptr [rax + 4] ; cli ; jmp rax
0x00000000004ab7f7 : push qword ptr [rax + rdx - 2] ; call qword ptr [rcx]
0x0000000000495153 : push qword ptr [rax - 0x3f00050f] ; int1 ; cli ; call rax
0x00000000004942af : push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049434f : push qword ptr [rax - 0x50] ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004943df : push qword ptr [rax - 0x57] ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004943f3 : push qword ptr [rax - 0x65] ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x00000000004945af : push qword ptr [rax - 0x7f000640] ; ret
0x000000000048e23d : push qword ptr [rax] ; jne 0x48e270 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f09d : push qword ptr [rax] ; jne 0x48f0d0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004942b3 : push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494297 : push qword ptr [rax] ; mov ch, 0xf9 ; call qword ptr [rax]
0x000000000049433b : push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494353 : push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494107 : push qword ptr [rax] ; push 0x6920fff9 ; stc ; call qword ptr [rax]
0x0000000000494f23 : push qword ptr [rax] ; sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494d37 : push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x20fffa2f]
0x0000000000446628 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a8d8 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a8b0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b4e0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b510 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042c039 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000471a78 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041727d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000471a9e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004176e6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000049592b : push qword ptr [rbp + rdi + 0x3dfafffb] ; sti ; jmp rsi
0x000000000047f53b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417ab0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046154b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d7f9
0x00000000004496cc : push qword ptr [rbx + 1] ; ret
0x000000000049419b : push qword ptr [rcx + 0x41fff994] ; xchg eax, ebp ; stc ; call rcx
0x00000000004941a7 : push qword ptr [rcx - 0x6a] ; stc ; call qword ptr [rcx]
0x000000000045ecb4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a33f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041585f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004550e3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422d16 : push qword ptr [rcx] ; shr al, 0xc2 ; retf
0x000000000045953d : push qword ptr [rcx] ; shr cl, cl ; retf
0x00000000004490fb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449d56 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449a86 : push qword ptr [rdi + 0x57] ; ret
0x00000000004499b3 : push qword ptr [rdi + 0x5a] ; ret
0x00000000004965f7 : push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x000000000045b0b2 : push qword ptr [rdi + 0xb] ; ret
0x000000000044975a : push qword ptr [rdi + 3] ; ret
0x0000000000449a49 : push qword ptr [rdi + 4] ; ret
0x00000000004497a8 : push qword ptr [rdi + 5] ; ret
0x000000000047575e : push qword ptr [rdi + 7] ; ret
0x000000000044a525 : push qword ptr [rdi + 8] ; ret
0x0000000000449b1c : push qword ptr [rdi + 9] ; ret
0x0000000000475624 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000495747 : push qword ptr [rsi + 0x3f] ; sti ; jmp rsi
0x000000000049463b : push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x0000000000494b33 : push qword ptr [rsi + 0x46fffa39] ; cmp edx, edi ; call rsi
0x000000000047856a : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004114e6 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000494c9f : push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x00000000004166b2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a6f0c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000494010 : push rax ; adc al, 0xf9 ; call qword ptr [rax - 0x2f0006eb]
0x0000000000470b7a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418461 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c4ed : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004947f4 : push rax ; adc edi, edx ; jmp rax
0x0000000000454f9f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004857fa : push rax ; add byte ptr [rax], al ; add al, ch ; in eax, dx ; ret 0xfff7
0x00000000004166b3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b0925 : push rax ; add byte ptr [rax], al ; clc ; fyl2xp1 ; call qword ptr [rax]
0x00000000004239dc : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000400ee0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004512cf : push rax ; call 0x44d5a3
0x0000000000461551 : push rax ; call 0x45d7f3
0x000000000044e9a8 : push rax ; call rbx
0x000000000049518f : push rax ; cli ; call qword ptr [rax]
0x000000000049502b : push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494b14 : push rax ; cli ; jmp rax
0x00000000004b0cb0 : push rax ; cli ; std ; jmp qword ptr [rdx]
0x00000000004706a4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494584 : push rax ; enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x00000000004951bb : push rax ; idiv dl ; inc dword ptr [rax] ; idiv edx ; call qword ptr [rax]
0x0000000000494117 : push rax ; imul edi, ecx, -1 ; loopne 0x494192 ; stc ; call rax
0x0000000000495163 : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004720c9 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6f7a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004942d7 : push rax ; mov ah, 0xf9 ; call rax
0x0000000000494338 : push rax ; mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494294 : push rax ; mov bl, 0xf9 ; push qword ptr [rax] ; mov ch, 0xf9 ; call qword ptr [rax]
0x000000000049435b : push rax ; mov ch, 0xf9 ; call rax
0x000000000049439c : push rax ; mov ch, 0xf9 ; inc dword ptr [rax - 0x49] ; stc ; call qword ptr [rax]
0x00000000004942d0 : push rax ; mov cl, 0xf9 ; call qword ptr [rax]
0x00000000004942bb : push rax ; mov dh, 0xf9 ; call rax
0x0000000000450be1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000494320 : push rax ; mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x000000000049429f : push rax ; mov eax, 0xbae0fff9 ; stc ; jmp rax
0x0000000000493ff0 : push rax ; or bh, cl ; call qword ptr [rax - 0x2f0006f5]
0x0000000000485a71 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a89
0x00000000004191e2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a50a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b1fd : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041cee5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cffb : push rax ; or dh, dh ; ret 0x8902
0x000000000041dc22 : push rax ; or dh, dh ; ret 0xf02
0x000000000048251e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004886d5 : push rax ; pop rbx ; ret
0x0000000000494000 : push rax ; psubw mm7, mm7 ; nop ; adc cl, bh ; call rax
0x0000000000478569 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000450be3 : push rax ; push rsp ; ret
0x00000000004a9820 : push rax ; retf
0x000000000049458b : push rax ; retf 0xfff9
0x000000000041b844 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000418456 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471bb9 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000494020 : push rax ; sbb ecx, edi ; call qword ptr [rax - 0x2f0006e6]
0x00000000004a6f0d : push rax ; xor byte ptr [rcx], ah ; retf
0x0000000000494ef4 : push rax ; xor dl, bh ; call rax
0x0000000000494d13 : push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x000000000048a15a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cc02 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000047fca8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004104ed : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000463936 : push rbp ; cwde ; shl rdx, 3 ; call 0x400440
0x00000000004816dc : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x000000000047554d : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000467673 : push rbp ; ret
0x00000000004441d7 : push rbp ; syscall
0x000000000046c8c7 : push rbp ; test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000410a96 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040102f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047fb1f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484df7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b0cad : push rbx ; add byte ptr [rax], al ; push rax ; cli ; std ; jmp qword ptr [rdx]
0x00000000004a90f9 : push rbx ; call 0x4c14bab6
0x0000000000412ef8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447815 : push rbx ; jb 0x447825 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471ab2 : push rbx ; je 0x471b16 ; pop rbp ; pop r12 ; ret
0x0000000000471b3e : push rbx ; je 0x471ba2 ; pop rbp ; pop r12 ; ret
0x000000000047554e : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000412ef4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044b40f : push rbx ; ret
0x00000000004a4ee3 : push rbx ; xchg ch, bh ; jmp qword ptr [rax]
0x00000000004a4f3b : push rbx ; xchg ch, bh ; lcall [rax] ; jbe 0x4a4f48 ; jmp qword ptr [rax]
0x00000000004a4edf : push rbx ; xchg ch, bh ; push rbx ; xchg ch, bh ; jmp qword ptr [rax]
0x00000000004a893c : push rbx ; xchg eax, edx ; jae 0x4a891b ; push rsi ; pop rdx ; je 0x4a8910 ; ret 0xacfc
0x000000000041eb02 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae3b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1b7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b0aa5 : push rcx ; add byte ptr [rax], al ; jg 0x4b0aaa ; hlt ; jmp qword ptr [rbx]
0x000000000044b8ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7bc5 : push rcx ; call qword ptr [rsi]
0x000000000045e7a6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004387cd : push rcx ; jl 0x43881e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438934 : push rcx ; jl 0x438985 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004792d1 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x00000000004792a3 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004611cb : push rcx ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004506d3 : push rcx ; ret 0x26
0x00000000004157fb : push rcx ; ret 0xffff
0x000000000041994d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000403f4e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044ac98 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000403f3e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004ab823 : push rdi ; adc dh, bh ; dec dword ptr [rdx] ; adc esi, edi ; jmp rcx
0x00000000004448ca : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004354d9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b10c5 : push rdi ; add byte ptr [rax], al ; js 0x4b10ef ; cli ; call qword ptr [rdi]
0x00000000004b1031 : push rdi ; add byte ptr [rax], al ; sub al, 0x16 ; cli ; call rcx
0x0000000000478214 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044497c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045de7f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000460f1a : push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042f2d8 : push rdi ; clc ; ret
0x000000000042f450 : push rdi ; cld ; ret
0x000000000042ff77 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434db9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fed5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434d39 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b8a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004165c4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434c1a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000403f2e : push rdi ; or al, 0xf ; retf 0xd289
0x00000000004845ea : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004883ea : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004845f1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000403f23 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041ab06 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444b60 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d6ce : push rdi ; ret
0x000000000042d76e : push rdi ; ret 0xff3
0x000000000042d293 : push rdi ; retf
0x000000000042d313 : push rdi ; retf 0xcab2
0x0000000000419270 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de83 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000403f62 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430177 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004940d1 : push rdi ; stc ; push qword ptr [rax + 0x58] ; stc ; jmp rax
0x000000000042f99a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fd77 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040383c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004734ab : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b488 : push rdi ; xor eax, eax ; ret
0x00000000004946c8 : push rdx ; adc edx, edi ; jmp rdx
0x00000000004ab911 : push rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000494bc0 : push rdx ; cmp dl, bh ; jmp rdx
0x00000000004248ca : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004948c4 : push rdx ; or dl, bh ; call rdx
0x00000000004948bc : push rdx ; or edx, edi ; call rdx
0x000000000045509a : push rdx ; retf 0xfffa
0x0000000000450bdd : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004940c5 : push rdx ; stc ; jmp qword ptr [rax]
0x000000000042c3b4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446eb9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446f10 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000435771 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004357e1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444315 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435701 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004442b3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c3c9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f402 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fb71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f7a5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f985 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fb65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f5c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a94e0 : push rsi ; cli ; push 0x6e ; ja 0x4a946f ; ret 0x48f
0x0000000000446166 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000004586fe : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000446156 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446126 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a8940 : push rsi ; pop rdx ; je 0x4a890c ; ret 0xacfc
0x000000000044fbc6 : push rsi ; ret
0x00000000004095e6 : push rsi ; retf 0xffff
0x00000000004693c1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000045842a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045e293 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446136 : push rsi ; sub eax, edx ; ret
0x00000000004a6f08 : push rsi ; xchg eax, ebp ; jge 0x4a6eed ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042c3de : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494790 : push rsp ; adc dl, bh ; jmp rsp
0x00000000004759c1 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000048274a : push rsp ; and al, 0x10 ; call rdx
0x000000000041cb58 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d0b5 : push rsp ; and al, 8 ; call 0x419355
0x0000000000494e84 : push rsp ; cli ; call rsp
0x00000000004612c8 : push rsp ; pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004b1030 : push rsp ; push rdi ; add byte ptr [rax], al ; sub al, 0x16 ; cli ; call rcx
0x0000000000450be4 : push rsp ; ret
0x00000000004891cc : push rsp ; ret 0x4808
0x0000000000482bc5 : push rsp ; retf 0x48f8
0x0000000000403e77 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x0000000000494e94 : push rsp ; sub al, 0xfa ; call rsp
0x0000000000494e9c : push rsp ; sub edi, edx ; call rsp
0x00000000004a910a : push rsp ; syscall
0x00000000004b223c : push rsp ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x000000000043d560 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000046262e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b487 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b498 ; call r12
0x000000000045228a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479e4f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416ceb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004ade24 : pushfq ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004ac378 : pushfq ; or al, byte ptr [rax] ; add byte ptr [rdx + rbp - 0xa], ah ; call qword ptr [rdx]
0x000000000043e260 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a434 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c8d7 : pushfq ; ret 0xf45
0x00000000004943f9 : pushfq ; stc ; call qword ptr [rax]
0x00000000004b0111 : pushfq ; stc ; call qword ptr [rbx]
0x00000000004b0cac : rcl byte ptr [rbx], 1 ; add byte ptr [rax - 6], dl ; std ; jmp qword ptr [rdx]
0x0000000000494008 : rcl byte ptr [rcx], 1 ; stc ; call qword ptr [rax]
0x00000000004a9251 : rcl byte ptr [rdi], cl ; retf
0x0000000000494250 : rcl byte ptr [rdx - 0x6cbf0007], 0xf9 ; call rax
0x0000000000494018 : rcl byte ptr [rsi], 1 ; stc ; call qword ptr [rax]
0x00000000004945a4 : rcl dl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004239db : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004941a4 : rcl dword ptr [rbp - 0x698e0007], 1 ; stc ; call qword ptr [rcx]
0x00000000004a8d7a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a893f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a890d ; ret 0xacfc
0x00000000004a8d79 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a893b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8911 ; ret 0xacfc
0x0000000000473293 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405dc0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004106e1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000046608f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004845f7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044fbd2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041489c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ec86 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d508 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000041078a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000040ff72 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8d5d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b18ac : rcr byte ptr [rdi], 1 ; add byte ptr [rax], dh ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004828a9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a90b1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000446ff4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446fe6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447d1a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ede1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f3c0 : ret 0x10
0x000000000047b73a : ret 0x101
0x00000000004845cc : ret 0x114d
0x0000000000457c34 : ret 0x1176
0x000000000047fcac : ret 0x1272
0x000000000047c843 : ret 0x13e9
0x000000000048ad71 : ret 0x145
0x0000000000483a76 : ret 0x1474
0x00000000004792d8 : ret 0x1475
0x0000000000475a71 : ret 0x1477
0x00000000004460c8 : ret 0x148
0x00000000004047b4 : ret 0x149
0x0000000000438b8c : ret 0x14d
0x000000000040a6ea : ret 0x15a
0x0000000000423d45 : ret 0x15e8
0x000000000046c311 : ret 0x1674
0x00000000004495ce : ret 0x16e9
0x00000000004272ba : ret 0x17
0x000000000042b966 : ret 0x1776
0x000000000040aaa2 : ret 0x18
0x0000000000438ac9 : ret 0x180f
0x000000000042b4f5 : ret 0x1876
0x00000000004062ea : ret 0x19e
0x0000000000457c2b : ret 0x1a72
0x00000000004a92ba : ret 0x1ad4
0x0000000000407c62 : ret 0x1b
0x00000000004a7a4d : ret 0x1b49
0x000000000048ee3f : ret 0x1be8
0x000000000042478a : ret 0x1c6
0x000000000045cda9 : ret 0x1ce9
0x00000000004a1090 : ret 0x1d4
0x00000000004a1828 : ret 0x1d5
0x0000000000400bf1 : ret 0x1d89
0x000000000040eb42 : ret 0x1f0f
0x000000000041eb06 : ret 0x1f77
0x000000000045a01d : ret 0x1fe9
0x000000000045ac77 : ret 0x200
0x0000000000477e5b : ret 0x2041
0x000000000044a08c : ret 0x2044
0x0000000000461d47 : ret 0x20be
0x000000000048acdb : ret 0x2148
0x000000000041396d : ret 0x214c
0x0000000000412efc : ret 0x2175
0x0000000000490704 : ret 0x22
0x000000000047ea48 : ret 0x2275
0x00000000004915ba : ret 0x2282
0x0000000000440e38 : ret 0x2288
0x000000000042489a : ret 0x22a
0x0000000000480f10 : ret 0x22e8
0x000000000047c7cf : ret 0x23
0x00000000004880b1 : ret 0x230e
0x0000000000484c61 : ret 0x2342
0x0000000000487891 : ret 0x234f
0x000000000048783a : ret 0x236
0x000000000042d8d2 : ret 0x2373
0x000000000047fb0a : ret 0x23cc
0x000000000047f3ea : ret 0x23cf
0x000000000047b99a : ret 0x23e8
0x00000000004a0098 : ret 0x24
0x00000000004765fa : ret 0x2428
0x00000000004160ad : ret 0x2501
0x0000000000467414 : ret 0x2504
0x000000000048487a : ret 0x252
0x00000000004237b3 : ret 0x2575
0x000000000048c771 : ret 0x25e9
0x000000000044c2d6 : ret 0x26
0x0000000000473986 : ret 0x2774
0x000000000042f0a6 : ret 0x280f
0x000000000042b4e5 : ret 0x2876
0x000000000045ab0a : ret 0x28e8
0x000000000047eac7 : ret 0x28f5
0x000000000041df54 : ret 0x29
0x000000000046356e : ret 0x290f
0x00000000004116b7 : ret 0x2948
0x00000000004664aa : ret 0x2949
0x000000000040f050 : ret 0x294c
0x00000000004131dd : ret 0x294d
0x000000000041054d : ret 0x2a
0x000000000041a3a2 : ret 0x2a19
0x0000000000417d4a : ret 0x2a3f
0x000000000040ff45 : ret 0x2ac8
0x000000000040ddfa : ret 0x2ada
0x000000000040e92a : ret 0x2ade
0x0000000000410a9a : ret 0x2b48
0x0000000000422edb : ret 0x2b74
0x000000000041ee22 : ret 0x2b75
0x0000000000448192 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x000000000048c75f : ret 0x2be9
0x000000000041f66e : ret 0x2c75
0x0000000000464c6d : ret 0x2de8
0x000000000046f2a5 : ret 0x2e66
0x000000000044c2fe : ret 0x2f75
0x0000000000467fd5 : ret 0x30be
0x00000000004a0588 : ret 0x33
0x0000000000452a94 : ret 0x349
0x000000000048ab10 : ret 0x3575
0x000000000047b40a : ret 0x3774
0x000000000042b946 : ret 0x3776
0x00000000004a8b9a : ret 0x3827
0x000000000047012e : ret 0x3873
0x000000000042b4d5 : ret 0x3876
0x0000000000416b5b : ret 0x389
0x00000000004a7226 : ret 0x38ae
0x000000000048e422 : ret 0x38e8
0x00000000004896e8 : ret 0x3901
0x00000000004811cd : ret 0x3934
0x000000000046d8e8 : ret 0x3941
0x0000000000411341 : ret 0x3948
0x00000000004120fd : ret 0x3949
0x000000000041ef4c : ret 0x394c
0x0000000000468f7d : ret 0x394d
0x0000000000446742 : ret 0x3a01
0x0000000000411c4a : ret 0x3a3
0x000000000042d8bb : ret 0x3a73
0x0000000000488233 : ret 0x3a83
0x000000000048125a : ret 0x3b34
0x0000000000447161 : ret 0x3b48
0x0000000000449d6f : ret 0x3b8
0x0000000000414159 : ret 0x3c75
0x000000000048118d : ret 0x3d
0x000000000047f438 : ret 0x3d73
0x0000000000420721 : ret 0x3d83
0x000000000041ca7f : ret 0x3de9
0x000000000047b26a : ret 0x3e80
0x000000000045a42b : ret 0x4002
0x0000000000456b68 : ret 0x401
0x000000000040d22d : ret 0x4074
0x0000000000473f71 : ret 0x408d
0x000000000044c54a : ret 0x4101
0x0000000000460618 : ret 0x4108
0x0000000000460dc5 : ret 0x4110
0x0000000000481207 : ret 0x4134
0x0000000000453247 : ret 0x415f
0x0000000000450cae : ret 0x41c3
0x0000000000425f3a : ret 0x4266
0x0000000000470c03 : ret 0x4389
0x0000000000405d91 : ret 0x4401
0x000000000046882b : ret 0x4404
0x000000000041a45b : ret 0x4466
0x000000000041ddf3 : ret 0x4473
0x00000000004a7d24 : ret 0x474c
0x000000000044e727 : ret 0x480
0x0000000000423f56 : ret 0x4801
0x00000000004122f6 : ret 0x4803
0x00000000004227c1 : ret 0x4804
0x0000000000440dc3 : ret 0x4808
0x0000000000402f66 : ret 0x480a
0x000000000041c498 : ret 0x4810
0x00000000004589dc : ret 0x4811
0x000000000045dd17 : ret 0x481e
0x000000000045dd37 : ret 0x4820
0x000000000044e4ce : ret 0x4830
0x0000000000425e46 : ret 0x4840
0x000000000044d87c : ret 0x48c
0x0000000000440a78 : ret 0x48c3
0x000000000044d4ea : ret 0x48e
0x0000000000418e73 : ret 0x48e9
0x00000000004a94e6 : ret 0x48f
0x0000000000405d2c : ret 0x4901
0x00000000004556eb : ret 0x4902
0x00000000004194b2 : ret 0x4908
0x000000000042a40c : ret 0x4910
0x000000000045a879 : ret 0x4c01
0x000000000041e79a : ret 0x4c07
0x000000000045d5d6 : ret 0x4c40
0x000000000041d456 : ret 0x4d01
0x000000000045c098 : ret 0x4d10
0x000000000040266f : ret 0x4de8
0x00000000004a8f47 : ret 0x4e27
0x000000000040169e : ret 0x4f76
0x000000000044f04f : ret 0x5089
0x000000000044c167 : ret 0x508b
0x000000000042d8a4 : ret 0x5173
0x0000000000449fc7 : ret 0x5488
0x00000000004a71ac : ret 0x5508
0x0000000000471cce : ret 0x5590
0x000000000042b926 : ret 0x5776
0x00000000004033fa : ret 0x578
0x00000000004a9478 : ret 0x5803
0x0000000000455751 : ret 0x5841
0x0000000000487ba5 : ret 0x5876
0x000000000040e683 : ret 0x589
0x00000000004a6e80 : ret 0x591c
0x00000000004a7be7 : ret 0x5ae4
0x000000000042447e : ret 0x5ae9
0x0000000000455939 : ret 0x5be9
0x000000000040f38a : ret 0x5d5b
0x00000000004a9912 : ret 0x62c1
0x000000000047c6b0 : ret 0x6349
0x00000000004853c4 : ret 0x637f
0x00000000004589b3 : ret 0x6411
0x000000000045b591 : ret 0x6601
0x000000000042b461 : ret 0x6620
0x0000000000423928 : ret 0x66c3
0x000000000047fcbe : ret 0x674
0x000000000042b916 : ret 0x6776
0x00000000004a6e9f : ret 0x67b2
0x0000000000417105 : ret 0x6874
0x000000000044967a : ret 0x6ae9
0x00000000004a9aa1 : ret 0x6f9
0x0000000000417281 : ret 0x7401
0x000000000042278a : ret 0x7402
0x000000000047c71a : ret 0x7403
0x000000000044a6f1 : ret 0x7404
0x0000000000471aa2 : ret 0x7408
0x0000000000412a0d : ret 0x7420
0x00000000004644c4 : ret 0x7450
0x0000000000480eca : ret 0x7472
0x0000000000444ca9 : ret 0x7501
0x0000000000444cb6 : ret 0x7502
0x0000000000444cc3 : ret 0x7504
0x000000000041eaad : ret 0x7508
0x0000000000444c7b : ret 0x7510
0x00000000004103a2 : ret 0x7520
0x00000000004247ae : ret 0x7540
0x00000000004759d0 : ret 0x7577
0x000000000041e0ca : ret 0x75d
0x000000000042c792 : ret 0x7677
0x0000000000482b62 : ret 0x777
0x0000000000484426 : ret 0x77f
0x0000000000402dc1 : ret 0x7ce9
0x000000000042b401 : ret 0x7e20
0x000000000042b87c : ret 0x7e40
0x0000000000424aec : ret 0x7f10
0x000000000046db00 : ret 0x7f3c
0x000000000043306e : ret 0x80
0x0000000000425cc9 : ret 0x8000
0x000000000048e0e2 : ret 0x8001
0x0000000000476e17 : ret 0x8116
0x000000000045fdeb : ret 0x8148
0x000000000048e638 : ret 0x8166
0x000000000041d180 : ret 0x820f
0x0000000000454f73 : ret 0x8301
0x000000000047d437 : ret 0x8303
0x000000000042c360 : ret 0x830f
0x000000000045dbe4 : ret 0x8341
0x0000000000423865 : ret 0x8348
0x0000000000446bc0 : ret 0x8349
0x000000000047f2af : ret 0x8364
0x00000000004713e6 : ret 0x840
0x0000000000475dc9 : ret 0x8401
0x0000000000412105 : ret 0x840f
0x0000000000453cc0 : ret 0x841
0x000000000048b38e : ret 0x8440
0x0000000000479e57 : ret 0x848b
0x000000000046ef49 : ret 0x8502
0x0000000000413292 : ret 0x850f
0x0000000000458313 : ret 0x8511
0x000000000044aa22 : ret 0x8545
0x0000000000402b42 : ret 0x8548
0x00000000004237da : ret 0x854d
0x000000000040d25a : ret 0x856
0x0000000000405c01 : ret 0x8575
0x00000000004013d2 : ret 0x860f
0x000000000041ae3f : ret 0x870f
0x00000000004a67be : ret 0x871e
0x000000000046db07 : ret 0x875
0x000000000042b505 : ret 0x876
0x0000000000402c6c : ret 0x8801
0x0000000000451fbd : ret 0x8804
0x000000000045b5e2 : ret 0x8841
0x000000000047e39e : ret 0x8844
0x000000000040245a : ret 0x8901
0x000000000044cffe : ret 0x8902
0x000000000041258a : ret 0x8908
0x000000000045dbd6 : ret 0x8941
0x000000000041f70f : ret 0x8944
0x0000000000403e1f : ret 0x8948
0x00000000004137ba : ret 0x8949
0x0000000000410db1 : ret 0x894c
0x00000000004835db : ret 0x894e
0x000000000046de99 : ret 0x89e8
0x00000000004176ea : ret 0x8a
0x0000000000487dd0 : ret 0x8b
0x00000000004508e9 : ret 0x8b01
0x000000000046f59a : ret 0x8b04
0x0000000000475b63 : ret 0x8b05
0x000000000046f44b : ret 0x8b08
0x00000000004a8fee : ret 0x8b36
0x000000000041d661 : ret 0x8b41
0x000000000046dba3 : ret 0x8b44
0x0000000000413be3 : ret 0x8b48
0x0000000000411566 : ret 0x8b49
0x000000000048355e : ret 0x8b4a
0x000000000040d43d : ret 0x8b4c
0x0000000000464d2d : ret 0x8c0f
0x000000000045d631 : ret 0x8d04
0x000000000048c58f : ret 0x8d0f
0x000000000041cd5c : ret 0x8d44
0x0000000000419951 : ret 0x8d48
0x000000000046820c : ret 0x8d49
0x0000000000482907 : ret 0x8d4a
0x000000000041de74 : ret 0x8d4c
0x000000000045dbf2 : ret 0x8d89
0x0000000000452a8b : ret 0x8e0f
0x000000000045de9a : ret 0x8f0f
0x0000000000440245 : ret 0x90c3
0x0000000000423ef9 : ret 0x90e9
0x0000000000477f1e : ret 0x9174
0x000000000048b1cb : ret 0x9272
0x000000000041b15d : ret 0x948
0x0000000000473548 : ret 0x94c
0x0000000000484df2 : ret 0x950f
0x0000000000448f60 : ret 0x9572
0x00000000004a7e13 : ret 0x9576
0x00000000004607ef : ret 0x958b
0x000000000042271e : ret 0x976
0x000000000047d1e3 : ret 0x9be9
0x00000000004662ee : ret 0x9ce8
0x00000000004872b5 : ret 0x9eb
0x000000000049ebc0 : ret 0xa
0x00000000004aeb3e : ret 0xa01
0x000000000044a718 : ret 0xa076
0x0000000000449544 : ret 0xa0e9
0x000000000048c64e : ret 0xa4e9
0x00000000004a7b03 : ret 0xa514
0x000000000048c74d : ret 0xa5e9
0x000000000044b6bd : ret 0xabe
0x000000000040fc36 : ret 0xac20
0x00000000004a7f87 : ret 0xac65
0x00000000004a8944 : ret 0xacfc
0x000000000045f62f : ret 0xae9
0x000000000042361a : ret 0xaeeb
0x00000000004ac13f : ret 0xb00e
0x00000000004119cd : ret 0xb074
0x000000000041b1bb : ret 0xb277
0x00000000004652fe : ret 0xb2c8
0x000000000045651b : ret 0xb2eb
0x0000000000449530 : ret 0xb4e9
0x000000000045dc16 : ret 0xb589
0x000000000048a0c5 : ret 0xb5e8
0x0000000000402c25 : ret 0xb60f
0x0000000000400ee4 : ret 0xb70f
0x0000000000469e75 : ret 0xb8
0x000000000046bc1c : ret 0xb848
0x000000000048e4a2 : ret 0xb8e8
0x00000000004a7e4e : ret 0xb9b9
0x000000000046d455 : ret 0xb9e9
0x000000000046f024 : ret 0xba41
0x0000000000422e53 : ret 0xbae9
0x0000000000456652 : ret 0xbaeb
0x000000000048cc06 : ret 0xbc80
0x000000000045dc02 : ret 0xbd89
0x0000000000481012 : ret 0xbe0f
0x00000000004a7ba4 : ret 0xbe57
0x0000000000425b89 : ret 0xc000
0x0000000000403156 : ret 0xc031
0x00000000004589fe : ret 0xc083
0x000000000042b2c0 : ret 0xc085
0x00000000004745a9 : ret 0xc148
0x000000000041b2d9 : ret 0xc183
0x00000000004048e8 : ret 0xc189
0x000000000044a3b2 : ret 0xc221
0x000000000041f74b : ret 0xc275
0x0000000000476976 : ret 0xc283
0x000000000042d774 : ret 0xc2b2
0x00000000004481fe : ret 0xc35b
0x0000000000457ded : ret 0xc389
0x000000000041f74d : ret 0xc3f3
0x00000000004a6342 : ret 0xc4c3
0x00000000004a7758 : ret 0xc4ff
0x000000000042b8e1 : ret 0xc540
0x0000000000457eb6 : ret 0xc589
0x00000000004634cc : ret 0xc689
0x000000000047f28d : ret 0xc74
0x0000000000441180 : ret 0xc748
0x00000000004690c8 : ret 0xc789
0x00000000004810a2 : ret 0xc829
0x0000000000461e93 : ret 0xc839
0x0000000000416b4c : ret 0xc883
0x00000000004608c7 : ret 0xc985
0x000000000046f533 : ret 0xc9eb
0x0000000000440d91 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x000000000047845f : ret 0xcbe9
0x00000000004a71ea : ret 0xcca7
0x00000000004a92cd : ret 0xcd11
0x0000000000480ed5 : ret 0xcde8
0x00000000004050f2 : ret 0xce80
0x000000000049efc0 : ret 0xd
0x0000000000420fce : ret 0xd020
0x000000000040dec6 : ret 0xd021
0x000000000044bb3f : ret 0xd029
0x000000000046434b : ret 0xd120
0x0000000000401204 : ret 0xd284
0x00000000004579aa : ret 0xd285
0x000000000048eb88 : ret 0xd2e8
0x0000000000479ee6 : ret 0xd348
0x000000000044f9c7 : ret 0xd5e9
0x000000000048144f : ret 0xd75
0x000000000045cfd6 : ret 0xd774
0x000000000047ce5a : ret 0xd8e8
0x00000000004a8d65 : ret 0xd8f
0x000000000040ff23 : ret 0xdaf7
0x000000000045419a : ret 0xdb76
0x00000000004a8e46 : ret 0xdcd9
0x00000000004a7dc2 : ret 0xde5d
0x00000000004a6b51 : ret 0xde9e
0x0000000000425a49 : ret 0xe000
0x0000000000444c39 : ret 0xe074
0x000000000044d750 : ret 0xe083
0x00000000004b5384 : ret 0xe0a
0x000000000048c811 : ret 0xe1e9
0x000000000044d582 : ret 0xe1eb
0x000000000040dad0 : ret 0xe281
0x0000000000400c25 : ret 0xe283
0x0000000000473258 : ret 0xe575
0x0000000000465950 : ret 0xe57f
0x00000000004662ca : ret 0xe583
0x00000000004481f2 : ret 0xe680
0x00000000004669af : ret 0xe683
0x00000000004a8f66 : ret 0xe71f
0x00000000004792aa : ret 0xe75
0x0000000000422f06 : ret 0xe775
0x0000000000465f83 : ret 0xe7e9
0x000000000042bf45 : ret 0xe883
0x0000000000478e26 : ret 0xe8c0
0x0000000000402efa : ret 0xe901
0x0000000000402f3f : ret 0xe902
0x0000000000440e26 : ret 0xe908
0x000000000043d3c6 : ret 0xe910
0x000000000045e45d : ret 0xe920
0x00000000004a72c7 : ret 0xe970
0x000000000044818a : ret 0xea81
0x000000000040db9d : ret 0xeab8
0x0000000000400c0d : ret 0xeac1
0x000000000047dae6 : ret 0xeb01
0x000000000046f463 : ret 0xeb04
0x000000000042a43a : ret 0xeb10
0x0000000000481272 : ret 0xeb34
0x00000000004114ea : ret 0xec
0x00000000004a9a78 : ret 0xec2
0x000000000045cf60 : ret 0xed75
0x00000000004a971a : ret 0xef32
0x000000000048c3d8 : ret 0xef89
0x0000000000475faf : ret 0xefeb
0x000000000042922e : ret 0xf
0x0000000000425909 : ret 0xf000
0x00000000004055d5 : ret 0xf01
0x000000000041ab09 : ret 0xf02
0x000000000041cee9 : ret 0xf04
0x0000000000411c53 : ret 0xf08
0x000000000041add9 : ret 0xf0f
0x000000000040e3ce : ret 0xf10
0x00000000004667cb : ret 0xf20
0x000000000041d053 : ret 0xf275
0x0000000000463597 : ret 0xf3e8
0x0000000000463886 : ret 0xf3f
0x0000000000466d53 : ret 0xf40
0x000000000046fedd : ret 0xf41
0x000000000048c88c : ret 0xf45
0x0000000000423af9 : ret 0xf475
0x0000000000451846 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466d39 : ret 0xf50
0x0000000000489856 : ret 0xf608
0x0000000000475635 : ret 0xf631
0x0000000000425ec6 : ret 0xf66
0x000000000047af37 : ret 0xf675
0x000000000046ff9c : ret 0xf741
0x0000000000405822 : ret 0xf748
0x0000000000482b4c : ret 0xf749
0x00000000004257c9 : ret 0xf800
0x000000000048d34a : ret 0xf808
0x00000000004a6a30 : ret 0xf869
0x0000000000418883 : ret 0xf8b
0x0000000000463881 : ret 0xf8c1
0x00000000004406a6 : ret 0xf8c5
0x000000000047275a : ret 0xf8dc
0x0000000000448534 : ret 0xf8e9
0x00000000004901ea : ret 0xf8ff
0x00000000004946c4 : ret 0xfa11
0x0000000000494bbc : ret 0xfa38
0x000000000041f432 : ret 0xfae9
0x0000000000450202 : ret 0xfb02
0x000000000044a262 : ret 0xfb61
0x00000000004965e8 : ret 0xfb71
0x000000000041fa1a : ret 0xfbe9
0x0000000000425689 : ret 0xfc00
0x00000000004245a1 : ret 0xfc3
0x0000000000425549 : ret 0xfe00
0x0000000000418972 : ret 0xfe7a
0x0000000000400d55 : ret 0xfe83
0x000000000042374a : ret 0xfea4
0x0000000000422d1a : ret 0xfecb
0x0000000000425409 : ret 0xff00
0x0000000000434be1 : ret 0xff2
0x000000000044d6fb : ret 0xff25
0x000000000042c109 : ret 0xff2d
0x0000000000425e6a : ret 0xff3
0x000000000046af77 : ret 0xff31
0x00000000004252c9 : ret 0xff80
0x0000000000466551 : ret 0xff83
0x000000000045412c : ret 0xff85
0x000000000045d5c2 : ret 0xffa0
0x00000000004237aa : ret 0xffa5
0x000000000040b07a : ret 0xffaf
0x000000000040ad7a : ret 0xffb2
0x0000000000411067 : ret 0xffb8
0x000000000040dbea : ret 0xffc0
0x00000000004234b8 : ret 0xffdf
0x000000000045acb0 : ret 0xffe0
0x000000000046d534 : ret 0xffe7
0x00000000004681e9 : ret 0xffe8
0x00000000004495e5 : ret 0xffe9
0x000000000040f0b1 : ret 0xffef
0x0000000000422ed2 : ret 0xfff
0x000000000040da12 : ret 0xfff0
0x000000000046a960 : ret 0xfff1
0x0000000000485800 : ret 0xfff7
0x0000000000424dc9 : ret 0xfff8
0x000000000041c988 : ret 0xfffa
0x0000000000404809 : ret 0xfffb
0x0000000000424c89 : ret 0xfffc
0x0000000000418305 : ret 0xfffd
0x000000000042194a : ret 0xfffe
0x00000000004157fc : ret 0xffff
0x0000000000403f9f : ret 1
0x000000000042bb7b : ret 2
0x000000000042d532 : ret 3
0x0000000000409ed8 : ret 4
0x0000000000438d4e : ret 5
0x000000000049e768 : ret 6
0x000000000042a9ca : ret 7
0x0000000000409f38 : ret 8
0x00000000004456ea : ret 9
0x000000000047eabf : retf
0x0000000000411b42 : retf 0
0x000000000049f520 : retf 0x11
0x00000000004882fd : retf 0x114d
0x0000000000477330 : retf 0x12b9
0x0000000000455f5f : retf 0x12e9
0x00000000004622e9 : retf 0x147f
0x0000000000472b93 : retf 0x148
0x0000000000432f4c : retf 0x14c
0x0000000000427392 : retf 0x16
0x00000000004844fd : retf 0x194d
0x000000000044be52 : retf 0x19b8
0x0000000000407084 : retf 0x1b
0x000000000040ebe1 : retf 0x1be
0x000000000041e408 : retf 0x1be9
0x0000000000402ee2 : retf 0x1d2
0x00000000004a10c8 : retf 0x1d4
0x00000000004a1868 : retf 0x1d5
0x000000000042b830 : retf 0x1f0f
0x00000000004b05ea : retf 0x2000
0x000000000048af5a : retf 0x203
0x000000000046d751 : retf 0x20be
0x0000000000414581 : retf 0x2148
0x000000000048f8e7 : retf 0x22
0x000000000041b163 : retf 0x2274
0x000000000047f8e6 : retf 0x23
0x0000000000401445 : retf 0x230
0x00000000004877d2 : retf 0x234b
0x000000000046fd4d : retf 0x24
0x000000000045ff64 : retf 0x25
0x0000000000462f3d : retf 0x2598
0x000000000044f385 : retf 0x26
0x000000000047e457 : retf 0x26c
0x000000000044d542 : retf 0x26f3
0x000000000042deb9 : retf 0x280f
0x000000000041cdfd : retf 0x29
0x000000000047175a : retf 0x2941
0x0000000000409a7f : retf 0x2948
0x0000000000410e0e : retf 0x294c
0x000000000042363d : retf 0x2991
0x0000000000420272 : retf 0x2995
0x000000000047afea : retf 0x29b
0x000000000041dc5a : retf 0x29bb
0x000000000040fd4b : retf 0x2a
0x00000000004144d2 : retf 0x2a68
0x000000000041db78 : retf 0x2a74
0x000000000040f33b : retf 0x2a7e
0x00000000004a7c3c : retf 0x2a91
0x000000000040ef6a : retf 0x2a9e
0x000000000044a4b2 : retf 0x2ae
0x0000000000457c3f : retf 0x2c73
0x0000000000457c19 : retf 0x2c76
0x00000000004a70ba : retf 0x2c90
0x0000000000477fdf : retf 0x2de9
0x000000000044c5e1 : retf 0x2e75
0x0000000000401408 : retf 0x31
0x00000000004347d6 : retf 0x3148
0x00000000004a8ea5 : retf 0x3159
0x000000000044d5b2 : retf 0x31b
0x00000000004a8f0d : retf 0x32dd
0x00000000004a05c8 : retf 0x33
0x00000000004a77c3 : retf 0x33e6
0x00000000004a7cf1 : retf 0x3617
0x00000000004347b2 : retf 0x377
0x000000000041e710 : retf 0x3948
0x00000000004714c0 : retf 0x3949
0x000000000041942a : retf 0x394c
0x000000000041f79d : retf 0x3d83
0x00000000004a9306 : retf 0x3d8a
0x00000000004a6b9b : retf 0x3ec
0x000000000044d755 : retf 0x4102
0x000000000044d8a1 : retf 0x4110
0x0000000000453c5e : retf 0x4180
0x0000000000461d3c : retf 0x41a
0x0000000000425f1c : retf 0x4266
0x00000000004539c3 : retf 0x4280
0x000000000048a28d : retf 0x42f6
0x0000000000400dd2 : retf 0x440
0x000000000043d03a : retf 0x4466
0x0000000000465726 : retf 0x45e9
0x00000000004543c4 : retf 0x4689
0x00000000004194e5 : retf 0x4801
0x0000000000417171 : retf 0x4802
0x000000000040d81c : retf 0x4805
0x000000000040d887 : retf 0x4806
0x0000000000471aa7 : retf 0x4808
0x000000000040d738 : retf 0x4809
0x000000000040d978 : retf 0x480a
0x000000000040d93c : retf 0x480d
0x0000000000410d23 : retf 0x4810
0x0000000000410e21 : retf 0x4820
0x0000000000482bc6 : retf 0x48f8
0x000000000041cef3 : retf 0x4901
0x0000000000459ab3 : retf 0x4a8d
0x000000000041db4a : retf 0x4b74
0x0000000000417123 : retf 0x4c01
0x0000000000423092 : retf 0x4c89
0x00000000004897e9 : retf 0x4d20
0x00000000004844c8 : retf 0x4de8
0x0000000000482acb : retf 0x4df0
0x00000000004844ec : retf 0x4df8
0x00000000004583e2 : retf 0x50e8
0x000000000041e3d2 : retf 0x51e9
0x0000000000466816 : retf 0x53c
0x00000000004853d2 : retf 0x557f
0x000000000048af46 : retf 0x5774
0x000000000048520d : retf 0x5d5b
0x0000000000479f75 : retf 0x5f6
0x000000000040e8ac : retf 0x6411
0x000000000042dfa3 : retf 0x6601
0x000000000042e0f3 : retf 0x6602
0x000000000042e243 : retf 0x6603
0x000000000042e393 : retf 0x6604
0x000000000042e4e3 : retf 0x6605
0x000000000042e633 : retf 0x6606
0x000000000042e783 : retf 0x6607
0x000000000042e8d3 : retf 0x6608
0x000000000042ea23 : retf 0x6609
0x000000000042eb73 : retf 0x660a
0x000000000042ecc3 : retf 0x660b
0x000000000042ee13 : retf 0x660c
0x000000000042ef63 : retf 0x660d
0x000000000042f0b3 : retf 0x660e
0x000000000042f203 : retf 0x660f
0x00000000004347d1 : retf 0x676
0x00000000004a9225 : retf 0x67ca
0x0000000000475751 : retf 0x6b8
0x00000000004a7222 : retf 0x6ee8
0x0000000000423562 : retf 0x706
0x00000000004a90e6 : retf 0x7272
0x00000000004a88bf : retf 0x76a5
0x0000000000411323 : retf 0x775
0x00000000004a7742 : retf 0x79f5
0x0000000000449ecb : retf 0x8041
0x000000000042b763 : retf 0x8148
0x000000000041e022 : retf 0x820f
0x00000000004109d0 : retf 0x830f
0x0000000000413d31 : retf 0x8310
0x0000000000412d1d : retf 0x8320
0x00000000004547c7 : retf 0x8341
0x00000000004194e2 : retf 0x8348
0x000000000042a3df : retf 0x8349
0x00000000004199c0 : retf 0x840f
0x00000000004a8030 : retf 0x8481
0x0000000000414736 : retf 0x850f
0x00000000004008c3 : retf 0x8545
0x000000000044126b : retf 0x8548
0x000000000042b289 : retf 0x860f
0x0000000000432f9c : retf 0x870f
0x0000000000489890 : retf 0x8820
0x00000000004539ad : retf 0x8880
0x0000000000423098 : retf 0x8902
0x00000000004013c4 : retf 0x8904
0x0000000000411d60 : retf 0x8920
0x000000000044a70a : retf 0x8940
0x0000000000403f26 : retf 0x8941
0x0000000000460500 : retf 0x8944
0x0000000000402e73 : retf 0x8948
0x000000000042d9d9 : retf 0x8949
0x0000000000410ccc : retf 0x894c
0x0000000000455aba : retf 0x8966
0x0000000000453a0e : retf 0x8980
0x00000000004858c2 : retf 0x8b41
0x000000000040485b : retf 0x8b48
0x00000000004056dc : retf 0x8b49
0x000000000042fdd9 : retf 0x8b4c
0x00000000004199fe : retf 0x8d48
0x000000000042b199 : retf 0x8d4a
0x00000000004447dd : retf 0x8d4c
0x000000000041e41b : retf 0x8e9
0x000000000042a31d : retf 0x9066
0x000000000045a520 : retf 0x9273
0x00000000004a898e : retf 0x93a2
0x000000000041ded6 : retf 0x948
0x000000000046cf8c : retf 0x98e9
0x00000000004a8d2b : retf 0x99e0
0x000000000044a700 : retf 0x9b9
0x00000000004a909a : retf 0x9d7d
0x00000000004a99a5 : retf 0xa020
0x00000000004a6f05 : retf 0xa1eb
0x00000000004a8f8b : retf 0xa2fe
0x000000000041d1e9 : retf 0xa74
0x00000000004a905c : retf 0xab0d
0x000000000040e6dd : retf 0xade9
0x00000000004a95ae : retf 0xae32
0x0000000000426642 : retf 0xb
0x0000000000458282 : retf 0xb0e8
0x000000000041e171 : retf 0xb2e9
0x00000000004a7da9 : retf 0xb51a
0x000000000042bdc2 : retf 0xb60f
0x000000000048ae22 : retf 0xb801
0x00000000004547d4 : retf 0xb941
0x0000000000487dc0 : retf 0xba
0x000000000041cf21 : retf 0xba41
0x000000000046f152 : retf 0xbb41
0x00000000004a90b3 : retf 0xbb9a
0x0000000000485a76 : retf 0xbeb
0x00000000004a90fd : retf 0xbf4b
0x000000000046d6ac : retf 0xc
0x0000000000456928 : retf 0xc031
0x00000000004025f3 : retf 0xc089
0x00000000004a8d7d : retf 0xc0fe
0x000000000040e06a : retf 0xc148
0x000000000047350e : retf 0xc149
0x0000000000460e25 : retf 0xc239
0x0000000000464a22 : retf 0xc4
0x0000000000458d7d : retf 0xc6
0x00000000004656a1 : retf 0xc7
0x0000000000423e34 : retf 0xc748
0x00000000004737c3 : retf 0xc985
0x000000000042d314 : retf 0xcab2
0x00000000004a634a : retf 0xcccb
0x000000000040a9b7 : retf 0xd
0x00000000004a7b66 : retf 0xd1cb
0x00000000004482ff : retf 0xd231
0x0000000000414de5 : retf 0xd284
0x0000000000451294 : retf 0xd285
0x0000000000403f31 : retf 0xd289
0x00000000004a9277 : retf 0xd39
0x00000000004480f6 : retf 0xd975
0x00000000004a9803 : retf 0xde4f
0x0000000000412301 : retf 0xdeb
0x00000000004a7e33 : retf 0xdf7f
0x0000000000407006 : retf 0xe
0x00000000004a78de : retf 0xe152
0x0000000000447f33 : retf 0xe175
0x0000000000485a9b : retf 0xe275
0x00000000004544e0 : retf 0xe283
0x0000000000478a29 : retf 0xe474
0x0000000000447dcc : retf 0xe475
0x00000000004a7ebc : retf 0xe496
0x000000000045e1a7 : retf 0xe677
0x00000000004a7826 : retf 0xe72e
0x00000000004a6eb3 : retf 0xe80
0x000000000047789b : retf 0xe802
0x0000000000465915 : retf 0xe87f
0x000000000040d8b9 : retf 0xe903
0x00000000004841bc : retf 0xe972
0x0000000000461325 : retf 0xe9ff
0x0000000000483b0b : retf 0xea72
0x00000000004121c3 : retf 0xea77
0x00000000004a8e6c : retf 0xea91
0x000000000048817b : retf 0xeac0
0x000000000041b472 : retf 0xeac1
0x0000000000424a61 : retf 0xead3
0x000000000040d872 : retf 0xeb04
0x000000000040d8d1 : retf 0xeb07
0x000000000040d798 : retf 0xeb08
0x000000000040d99f : retf 0xeb0b
0x000000000040d972 : retf 0xeb0c
0x00000000004a6f8d : retf 0xeb83
0x00000000004a9781 : retf 0xebbf
0x000000000041706b : retf 0xee75
0x000000000047e3a7 : retf 0xee7c
0x00000000004331dc : retf 0xf01
0x000000000043335c : retf 0xf02
0x00000000004334dc : retf 0xf03
0x000000000043365c : retf 0xf04
0x00000000004337dc : retf 0xf05
0x000000000043395c : retf 0xf06
0x0000000000433adc : retf 0xf07
0x0000000000433c5c : retf 0xf08
0x0000000000433ddc : retf 0xf09
0x0000000000433f5c : retf 0xf0a
0x00000000004340dc : retf 0xf0b
0x000000000043425c : retf 0xf0c
0x00000000004343dc : retf 0xf0d
0x000000000043455c : retf 0xf0e
0x00000000004346dc : retf 0xf0f
0x000000000043ec0d : retf 0xf1c5
0x000000000045dc2b : retf 0xf41
0x0000000000440bd0 : retf 0xf48
0x00000000004739f1 : retf 0xf4c
0x0000000000472b96 : retf 0xf631
0x00000000004a8dc8 : retf 0xf64
0x0000000000424943 : retf 0xf66
0x000000000042c37a : retf 0xf748
0x000000000047a6ca : retf 0xf85d
0x0000000000487122 : retf 0xf987
0x000000000041d74d : retf 0xf989
0x000000000043ecdf : retf 0xf9c5
0x0000000000494ee0 : retf 0xfa2a
0x0000000000494ed8 : retf 0xfa2b
0x0000000000494ed0 : retf 0xfa2c
0x0000000000494ec8 : retf 0xfa2d
0x0000000000494ec0 : retf 0xfa2e
0x0000000000494ce8 : retf 0xfa33
0x0000000000403f51 : retf 0xfa83
0x000000000046381a : retf 0xfac1
0x0000000000482602 : retf 0xfc6a
0x0000000000490bf2 : retf 0xfc9a
0x000000000047e512 : retf 0xfcb2
0x0000000000476172 : retf 0xfd3b
0x0000000000473696 : retf 0xfdc5
0x00000000004189ba : retf 0xfe7a
0x00000000004826bb : retf 0xfe8
0x000000000042c1a7 : retf 0xfec5
0x0000000000435001 : retf 0xff2
0x000000000042c7ab : retf 0xff3
0x000000000040db44 : retf 0xff31
0x00000000004899c2 : retf 0xff8c
0x00000000004035a4 : retf 0xffbf
0x000000000046db52 : retf 0xffde
0x000000000040b899 : retf 0xffe7
0x00000000004874f2 : retf 0xfff3
0x00000000004649ca : retf 0xfff5
0x0000000000453aa7 : retf 0xfff6
0x000000000045e7c2 : retf 0xfff8
0x00000000004945c9 : retf 0xfff9
0x000000000045471e : retf 0xfffa
0x0000000000465a7f : retf 0xfffb
0x000000000040e1c1 : retf 0xfffc
0x0000000000423960 : retf 0xfffd
0x00000000004111ae : retf 0xfffe
0x00000000004039d7 : retf 0xffff
0x0000000000423072 : retf 1
0x0000000000426f42 : retf 2
0x00000000004531f2 : retf 3
0x000000000048c2e5 : retf 4
0x00000000004a2c74 : retf 5
0x0000000000409dca : retf 6
0x00000000004a3074 : retf 7
0x00000000004a3274 : retf 8
0x000000000042c4cb : retf 9
0x00000000004945b8 : rol ah, 1 ; stc ; jmp qword ptr [rax]
0x0000000000446805 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000004482f3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e25c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b45e : rol bl, 0x83 ; ret 0x6620
0x00000000004747ab : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418467 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042bc2d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004471ad : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425e42 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b94b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473982 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a2a60 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000495024 : rol byte ptr [rax - 6], 1 ; jmp rax
0x0000000000479e51 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c69d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d00b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d28e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040fa49 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b6a2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485a95 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x00000000004828ab : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004188d8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000453241 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000474a12 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000448181 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046679f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004471ae : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008be : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046d452 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x00000000004749f2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004afa9c : rol byte ptr [rcx], 0 ; jo 0x4afa2b ; stc ; call qword ptr [rax]
0x0000000000464822 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044e9a6 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000004594fb : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448517 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000041039d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000448530 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042399b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000045501a : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; call 0x401af6
0x000000000044e1f1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474a52 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474a02 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048bec6 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000494830 : rol byte ptr [rdx], 1 ; cli ; call qword ptr [rax + 0x10fffa0a]
0x00000000004948d8 : rol byte ptr [rip + 0x552fffa], cl ; cli ; call rdx
0x0000000000474a42 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043edc5 : rol ch, 1 ; jns 0x43eda4 ; retf 0xead3
0x000000000043ef15 : rol ch, 1 ; jns 0x43eef4 ; retf 0xead3
0x000000000043f065 : rol ch, 1 ; jns 0x43f044 ; retf 0xead3
0x000000000043f1b5 : rol ch, 1 ; jns 0x43f194 ; retf 0xead3
0x000000000043f305 : rol ch, 1 ; jns 0x43f2e4 ; retf 0xead3
0x000000000043f455 : rol ch, 1 ; jns 0x43f434 ; retf 0xead3
0x000000000043f5a5 : rol ch, 1 ; jns 0x43f584 ; retf 0xead3
0x000000000043f6f5 : rol ch, 1 ; jns 0x43f6d4 ; retf 0xead3
0x000000000043f845 : rol ch, 1 ; jns 0x43f824 ; retf 0xead3
0x000000000043f995 : rol ch, 1 ; jns 0x43f974 ; retf 0xead3
0x000000000043fae5 : rol ch, 1 ; jns 0x43fac4 ; retf 0xead3
0x000000000043fc35 : rol ch, 1 ; jns 0x43fc14 ; retf 0xead3
0x000000000043fd85 : rol ch, 1 ; jns 0x43fd64 ; retf 0xead3
0x000000000043fed5 : rol ch, 1 ; jns 0x43feb4 ; retf 0xead3
0x0000000000440025 : rol ch, 1 ; jns 0x440004 ; retf 0xead3
0x000000000042b9cf : rol ch, 1 ; std ; xlatb ; ret
0x00000000004736f6 : rol ch, cl ; std ; xlatb ; ret
0x0000000000440d3f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a6340 : rol cl, 0xc2 ; ret
0x000000000047499c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000447f2c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000447dc8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004372a0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042b484 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b9c3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440813 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000478109 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400929 : rol dword ptr [rcx], 0x8d ; call r11
0x00000000004569ef : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b05e6 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x0000000000454aaa : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047368e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042c105 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422e9c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422e9b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004945c4 : ror al, 0xf9 ; call qword ptr [rax]
0x00000000004723a5 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aaf8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b4d2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b519 ; add rax, rdi ; ret
0x0000000000440bd7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004746bc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000041121e : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000475a7c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475aaf ; ret
0x000000000044bee8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041dd23 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482d61 : ror byte ptr [rax + 0x39], cl ; call 0x490abf7e
0x000000000047c9da : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000470133 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d6ad : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e906 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f62b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045abd9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045abca : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b57c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b4a2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b993 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405973 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440bd4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049ee68 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042bc25 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048337c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046654a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042b492 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b4c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422ece : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000479ada : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004499da : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000411460 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048ab0d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045a3e4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413be0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048207a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dacd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f51d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004148c1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148d7 ; ret
0x0000000000484dec : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000416645 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475993 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000415861 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041de6d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb268c
0x000000000041efad : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb37cc
0x000000000041fd67 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb4586
0x000000000042186a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6089
0x0000000000421d6f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb658e
0x00000000004222ab : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6aca
0x000000000040eb50 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044ab24 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004122fa : ror byte ptr [rax - 0x7d], cl ; loop 0x412302 ; add rdx, rcx ; jmp 0x412318
0x00000000004550e5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004896e5 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046ec52 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046f172 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000444159 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; iretd ; syscall
0x00000000004441d3 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; push rbp ; syscall
0x000000000047408c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000004847e4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c1d7 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x00000000004723a6 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000493ff8 : ror byte ptr [rcx + rdi*8], 1 ; call qword ptr [rax]
0x000000000045c0e6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000468238 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f9bf : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000046984e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x000000000046ff94 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46ff67
0x000000000045ae82 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044bddc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000004780b1 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045ec2c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041005d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475bc9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f7e1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402746 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466d4b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450947 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000423cbe : ror byte ptr [rdi], 0x84 ; retf
0x000000000044c662 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b896 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004535dc : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044110a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042286f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044ca3f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047dbc2 : ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000466a1e : ror byte ptr [rdi], 0x85 ; retf
0x000000000044cb37 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042b80d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000046354c : ror byte ptr [rdi], 0x85 ; retf 6
0x000000000042306f : ror byte ptr [rdi], 0x88 ; retf 1
0x00000000004678e9 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044bb3c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f699 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048118a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046dafd : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484def : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000446c7e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041073b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000040ff20 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046cf0a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422ecb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004470f5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dae2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dacc ; ret
0x000000000046387e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004347b7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004853ee : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000446c88 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000440aa4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000440bc9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000004739ea : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048acd4 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f726 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423617 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479ee3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465f80 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000458678 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000485a01 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041655d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x416557 ; ret
0x0000000000470b3d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x470b37 ; ret
0x0000000000465a79 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045dd34 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000048404d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046593b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444c37 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047c1ce : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042cf08 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d614 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d3e6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042d366 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d6a4 : ror dword ptr [rdi], 0x85 ; je 0x42d6b4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d19b : ror dword ptr [rdi], 0x85 ; jno 0x42d1b0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d263 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cee0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041655c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x416558 ; ret
0x0000000000470b3c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x470b38 ; ret
0x00000000004017be : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4017de ; syscall
0x000000000043f7ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7225 : sahf ; ret 0x38ae
0x0000000000483941 : sahf ; ret 0x3948
0x000000000045c0ec : sahf ; ret 0x894c
0x000000000048c8c4 : sahf ; ret 0xf45
0x00000000004a7d5c : sahf ; retf
0x000000000048f8e6 : sahf ; retf 0x22
0x00000000004188de : sal bh, 0xd8 ; ret
0x00000000004951e0 : sal bh, 0xfa ; jmp rax
0x0000000000425cc7 : sal bh, 1 ; ret 0x8000
0x0000000000425b87 : sal bh, 1 ; ret 0xc000
0x0000000000425a47 : sal bh, 1 ; ret 0xe000
0x0000000000425907 : sal bh, 1 ; ret 0xf000
0x00000000004257c7 : sal bh, 1 ; ret 0xf800
0x0000000000425687 : sal bh, 1 ; ret 0xfc00
0x0000000000425547 : sal bh, 1 ; ret 0xfe00
0x0000000000425407 : sal bh, 1 ; ret 0xff00
0x00000000004252c7 : sal bh, 1 ; ret 0xff80
0x0000000000425187 : sal bh, 1 ; ret 0xffc0
0x0000000000425047 : sal bh, 1 ; ret 0xffe0
0x0000000000424f07 : sal bh, 1 ; ret 0xfff0
0x0000000000424dc7 : sal bh, 1 ; ret 0xfff8
0x0000000000424c87 : sal bh, 1 ; ret 0xfffc
0x0000000000424b47 : sal bh, 1 ; ret 0xfffe
0x00000000004951ac : sal bl, 1 ; cli ; inc eax ; idiv dl ; call rax
0x000000000047479f : sal bl, 1 ; ret
0x000000000047f53d : sal bl, cl ; ret
0x000000000040da0d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489851 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000449a77 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000449d47 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000473c42 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000048273e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x00000000004757d6 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405dbb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f673 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f658 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044bf01 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004148c4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044bf11 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041747d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000446970 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000416560 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425feb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dae7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b9cd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480ff8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b9c5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044081d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440815 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004744fb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041889c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cff6 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x00000000004872ac : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4872ca
0x0000000000440b1c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e9a2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044bee6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040ea4c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x000000000047394b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c81b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000440e33 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004851b1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047faf9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004898aa : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000495158 : sal cl, 0xfa ; call rax
0x000000000049515c : sal cl, 1 ; cli ; jmp rax
0x00000000004951b0 : sal dh, 0xfa ; call rax
0x00000000004951b4 : sal dh, 1 ; cli ; jmp rax
0x000000000049518c : sal dl, 1 ; cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000447053 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480ffd : sal edi, 0xd8 ; ret
0x0000000000479f6c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004ae275 : sal esi, cl ; call qword ptr [rax]
0x000000000047e572 : sar ah, 0xff ; mov rbp, rax ; jmp 0x47e54b
0x0000000000495204 : sar al, 0xfa ; jmp rax
0x0000000000403010 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449683 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fe83 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484740 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402742 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bdc1 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004056d5 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x4056ae
0x0000000000446c2e : sar byte ptr [rcx], 0xc8 ; jle 0x446c70 ; movsxd rax, ecx ; ret
0x000000000044d57d : sar byte ptr [rcx], cl ; ret
0x00000000004622e7 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000449ff2 : sar byte ptr [rdx + 0x80000], 0xe8 ; ret
0x00000000004589f6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7bbf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004942cc : sar byte ptr [rsi - 0x4eaf0007], 0xf9 ; call qword ptr [rax]
0x0000000000495020 : sar byte ptr [rsi], 0xfa ; call rax
0x0000000000495224 : sar cl, 0xfa ; jmp rax
0x00000000004945b1 : sar cl, 0xff ; add bl, 0xf9 ; call rax
0x00000000004945a5 : sar cl, cl ; jmp qword ptr [rax]
0x0000000000438593 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43859e ; ret
0x0000000000421da9 : sar dword ptr [rdx + 0x29], cl ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000447569 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471d9c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004887be : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004945a1 : sar ecx, 1 ; call rax
0x000000000046333d : sar ecx, 1 ; dec dword ptr [rax + 0x29] ; ret
0x00000000004a7923 : sar ecx, 1 ; jnp 0x4a78e4 ; ret
0x00000000004945e5 : sar ecx, cl ; call qword ptr [rax - 0x1f00062c]
0x00000000004157f7 : sar edx, 2 ; call 0x411a55
0x0000000000471ea2 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042bc27 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000447a23 : sar esi, 1 ; jg 0x447a53 ; vzeroupper ; ret
0x0000000000447bbc : sar esi, 1 ; jg 0x447bec ; vzeroupper ; ret
0x0000000000471d9b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004887bd : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004157f6 : sar rdx, 2 ; call 0x411a56
0x00000000004157f5 : sar rdx, 2 ; call 0x411a57
0x0000000000471ea1 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042bc26 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463535 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044a7b1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004669ad : sbb al, 0x29 ; ret 0xe683
0x00000000004678e7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a8c22 : sbb al, 0x8c ; retf
0x00000000004a3df4 : sbb al, 0xb5 ; cld ; call rsp
0x0000000000494510 : sbb al, 0xf9 ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x000000000040e032 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000464016 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406ee3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000469abb : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b078 : sbb al, ch ; ret 0xffaf
0x0000000000409447 : sbb al, ch ; retf
0x000000000047a6c8 : sbb al, ch ; retf 0xf85d
0x0000000000494025 : sbb bh, cl ; call rax
0x00000000004a79b2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a66a5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481d64 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485cc4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484de9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000475861 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e3a1 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419271 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de84 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041b845 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481d65 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000004693c2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048deca : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048569f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000482747 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f4cd : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f8a5 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x00000000004743d0 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047fb1c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004165c1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041a21b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004859cf : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004115ce : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000419a33 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004b42dc : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, 0x8a ; add byte ptr [rax], al ; retf
0x0000000000485cc5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004496c1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a52a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048a945 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041fae8 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d35c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000411997 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418457 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004b49f4 : sbb byte ptr [rcx + 0x5380000], dl ; std ; jmp qword ptr [rdx]
0x0000000000471bba : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000458222 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041994e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004720ce : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004901bf : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x490242 ; ret 0x8b48
0x00000000004544a8 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dbe0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f51b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484dea : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000403f63 : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004871ab : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a4f40 : sbb byte ptr [rsi - 3], dh ; jmp qword ptr [rax]
0x00000000004af6f4 : sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; fcomp st(0) ; clc ; call qword ptr [rax]
0x0000000000494470 : sbb cl, 0xf9 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x000000000041dd1d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000457c2d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043df1d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fb6a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f38a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f77a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f139 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e59d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dd7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d55d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f62a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d89d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d9d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fe5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea13 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd13 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d833 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e533 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f67b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e1f5 : sbb dh, bl ; ret
0x0000000000480a07 : sbb dl, dh ; jmp r11
0x000000000048879b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e0e9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044be54 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000461371 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8f5d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000466290 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000446647 : sbb eax, -1 ; ret
0x000000000048d242 : sbb eax, 0x18c48348 ; ret
0x0000000000490280 : sbb eax, 0x22ba6b ; jne 0x490270 ; pop rbx ; ret
0x00000000004a79b3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045e894 : sbb eax, 0x39480001 ; ret
0x0000000000462466 : sbb eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000403e78 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045dd12 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c5a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040707c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004828aa : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042c087 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048ddcf : sbb eax, eax ; ret
0x0000000000446645 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424601 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a8ac8 : sbb ebp, ebx ; retf
0x0000000000472b69 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000450bde : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403ebd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000494021 : sbb ecx, edi ; call qword ptr [rax - 0x2f0006e6]
0x00000000004a8859 : sbb edi, ebp ; retf
0x000000000042b122 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbbe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000044e2f9 : scasb al, byte ptr [rdi] ; call 0x45ad93
0x00000000004a8f09 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000420559 : scasb al, byte ptr [rdi] ; ret 0x29
0x000000000043fcbd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000490ff0 : scasd eax, dword ptr [rdi] ; and al, byte ptr [rax] ; jne 0x491008 ; jmp 0x491022
0x00000000004a3bb1 : scasd eax, dword ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000004a3ba9 : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x0000000000495129 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax + 0x20fffa9b]
0x00000000004b1bc9 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b1bb1 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b1bdd : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004148ae : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e3e9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045b12e : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004116b6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000419949 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448533 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047e8ed : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a7c34 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a6eaf : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044beec : setae al ; ret
0x000000000045ae5a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004188dc : setne al ; neg eax ; ret
0x000000000044d580 : setne dl ; jmp 0x44d568
0x0000000000494488 : shl ah, 1 ; stc ; call rax
0x000000000042b96b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b92b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000494048 : shl byte ptr [rdi], 0xf9 ; jmp rax
0x000000000044688f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042493b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000444c33 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004403e5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d89b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d8b2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004734e6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004734f7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d791 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494484 : shl dl, 1 ; stc ; call rax
0x00000000004a0090 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a77bd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000047415b : shl dword ptr [rax], 0x24 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041d74b : shl dword ptr [rcx], 1 ; retf 0xf989
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a7aa8 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000446872 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042493f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000004734e2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004466eb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042d816 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d8cd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d89f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d831 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2bc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d6f1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449054 : shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044e211 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e20d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482f7c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482f07 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482ed6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000463939 : shl edx, 3 ; call 0x40043d
0x00000000004872b0 : shl edx, 5 ; add rdx, rax ; jmp 0x4872c6
0x0000000000482f7b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482f06 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482ed5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000463938 : shl rdx, 3 ; call 0x40043e
0x00000000004872af : shl rdx, 5 ; add rdx, rax ; jmp 0x4872c7
0x0000000000423592 : shr al, 0x48 ; ret
0x0000000000422d18 : shr al, 0xc2 ; retf
0x00000000004a7064 : shr al, cl ; add al, 0x3d ; retf
0x00000000004974c4 : shr byte ptr [rbx], 1 ; cld ; call qword ptr [rax]
0x0000000000425fef : shr byte ptr [rcx], 0xc8 ; ret
0x000000000042459a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000494de8 : shr byte ptr [rcx], cl ; cli ; inc dword ptr [rdx + 0x29] ; cli ; call rdx
0x00000000004579d8 : shr byte ptr [rcx], cl ; ret
0x000000000042bc2b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004952b0 : shr byte ptr [rdi], 0xfb ; jmp rax
0x00000000004a8e67 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000494124 : shr byte ptr [rsi - 7], 0xff ; mov al, 0x6f ; stc ; jmp rax
0x000000000047bdbc : shr cl, 0xfc ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000048cd22 : shr cl, 1 ; ret 0xfffe
0x000000000046837c : shr cl, cl ; jrcxz 0x468388 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c82f : shr cl, cl ; ret
0x000000000045953f : shr cl, cl ; retf
0x000000000044820a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004745ab : shr eax, 2 ; ret
0x0000000000474ab3 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448255 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041edde : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000048308c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483011 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482fe0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048308b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000483010 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482fdf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004745aa : shr rax, 2 ; ret
0x0000000000474ab2 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f269 : sldt word ptr [rax] ; ret
0x0000000000453c98 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000473de6 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042b0d7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004942ea : stc ; call qword ptr [rax + 0x20fff9be]
0x00000000004945e6 : stc ; call qword ptr [rax - 0x1f00062c]
0x0000000000494592 : stc ; call qword ptr [rax - 0x1f000633]
0x000000000049441a : stc ; call qword ptr [rax - 0x1f000658]
0x00000000004943c6 : stc ; call qword ptr [rax - 0x1f00065f]
0x0000000000494022 : stc ; call qword ptr [rax - 0x2f0006e6]
0x0000000000494012 : stc ; call qword ptr [rax - 0x2f0006eb]
0x0000000000494002 : stc ; call qword ptr [rax - 0x2f0006f0]
0x0000000000493ff2 : stc ; call qword ptr [rax - 0x2f0006f5]
0x00000000004942e6 : stc ; call qword ptr [rax - 0x6f000644]
0x000000000049433e : stc ; call qword ptr [rax]
0x000000000049416e : stc ; call qword ptr [rbp + 0x41fff98d]
0x00000000004afaf2 : stc ; call qword ptr [rbx]
0x0000000000494182 : stc ; call qword ptr [rcx + 0x11fff991]
0x000000000049418a : stc ; call qword ptr [rcx + 0x11fff992]
0x0000000000494192 : stc ; call qword ptr [rcx + 0x21fff993]
0x0000000000494176 : stc ; call qword ptr [rcx]
0x00000000004afa66 : stc ; call qword ptr [rdx]
0x00000000004941da : stc ; call qword ptr [rsi + 0x26fff994]
0x00000000004945b6 : stc ; call rax
0x000000000049413e : stc ; call rcx
0x00000000004b02ee : stc ; call rsi
0x00000000004af9ee : stc ; call rsp
0x0000000000495221 : stc ; cli ; inc eax ; stc ; cli ; jmp rax
0x000000000049520d : stc ; cli ; jmp qword ptr [rax]
0x0000000000495225 : stc ; cli ; jmp rax
0x000000000046333e : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468af5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000494aee : stc ; dec dword ptr [rsi + 0x33] ; cli ; call rax
0x00000000004944fa : stc ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494456 : stc ; inc dword ptr [rax - 0x23] ; stc ; jmp qword ptr [rax]
0x0000000000494472 : stc ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000494512 : stc ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x00000000004945e2 : stc ; inc dword ptr [rax - 0x2d] ; stc ; call qword ptr [rax - 0x1f00062c]
0x000000000049459e : stc ; inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x00000000004943d2 : stc ; inc dword ptr [rax - 0x2f00065b] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; jmp qword ptr [rax]
0x000000000049458e : stc ; inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x000000000049439e : stc ; inc dword ptr [rax - 0x49] ; stc ; call qword ptr [rax]
0x0000000000494276 : stc ; inc dword ptr [rax - 0x4b] ; stc ; jmp qword ptr [rax]
0x0000000000494416 : stc ; inc dword ptr [rax - 0x59] ; stc ; call qword ptr [rax - 0x1f000658]
0x00000000004943c2 : stc ; inc dword ptr [rax - 0x60] ; stc ; call qword ptr [rax - 0x1f00065f]
0x0000000000494252 : stc ; inc dword ptr [rax - 0x6d] ; stc ; call rax
0x000000000049402e : stc ; inc dword ptr [rax] ; and ecx, edi ; jmp qword ptr [rax]
0x000000000049451a : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004940ce : stc ; inc dword ptr [rax] ; push rdi ; stc ; push qword ptr [rax + 0x58] ; stc ; jmp rax
0x000000000049404e : stc ; inc dword ptr [rax] ; sub bh, cl ; jmp qword ptr [rax]
0x000000000049419e : stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x0000000000494172 : stc ; inc dword ptr [rcx - 0x72] ; stc ; call qword ptr [rcx]
0x00000000004941d6 : stc ; inc dword ptr [rsi] ; xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x00000000004945c2 : stc ; inc eax ; enter -7, 0x10 ; retf 0xfff9
0x00000000004942ca : stc ; inc eax ; mov esi, 0xb150fff9 ; stc ; call qword ptr [rax]
0x00000000004943f6 : stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x00000000004943e2 : stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x000000000049424e : stc ; inc eax ; xchg eax, edx ; stc ; inc dword ptr [rax - 0x6d] ; stc ; call rax
0x000000000043ec72 : stc ; je 0x43ec3e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000494a72 : stc ; jmp qword ptr [rax + 0x20fff9e6]
0x0000000000494ab6 : stc ; jmp qword ptr [rax + 0x20fff9e8]
0x0000000000494a7a : stc ; jmp qword ptr [rax + 0x20fff9e9]
0x0000000000494abe : stc ; jmp qword ptr [rax + 0x20fff9eb]
0x0000000000494a82 : stc ; jmp qword ptr [rax + 0x20fff9ec]
0x0000000000494ac6 : stc ; jmp qword ptr [rax + 0x20fff9ee]
0x0000000000494a8a : stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494ace : stc ; jmp qword ptr [rax + 0x20fff9f1]
0x0000000000494a92 : stc ; jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494ad6 : stc ; jmp qword ptr [rax + 0x20fff9f4]
0x0000000000494a9a : stc ; jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494ade : stc ; jmp qword ptr [rax + 0x20fff9f7]
0x0000000000494aa2 : stc ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ae6 : stc ; jmp qword ptr [rax + 0x20fff9fa]
0x0000000000494aaa : stc ; jmp qword ptr [rax - 0x1f000605]
0x000000000049413a : stc ; jmp qword ptr [rax - 0x2e000670]
0x00000000004945ca : stc ; jmp qword ptr [rax - 0x35]
0x0000000000494042 : stc ; jmp qword ptr [rax - 0x3f0006da]
0x0000000000494032 : stc ; jmp qword ptr [rax]
0x00000000004af83a : stc ; jmp qword ptr [rbx]
0x0000000000494196 : stc ; jmp qword ptr [rcx]
0x0000000000494156 : stc ; jmp qword ptr [rdx]
0x000000000049414e : stc ; jmp qword ptr [rsi + 0x52fff98d]
0x00000000004941b2 : stc ; jmp qword ptr [rsi]
0x000000000049404a : stc ; jmp rax
0x00000000004afab6 : stc ; jmp rbx
0x00000000004a7924 : stc ; jnp 0x4a78e3 ; ret
0x0000000000494136 : stc ; lcall [rsi - 0x5f000671] ; nop ; stc ; call rcx
0x0000000000430178 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004297f7 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004940d2 : stc ; push qword ptr [rax + 0x58] ; stc ; jmp rax
0x000000000049402a : stc ; push qword ptr [rax + 0xfff909] ; and ecx, edi ; jmp qword ptr [rax]
0x00000000004942ae : stc ; push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049434e : stc ; push qword ptr [rax - 0x50] ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004943de : stc ; push qword ptr [rax - 0x57] ; stc ; inc eax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004943f2 : stc ; push qword ptr [rax - 0x65] ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x00000000004945ae : stc ; push qword ptr [rax - 0x7f000640] ; ret
0x00000000004942b2 : stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494296 : stc ; push qword ptr [rax] ; mov ch, 0xf9 ; call qword ptr [rax]
0x000000000049433a : stc ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494352 : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494106 : stc ; push qword ptr [rax] ; push 0x6920fff9 ; stc ; call qword ptr [rax]
0x000000000049419a : stc ; push qword ptr [rcx + 0x41fff994] ; xchg eax, ebp ; stc ; call rcx
0x00000000004941a6 : stc ; push qword ptr [rcx - 0x6a] ; stc ; call qword ptr [rcx]
0x0000000000494116 : stc ; push rax ; imul edi, ecx, -1 ; loopne 0x494193 ; stc ; call rax
0x00000000004942d6 : stc ; push rax ; mov ah, 0xf9 ; call rax
0x000000000049435a : stc ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004942ba : stc ; push rax ; mov dh, 0xf9 ; call rax
0x000000000049429e : stc ; push rax ; mov eax, 0xbae0fff9 ; stc ; jmp rax
0x000000000049458a : stc ; push rax ; retf 0xfff9
0x0000000000494ae5 : stc ; stc ; jmp qword ptr [rax + 0x20fff9fa]
0x0000000000438a94 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c107 : stc ; xlatb ; ret 0xff2d
0x00000000004b590a : std ; call qword ptr [rbx]
0x00000000004b539a : std ; call qword ptr [rdx]
0x00000000004a4f52 : std ; call rax
0x00000000004b1a8a : std ; call rdx
0x00000000004506cd : std ; cli ; dec dword ptr [rbx + rcx*4 + 0x25] ; push rcx ; ret 0x26
0x000000000047649a : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473e08 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a3fe : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469b02 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424132 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x000000000048273b : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000481bee : std ; jbe 0x481bfc ; ret
0x00000000004a4ee6 : std ; jmp qword ptr [rax]
0x00000000004b50e2 : std ; jmp qword ptr [rcx]
0x00000000004b1592 : std ; jmp qword ptr [rdi]
0x00000000004b0cb2 : std ; jmp qword ptr [rdx]
0x00000000004a4ec6 : std ; jmp rax
0x00000000004b4a12 : std ; jmp rdx
0x00000000004b5116 : std ; jmp rsp
0x00000000004a4f3e : std ; lcall [rax] ; jbe 0x4a4f45 ; jmp qword ptr [rax]
0x00000000004a4ec2 : std ; ljmp [rax] ; je 0x4a4ec9 ; jmp rax
0x000000000042f99b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044b40e : std ; push rbx ; ret
0x00000000004a4ee2 : std ; push rbx ; xchg ch, bh ; jmp qword ptr [rax]
0x00000000004a4f3a : std ; push rbx ; xchg ch, bh ; lcall [rax] ; jbe 0x4a4f49 ; jmp qword ptr [rax]
0x00000000004a4ede : std ; push rbx ; xchg ch, bh ; push rbx ; xchg ch, bh ; jmp qword ptr [rax]
0x0000000000446ff3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a885a : std ; retf
0x000000000042b9d1 : std ; xlatb ; ret
0x000000000042b9c9 : std ; xlatb ; ret 0xc085
0x000000000042bf43 : std ; xlatb ; ret 0xe883
0x00000000004737c1 : std ; xlatb ; retf 0xc985
0x0000000000473694 : std ; xlatb ; retf 0xfdc5
0x00000000004736f4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421cc1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411793 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004952f2 : sti ; call qword ptr [rbx]
0x0000000000496026 : sti ; call rax
0x0000000000495332 : sti ; call rbx
0x000000000049582a : sti ; call rdx
0x000000000044921f : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049585a : sti ; dec eax ; cmp eax, 0x3e22fffb ; sti ; call rdx
0x0000000000495886 : sti ; jmp qword ptr [rax]
0x00000000004b2d4a : sti ; jmp qword ptr [rbx]
0x00000000004965fa : sti ; jmp qword ptr [rcx]
0x000000000049585e : sti ; jmp qword ptr [rdx]
0x0000000000490750 : sti ; jmp qword ptr [rsi + 0xf]
0x00000000004952b2 : sti ; jmp rax
0x000000000049574a : sti ; jmp rsi
0x000000000049589a : sti ; lcall [rax + 0x6afffb3e] ; sti ; jmp qword ptr [rdx]
0x000000000049604e : sti ; ljmp [rax] ; imul edi, ebx, -1 ; add byte ptr [rbx - 5], ch ; jmp rax
0x000000000049589e : sti ; ljmp [rdx + 0x3e] ; sti ; jmp qword ptr [rdx]
0x000000000042fd78 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049592a : sti ; push qword ptr [rbp + rdi + 0x3dfafffb] ; sti ; jmp rsi
0x00000000004965f6 : sti ; push qword ptr [rdi + 0x72] ; sti ; jmp qword ptr [rcx]
0x0000000000495746 : sti ; push qword ptr [rsi + 0x3f] ; sti ; jmp rsi
0x00000000004a7aaa : sti ; ret
0x000000000047e571 : sti ; sar ah, 0xff ; mov rbp, rax ; jmp 0x47e54c
0x0000000000494aad : sti ; stc ; jmp rax
0x00000000004b2d49 : sti ; sti ; jmp qword ptr [rbx]
0x000000000045a6c7 : sti ; test rax, rax ; je 0x45a6d5 ; call rax
0x000000000046c7ef : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a7f84 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000447d1b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004947e8 : stosb byte ptr [rdi], al ; or eax, 0xd3afffa ; cli ; jmp rax
0x00000000004943e5 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004244b1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000478bd9 : stosd dword ptr [rdi], eax ; js 0x478bda ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004687be : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ede3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a908c : stosd dword ptr [rdi], eax ; ret
0x000000000048f7e1 : stosd dword ptr [rdi], eax ; retf
0x00000000004a8f8a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000424761 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ede2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a9471 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b1034 : sub al, 0x16 ; cli ; call rcx
0x0000000000481ee6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000447f52 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044c660 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042cee3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424130 : sub al, 0xc3 ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000494e95 : sub al, 0xfa ; call rsp
0x0000000000494d59 : sub al, 0xfa ; jmp qword ptr [rax + 0x20fffa2b]
0x0000000000494d55 : sub al, 0xfa ; jmp qword ptr [rax]
0x0000000000418860 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004129a5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004187f6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a3515], 1 ; ret
0x000000000040fdeb : sub al, byte ptr [rax] ; jne 0x40fe02 ; jmp 0x40fe1c
0x0000000000416340 : sub al, byte ptr [rax] ; jne 0x416358 ; jmp 0x416372
0x0000000000418765 : sub al, byte ptr [rax] ; ret
0x000000000042455a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004248a2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042c2a5 : sub al, ch ; std ; xlatb ; ret
0x00000000004974d5 : sub bh, ah ; jmp rax
0x000000000044915d : sub bh, byte ptr [rax + 0x77] ; syscall
0x0000000000494051 : sub bh, cl ; jmp qword ptr [rax]
0x000000000045ac8a : sub bh, dh ; and eax, 0xf3087400 ; ret
0x0000000000494de5 : sub bh, dl ; call rdx
0x0000000000494f25 : sub bh, dl ; jmp qword ptr [rax + 0x10fffa29]
0x0000000000494f61 : sub bh, dl ; jmp qword ptr [rax]
0x0000000000494d69 : sub bh, dl ; push qword ptr [rax + 0x29] ; cli ; jmp rsi
0x000000000046379b : sub bl, cl ; in eax, 0xdf ; loopne 0x463730 ; ret
0x00000000004773bc : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041613c : sub byte ptr [rax + 0x39], cl ; retf
0x00000000004773bb : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483a73 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x000000000045842b : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000422994 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c32c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046fb84 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004b5904 : sub byte ptr [rax - 0x7b480000], ah ; std ; call qword ptr [rbx]
0x0000000000404a03 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d819 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d884 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040d939 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040d8b6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d86f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040d8ce : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040d96f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x000000000048440d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484455 ; leave ; ret
0x000000000048f182 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000448d14 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000488243 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488242 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000403f2b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x0000000000403f5f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044c18c : sub byte ptr [rcx], al ; ret
0x00000000004217b6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004246ba : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x00000000004246fb : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004825b5 : sub byte ptr [rdx], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000466ef4 : sub byte ptr [rip + 0xf410004], ch ; xchg eax, esp ; ret
0x00000000004b2f58 : sub byte ptr [rsi], cl ; cld ; jmp qword ptr [rbx]
0x000000000049404d : sub cl, bh ; inc dword ptr [rax] ; sub bh, cl ; jmp qword ptr [rax]
0x00000000004681e6 : sub cl, bpl ; ret 0xffe8
0x000000000040eb4d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004681e7 : sub cl, ch ; ret 0xffe8
0x000000000045e294 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004ac369 : sub dh, dh ; call qword ptr [rax]
0x00000000004ac37d : sub dh, dh ; call qword ptr [rdx]
0x00000000004ac2a9 : sub dh, dh ; jmp qword ptr [rax]
0x000000000048021a : sub dl, dh ; call r11
0x00000000004758ee : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a7e2d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000041f87a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ae1dd : sub dword ptr [rax], eax ; add byte ptr [rax], dl ; retf
0x000000000042457c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8da : sub dword ptr [rax], eax ; ret
0x00000000004a8ac2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042dfc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dfdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e117 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e12d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e267 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e27d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e3cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e507 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e51d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e657 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e66d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e7bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e90d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ea5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ebad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ece7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ecfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ee4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ef9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f0ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f23d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43103d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43118d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43142d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43157d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43181d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43196d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df23 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df1f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000045c593 : sub dword ptr [rdi], edi ; cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000042dfcd : sub dword ptr [rdi], esp ; jmp r9
0x000000000042459b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042a4a7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042d6c6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042a361 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a937a : sub dword ptr [rsi], 0x76 ; retf
0x000000000040db7d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042c037 : sub eax, -1 ; jne 0x42c048 ; vzeroupper ; ret
0x0000000000422f0a : sub eax, 0x10 ; ret
0x0000000000487946 : sub eax, 0x2316 ; jne 0x487957 ; pop rbx ; ret
0x0000000000494d51 : sub eax, 0x2ca0fffa ; cli ; jmp qword ptr [rax]
0x0000000000494e89 : sub eax, 0x2d54fffa ; cli ; call rsp
0x0000000000469694 : sub eax, 0x83000000 ; ret
0x0000000000466a65 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a6ac6 : sub eax, 0xea4ca798 ; retf
0x0000000000466ef5 : sub eax, 0xf410004 ; xchg eax, esp ; ret
0x0000000000424602 : sub eax, 0xf480002 ; ret 0x66c3
0x00000000004588c4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446ac4 : sub eax, 1 ; ret
0x0000000000481c36 : sub eax, dword ptr [0] ; ret
0x000000000040383d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004035ac : sub eax, dword ptr [rax] ; call 4
0x0000000000403b90 : sub eax, dword ptr [rax] ; jne 0x403ba8 ; jmp 0x403bc2
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401b9f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e236 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041911e : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000004487ea : sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d6 ; ret
0x0000000000424762 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418433 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000446c2d : sub eax, eax ; cmp eax, ecx ; jle 0x446c71 ; movsxd rax, ecx ; ret
0x0000000000481084 : sub eax, eax ; ret
0x000000000042c083 : sub eax, ecx ; je 0x42c099 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000417b09 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000484700 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000425d2c : sub eax, ecx ; ret
0x0000000000440bd9 : sub eax, edi ; ret
0x00000000004746be : sub eax, edi ; shr rax, 2 ; ret
0x00000000004847e3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041845b : sub eax, edx ; ret
0x0000000000474ab0 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042c04c : sub eax, edx ; vzeroupper ; ret
0x0000000000446c8d : sub eax, esi ; ret
0x0000000000481083 : sub eax, r8d ; ret
0x00000000004a7d1e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413e50 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004648cf : sub ebp, ecx ; retf
0x0000000000412a26 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a67b5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cff8 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473c44 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000494e9d : sub edi, edx ; call rsp
0x0000000000494d5d : sub edi, edx ; jmp qword ptr [rax]
0x00000000004974c5 : sub edi, esp ; call qword ptr [rax]
0x00000000004974c1 : sub edi, esp ; call rax
0x0000000000418460 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418455 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b4d4 : sub edx, eax ; jbe 0x42b517 ; add rax, rdi ; ret
0x000000000042b4e4 : sub edx, eax ; jbe 0x42b519 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042b4f4 : sub edx, eax ; jbe 0x42b519 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042b504 : sub edx, eax ; jbe 0x42b519 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000494f29 : sub edx, edi ; call qword ptr [rax]
0x0000000000494ded : sub edx, edi ; call rdx
0x0000000000494de9 : sub edx, edi ; inc dword ptr [rdx + 0x29] ; cli ; call rdx
0x0000000000494d6d : sub edx, edi ; jmp rsi
0x0000000000423901 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004133ff : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004157f4 : sub edx, esi ; sar rdx, 2 ; call 0x411a58
0x000000000048a943 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fc46 : sub esp, 0x80 ; call 0x44bef8
0x000000000046fcee : sub esp, 0x80 ; call 0x44bf28
0x0000000000492601 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000475553 : sub esp, 8 ; syscall
0x00000000004238d1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000417b08 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000422f09 : sub rax, 0x10 ; ret
0x0000000000446ac3 : sub rax, 1 ; ret
0x0000000000481c35 : sub rax, qword ptr [0] ; ret
0x000000000041911d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481c34 : sub rax, qword ptr fs:[0] ; ret
0x00000000004853f2 : sub rax, r8 ; ret
0x0000000000440bd8 : sub rax, rdi ; ret
0x00000000004746bd : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446b93 : sub rax, rdx ; ret
0x0000000000440c2f : sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8c : sub rax, rsi ; ret
0x000000000042b4d3 : sub rdx, rax ; jbe 0x42b518 ; add rax, rdi ; ret
0x00000000004157f3 : sub rdx, rsi ; sar rdx, 2 ; call 0x411a59
0x000000000048a942 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fc45 : sub rsp, 0x80 ; call 0x44bef9
0x000000000046fced : sub rsp, 0x80 ; call 0x44bf29
0x0000000000492600 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000475552 : sub rsp, 8 ; syscall
0x000000000047b6ff : syscall
0x0000000000417374 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475655 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b0d3 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000041efe9 : test al, 0x29 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000044adce : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004b1a84 : test al, 0x61 ; add byte ptr [rax], al ; clc ; hlt ; std ; call rdx
0x00000000004a7077 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004a6a5e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000045000d : test al, 0xe8 ; pop rbp ; retf
0x000000000049441d : test al, 0xf9 ; jmp rax
0x000000000040d791 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e905 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425fea : test al, al ; jne 0x425fd8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004485a0 : test al, al ; jne 0x4484d9 ; jmp 0x44857e
0x00000000004780b3 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a9984 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000472cfc : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a7e31 : test bh, dl ; retf 0xdf7f
0x0000000000419a38 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041005f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458fb1 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046acf9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040ea6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444e0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044424a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041878a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000412d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004118ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041874a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041768a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444c4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000044f122 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046abfc : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000472b8f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c1db : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dd72 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004afa60 : test byte ptr [rcx], al ; add byte ptr [rdx + rax*4 - 7], cl ; call qword ptr [rdx]
0x0000000000429db6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a596 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004290c6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004239b3 : test byte ptr [rcx], ch ; add bh, dh ; ret 0
0x000000000042a4a6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000428de6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000456514 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x4564d7
0x000000000044b864 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000470019 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000424136 : test byte ptr [rdi], 0x84 ; ret
0x000000000044a3af : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449ec6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000473084 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047309c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456919 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x4568dc
0x000000000041fe7e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472ce4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042197e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421e7e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469784 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f194 : test byte ptr [rip - 0x7c000011], al ; ret
0x00000000004738dd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000411be4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000453311 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000440abd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b5909 : test ch, bh ; call qword ptr [rbx]
0x000000000042b0d6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004afb41 : test cl, bh ; call qword ptr [rbx]
0x00000000004297f6 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aef6 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489fca : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000429516 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004275a6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004278a6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004287a6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042afe6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004284a6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004281a6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427ea6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044c7a1 : test cl, ch ; retf 0xfffe
0x0000000000429f26 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ae06 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044674f : test cl, cl ; jne 0x446744 ; ret
0x00000000004467ff : test cl, cl ; jne 0x4467f4 ; ret
0x0000000000446abf : test cl, cl ; jne 0x446ab8 ; sub rax, 1 ; ret
0x0000000000450ca5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000444c94 : test dl, 0x40 ; jne 0x444c59 ; lea rax, [rdi + 7] ; ret
0x0000000000444cc2 : test dl, 4 ; jne 0x444c59 ; lea rax, [rdi + 3] ; ret
0x00000000004b414c : test dl, cl ; cld ; call rdx
0x000000000040dae6 : test dl, dl ; jne 0x40dac8 ; ret
0x000000000044696f : test dl, dl ; jne 0x446968 ; lea rax, [rcx - 1] ; ret
0x0000000000480ff7 : test dl, dl ; jne 0x480fd3 ; movsx eax, cl ; neg eax ; ret
0x0000000000491cc3 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472cfd : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468c66 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004021b1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d6b1 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045ec09 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000469376 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004021b0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d6b0 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b458 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000449bd9 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d1c7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d616 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c298 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041fcb8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004757fb : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d19d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d0ad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cfbd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d0b2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x00000000004111a8 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048e154 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000478caf : test dword ptr [rdi - 8], esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000041d04c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042cee2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004736c3 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449846 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004464d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fad1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fbfd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042d3e8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a7f0d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a8d60 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433066 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000046c83e : test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x00000000004943e1 : test eax, 0xaac0fff9 ; stc ; call qword ptr [rax]
0x000000000044bddb : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422e81 : test eax, eax ; je 0x422e98 ; lea rax, [rdx - 0x10] ; ret
0x000000000042b1a8 : test eax, eax ; je 0x42b1b4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a5e8 : test eax, eax ; je 0x44a5f3 ; ret
0x000000000044a5e8 : test eax, eax ; je 0x44a5f7 ; ret
0x000000000044d546 : test eax, eax ; je 0x44d555 ; ret
0x00000000004592c4 : test eax, eax ; je 0x4592ce ; call rax
0x000000000045a6c9 : test eax, eax ; je 0x45a6d3 ; call rax
0x00000000004851b0 : test eax, eax ; je 0x4851c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f618 : test eax, eax ; je 0x48f625 ; ret
0x000000000048f728 : test eax, eax ; je 0x48f735 ; ret
0x0000000000490ec1 : test eax, eax ; je 0x490ed0 ; call rax
0x000000000041747c : test eax, eax ; jne 0x417475 ; ret
0x0000000000418414 : test eax, eax ; jne 0x41840d ; ret
0x000000000042b485 : test eax, eax ; jne 0x42b4e6 ; xor eax, eax ; ret
0x000000000042b901 : test eax, eax ; jne 0x42b929 ; xor eax, eax ; vzeroupper ; ret
0x00000000004499a6 : test eax, eax ; jne 0x4499c6 ; xor eax, eax ; syscall
0x0000000000449a76 : test eax, eax ; jne 0x449a99 ; mov eax, 1 ; syscall
0x0000000000449bb3 : test eax, eax ; jne 0x449c21 ; mov eax, 0x48 ; syscall
0x0000000000449d46 : test eax, eax ; jne 0x449d69 ; mov eax, 3 ; syscall
0x000000000044bf10 : test eax, eax ; jne 0x44bf0b ; pop rdx ; pop r10 ; ret
0x00000000004757d5 : test eax, eax ; jne 0x47583f ; mov eax, 0x101 ; syscall
0x000000000048f657 : test eax, eax ; jne 0x48f665 ; ret
0x000000000048f672 : test eax, eax ; jne 0x48f685 ; ret
0x000000000048f8a2 : test eax, eax ; jne 0x48f8b5 ; ret
0x00000000004056d4 : test eax, eax ; jns 0x4056a8 ; mov r15, r12 ; jmp 0x4056af
0x000000000047bdc0 : test eax, eax ; js 0x47bdd7 ; pop rbx ; ret
0x000000000047e0dd : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000469d65 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004706ba : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a889 : test ebp, ebp ; jne 0x44a8a8 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3f4 : test ebp, ebp ; jne 0x44b420 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b427 : test ebp, ebp ; jne 0x44b479 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b453 : test ebp, ebp ; jne 0x44b4d9 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490391 : test ebp, ebp ; jne 0x490380 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f4b : test ebp, ebp ; jne 0x490f38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041afb8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b3c0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421cc0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004217b8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454aa9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478108 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444c82 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474799 : test ecx, ecx ; jne 0x474758 ; mov rax, rdx ; ret
0x000000000044a8af : test edi, edi ; jne 0x44a8f9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a8d7 : test edi, edi ; jne 0x44a919 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b4df : test edi, edi ; jne 0x44b54a ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b50f : test edi, edi ; jne 0x44b57b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f53a : test edi, edi ; jne 0x47f515 ; ret
0x00000000004848ad : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4848a1 ; mov rax, rsi ; ret
0x0000000000440a72 : test edx, edx ; je 0x440a80 ; bsf eax, edx ; ret
0x0000000000440a72 : test edx, edx ; je 0x440a81 ; bsf eax, edx ; ret
0x0000000000440b1b : test edx, edx ; je 0x440b37 ; bsf rax, rdx ; ret
0x0000000000440b1b : test edx, edx ; je 0x440b38 ; bsf rax, rdx ; ret
0x000000000044c81a : test edx, edx ; je 0x44c831 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000047394a : test edx, edx ; je 0x473977 ; bsf rax, rdx ; ret
0x000000000047394a : test edx, edx ; je 0x473978 ; bsf rax, rdx ; ret
0x00000000004148c3 : test edx, edx ; jne 0x4148d5 ; ret
0x000000000041655f : test edx, edx ; jne 0x416555 ; ret
0x0000000000470b3f : test edx, edx ; jne 0x470b35 ; ret
0x00000000004744fa : test edx, edx ; jne 0x4744f5 ; ret
0x0000000000444c75 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004591c8 : test esi, esi ; je 0x4591d2 ; call rsi
0x0000000000473841 : test esi, esi ; jne 0x473850 ; xor rax, rax ; ret
0x0000000000474501 : test esi, esi ; jne 0x474510 ; xor rax, rax ; ret
0x000000000045e994 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000444c8f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b1a7 : test r8d, r8d ; je 0x42b1b5 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474798 : test r9d, r9d ; jne 0x474759 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422e80 : test rax, rax ; je 0x422e99 ; lea rax, [rdx - 0x10] ; ret
0x000000000044a5e7 : test rax, rax ; je 0x44a5f4 ; ret
0x00000000004592c3 : test rax, rax ; je 0x4592cf ; call rax
0x000000000045a6c8 : test rax, rax ; je 0x45a6d4 ; call rax
0x00000000004851af : test rax, rax ; je 0x4851c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490ec0 : test rax, rax ; je 0x490ed1 ; call rax
0x000000000041747b : test rax, rax ; jne 0x417476 ; ret
0x0000000000418413 : test rax, rax ; jne 0x41840e ; ret
0x000000000044a888 : test rbp, rbp ; jne 0x44a8a9 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b3f3 : test rbp, rbp ; jne 0x44b421 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490390 : test rbp, rbp ; jne 0x490381 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f4a : test rbp, rbp ; jne 0x490f39 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f539 : test rdi, rdi ; jne 0x47f516 ; ret
0x0000000000440b1a : test rdx, rdx ; je 0x440b38 ; bsf rax, rdx ; ret
0x0000000000440b1a : test rdx, rdx ; je 0x440b39 ; bsf rax, rdx ; ret
0x0000000000473949 : test rdx, rdx ; je 0x473978 ; bsf rax, rdx ; ret
0x0000000000473949 : test rdx, rdx ; je 0x473979 ; bsf rax, rdx ; ret
0x00000000004148c2 : test rdx, rdx ; jne 0x4148d6 ; ret
0x000000000041655e : test rdx, rdx ; jne 0x416556 ; ret
0x0000000000470b3e : test rdx, rdx ; jne 0x470b36 ; ret
0x00000000004591c7 : test rsi, rsi ; je 0x4591d3 ; call rsi
0x0000000000473840 : test rsi, rsi ; jne 0x473851 ; xor rax, rax ; ret
0x0000000000474500 : test rsi, rsi ; jne 0x474511 ; xor rax, rax ; ret
0x0000000000419137 : vcvtsi2ss xmm8, xmm15, dword ptr [rax] ; ret
0x0000000000415613 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043862a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004473dc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446da5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447f61 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446da9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447568 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044760f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438616 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004385fd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000447345 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447ecb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004474b3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447485 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447e52 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446d9b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446d9f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447a22 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447ae8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447fdd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446db4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446db8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000438933 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004387cc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004385ce : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438592 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438a95 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446f58 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446ebb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000446d5a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043ec71 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b7a8 : vzeroupper ; ret
0x000000000042b980 : vzeroupper ; xor eax, eax ; ret
0x000000000049512d : wait ; cli ; jmp qword ptr [rax]
0x00000000004ac562 : wait ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x0000000000460e81 : wait ; pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004943f5 : wait ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x000000000041f8e2 : xchg ah, al ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042a7f3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043df1f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8e3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a703 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000460242 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043fb6c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f38c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f77c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d93c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004481e2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b14b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043ea7f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da3f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f188 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042aca3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043f13b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494650 : xchg byte ptr [rax], dl ; cli ; call qword ptr [rsi]
0x00000000004303ae : xchg byte ptr [rbp + 0x39480028], bl ; retf 0x8949
0x000000000043e59f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a433 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043dd7f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d55f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042ae83 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a613 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000480fda : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048cadc : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042b063 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000473e06 : xchg byte ptr [rcx - 3], al ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000004a7c35 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043f62c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494b48 : xchg byte ptr [rdi], dh ; cli ; call qword ptr [rsi]
0x0000000000454363 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042af73 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d89f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000460259 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042a8b5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9a5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7c5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041adb5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d9d5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6d5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1f5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455455 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fe5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a523 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000048273a : xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a4ee5 : xchg ch, bh ; jmp qword ptr [rax]
0x00000000004a4f3d : xchg ch, bh ; lcall [rax] ; jbe 0x4a4f46 ; jmp qword ptr [rax]
0x00000000004a4f3c : xchg ch, bh ; lcall [rax] ; jbe 0x4a4f47 ; jmp qword ptr [rax]
0x00000000004a4ec1 : xchg ch, bh ; ljmp [rax] ; je 0x4a4eca ; jmp rax
0x00000000004a4ec0 : xchg ch, bh ; ljmp [rax] ; je 0x4a4ecb ; jmp rax
0x00000000004a4ee1 : xchg ch, bh ; push rbx ; xchg ch, bh ; jmp qword ptr [rax]
0x000000000043729f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043ea15 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd15 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d835 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e535 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f67d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004950ad : xchg dl, bh ; inc dword ptr [rax - 0x78] ; cli ; jmp rax
0x000000000042a6d5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4f5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5e5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a405 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f259 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e5af : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402cd3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b7d6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a7c38 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044f274 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a77bf : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000046214c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a6a2c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b18a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044bf0e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44bf0d ; pop rdx ; pop r10 ; ret
0x000000000046f444 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000469aba : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462cc4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478e20 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c76c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a6bcb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ab808 : xchg eax, ebp ; adc dh, bh ; jmp qword ptr [rax + 0x11fffe10]
0x00000000004af6a9 : xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004af6bd : xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004950d1 : xchg eax, ebp ; cli ; jmp rax
0x00000000004a6f09 : xchg eax, ebp ; jge 0x4a6eec ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000045872b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fe9f : xchg eax, ebp ; ret
0x000000000048ad70 : xchg eax, ebp ; ret 0x145
0x0000000000477e5a : xchg eax, ebp ; ret 0x2041
0x0000000000477f1a : xchg eax, ebp ; ret 0x2044
0x0000000000449fbc : xchg eax, ebp ; ret 0x3948
0x000000000041de0b : xchg eax, ebp ; ret 0x8348
0x0000000000479ae0 : xchg eax, ebp ; ret 0xc283
0x0000000000420fcd : xchg eax, ebp ; ret 0xd020
0x000000000040dec5 : xchg eax, ebp ; ret 0xd021
0x000000000046434a : xchg eax, ebp ; ret 0xd120
0x000000000040ff22 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d581 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c8ea : xchg eax, ebp ; ret 0xf45
0x00000000004784b7 : xchg eax, ebp ; ret 2
0x00000000004a77c2 : xchg eax, ebp ; retf 0x33e6
0x0000000000467017 : xchg eax, ebp ; retf 3
0x00000000004188dd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004941a1 : xchg eax, ebp ; stc ; call rcx
0x0000000000494265 : xchg eax, ebp ; stc ; jmp qword ptr [rax]
0x00000000004941a5 : xchg eax, ebp ; stc ; push qword ptr [rcx - 0x6a] ; stc ; call qword ptr [rcx]
0x00000000004a8c1c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000411302 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046bb27 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042c330 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004950cd : xchg eax, ebx ; cli ; inc dword ptr [rax - 0x6b] ; cli ; jmp rax
0x00000000004a95ac : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000047d923 : xchg eax, ebx ; ja 0x47d931 ; add byte ptr [rax + 0x15], bh ; syscall
0x000000000044410c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042dad2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a8ac3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a8a9d
0x000000000045b308 : xchg eax, ebx ; ret 0x3948
0x00000000004120fc : xchg eax, ebx ; ret 0x3949
0x0000000000420720 : xchg eax, ebx ; ret 0x3d83
0x00000000004713e5 : xchg eax, ebx ; ret 0x840
0x000000000045bded : xchg eax, ebx ; ret 0x854d
0x000000000041d0b9 : xchg eax, ebx ; ret 0xffff
0x0000000000494191 : xchg eax, ebx ; stc ; call qword ptr [rcx + 0x21fff993]
0x0000000000494255 : xchg eax, ebx ; stc ; call rax
0x0000000000494195 : xchg eax, ebx ; stc ; jmp qword ptr [rcx]
0x00000000004b223d : xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x000000000043eb21 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041fb8b : xchg eax, ecx ; ret
0x000000000040fd9b : xchg eax, ecx ; retf
0x000000000044e2fb : xchg eax, ecx ; retf 0
0x0000000000494181 : xchg eax, ecx ; stc ; call qword ptr [rcx + 0x11fff991]
0x0000000000494185 : xchg eax, ecx ; stc ; call qword ptr [rcx]
0x000000000043d24f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000494194 : xchg eax, ecx ; xchg eax, ebx ; stc ; jmp qword ptr [rcx]
0x0000000000494184 : xchg eax, ecx ; xchg eax, ecx ; stc ; call qword ptr [rcx]
0x000000000049418c : xchg eax, ecx ; xchg eax, edx ; stc ; call qword ptr [rcx]
0x0000000000410022 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c2dc : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000414934 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000040d261 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004a6f75 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6f43 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000424855 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041ef4b : xchg eax, edi ; ret 0x394c
0x000000000041f431 : xchg eax, edi ; ret 0xfae9
0x000000000041fa19 : xchg eax, edi ; ret 0xfbe9
0x00000000004a78dd : xchg eax, edi ; retf 0xe152
0x000000000044bb3b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004aff41 : xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004941b1 : xchg eax, edi ; stc ; jmp qword ptr [rsi]
0x00000000004a8c1b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a7078 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b0cf : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000494bd0 : xchg eax, edx ; cli ; jmp qword ptr [rdx]
0x00000000004abd89 : xchg eax, edx ; cmc ; call qword ptr [rdx]
0x00000000004abd9d : xchg eax, edx ; cmc ; call rsp
0x00000000004a893d : xchg eax, edx ; jae 0x4a891a ; push rsi ; pop rdx ; je 0x4a890f ; ret 0xacfc
0x00000000004a6f7c : xchg eax, edx ; pop rbx ; retf
0x0000000000482d66 : xchg eax, edx ; ret 0x2948
0x0000000000482a3e : xchg eax, edx ; ret 0x294c
0x0000000000405bf8 : xchg eax, edx ; ret 0x8548
0x0000000000483245 : xchg eax, edx ; ret 0x8949
0x000000000044bb3e : xchg eax, edx ; ret 0xd029
0x00000000004a6a2f : xchg eax, edx ; ret 0xf869
0x0000000000446c7d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000494189 : xchg eax, edx ; stc ; call qword ptr [rcx + 0x11fff992]
0x000000000049418d : xchg eax, edx ; stc ; call qword ptr [rcx]
0x0000000000494251 : xchg eax, edx ; stc ; inc dword ptr [rax - 0x6d] ; stc ; call rax
0x000000000042b1ac : xchg eax, edx ; sub eax, edx ; ret
0x0000000000494634 : xchg eax, esi ; adc edi, edx ; jmp qword ptr [rsi]
0x000000000042c630 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434863 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000456171 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448274 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004222e6 : xchg eax, esi ; jne 0x422318 ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000004a8d28 : xchg eax, esi ; jnp 0x4a8d77 ; retf 0x99e0
0x000000000042c6ed : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c64b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448ed1 : xchg eax, esi ; ret 0xc085
0x00000000004a92cc : xchg eax, esi ; ret 0xcd11
0x0000000000448f2f : xchg eax, esi ; ret 0xd284
0x000000000042c69c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004941a9 : xchg eax, esi ; stc ; call qword ptr [rcx]
0x00000000004941dc : xchg eax, esi ; xchg eax, esp ; stc ; jmp qword ptr [rsi]
0x00000000004ab390 : xchg eax, esp ; add bh, dh ; call rsp
0x000000000046c947 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b18b1 : xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b1899 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000495848 : xchg eax, esp ; cmp eax, 0x3d94fffb ; sti ; call rdx
0x0000000000495880 : xchg eax, esp ; cmp eax, 0x3d94fffb ; sti ; jmp qword ptr [rax]
0x000000000049584c : xchg eax, esp ; cmp eax, 0x3dd2fffb ; sti ; call rdx
0x0000000000495aec : xchg eax, esp ; cmp eax, 0x3dfafffb ; sti ; jmp rsi
0x00000000004a94df : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a9470 ; ret 0x48f
0x00000000004667a2 : xchg eax, esp ; ret
0x0000000000450f3b : xchg eax, esp ; ret 0x1f0f
0x000000000044a08b : xchg eax, esp ; ret 0x2044
0x000000000048118c : xchg eax, esp ; ret 0x3d
0x000000000041ca7e : xchg eax, esp ; ret 0x3de9
0x000000000046daff : xchg eax, esp ; ret 0x7f3c
0x0000000000484df1 : xchg eax, esp ; ret 0x950f
0x0000000000402c24 : xchg eax, esp ; ret 0xb60f
0x0000000000446c80 : xchg eax, esp ; ret 0xc085
0x000000000044a3b1 : xchg eax, esp ; ret 0xc221
0x0000000000476975 : xchg eax, esp ; ret 0xc283
0x0000000000449ec8 : xchg eax, esp ; ret 0xca21
0x0000000000401203 : xchg eax, esp ; ret 0xd284
0x000000000044f9c6 : xchg eax, esp ; ret 0xd5e9
0x000000000041073d : xchg eax, esp ; ret 0xdaf7
0x000000000048c88b : xchg eax, esp ; ret 0xf45
0x00000000004008bd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000422eca : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004b1bdc : xchg eax, esp ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004941d9 : xchg eax, esp ; stc ; call qword ptr [rsi + 0x26fff994]
0x000000000049419d : xchg eax, esp ; stc ; inc dword ptr [rcx - 0x6b] ; stc ; call rcx
0x00000000004941dd : xchg eax, esp ; stc ; jmp qword ptr [rsi]
0x000000000041efe8 : xchg eax, esp ; test al, 0x29 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004af6bc : xchg eax, esp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004a6f03 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x00000000004941a0 : xchg eax, r13d ; stc ; call rcx
0x000000000046cbf2 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041ae84 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004a90f6 : xchg esp, eax ; jb 0x4a9154 ; call 0x4c14bab9
0x00000000004b18d8 : xchg rax, rsp ; cli ; call qword ptr [rcx]
0x00000000004a20b9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d999 : xlatb ; add r9, r11 ; jmp r9
0x0000000000475a7f : xlatb ; ja 0x475aac ; ret
0x0000000000446fe3 : xlatb ; jb 0x446fee ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d54d : xlatb ; jmp rdi
0x00000000004a7aa3 : xlatb ; jo 0x4a7b1f ; mov ebp, 0xfb67d10d ; ret
0x0000000000484932 : xlatb ; mov byte ptr [rsi], al ; jne 0x484918 ; mov rax, rsi ; ret
0x00000000004490f1 : xlatb ; mov eax, esi ; syscall
0x0000000000449100 : xlatb ; mov eax, r8d ; syscall
0x0000000000471cc5 : xlatb ; or al, 0xfa ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004a6eb0 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042b2d4 : xlatb ; ret
0x00000000004a8f46 : xlatb ; ret 0x4e27
0x0000000000473547 : xlatb ; ret 0x94c
0x000000000042b2bf : xlatb ; ret 0xc085
0x0000000000425de0 : xlatb ; ret 0xc148
0x000000000042bf44 : xlatb ; ret 0xe883
0x0000000000440a94 : xlatb ; ret 0xf66
0x000000000042c108 : xlatb ; ret 0xff2d
0x00000000004403cd : xlatb ; retf
0x000000000047f8e5 : xlatb ; retf 0x23
0x00000000004a6f04 : xlatb ; retf 0xa1eb
0x0000000000473624 : xlatb ; retf 0xc148
0x00000000004737c2 : xlatb ; retf 0xc985
0x00000000004a7e32 : xlatb ; retf 0xdf7f
0x0000000000424a60 : xlatb ; retf 0xead3
0x0000000000473695 : xlatb ; retf 0xfdc5
0x000000000042b6a1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004736f5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b483 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042b9c2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000440812 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000444c36 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425cc6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425b86 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000425a46 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000425906 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004257c6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425686 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000425546 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425406 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004252c6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425186 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425046 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424f06 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424dc6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424c86 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000424b46 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444c32 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004734e5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004734f6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042483a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a6a2a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004a8ac6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000459fc2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004b5110 : xor al, 0x98 ; add byte ptr [rax], al ; std ; jmp rsp
0x000000000046f09b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048de22 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7c0a : xor al, 0xd8 ; ret
0x00000000004591c5 : xor al, 0xf0 ; test rsi, rsi ; je 0x4591d5 ; call rsi
0x0000000000452d3e : xor al, 0xf6 ; ret
0x0000000000494ca5 : xor al, 0xfa ; call rsp
0x0000000000494ca1 : xor al, 0xfa ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x0000000000494b25 : xor al, 0xfa ; jmp qword ptr [rax]
0x00000000004b5045 : xor al, 0xfd ; jmp qword ptr [rdx]
0x000000000045fcac : xor al, 1 ; jmp 0x45df06
0x0000000000476a92 : xor al, ch ; adc byte ptr [rdx + 0x3948fff8], bl ; ret
0x000000000049443c : xor bh, bl ; stc ; call qword ptr [rax]
0x000000000042b50c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000042b3dd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411562 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000447dc4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045ba68 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440241 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004406a2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411563 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000476234 : xor byte ptr [rax + 1], cl ; retf
0x00000000004b2d5c : xor byte ptr [rax + rax], 0x10 ; cld ; sti ; jmp qword ptr [rbx]
0x000000000044adca : xor byte ptr [rax - 0x75], cl ; jge 0x44ad80 ; mov r12d, r14d ; call r15
0x0000000000440dff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047427f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048acd8 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471b22 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d34f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402f08 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000447dc5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000494108 : xor byte ptr [rax - 7], ch ; jmp qword ptr [rax]
0x00000000004118bb : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e979 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e8b3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004744cc : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e99f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004482c3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000471a5a : xor byte ptr [rax], al ; je 0x471a65 ; ret
0x00000000004b010c : xor byte ptr [rax], cl ; add al, ah ; pushfq ; stc ; call qword ptr [rbx]
0x0000000000494d38 : xor byte ptr [rax], dh ; cli ; jmp qword ptr [rax + 0x20fffa2f]
0x000000000048e23e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000430404 : xor byte ptr [rbp + 0x39480028], bl ; retf 0x8949
0x0000000000447235 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000004669a9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000414c46 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f71a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000494424 : xor byte ptr [rbx - 0x537f0007], ch ; stc ; call rax
0x0000000000495104 : xor byte ptr [rbx - 0x5b7f0006], ah ; cli ; call rax
0x000000000046c8ee : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x000000000048aaf5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000478733 : xor byte ptr [rcx + 0x29], cl ; ret
0x00000000004b4a0c : xor byte ptr [rcx + 0x5500000], dl ; std ; jmp rdx
0x00000000004943d0 : xor byte ptr [rcx + rdi*8 - 0x65a7f01], ah ; call rax
0x0000000000403f3b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004a6f0e : xor byte ptr [rcx], ah ; retf
0x00000000004118bc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412ba7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410023 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000470c00 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000494f24 : xor byte ptr [rdx], ch ; cli ; jmp qword ptr [rax + 0x10fffa29]
0x00000000004b0767 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c3df : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004734ac : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b3de : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000049433c : xor byte ptr [rsi - 0x47ef0007], dh ; stc ; jmp rax
0x00000000004a8c1e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a6eff : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a6eaf
0x00000000004122ed : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047de33 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b5d7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d2ce : xor cl, byte ptr [rax] ; jne 0x48d2f3 ; mov rax, qword ptr [rax] ; ret
0x0000000000405c20 : xor cl, ch ; ret
0x000000000045a429 : xor dh, dh ; ret 0x4002
0x0000000000494ef5 : xor dl, bh ; call rax
0x0000000000494d39 : xor dl, bh ; jmp qword ptr [rax + 0x20fffa2f]
0x0000000000494e75 : xor dl, bh ; jmp rsp
0x000000000042389a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004801ee : xor dl, dh ; jmp r11
0x0000000000480300 : xor dl, dh ; ret
0x0000000000465f7d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7eb6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044c31f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d33d : xor dword ptr [rax], ecx ; jne 0x48d34c ; mov qword ptr [rax], rdx ; ret
0x000000000041bf99 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000423922 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004245e1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047fd9a : xor dword ptr [rsi + 0x63], esi ; call qword ptr [rip + 0x23cabd]
0x000000000046b8fe : xor eax, 0x24b51d ; jmp rax
0x0000000000494b21 : xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000494bd9 : xor eax, 0x3542fffa ; cli ; call rdx
0x0000000000494b59 : xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000494d15 : xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000476499 : xor eax, 0x3948fffd ; ret
0x00000000004477f3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a8da : xor eax, 0x7d8b48 ; call r12
0x000000000046588a : xor eax, 0x89ffffe6 ; ret
0x000000000040e976 : xor eax, dword ptr [0x30] ; call rax
0x0000000000415860 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416644 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045cb19 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000475a7b : xor eax, eax ; cmp rdi, rdx ; ja 0x475ab0 ; ret
0x000000000044bee7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004147f0 : xor eax, eax ; jmp 0x4147ba
0x000000000045d1fc : xor eax, eax ; jmp 0x45d1c4
0x000000000045d1fb : xor eax, eax ; jmp 0x45d1c5
0x0000000000475e68 : xor eax, eax ; leave ; ret
0x0000000000473292 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405dbf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041489b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ec85 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042396c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412f12 : xor eax, eax ; pop rbx ; ret
0x000000000040ebcd : xor eax, eax ; ret
0x0000000000425fee : xor eax, eax ; sub eax, ecx ; ret
0x00000000004499aa : xor eax, eax ; syscall
0x00000000004148c0 : xor eax, eax ; test rdx, rdx ; jne 0x4148d8 ; ret
0x000000000042b8cc : xor eax, eax ; vzeroupper ; ret
0x0000000000458d88 : xor ebp, ecx ; ret 0xfffd
0x000000000047a340 : xor ebx, ebx ; jmp 0x47a309
0x0000000000485a6d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a8d
0x0000000000458a86 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046481c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x0000000000457a59 : xor ecx, ecx ; call r15
0x0000000000474089 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044c2fc : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000403f9b : xor edi, edi ; call 0x4201b4
0x0000000000401238 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044a706 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041ac61 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044a51c : xor edi, edi ; syscall
0x0000000000494af1 : xor edi, edx ; call rax
0x000000000040e8b0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e9a3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d57c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d56c
0x000000000046ff93 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46ff68
0x0000000000417213 : xor edx, edx ; jmp rax
0x000000000047408b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000041f51c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478bd6 : xor esi, esi ; call 0x400491
0x000000000046161c : xor esi, esi ; jmp rax
0x0000000000446de6 : xor esp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000446de5 : xor r12, qword ptr [r15] ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000494af0 : xor r15, rdx ; call rax
0x0000000000457a58 : xor r9d, r9d ; call r15
0x000000000040e975 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e974 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000444c50 : xor rax, rax ; ret
0x000000000040e8af : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e8ae : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11072
