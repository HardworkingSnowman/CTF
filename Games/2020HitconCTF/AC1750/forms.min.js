! function(e) {
    e.su.Widget("form", {
        defaults: {
            fields: [],
            proxy: null,
            formEnctype: "application/x-www-form-urlencoded",
            traditional: !1,
            hiddenFrame: !1,
            submitBtn: null,
            autoLoad: !0,
            showPrompt: !0,
            sendDisableData: !1,
            promptTextSuccessed: e.su.CHAR.OPERATION.FORM_SAVED,
            promptTextFailed: e.su.CHAR.OPERATION.FORM_FAILED,
            cls: ""
        },
        create: function(t, i) {
            var a = this;
            a.each(function(s, n) {
                var r = e(n).addClass("form-panel");
                e.extend(n, t, i), n.id = n.id || e.su.randomId("form");
                var l = n.proxy;
                l && (l.isProxy || (l = new e.su.Proxy(l)), n.proxy = l);
                var o = "POST",
                    d = "",
                    c = n.hiddenFrame ? "_" + n.id + "_iframe" : "_self";
                if (n.proxy && (o = n.proxy.writer.type, d = n.proxy.writer.url), r.is("form")) r.attr("enctype", n.formEnctype), r.attr("method", o), r.attr("action", d), r.attr("target", c);
                else {
                    var p = e('<form enctype="' + n.formEnctype + '" method="' + o + '" action="' + d + '" target="' + c + '"></form>');
                    p.append(r.children().detach()), r.append(p)
                }
                if (r.addClass(n.cls), n.hiddenFrame) {
                    e('<iframe id="' + c + '" name="' + c + '" class="hidden"></iframe>').insertAfter(r)
                }
                var u = "";
                n.submitBtn && (u += '<div class="form-submit button-container submit">', u += '<span class="form-error-tips error"></span>', u += '<div class="form-submit-wrap"></div>', u += '<span class="loading"></span>', u += "</div>"), u += '<div class="form-prompt successed">', u += '<div class="bg"></div>', u += '<div class="content">', u += '<span class="icon"></span>', u += '<span class="text text-successed">' + n.promptTextSuccessed + "</span>", u += '<span class="text text-failed">' + n.promptTextFailed + "</span>", u += "</div>";
                var v = e(u += "</div>");
                if (r.append(v), n.isForm = !0, n.isPanel && (n.isFormPanel = !0), n.autoLoad && r.form("load"), n.submitBtn) {
                    var h = null;
                    "string" === e.type(n.submitBtn) ? "default" === n.submitBtn ? h = e('<button type="button"></button>').button({
                        text: e.su.CHAR.OPERATION.SAVE,
                        cls: "submit",
                        handler: function(e) {
                            a.trigger("beforeSubmit"), a.form("submit", {}, n.callback)
                        }
                    }) : (h = e(n.submitBtn)).length : n.submitBtn.isButton && (h = e(n.submitBtn)), n.submitBtn = h.get(0), n.submitBtn && n.submitBtn.isButton ? r.find("div.form-submit-wrap").append(h.button("getContainer")) : r.find("div.form-submit-wrap").append(h)
                }
            }), a.form("hideLoading");
            return e(a.get(0).proxy).on("ev_read", function(e, t, i, s) {
                a.form("hideLoading"), a.form("loadData", t)
            }).on("ev_write", function(e, t, i, s) {
                a.form("hideLoading"), a.form("loadData", t)
            }).on("ev_failed", function(e, t, i, s) {
                a.form("hideLoading"), a.trigger("ev_failed", [a, t, i, s])
            }), a.on("ev_validatechange", function(e, t, i) {
                e.stopPropagation(), 1 == t && a.form("setNormal")
            }), a
        },
        validate: function(t) {
            var i = (t = t || this).get(0),
                a = i.fields,
                s = !0,
                n = null;
            t.form("setNormal"), e("div.widget-error-tips-wrap").css("display", "none");
            for (var r = 0; r < a.length; r++) {
                var l = a[r];
                if (l) {
                    var o = l.name;
                    l.mapping;
                    if (o) {
                        var d = t.find("[name=" + o + "]");
                        if (0 != d.length) {
                            var c = d.get(0).xtype;
                            if (c && !(d[c]("getContainer").hasClass("disabled") || d.prop("disabled") && "combobox" != c)) {
                                if (d[c]("validate")) {
                                    var p = d.get(0),
                                        u = d[c]("getValue");
                                    p.textFormat && d[c]("setValue", p.textFormat(u));
                                    continue
                                }
                                s = !1, n = d.attr("id");
                                break
                            }
                        }
                    }
                }
            }
            return s && i.validator && "function" === e.type(i.validator) && ((s = i.validator.call(t)) || t.find("div.error input.text-text").each(function(i, a) {
                e(a).closest("div").delegate("input.text-text", "click", function(e) {
                    e.stopPropagation(), t.find(".form-error-tips").css("display", "none")
                })
            }), n = "validator"), t.triggerHandler("ev_validatechange", [s, n]), s
        },
        doSubmit: function(t, i) {
            var a = (t = t || this).get(0),
                s = t.is("form") ? t : t.find("form"),
                n = a.traditional,
                r = t.form("getProxy"),
                l = i[1] || {},
                o = i[2] || null,
                d = i[3] || null,
                c = i[4] || null,
                p = i[5] !== undefined ? i[5] : a.showPrompt;
            if (n) {
                var u = null;
                for (var v in l)(u = s.find("[name=" + v + "]")).length ? u.val(l[v]) : (u = e('<input type="hidden" class="hidden" name="' + v + '" value="' + l[v] + '"/>'), s.append(u));
                s.submit();
                var h = e("#" + e(s).attr("target")),
                    f = e(s).attr("target");
                h.one("load", function() {
                    var t;
                    try {
                        t = document.getElementById(f).contentDocument.body.textContent || document.getElementById(f).contentDocument.body.innerHTML
                    } catch (a) {}
                    if (r) {
                        var i = t ? e.su.json.parseJSON(t) : "";
                        "object" == typeof i ? i.success ? r.callbackSuccess(i, o) : r.callbackFail(i, d) : r.callbackError(c)
                    }
                })
            } else {
                t.form("showLoading");
                var b = t.form("serialize");
                r && r.write(e.extend({}, b, l), function(e, i, a, s) {
                    t.form("hideLoading"), p && t.form("prompt", !0), o && o.call(t, e, i, a, s)
                }, function(e, i, a) {
                    t.form("hideLoading"), p && "permission denied" != e && "user conflict" != e && t.form("prompt", !1), d && d.call(t, e, i, a)
                }, function(e, i, a) {
                    t.form("hideLoading"), p && t.form("prompt", !1), c && c.call(t, e, i, a)
                })
            }
        },
        submit: function(e, t) {
            var i = (e = e || this).get(0),
                a = (e.is("form") || e.find("form"), i.traditional, e.form("getProxy"), t[1] || {}),
                s = t[2] || null,
                n = t[3] || null,
                r = t[4] || null,
                l = t[5] !== undefined ? t[5] : i.showPrompt,
                o = !1 !== t[6];
            if (!1 !== o && !e.form("validate")) return !1;
            e.form("doSubmit", a, s, n, r, l, o)
        },
        load: function(e, t) {
            var i = (e = e || this).get(0).proxy;
            i && i.read()
        },
        loadData: function(e, t) {
            e = e || this;
            var i = t[1] || [],
                a = e.get(0).fields;
            e.trigger("ev_beforeLoadData", i), e.data("data", i);
            for (var s = 0; s < a.length; s++) {
                var n = a[s];
                if (n) {
                    var r = n.name,
                        l = n.mapping || r;
                    if (r) {
                        var o = e.find("[name=" + r + "]");
                        if (0 != o.length) {
                            var d = o.get(0).xtype;
                            if (d) {
                                var c = i[l];
                                if (c === undefined) continue;
                                o[d]("setValue", c)
                            }
                        }
                    }
                }
            }
            e.trigger("ev_loadData", i)
        },
        getProxy: function(e) {
            var t = (e = e || this).get(0).proxy;
            return t && t.isProxy ? t : null
        },
        serialize: function(t) {
            var i = (t = t || this).is("form") ? t : t.find("form"),
                a = t.get(0).sendDisableData ? i.find(":input:disabled").removeAttr("disabled") : e(),
                s = i.serializeArray(),
                n = {};
            a.attr("disabled", "disabled");
            for (var r = 0; r < s.length; r++) {
                var l = s[r],
                    o = l.name,
                    d = l.value;
                n[o] = d
            }
            return n
        },
        reset: function(e) {
            for (var t = (e = e || this).get(0).fields, i = 0; i < t.length; i++) {
                var a = t[i];
                if (a) {
                    var s = a.name;
                    a.mapping;
                    if (s) {
                        var n = e.find("[name=" + s + "]");
                        if (0 != n.length) {
                            var r = n.get(0).xtype;
                            r && n[r]("reset")
                        }
                    }
                }
            }
            return e.trigger("ev_reset"), e
        },
        prompt: function(e, t) {
            var i = (e = e || this).get(0),
                a = e.find("div.form-submit"),
                s = (e.get(0).showPrompt, t[1]),
                n = t[2],
                r = t[3] || 900,
                l = e.find("div.form-prompt");
            s ? (l.removeClass("failed").addClass("successed"), n = n || i.promptTextSuccessed, l.find("span.text-successed").html(n)) : (l.removeClass("successed").addClass("failed"), n = n || i.promptTextFailed, l.find("span.text-failed").html(n));
            var o = l.outerHeight(),
                d = l.outerWidth(),
                c = e.innerHeight() - a.height(),
                p = e.innerWidth() - a.height(),
                u = parseInt((p - d) / 2, 10),
                v = parseInt((c - o) / 2, 10);
            return l.css({
                left: u,
                top: v
            }), l.fadeIn("150", function() {
                setTimeout(function() {
                    l.fadeOut("150")
                }, r)
            }), e
        },
        getContainer: function(e) {
            return e = e || this
        },
        setError: function(e, t) {
            e = e || this;
            if (t = t[1]) {
                e.find("span.form-error-tips").html(t).fadeIn(150)
            }
            return e
        },
        setNormal: function(e) {
            for (var t = (e = e || this).get(0).fields, i = 0; i < t.length; i++) {
                var a = t[i];
                if (a) {
                    var s = a.name;
                    a.mapping;
                    if (s) {
                        var n = e.find("[name=" + s + "]");
                        if (0 != n.length) {
                            var r = n.get(0).xtype;
                            r && n[r]("setNormal")
                        }
                    }
                }
            }
            return e.find("span.form-error-tips").css("display", "none"), e
        },
        showLoading: function(t) {
            var i = (t = t || this).get(0),
                a = e(i.submitBtn);
            return a.button("disable"), a.closest("div.form-submit").find("span.loading").fadeIn(50), t
        },
        hideLoading: function(t) {
            var i = (t = t || this).get(0),
                a = e(i.submitBtn);
            return a.button("enable"), a.closest("div.form-submit").find("span.loading").fadeOut(50), t
        },
        enable: function(t, i) {
            for (var a = (t = t || this).get(0), s = e(a.submitBtn), n = a.fields, r = (i = i[1], 0), l = n.length; r < l; r++) {
                var o = n[r];
                if (o) {
                    var d = o.name,
                        c = t.find('[name="' + d + '"]');
                    if (c.length > 0) {
                        var p = c.get(0).xtype;
                        p && "no" != c.prop("inFront") && c[p]("enable")
                    }
                }
            }
            return s.length > 0 && s.button("enable"), i && i.call(t), t
        },
        disable: function(t, i) {
            for (var a = (t = t || this).get(0), s = e(a.submitBtn), n = a.fields, r = (i = i[1], 0), l = n.length; r < l; r++) {
                var o = n[r];
                if (o) {
                    var d = o.name,
                        c = t.find('[name="' + d + '"]');
                    if (c.length > 0) {
                        var p = c.get(0).xtype;
                        p && "no" != c.prop("inFront") && c[p]("disable")
                    }
                }
            }
            return s.length > 0 && s.button("disable"), i && i.call(t), t
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("fieldset", {
        defaults: {
            _title: "",
            fields: null
        },
        create: function(t, i) {
            return this.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i), n.addClass("container widget-container filedset-container")
            }), this
        },
        hide: function(e, t) {
            for (var i = (e = e || this).get(0).fields, a = (t = t[1], 0), s = i.length; a < s; a++) {
                var n = i[a];
                if (n) {
                    var r = n.name;
                    e.find('[name="' + r + '"]').prop("inFront", "no")
                }
            }
            return e.fieldset("disable"), e.css("display", "none"), t && t.call(e), e
        },
        show: function(e, t) {
            for (var i = (e = e || this).get(0).fields, a = (t = t[1], 0), s = i.length; a < s; a++) {
                var n = i[a].name;
                e.find('[name="' + n + '"]').prop("inFront", "yes")
            }
            return e.fieldset("enable"), e.fadeIn(200, t), e
        },
        disable: function(e, t) {
            for (var i = (e = e || this).get(0).fields, a = (t = t[1], 0), s = i.length; a < s; a++) {
                var n = i[a];
                if (n) {
                    var r = n.name,
                        l = e.find('[name="' + r + '"]');
                    if (l.length > 0) {
                        var o = l.get(0).xtype;
                        o && l[o]("disable")
                    }
                }
            }
            return t && t.call(e), e
        },
        enable: function(e, t) {
            for (var i = (e = e || this).get(0).fields, a = (t = t[1], 0), s = i.length; a < s; a++) {
                var n = i[a];
                if (n) {
                    var r = n.name,
                        l = e.find('[name="' + r + '"]');
                    if (l.length > 0) {
                        var o = l.get(0).xtype;
                        o && l[o]("enable")
                    }
                }
            }
            return t && t.call(e), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("combobox", {
        defaults: {
            fieldLabel: "",
            tips: "",
            cls: "",
            readOnly: !0,
            noneSelectedText: e.su.CHAR.OPERATION.NOSELECTEDTEXT,
            noneSelectedRemind: !1,
            multiSelect: !1,
            displayField: "name",
            valueField: "value",
            items: null,
            store: null,
            isCombobox: !0,
            allowBlank: !0,
            widgetName: "combobox",
            tabindex: 0
        },
        create: function(t, i) {
            var a = this;
            a.each(function(s, n) {
                var r = e(n);
                if (e.extend(n, t, i), r.is("select")) {
                    var l = r.find("option");
                    n.items = n.items || [];
                    for (var o = 0, d = l.length; o < d; o++) n.items.push({
                        value: l[o].value,
                        name: l[o].innerHTML,
                        selected: !!l[o].selected && "selected"
                    })
                }
                var c = '<div class="container widget-container combobox-container ' + (n.multiSelect ? "multiple" : "single") + " " + n.cls + " " + (n.className || "") + '">';
                null !== this.fieldLabel && (c += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', c += '<label class="widget-fieldlabel combobox-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (c += '<span class="widget-separator">' + this.separator + "</span>"), c += "</div>"), c += '<div class="widget-wrap-outer combobox-wrap-outer">', c += '<div class="widget-wrap combobox-wrap">', c += '<span class="text-wrap-before"></span>', c += '<input class="combobox-text ' + n.inputCls + '" type="text"  UNSELECTABLE ="on" tabindex="-1" ' + (this.readOnly ? 'readonly="true"' : "") + ' value="' + (this.noneSelectedRemind ? n.noneSelectedText + '"' : '"') + " />", c += '<input class="combobox-hidden hidden" name="' + n.name + '" UNSELECTABLE ="on" type="checkbox" checked="true" disabled="disabled"/>', c += '<a class="combobox-switch" href="javascript:void(0);" tabindex="' + this.tabindex + '">', c += '<span class="icon"></span>', c += "</a>", c += '<div class="combobox-list-wrap">', c += '<div class="position-top-left"></div><div class="position-top-center"></div>', c += '<div class="position-center-left"><div class="position-center-right">', c += '<div class="combobox-list-content-wrap">', c += '<ul class="combobox-list">', c += "</ul>", c += "</div>", c += "</div></div>", c += '<div class="position-bottom-left"></div><div class="position-bottom-center"></div>', c += "</div>", c += '<span class="text-wrap-after"></span>', c += "</div>", null != this.tips && this.tips != undefined && (c += '<div class="widget-tips combobox-tips ' + n.tipsCls + '">', c += '<div class="content tips-content"></div>', c += "</div>"), c += '<div class="widget-error-tips combobox-error-tips ' + n.errorTipsCls + '">', c += '<span class="widget-error-tips-delta"></span>', c += '<div class="widget-error-tips-wrap">', c += '<div class="content error-tips-content"></div>', c += "</div>";
                var p = e(c += "</div>");
                r.replaceWith(p), p.prepend(r.addClass("hidden combobox-value").prop("disabled", !0)), a.combobox("setText")
            });
            var s = null;
            (s = a.hasClass("div.combobox-container") ? a : a.closest("div.combobox-container")).delegate("a.combobox-switch", "click", function(t) {
                t.stopPropagation();
                var i = e(this),
                    a = i.next("div.combobox-list-wrap"),
                    s = i.closest("div.combobox-container"),
                    n = a.attr("toggleflag") || "hidden";
                if (s.hasClass("disabled") || s.hasClass("none-items")) return !1;
                s.removeClass("error"), e("div.combobox-list-wrap").hide().attr("toggleflag", "hidden"), "hidden" === n ? (s.addClass("focus"), a.slideDown(150), a.attr("toggleflag", "shown")) : (s.removeClass("focus"), a.hide(), a.attr("toggleflag", "hidden")), e("div.widget-error-tips.show").css("display", "none")
            }).delegate("label.combobox-label", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var i = e(this),
                    s = i.closest("li.combobox-list"),
                    n = i.closest("div.combobox-container"),
                    r = i.attr("type"),
                    l = i.find("input.combobox-checkbox"),
                    o = l.val(),
                    d = a.combobox("getValue"),
                    c = [];
                if (!s.hasClass("disabled")) {
                    switch (r) {
                        case "multiple":
                            if (l.prop("checked")) {
                                for (var p = d.length - 1; p--; p >= 0)
                                    if (d[p] == o) {
                                        d.splice(p, 1);
                                        break
                                    }
                            } else c = d.push(o);
                            a.combobox("select", c);
                            break;
                        case "single":
                            c.push(o), a.combobox("select", c);
                            i.parents("div.combobox-list-wrap").hide().attr("toggleflag", "hidden")
                    }
                    n.addClass("selected"), n.removeClass("focus"), a.trigger("ev_click", [d, c])
                }
            }), s.delegate("input.combobox-text", "click", function(e) {
                e.stopPropagation(), e.preventDefault()
            }).delegate("input.combobox-text", "focus", function(t) {
                s.hasClass("disabled") || s.hasClass("none-items") || e(a).combobox("setFocus")
            }).delegate("input.combobox-text", "keydown", function() {
                var t = e("input.combobox-text").val(),
                    i = s.find("input.combobox-checkbox"),
                    a = !1;
                i.each(function(i, s) {
                    if (e(s).val() == t) return a = !0, !1
                }), a ? s.find("input.combobox-hidden").prop("disabled", !0) : (s.find("input.combobox-hidden").prop("disabled", !1), s.find("li").removeClass("selected"), i.prop("checked", !1))
            }).delegate("input.combobox-text", "keyup blur", function(t) {
                s.hasClass("disabled") || s.hasClass("none-items") || e(this).combobox("validate")
            }).delegate("input.combobox-value", "ev_validatechange", function(t, i) {
                t.stopPropagation(), i ? e(this).combobox("setNormal") : e(this).combobox("setError")
            });
            var n = a.get(0).items;
            return a.combobox("loadData", n), a.combobox("setTips", i.tips), a.combobox("setErrorTips", ""), a
        },
        getSelectedIndex: function(e) {
            for (var t = e.get(0).items, i = e.combobox("getValue"), a = t.length, s = 0; s < a; s++)
                if (i[0] === t[s].value) return s;
            return -1
        },
        loadData: function(t, i) {
            var a = (t = t || this).get(0),
                s = t.combobox("getContainer");
            i = i[1];
            s.find("ul.combobox-list").empty(), e.isArray(i) || (i = []), a.items = i;
            for (var n = 0, r = i.length; n < r; n++) i[n] && t.combobox("initItem", i[n]);
            return 0 == i.length ? s.addClass("none-items") : s.removeClass("none-items"), t
        },
        initItem: function(t, i) {
            var a = (t = t || this).closest("div.combobox-container"),
                s = t.get(0),
                n = i[1],
                r = 1 == s.multiSelect ? "multiple" : "single",
                l = s.id + "-" + e.su.randomId("option"),
                o = n[s.displayField],
                d = n[s.valueField],
                c = !!n.disabled,
                p = !!n.selected,
                u = "";
            u += '<li class="combobox-list ' + (n.cls || "") + " " + (c ? "disabled" : "") + " " + (p ? "selected" : "") + '">', u += '<label for="' + l + '" type="' + r + '" class="combobox-label ' + r + '">', u += '<input id="' + l + '" name="' + s.name + '" display="' + o + '" class="combobox-checkbox" type="checkbox" value="' + d + '"' + (p ? ' checked="checked"' : "") + " " + (c ? 'disabled="disabled"' : "") + " />", u += '<span class="icon"></span>', u += '<span class="text">' + o + "</span>", u += "</label>", u += "</li>", a.find("ul.combobox-list").append(e(u)), t.is("select") && t.append('<option value="' + d + '">' + o + "</option>"), t.combobox("setText")
        },
        getItem: function(e, t) {
            for (var i = (e = e || this).get(0), a = (t = t[1], i.items), s = null, n = 0, r = a.length; n < r; n++)
                if (a[n]["value"] == t) {
                    s = a[n];
                    break
                } return s
        },
        setText: function(t, arguments) {
            var i = (t = t || this).combobox("getContainer"),
                a = i.find("input.combobox-checkbox"),
                s = i.find("input.combobox-text"),
                n = t.combobox("getValue"),
                r = e.type(n),
                l = "";
            if ("array" === r) {
                for (var o = 0; o < n.length; o++) {
                    l = l + a.filter("[value='" + n[o] + "']").attr("display") + ", "
                }
                l = l.slice(0, l.length - 2)
            } else if ("string" === r) {
                l = a.filter("[value='" + n[o] + "']").attr("display")
            }
            return "" == l ? s.val(t.get(0).noneSelectedText) : s.val(l), t
        },
        getSelectedText: function(e) {
            return (e = e || this).closest("div.combobox-container").find("input.combobox-text").val()
        },
        setValue: function(t, i) {
            var a = (t = t || this).combobox("getContainer"),
                s = a.find("input.combobox-checkbox");
            i = i[1];
            e.isArray(i) || (i = [i]);
            for (var n = {}, r = 0; r < i.length; r++) n[i[r]] = !0;
            var l = !0;
            if (s.each(function(t, i) {
                    if (e(i).val() in n) return l = !1, !1
                }), l) {
                var o = a.find("input.combobox-text");
                t.get(0).noneSelectedRemind ? o.val(t.get(0).noneSelectedText) : o.val(i), t.combobox("select", i)
            } else t.combobox("select", i);
            return t
        },
        getValue: function(t) {
            var i = (t = t || this).combobox("getContainer"),
                a = [];
            if (i.find("input.combobox-checkbox").each(function(t, i) {
                    i.checked && a.push(e(i).val())
                }), 0 == a.length && 0 == t.get(0).readOnly) {
                var s = i.find("input.combobox-text");
                a = [s.val()]
            }
            return a
        },
        disable: function(e) {
            var t = (e = e || this).combobox("getContainer");
            return t.addClass("disabled"), t.find("input.combobox-text").attr("disabled", !0), t.find("input.combobox-checkbox").prop("disabled", !0), e
        },
        enable: function(e) {
            var t = (e = e || this).combobox("getContainer");
            return t.removeClass("disabled"), t.find("input.combobox-text").removeAttr("disabled"), t.find("input.combobox-checkbox").prop("disabled", !1), e
        },
        disableItem: function(t, i) {
            var a = (t = t || this).combobox("getContainer").find("input.combobox-checkbox");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.combobox-list").addClass("disabled"), a.attr("disabled", !0))
            }), t.combobox("setText"), t
        },
        enableItem: function(t, i) {
            var a = (t = t || this).combobox("getContainer").find("input.combobox-checkbox");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.combobox-list").removeClass("disabled"), a.attr("disabled", !1))
            }), t.combobox("setText"), t
        },
        select: function(t, i) {
            var a = (t = t || this).get(0),
                s = t.combobox("getContainer").find("input.combobox-checkbox"),
                n = (i = i[1], t.combobox("getValue").sort());
            if ("string" === e.type(i) && (i = [i]), a.multiSelect) {
                var r = function() {
                    for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                    return e
                }();
                s.each(function(t, i) {
                    var a = e(i);
                    a.val() in r && (a.closest("li.combobox-list").addClass("selected"), i.checked = !0)
                })
            } else i.length > 0 && (i = i[0]), s.each(function(t, a) {
                var s = e(a);
                s.val() == i ? (s.closest("li.combobox-list").addClass("selected"), a.checked = !0) : (s.closest("li.combobox-list").removeClass("selected"), a.checked = !1)
            });
            var l = t.combobox("getValue").sort();
            return n.toString() != l.toString() && t.trigger("ev_change", [n, l]), t.combobox("setText").val(l), t
        },
        validate: function(t) {
            var i = (t = t || this).get(0),
                a = t.combobox("getContainer").find("input.combobox-value, select.combobox-value").val(),
                s = !0;
            return "" == a && (i.allowBlank || (s = !1)), i.validator && (s = i.validator(a), "boolean" !== e.type(s) && (s = !1)), e(i).trigger("ev_validatechange", s), s
        },
        reset: function(t) {
            var i = (t = t || this).get(0),
                a = t.combobox("getContainer").find("input.combobox-checkbox"),
                s = i.defaultValue;
            return a.each(function(t, i) {
                e(i).closest("li.combobox-list").removeClass("selected"), i.checked = !1
            }), t.combobox("setText"), s !== undefined || null !== s ? t.combobox("setValue", s) : t.combobox("setValue", []), t
        },
        selectNoTrigger: function(t, i) {
            var a = (t = t || this).get(0),
                s = t.combobox("getContainer").find("input.combobox-checkbox");
            i = i[1], t.combobox("getValue").sort();
            if ("string" === e.type(i) && (i = [i]), a.multiSelect) {
                var n = function() {
                    for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                    return e
                }();
                s.each(function(t, i) {
                    var a = e(i);
                    a.val() in n && (a.closest("li.combobox-list").addClass("selected"), i.checked = !0)
                })
            } else i.length > 0 && (i = i[0]), s.each(function(t, a) {
                var s = e(a);
                s.val() == i ? (s.closest("li.combobox-list").addClass("selected"), a.checked = !0) : (s.closest("li.combobox-list").removeClass("selected"), a.checked = !1)
            });
            return t.combobox("setText").val(i), t
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("checkbox", {
        defaults: {
            name: null,
            items: [],
            fieldLabel: null,
            cls: "",
            columns: 1
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(this),
                    r = i.id || this.id || t.id,
                    l = i.value || this.value || t.value,
                    o = i.name || this.name || t.name;
                n.addClass("hidden"), e.extend(this, t, i), n.attr({
                    value: l,
                    id: r,
                    name: o
                }).val(l).addClass("checkbox");
                var d = '<div class="container widget-container checkbox-group-container ' + this.cls + '">';
                null !== this.fieldLabel && (d += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', d += '<label class="widget-fieldlabel checkbox-group-label">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (d += '<span class="widget-separator">' + this.separator + "</span>"), d += "</div>"), d += '<div class="widget-wrap-outer checkbox-group-wrap-outer">', d += '<div class="checkbox-group-wrap">';
                var c = this.items,
                    p = c.length,
                    u = Math.ceil(p / this.columns),
                    v = 0;
                d += '<ul class="checkbox-group-list-wrap">';
                for (var h = 0; h < c.length; h++) {
                    var f = c[h].name || o || "",
                        b = c[h].inputValue || l || "on",
                        g = c[h].uncheckedValue || "off",
                        m = c[h].itemCls || "",
                        x = c[h].id || "checkbox-" + parseInt(1e3 * Math.random() * 1e3 * 1e3, 10).toString(),
                        w = "",
                        C = "",
                        y = "";
                    "checked" !== c[h].checked && !0 !== c[h].checked || (w = 'checked="checked"', C = 'disabled="disabled"', y = "checked");
                    var k = function(e, t, i, a) {
                        d += '<li class="checkbox-list">', d += '<div class="widget-wrap">', d += '<label class="checkbox-label ' + m + " " + y + '" for="' + i + '">', d += '<input class="hidden" type="hidden" name="' + e + '" value="' + g + '" data-checked="' + t + '" data-unchecked="' + g + '" ' + C + " />", d += '<input class="checkbox-checkbox" type="checkbox" name="' + e + '" value="' + t + '" data-checked="' + t + '" data-unchecked="' + g + '" id="' + i + '" ' + w + " />", d += '<span class="icon"></span>', d += '<span class="text">' + c[h].boxlabel + "</span>", d += "</label>", d += "</div>", d += "</li>"
                    };
                    v < u ? k(f, b, x, c[h].boxlabel) : (d += "</ul>", d += '<ul class="checkbox-group-list-wrap">', k(f, b, x, c[h].boxlabel), v = 0), v++
                }
                d += "</ul>", d += "</div>", null != this.tips && this.tips != undefined && (d += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', d += '<div class="widget-tips-wrap">', d += '<div class="content tips-content"></div>', d += "</div>", d += "</div>"), d += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', d += '<span class="widget-error-tips-delta"></span>', d += '<div class="widget-error-tips-wrap">', d += '<div class="content error-tips-content"></div>', d += "</div>", d += "</div>", d += "</div>";
                var T = e(d += "</div>");
                n.prop("disabled", !0).val("").replaceWith(T), T.prepend(n)
            });
            return a.closest("div.checkbox-group-container").delegate("label.checkbox-label", "click", function(t) {
                t.preventDefault();
                var i = e(this);
                if (!i.closest("li.checkbox-list").hasClass("disabled")) {
                    var s = a.checkbox("getValue");
                    i.toggleClass("checked");
                    var n = i.find("input[type=checkbox]").eq(0),
                        r = n.prev("input[type=hidden]");
                    n.prop("checked") ? (n.prop("checked", !1), n.prop("disabled", !0), r.prop("disabled", !1)) : (n.prop("checked", !0), n.prop("disabled", !1), r.prop("disabled", !0));
                    var l = a.checkbox("getValue");
                    l.sort().toString() !== s.sort().toString() && a.trigger("ev_change", [s, l]), a.trigger("ev_click", l)
                }
            }), a.checkbox("setTips", i.tips), a
        },
        setValue: function(t, i) {
            t = t || this;
            var a = i[1],
                s = t.checkbox("getValue"),
                n = [],
                r = t.checkbox("getContainer");
            if ("string" == e.type(a) && 1 != t.get(0).items.length) return !1;
            if ("string" == e.type(a)) {
                var l = {};
                l[r.find("input[type=checkbox]")[0].name] = a, a = l
            } else if ("object" != e.type(a)) return !1;
            for (var o in a) {
                var d = a[o],
                    c = r.find("input[name=" + o + "][value=" + d + "][type=checkbox]"),
                    p = r.find("input[name=" + o + "][value=" + d + "][type=hidden]");
                c.length && (c.closest("label.checkbox-label").addClass("checked"), n.push(c.get(0).name), c.get(0).checked = !0, c.get(0).disabled = !1, r.find("input[name=" + o + "][type=hidden]").get(0).checked = !1, r.find("input[name=" + o + "][type=hidden]").get(0).disabled = !0), p.length && (p.closest("label.checkbox-label").removeClass("checked"), p.get(0).checked = !0, p.get(0).disabled = !1, r.find("input.checkbox-checkbox[name=" + o + "][type=checkbox]").get(0).checked = !1, r.find("input.checkbox-checkbox[name=" + o + "][type=checkbox]").get(0).disabled = !0)
            }
            return n.sort().toString() !== s.sort().toString() && t.trigger("ev_change", [s, n]), t
        },
        getValue: function(e) {
            var t = [];
            return (e = e || this).checkbox("getContainer").find("input[type=checkbox]").each(function(e, i) {
                i.checked && t.push(i.name)
            }), t
        },
        reset: function(e) {
            var t = (e = e || this).get(0),
                i = "";
            return t.defaultValue && (i = t.defaultValue), e.checkbox("setValue", i), e
        },
        disable: function(t) {
            (t = t || this).get(0);
            return t.checkbox("getContainer").addClass("disabled").find("input.checkbox-checkbox").each(function(t, i) {
                var a = e(i);
                a.closest("li.checkbox-list").addClass("disabled"), a.closest("label.checkbox-label").addClass("disabled"), a.prev("input[type=hidden]").prop("disabled", !0), a.prop("disabled", !0)
            }), t
        },
        enable: function(t) {
            (t = t || this).get(0);
            return t.checkbox("getContainer").removeClass("disabled").find("input.checkbox-checkbox").each(function(t, i) {
                var a = e(i);
                a.closest("li.checkbox-list").removeClass("disabled"), a.closest("label.checkbox-label").removeClass("disabled"), a.prev("input[type=hidden]").prop("disabled", !1), a.prop("disabled", !1)
            }), t
        },
        disableItem: function(t, i) {
            (t = t || this).get(0);
            var a = t.checkbox("getContainer").find("input.checkbox-checkbox");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.checkbox-list").addClass("disabled"), a.closest("label.checkbox-label").addClass("disabled"), a.prev("input[type=hidden]").prop("disabled", !0), a.prop("disabled", !0))
            }), t
        },
        enableItem: function(t, i) {
            (t = t || this).get(0);
            var a = t.checkbox("getContainer").find("input.checkbox-checkbox");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.checkbox-list").removeClass("disabled"), a.closest("label.checkbox-label").removeClass("disabled"), a.prev("input[type=hidden]").prop("disabled", !1), a.prop("disabled", !1))
            }), t
        },
        getContainer: function(e) {
            return (e = e || this).closest("div.checkbox-group-container")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("radio", {
        defaults: {
            name: null,
            items: [],
            fieldLable: null,
            cls: "",
            fieldLabel: "",
            columns: 1
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(this),
                    r = i.id || this.id || t.id,
                    l = i.value || n.val() || this.value || t.value,
                    o = i.name || this.name || t.name;
                n.addClass("hidden"), e.extend(this, t, i), n.attr({
                    value: l,
                    id: r,
                    name: o
                }).val(l).addClass("radio-value");
                var d = '<div class="container widget-container radio-group-container ' + this.cls + '">';
                null !== this.fieldLabel && (d += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', d += '<label class="widget-fieldlabel radio-group-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (d += '<span class="widget-separator">' + this.separator + "</span>"), d += "</div>"), d += '<div class="widget-wrap-outer radio-group-wrap-outer">', d += '<div class="radio-group-wrap">', d += "</div>", null != this.tips && this.tips != undefined && (d += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', d += '<div class="widget-tips-wrap">', d += '<div class="content tips-content"></div>', d += "</div>", d += "</div>"), d += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', d += '<span class="widget-error-tips-delta"></span>', d += '<div class="widget-error-tips-wrap">', d += '<div class="content error-tips-content"></div>', d += "</div>", d += "</div>", d += "</div>";
                var c = e(d += "</div>");
                n.attr("disabled", !0).replaceWith(c), c.prepend(n)
            });
            var s = a.closest("div.radio-group-container");
            return s.delegate("label.radio-label", "click", function(t) {
                t.preventDefault();
                var i = e(this),
                    n = i.closest("li.radio-list"),
                    r = i.find("input.radio-radio"),
                    l = (a.val(), r.val());
                n.hasClass("disabled") || (s.find("label.radio-label").removeClass("checked"), i.addClass("checked"), a.radio("setValue", l), a.trigger("ev_click", l))
            }), a.radio("setTips", i.tips), a.radio("loadData", a.get(0).items)
        },
        loadData: function(t, i) {
            var a = (t = t || this).get(0),
                s = a.name,
                n = a.name,
                r = (i = i[1]).length,
                l = Math.ceil(r / a.columns),
                o = 0,
                d = !1;
            if (e.isArray(i) && !(i.length < 0)) {
                for (var c = '<ul class="radio-group-list-wrap">', p = function(t, i, a, s, n) {
                        c += '<li class="radio-list">', c += '<div class="widget-wrap">', c += '<label class="radio-label ' + n + " " + m + '" for="' + a + '">', c += '<input class="radio-radio" type="radio" display="' + e.su.func.escapeHtml(s) + '" name="' + t + '" value="' + i.toString() + '" id="' + a + '" ' + g + " />", c += '<span class="icon"></span>', c += '<span class="text">' + w.boxlabel + "</span>", c += "</label>", c += "</div>", c += '<div class="radio-content-wrap ' + (w.contentCls || "") + '"></div>', c += "</li>"
                    }, u = 0; u < i.length; u++) {
                    var v = (w = i[u]).name || s || "",
                        h = w.inputValue || n || "",
                        f = w.id || e.su.randomId("radio"),
                        b = i[u].itemCls || "";
                    d = !!w.content || d;
                    var g = "",
                        m = "";
                    "checked" !== w.checked && !0 !== w.checked && h !== n || (g = 'checked="checked"', m = "checked", t.val(h)), o < l ? p(v, h, f, w.boxlabel, b) : (c += "</ul>", c += '<ul class="radio-group-list-wrap">', p(v, h, f, w.boxlabel, b), o = 0), o++
                }
                c += "</ul>";
                var x = t.radio("getContainer");
                if (x.find("div.radio-group-wrap").empty().append(e(c)), d)
                    for (u = 0; u < i.length; u++) {
                        var w;
                        if ((w = i[u]).content) {
                            var C = e(w.content);
                            x.find("li.radio-list").eq(u).find("div.radio-content-wrap").append(C)
                        }
                    }
                return t
            }
        },
        getSelectedText: function(t) {
            var i = (t = t || this).radio("getContainer"),
                a = t.val(),
                s = i.find("input.radio-radio[value=" + a + "]");
            return e.su.func.unEscapeHtml(s.attr("display"))
        },
        getValue: function(e) {
            return (e = e || this).val()
        },
        setValue: function(e, t) {
            var i = (e = e.filter("input.radio-value") || this).val(),
                a = t[1],
                s = e.radio("getContainer"),
                n = s.find("input.radio-radio").removeAttr("checked");
            return (n = n.filter("[value=" + a + "]")).prop("checked", !0), s.find("label.radio-label").removeClass("checked"), n.closest("label.radio-label").addClass("checked"), e.val(a), i.toString() !== a.toString() && e.trigger("ev_change", [i, a]), e
        },
        disableItem: function(t, i) {
            (t = t || this).get(0);
            var a = t.radio("getContainer").find("input.radio-radio");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.radio-list").addClass("disabled"), a.closest("label.radio-label").addClass("disabled"), i.disabled = !0)
            }), t
        },
        enableItem: function(t, i) {
            (t = t || this).get(0);
            var a = t.radio("getContainer").find("input.radio-radio");
            i = i[1];
            "string" === e.type(i) && (i = [i]);
            var s = function() {
                for (var e = {}, t = 0; t < i.length; t++) e[i[t]] = !0;
                return e
            }();
            return a.each(function(t, i) {
                var a = e(i);
                a.val() in s && (a.closest("li.radio-list").removeClass("disabled"), a.closest("label.radio-label").removeClass("disabled"), i.disabled = !1)
            }), t
        },
        disable: function(t) {
            (t = t || this).get(0);
            return t.radio("getContainer").addClass("disabled").find("input.radio-radio").each(function(t, i) {
                var a = e(i);
                a.closest("li.radio-list").addClass("disabled"), a.closest("label.radio-label").addClass("disabled"), a.prop("disabled", !0)
            }), t
        },
        enable: function(t) {
            (t = t || this).get(0);
            return t.radio("getContainer").removeClass("disabled").find("input.radio-radio").each(function(t, i) {
                var a = e(i);
                a.closest("li.radio-list").removeClass("disabled"), a.closest("label.radio-label").removeClass("disabled"), a.prop("disabled", !1)
            }), t
        },
        reset: function(e) {
            var t = (e = e || this).get(0),
                i = "";
            return t.defaultValue && (i = t.defaultValue), e.radio("setValue", i), e
        },
        getContainer: function(e) {
            return (e = e || this).closest("div.radio-group-container")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("textbox", {
        defaults: {
            readOnly: !1,
            isvalid: !1,
            fieldLabel: "",
            tips: "",
            hint: "",
            validator: null,
            invalidText: e.su.CHAR.VTYPETEXT.INVALIDTEXT,
            vtype: null,
            vtypeText: null,
            allowBlank: !0,
            blankText: e.su.CHAR.VTYPETEXT.BLANKTEXT,
            cls: "",
            validateIcon: !1,
            textFormat: null,
            autoTrim: !0,
            checkFocusTarget: null
        },
        create: function(t, i) {
            var a = !1,
                s = this;
            s.each(function(n, r) {
                var l = e(this);
                if (!l.is("input")) return null;
                e.extend(this, t, i);
                var o = i.id || this.id || e.su.randomId("textbox"),
                    d = i.value || l.val() || l.attr("value") || t.value,
                    c = i.name || l.attr("name") || this.name || t.name;
                e(this).attr({
                    value: d,
                    id: o,
                    name: c
                }).val(d).addClass("text-text " + this.inputCls), this._maxLength && e(this).attr("maxlength", this._maxLength);
                var p = '<div class="container widget-container text-container ' + this.cls + '">';
                null !== this.fieldLabel && (p += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', p += '<label class="widget-fieldlabel text-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (p += '<span class="widget-separator">' + this.separator + "</span>"), p += "</div>"), p += '<div class="widget-wrap-outer text-wrap-outer">', p += '<div class="widget-wrap text-wrap">', p += '<span class="text-wrap-before"></span>', p += '<span class="text-wrap"></span>', p += '<span class="text-wrap-after"></span>', this.hint && (p += '<span class="hint text-hint">', p += '<input class="text-hint" value="' + this.hint + '" tabindex="-1" contenteditable="false" readonly="readonly"/>', p += "</span>"), p += "</div>", this.validateIcon && (p += '<span class="widget-validate-icon"></span>'), null != this.tips && this.tips != undefined && (p += '<div class="widget-tips textbox-tips ' + this.tipsCls + '">', p += '<div class="content tips-content"></div>', p += "</div>"), p += '<div class="widget-error-tips textbox-error-tips ' + this.errorTipsCls + '">', p += '<span class="widget-error-tips-delta"></span>', p += '<div class="widget-error-tips-wrap">', p += '<div class="content error-tips-content"></div>', p += "</div>", p += "</div>", p += "</div>";
                var u = e(p += "</div>");
                if (l.replaceWith(u), u.find("span.text-wrap").append(l), this.vtype) {
                    var v = this.vtype;
                    this.vtypeText && (this.vtype.vtypeText = this.vtypeText), this.vtype = new e.su.vtype(v)
                }
                if (this.readOnly && (u.addClass("read-only"), e(this).attr("readOnly", !0)), this.checkFocusTarget) {
                    (u = s.closest("div.widget-container")).delegate("input.text-text", "blur", function(e) {
                        var t = this.checkFocusTarget;
                        setTimeout(function() {
                            t(e) && clearTimeout(a)
                        }, 10)
                    })
                }
            });
            var n = s.closest("div.widget-container");
            return n.delegate("input.text-text", "click", function(e) {
                e.stopPropagation()
            }).delegate("input.text-text", "focus", function(t) {
                "readonly" !== e(this).attr("readonly") && (clearTimeout(a), n.find("input.text-hint").fadeOut(50)), e(this).textbox("setFocus")
            }).delegate("input.text-text", "blur", function(t) {
                if ("readonly" !== e(this).attr("readonly")) {
                    var i = e(this);
                    a = setTimeout(function() {
                        i.textbox("validate")
                    }, 20)
                }
            }).delegate("input.text-text", "keyup", function(t) {
                e(this).trigger("ev_change", [e(this).val()])
            }).delegate("input.text-text", "setValue", function(t) {
                e(this).textbox("validate")
            }).delegate("input.text-text", "blur", function(t) {
                var i = e(this),
                    a = this.autoTrim ? e.trim(i.val()) : i.val();
                i.val(a), i.textbox("removeFocus"), a || n.find("input.text-hint").css({
                    display: "inline"
                })
            }).delegate("input.text-text", "ev_validatechange", function(t, i, a) {
                t.stopPropagation(), i ? e(this).textbox("setValid") : e(this).textbox("setError", a)
            }).delegate("input.text-hint", "focus click", function(t) {
                t.preventDefault(), "readonly" !== n.find("input.text-text").attr("readonly") && e(this).fadeOut(50, function(e) {
                    s.focus()
                })
            }), setTimeout(function() {
                "" !== s.val() && n.find("input.text-hint").css("display", "none")
            }, 100), s.textbox("setTips", i.tips), s
        },
        validate: function(t, i) {
            var a = (t = t || this).get(0),
                s = (i = !1 !== i[1], !1),
                n = a.autoTrim ? e.trim(a.value) : a.value;
            "function" == e.type(a.textFormat) && (n = a.textFormat(n), e(a).val(n));
            var r = function(t, a, s) {
                return !0 === a ? (i && e(t).trigger("ev_validatechange", [!0, t.tips]), !0) : (a || (a = t.tips), i && e(t).trigger("ev_validatechange", [!1, a]), !1)
            };
            if (a) {
                if ("" === n) return !0 !== a.allowBlank ? (s = !1, r(a, a.blankText)) : (s = !0, r(a, !0));
                var l = a.vtype;
                if (l && !0 === l.isVtype && !0 !== (s = l.validate(n))) return r(a, !1 === s ? l.vtypeText : s);
                if (a.validator) {
                    if (s = a.validator(a.value), "boolean" !== e.type(s)) return r(a, s);
                    if (!0 !== s) return r(a, a.invalidText)
                }
                return r(a, !0)
            }
            return s
        },
        disable: function(e) {
            return (e = e || this).textbox("getContainer").addClass("disabled"), e.prop("disabled", !0), e
        },
        enable: function(e) {
            return (e = e || this).textbox("getContainer").removeClass("disabled"), e.prop("disabled", !1), e
        },
        setReadonly: function(e) {
            return (e = e || this).textbox("getContainer").addClass("read-only"), e.attr("readonly", "readonly"), e
        },
        removeReadonly: function(e) {
            return (e = e || this).textbox("getContainer").removeClass("read-only"), e.removeAttr("readonly"), e
        },
        setTitle: function(e, t) {
            var i = (e = e || this).get(0),
                a = t[1];
            return a && (i.title = a), e
        },
        setValue: function(e, t) {
            var i = (e = e || this).get(0),
                a = t[1],
                s = e.closest("div.text-container").find("input.text-hint");
            return e.attr("snapshot", a), "" === a || a === undefined || null === a ? (e.val(""), i && i.hint && s.css("display", "block")) : (e.val(a), i && i.hint && s.css("display", "none")), e
        },
        getValue: function(e) {
            return (e = e || this).val()
        },
        getContainer: function(e) {
            return (e = e || this).closest("div.text-container")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("textarea", {
        defaults: {
            value: "",
            name: "",
            isdisabled: !1,
            isvalid: !1,
            fieldLabel: "",
            hint: "",
            tips: "",
            validator: null,
            invalidText: e.su.CHAR.INVALIDTEXT,
            vtype: null,
            vtypeText: null,
            allowBlank: !0,
            blankText: e.su.CHAR.BLANKTEXT,
            cls: ""
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(this);
                if (!n.is("textarea")) return null;
                var r = i.id || this.id || "textarea-" + parseInt(1e3 * Math.random() * 1e3 * 1e3, 10).toString(),
                    l = i.value || this.value || t.value,
                    o = i.name || this.name || t.name;
                e.extend(this, t, i), e(this).attr({
                    value: l,
                    id: r,
                    name: o
                }).val(l).addClass("textarea-text " + this.inputCls), this._maxLength && e(this).attr("maxlength", this._maxLength);
                var d = '<div class="container widget-container textarea-container ' + this.cls + '">';
                null !== this.fieldLabel && (d += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', d += '<label class="widget-fieldlabel textarea-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (d += '<span class="widget-separator">' + this.separator + "</span>"), d += "</div>"), d += '<div class="widget-wrap-outer textarea-wrap-outer">', d += '<div class="widget-wrap textarea-wrap">', this.hint && (d += '<span class="hint text-hint">' + this.hint + "</span>"), d += '<span class="text-wrap"></span>', d += "</div>", null != this.tips && this.tips != undefined && (d += '<div class="widget-tips textbox-tips ' + this.tipsCls + '">', d += '<div class="content tips-content"></div>', d += "</div>"), d += '<div class="widget-error-tips textbox-error-tips ' + this.errorTipsCls + '">', d += '<span class="widget-error-tips-delta"></span>', d += '<div class="widget-error-tips-wrap">', d += '<div class="content error-tips-content"></div>', d += "</div>", d += "</div>", d += "</div>";
                var c = e(d += "</div>");
                if (n.replaceWith(c), c.find("div.textarea-wrap span.text-wrap").append(n.detach()), s.readOnly && (c.addClass("read-only"), n.attr("readOnly", !0)), this.vtype) {
                    var p = this.vtype;
                    "string" === e.type(p) && (this.vtype = new e.su.vtype(p), this.vtypeText && (this.vtype.vtypeText = this.vtypeText))
                }
            });
            var s = e(a.parents("div.widget-container").get(0));
            return s.delegate("textarea.textarea-text", "focus", function(t) {
                s.find("span.text-hint").fadeOut(50), e(this).textarea("setFocus")
            }).delegate("textarea.textarea-text", "keyup blur", function(t) {
                var i = e(this);
                if (i.val() || "focusout" != t.type || s.find("span.text-hint").fadeIn(50), document.all) {
                    var a = i.attr("maxlength");
                    if (a) {
                        var n = i.val();
                        n = n.substring(0, a), i.val(n)
                    }
                }
                i.textarea("validate")
            }).delegate("textarea.textarea-text", "ev_validatechange", function(t, i, a) {
                t.stopPropagation(), i ? e(this).textarea("setNormal") : e(this).textarea("setError", a)
            }).delegate("span.text-hint", "focus click", function(t) {
                t.preventDefault(), "readonly" !== s.find("span.text-text").attr("readonly") && e(this).fadeOut(50, function(e) {
                    a.focus()
                })
            }), a.textarea("setTips", i.tips), a
        },
        validate: function(t, i) {
            var a = (t = t || this).get(0),
                s = !1,
                n = e.trim(t.val()),
                r = (i = !1 !== i[1], function(t, s, n) {
                    return !0 === s ? (i && e(a).trigger("ev_validatechange", [!0, a.tips]), !0) : (s || (s = a.tips), i && e(a).trigger("ev_validatechange", [!1, s]), !1)
                });
            if (a) {
                if ("" === n) return !0 !== a.allowBlank ? (s = !1, r(0, a.blankText)) : (s = !0, r(0, !0));
                var l = a.vtype;
                if (l && !0 === l.isVtype && !0 !== (s = l.validate(n))) return !1 === s.result ? r(0, l.vtypeText) : r(0, s);
                if (a.validator) {
                    if (s = a.validator(a.value), "boolean" !== e.type(s)) return r(0, s);
                    if (!0 !== s) return r(0, a.invalidText)
                }
                return r(0, !0)
            }
            return s
        },
        setValue: function(e, t) {
            e = e || this;
            var i = t[1] || "";
            e.val(i)
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("button", {
        defaults: {
            text: "",
            iconCls: "",
            enableToggle: !1,
            toggleHander: null,
            pressedCls: "pressed",
            pressed: !1,
            cls: "",
            btnCls: "",
            fieldLabel: null
        },
        create: function(t, i) {
            this.each(function(a, s) {
                var n = e(this);
                e.extend(s, t, i);
                var r = n.attr("name") || "",
                    l = n.attr("id") || e.su.randomId("button"),
                    o = n.val() || "",
                    d = n.attr("class") || "",
                    c = null;
                if (n.is("input")) {
                    var p = e('<button id="button-' + l + '" name="button-' + r + '" class="' + d + '" type="button">' + o + "</button>");
                    n.replaceWith(p), c = n, n = p, e.extend(p.get(0), t, i)
                }
                var u = n.html(),
                    v = s.text || u || "",
                    h = '<span class="button-button-before"></span>';
                "" !== s.iconCls && (h += '<span class="icon button-icon ' + s.iconCls + '"></span>'), h += '<span class="text button-text">' + v + "</span>", n.empty().addClass("button-button " + s.btnCls).append(e(h)), h = '<div class="container widget-container button-container ' + s.cls + '">', null !== s.fieldLabel && (h += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', h += '<label class="widget-fieldlabel text-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (h += '<span class="widget-separator">' + s.separator + "</span>"), h += "</div>"), h += '<div class="widget-wrap-outer button-wrap-outer">', h += '<div class="widget-wrap button-wrap">', h += "</div>", null != this.tips && this.tips != undefined && (h += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', h += '<div class="content tips-content"></div>', h += "</div>"), h += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', h += '<span class="widget-error-tips-delta"></span>', h += '<div class="widget-error-tips-wrap">', h += '<div class="content error-tips-content"></div>', h += "</div>", h += "</div>", h += "</div>";
                var f = e(h += "</div>");
                n.replaceWith(f);
                var b = f.find("div.button-wrap");
                if (b.append(n), c && b.append(c.addClass("hidden")), "function" === e.type(s.handler) && n.bind("click", s.handler), !0 === s.enableToggle) {
                    var g = s.pressed;
                    n.attr("pressed", g), "true" === g.toString() && n.addClass(s.pressedCls), n.bind("click", function(t) {
                        var i = e(this),
                            a = this.pressed;
                        "false" === a.toString() ? (i.addClass(this.pressedCls), a = !0) : (i.removeClass(this.pressedCls), a = !1), i.attr("pressed", a), this.pressed = a, "function" === e.type(this.toggleHander) && this.toggleHander.call(this, a)
                    })
                }
                s.isButton = !0
            });
            var a = this.closest("div.button-container");
            return a.delegate("button.button-button", "mousedown", function(e) {
                a.addClass("clicked")
            }).delegate("button.button-button", "click", function(e) {
                e.preventDefault()
            }), this.button("setTips", i.tips), this
        },
        setText: function(e, t) {
            var i = (e = e || this).closest("div.button-container").find("button.button-button span.button-text");
            return (t = t[1]) && (e.text = t, i.html(t)), e
        },
        setValue: function(e, t) {
            e = e || this, t = t[1] || "";
            return e.val(t), e
        },
        disable: function(e) {
            var t = (e = e || this).closest("div.button-container");
            return t.addClass("disabled"), t.find("button.button-button").prop("disabled", !0), e
        },
        enable: function(e) {
            var t = (e = e || this).closest("div.button-container");
            return t.removeClass("disabled"), t.find("button.button-button").prop("disabled", !1), e
        },
        getContainer: function(e) {
            return (e = e || this).closest("div.button-container")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("time", {
        defaults: {
            fieldLabel: "",
            tips: "",
            cls: "",
            value: "24:00:00",
            maxValue: "24:00:00",
            minValue: "00:00:00",
            format: "h:m:s",
            allowBlank: !0,
            widgetName: "time"
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(this);
                if (!n.is("input")) return null;
                e.extend(this, t, i);
                var r = i.id || this.id || "textbox-" + parseInt(1e3 * Math.random() * 1e3 * 1e3, 10).toString();
                n.attr({
                    id: r
                });
                var l = '<div class="container widget-container combobox-container time-container ' + this.cls + '">';
                null !== this.fieldLabel && (l += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', l += '<label class="widget-fieldlabel time-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (l += '<span class="widget-separator">' + this.separator + "</span>"), l += "</div>");
                var o = this.format,
                    d = this.format.charAt(1);
                /^[A-Za-z0-9]+$/.test(d), l += '<div class="widget-wrap-outer time-wrap-outer">';
                var c = o.split(d),
                    p = c.length;
                s.separator = d;
                for (var u = 0; u < p; u++) {
                    var v = c[u],
                        h = "",
                        f = 24;
                    switch (v) {
                        case "h":
                            h = "hour", f = 24;
                            break;
                        case "m":
                            h = "min", f = 60;
                            break;
                        case "s":
                            h = "sec", f = 60
                    }
                    l += '<div class="combobox-container widget-wrap time-wrap ' + h + "-container " + (u === p - 1 ? "lst" : "") + '">', l += '<div class="combobox-wrap time-wrap ' + h + '-wrap">', l += '<span class="text-wrap-before"></span>', l += '<input readonly="readonly" class="combobox-text time-text ' + h + '-text" maxlength="2" value="' + h + '" data-type="' + v + '" />', l += '<a class="combobox-switch time-switch ' + h + '-switch" href="javascript:void(0);">', l += '<span class="icon"></span>', l += "</a>", l += '<div class="combobox-list-wrap time-list-wrap ' + h + '-list-wrap" toggleflag="hidden" >', l += '<div class="position-top-left"></div><div class="position-top-center"></div>', l += '<div class="position-center-left"><div class="position-center-right">', l += '<div class="combobox-list-content-wrap">', l += '<ul class="combobox-list time-list ' + h + '-list">';
                    for (var b = 0; b < f; b++) {
                        var g = "" == b.toString().charAt(1) ? "0" + b : b;
                        l += '<li class="combobox-list time-list" data-index="' + g + '">', l += '<label class="combobox-label time-label" >' + g + "</label>", l += "</li>"
                    }
                    l += "</ul>", l += "</div>", l += "</div></div>", l += '<div class="position-bottom-left"></div><div class="position-bottom-center"></div>', l += "</div>", l += '<span class="text-wrap-after"></span>', l += "</div>", l += "</div>", u != p - 1 && (l += '<span class="time-separator">' + d + "</span>")
                }
                null != this.tips && this.tips != undefined && (l += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', l += '<div class="content tips-content"></div>', l += "</div>"), l += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', l += '<span class="widget-error-tips-delta"></span>', l += '<div class="widget-error-tips-wrap">', l += '<div class="content error-tips-content"></div>', l += "</div>", l += "</div>", l += "</div>";
                var m = e(l += "</div>");
                n.replaceWith(m), m.append(n.addClass("time-value hidden"))
            });
            var s = e(a.parents("div.time-container").get(0));
            return s.delegate("a.time-switch", "click", function(t) {
                t.stopPropagation();
                if (!e(this).time("getContainer").hasClass("disabled")) {
                    var i = e(this).parent("div.time-wrap").find("div.time-list-wrap"),
                        a = i.attr("toggleflag") || "hidden";
                    e("div.combobox-list-wrap").hide().attr("toggleflag", "hidden"), "shown" != a ? i.slideDown(150, function(t) {
                        e(this).css({
                            display: "block"
                        })
                    }).attr("toggleflag", "shown") : i.hide().attr("toggleflag", "hidden")
                }
            }), s.delegate("label.time-label", "click", function(t) {
                t.stopPropagation();
                var i = e(this),
                    s = (i.attr("data-type"), i.parents("div.time-list-wrap")),
                    n = a.closest("div.time-container"),
                    r = a.get(0),
                    l = r.format,
                    o = r.separator;
                s.find("li.time-list").removeClass("selected"), i.parent("li.time-list").addClass("selected"), s.hide().attr("toggleflag", "hidden"), i.closest("div.time-wrap").find("input.time-text").val(i.html());
                for (var d = n.find("input.hour-text").val() || "00", c = n.find("input.min-text").val() || "00", p = n.find("input.sec-text").val() || "00", u = l.split(o), v = "", h = 0, f = u.length; h < f; h++) {
                    switch (u[h]) {
                        case "h":
                            v = v + d + o;
                            break;
                        case "m":
                            v = v + c + o;
                            break;
                        case "s":
                            v = v + p + o
                    }
                }
                v = v.slice(0, v.length - 1), a.val(v)
            }), s.delegate("div.time-wrap.lst label.time-label", "click", function(e) {
                a.time("validate")
            }), a.on("ev_validatechange", function(e) {
                e.stopPropagation()
            }), a.val() && a.time("setValue", a.val()), a.time("setTips", i.tips), a
        },
        getHour: function(e) {
            return (e = e || this).closest("div.time-container").find("input.hour-text").val()
        },
        getMin: function(e) {
            return (e = e || this).closest("div.time-container").find("input.min-text").val()
        },
        getSec: function(e) {
            return (e = e || this).closest("div.time-container").find("input.sec-text").val()
        },
        setValue: function(e, t) {
            for (var i = (e = e || this).closest("div.time-container"), a = e.get(0), s = a.format, n = a.separator, r = (t = t[1]).split(n), l = s.split(n), o = 0, d = l.length; o < d; o++) {
                var c = l[o],
                    p = r[o];
                switch (c) {
                    case "h":
                        i.find("input.hour-text").val(p);
                        i.find("div.hour-container li.time-list").removeClass("selected").filter("[data-index=" + p + "]").addClass("selected");
                        break;
                    case "m":
                        i.find("input.min-text").val(p);
                        i.find("div.min-container li.time-list").removeClass("selected").filter("[data-index=" + p + "]").addClass("selected");
                        break;
                    case "s":
                        i.find("input.sec-text").val(p);
                        i.find("div.sec-container li.time-list").removeClass("selected").filter("[data-index=" + p + "]").addClass("selected")
                }
            }
            return e.val(t), e
        },
        getValue: function(e) {
            return (e = e || this).val()
        },
        validate: function(e) {
            var t = (e = e || this).get(0).validator,
                i = e.val();
            return t ? t.call(e, i) : (e.trigger("ev_validatechange", !0), !0)
        },
        getContainer: function(e) {
            return (e = e || this).closest("div.time-container")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("file", {
        defaults: {
            fieldLabel: "",
            tips: "",
            cls: "",
            inputCls: "l",
            buttonText: e.su.CHAR.OPERATION.FILEBUTTONTEXT,
            blankText: e.su.CHAR.OPERATION.FILEBLANKTEXT,
            extension: "txt, ai, docx",
            extensionErrorText: e.su.CHAR.ERROR["00000074"]
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(this);
                if (!n.is("input[type=file]")) return null;
                e.extend(this, t, i);
                var r = '<div class="container widget-container text-container file-container">';
                null !== this.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', r += '<label class="widget-fieldlabel text-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (r += '<span class="widget-separator">' + this.separator + "</span>"), r += "</div>"), r += '<div class="file-wrap-outer widget-wrap-outer">', r += '<div class="file-wrap widget-wrap">', r += '<div class="widget-wrap text-wrap">', r += '<span class="text-wrap-before"></span>', r += '<span class="text-wrap">', r += '<label class="file-text text-text ' + s.inputCls + '"></label>', r += "</span>", r += '<span class="text-wrap-after"></span>', r += "</div>", r += '<div class="button-container file-button-container inline-block">', r += '<button class="file-button button-button" type="button">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.buttonText + "</span>", r += "</button>", r += "</div>", r += "</div>", this.tips && (r += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', r += '<div class="content tips-content"></div>', r += "</div>"), r += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', r += '<span class="widget-error-tips-delta"></span>', r += '<div class="widget-error-tips-wrap">', r += '<div class="content error-tips-content"></div>', r += "</div>", r += "</div>", r += "</div>";
                var l = e(r += "</div>");
                n.replaceWith(l), l.find("div.file-wrap").append(n.addClass("file-input").prop("single", !0)), l.find("div.file-wrap").append('<div class="file-text-hover"></div>')
            });
            var s = e(a.parents("div.file-container").get(0));
            return s.delegate("button.file-button", "click", function(e) {
                s.find("input.file-input").click()
            }), s.delegate("label.file-text", "click", function(e) {
                s.find("button.file-button").click()
            }), s.find("input.file-input").on("change", function(t) {
                var i = e(this).val(),
                    n = i.toString().match(/.+(?=\\)/g);
                n = n && n[0] && n[0].length ? i.substring(n[0].length + 1) : i, s.find("label.file-text").html(n), s.find("label.file-text").attr("title", n), i && a.file("validate"), e(this).trigger("ev_change")
            }), a.file("setTips", i.tips), a
        },
        validate: function(e) {
            var t = (e = e || this).get(0),
                i = e.val(),
                a = t.extension.replace(/\s/g, "").split(","),
                s = "",
                n = !1;
            if ("" == i) e.file("setError", t.blankText), n = !1;
            else {
                for (var r = i.split("."), l = (s = r[r.length - 1], 0), o = a.length; l < o; l++)
                    if (s === a[l]) {
                        n = !0;
                        break
                    } n ? e.file("setNormal") : e.file("setError", t.extensionErrorText)
            }
            return e.triggerHandler("ev_validatechange", n), n
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("timepicker", {
        defaults: {
            fieldLabel: "",
            viewOnly: !1,
            legendText: e.su.CHAR.TIMESET.TIME || "Time",
            inputCls: "",
            cls: ""
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                var r = "",
                    l = !1;
                s.viewOnly && (r = "view-only", l = !0);
                var o = '<div class="container widget-container timepicker-container ' + s.cls + '">';
                null !== this.fieldLabel && (o += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', o += '<label class="widget-fieldlabel timepicker-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (o += '<span class="widget-separator">' + this.separator + "</span>"), o += "</div>"), o += '<div class="widget-wrap timepicker-wrap inline">', o += '<a class="timepicker-switch" href="javascript:void(0);">', o += '<span class="icon"></span>', o += '<span class="text"></span>', o += "</a>", o += "</div>", o += '<div class="timepicker-msg-container ' + r + '">', o += '<div class="canvas">', o += '<div class="timepicker-msg-container-wrap">', o += '<table class="timepicker">', o += "<thead>", o += "<tr>", o += '<th class="fst"></th>', o += '<th class="week-picker" data-week="mon">' + e.su.CHAR.DATE.MONDAY + "</th>", o += '<th class="week-picker" data-week="tue">' + e.su.CHAR.DATE.TUESDAY + "</th>", o += '<th class="week-picker" data-week="wed">' + e.su.CHAR.DATE.WEDNESDAY + "</th>", o += '<th class="week-picker" data-week="thu">' + e.su.CHAR.DATE.THURSDAY + "</th>", o += '<th class="week-picker" data-week="fri">' + e.su.CHAR.DATE.FRIDAY + "</th>", o += '<th class="week-picker" data-week="sat">' + e.su.CHAR.DATE.SATURDAY + "</th>", o += '<th class="week-picker" data-week="sun">' + e.su.CHAR.DATE.SUNDAY + "</th>", o += "</tr>", o += "</thead>", o += "<tbody>";
                for (var d = 0; d < 24; d++) o += "<tr>", o += '<td class="fst"><div data-time="' + d + "-" + (d + 1) + '" class="row-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="mon" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="tue" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="wed" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="thu" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="fri" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="sat" class="timepicker-picker"></div></td>', o += '<td><div data-time-start="' + d + '" data-time-end="' + (d + 1) + '" data-week="sun" class="timepicker-picker"></div></td>', o += "</tr>";
                o += "</tbody>", o += "</table>", l && (o += '<div class="timepicker-view-only timepicker-view-only-cover"></div>'), o += "</div>", o += '<div class="x-axis">', o += '<div class="x-axis-wrap">';
                for (d = 0; d <= 24; d++) {
                    o += "<span>" + (1 == d.toString().length ? "0" + d : d.toString()) + ":00</span>"
                }
                o += "</div>", o += "</div>", o += '<div class="legend-container">', o += '<span class="icon"></span>', o += '<span class="text">' + s.legendText + "</span>", o += "</div>", o += "</div>", l || (o += '<div class="msg-btn-container">', o += '<div class="msg-btn-wrap">', o += '<div class="button-container inline">', o += '<button type="button" class="button-button btn-msg btn-msg-cancel"><span class="button-button-before"></span><span class="text button-text">' + e.su.CHAR.OPERATION.CANCEL + "</span></button>", o += "</div>", o += '<div class="button-container inline">', o += '<button type="button" class="button-button btn-msg btn-msg-clear"><span class="button-button-before"></span><span class="text button-text">' + e.su.CHAR.OPERATION.CLEAR + "</span></button>", o += "</div>", o += '<div class="button-container inline">', o += '<button type="button" class="button-button btn-msg btn-msg-reset"><span class="button-button-before"></span><span class="text button-text">' + e.su.CHAR.OPERATION.RESET + "</span></button>", o += "</div>", o += '<div class="button-container inline">', o += '<button type="button" class="button-button btn-msg btn-msg-ok"><span class="button-button-before"></span><span class="text button-text">' + e.su.CHAR.OPERATION.SAVE + "</span></button>", o += "</div>", o += "</div>", o += "</div>"), o += "</div>";
                var c = e(o += "</div>");
                n.addClass(s.inputCls).replaceWith(c), c.append(n.addClass("hidden"));
                var p = c.find("div.timepicker-msg-container");
                p.msg({
                    cls: "timepicker-container " + s.cls,
                    type: "window"
                }), s.msg = p
            });
            var s = a.closest("div.timepicker-container"),
                n = (r = a.get(0)).msg;
            s.delegate("a.timepicker-switch", "click", function(t) {
                if (!e(this).hasClass("disabled")) {
                    var i = r.snapshot || "{}";
                    a.timepicker("setValue", i), a.trigger("ev_beforeshow", [a, n]), n.msg("show")
                }
            }), n.on("ev_close", function(e, t) {
                a.trigger("ev_close", [a, t])
            }), n.delegate("div.timepicker-picker", "click", function(e) {
                e.stopPropagation(), e.preventDefault()
            }).delegate("button.btn-msg-cancel", "click", function(e) {
                a.timepicker("restore")
            }).delegate("a.msg-close", "click", function(e) {
                a.timepicker("restore")
            }).delegate("button.btn-msg-clear", "click", function(e) {
                a.timepicker("reset")
            }).delegate("button.btn-msg-ok", "click", function(e) {
                var t = a.timepicker("getValue");
                a.timepicker("setValue", t)
            }).delegate("button.btn-msg-reset", "click", function(e) {
                a.timepicker("restore")
            });
            var r = a.get(0);
            return n.delegate("div.timepicker-msg-container-wrap", "mousedown", function(t) {
                if (t.stopPropagation(), t.preventDefault(), !r.viewOnly) {
                    var i = t.pageX || t.screenX,
                        a = t.pageY || t.screenY,
                        s = e(this);
                    i -= s.offset().left, a -= s.offset().top;
                    var l = s.find("div.timepicker-select-wrap");
                    0 == l.length && (l = e('<div class="timepicker-select-wrap"></div>'), s.append(l)), l.attr("fl", i), l.attr("ft", a), l.css({
                        left: i,
                        top: a,
                        display: "block"
                    }), n.attr("dragFlag", !0)
                }
            }).delegate("div.timepicker-msg-container-wrap", "mouseup", function(t) {
                if (t.stopPropagation(), t.preventDefault(), !r.viewOnly) {
                    var i = n.find("div.timepicker-select-wrap");
                    if (i.length > 0) {
                        var a = i.offset().left,
                            s = i.offset().top,
                            l = a + i.width(),
                            o = s + i.height(),
                            d = e(this).find("div.timepicker-picker"),
                            c = !1;
                        if (0 == a && 0 == s && 0 == l && 0 == o) return;
                        d.each(function(t, i) {
                            var n = e(i),
                                r = n.offset().left,
                                d = n.offset().top,
                                p = r + n.width(),
                                u = d + n.height();
                            if ((r <= a && a <= p || a <= r && p <= l || r <= l && l <= p) && (d <= s && s <= u || s <= d && u <= o || d <= o && o <= u)) return n.hasClass("selected") ? void 0 : (c = !0, !1)
                        }), d.each(function(t, i) {
                            var n = e(i),
                                r = n.offset().left,
                                d = n.offset().top,
                                p = r + n.width(),
                                u = d + n.height();
                            (r <= a && a <= p || a <= r && p <= l || r <= l && l <= p) && (d <= s && s <= u || s <= d && u <= o || d <= o && o <= u) && (c ? n.addClass("selected") : n.toggleClass("selected"))
                        }), i.css({
                            display: "none",
                            width: 0,
                            height: 0
                        }), n.removeAttr("dragFlag")
                    }
                }
            }).delegate("div.timepicker-msg-container-wrap", "mousemove", function(t) {
                if (t.stopPropagation(), t.preventDefault(), !r.viewOnly) {
                    var i = t.pageX || t.screenX,
                        a = t.pageY || t.screenY,
                        s = e(this);
                    if (i -= s.offset().left, a -= s.offset().top, n.attr("dragFlag")) {
                        var l = n.find("div.timepicker-select-wrap"),
                            o = parseInt(l.attr("fl"), 10),
                            d = parseInt(l.attr("ft"), 10),
                            c = i - o;
                        c > 0 ? l.css({
                            width: c
                        }) : (c = Math.abs(c), l.css({
                            width: c,
                            left: i
                        }));
                        var p = a - d;
                        p > 0 ? l.css({
                            height: p
                        }) : (p = Math.abs(p), l.css({
                            height: p,
                            top: a
                        }))
                    }
                }
            }), a
        },
        enable: function(e) {
            var t = (e = e || this).closest("div.timepicker-container"),
                i = t.find("a.timepicker-switch");
            return t.removeClass("disabled"), i.removeClass("disabled"), e
        },
        disable: function(e) {
            var t = (e = e || this).closest("div.timepicker-container"),
                i = t.find("a.timepicker-switch");
            return t.addClass("disabled"), i.addClass("disabled"), e
        },
        setValue: function(t, i) {
            t = t || this, i = i[1] || "{}";
            var a = t.get(0).msg.find("div.timepicker-picker").removeClass("selected");
            t.val(i), t.get(0).snapshot = i;
            i = e.su.json.parseJSON(i);
            for (var s in i)
                for (var n = s.toLowerCase(), r = i[s], l = a.filter("[data-week=" + n + "]"), o = 0, d = r.length; o < d; o++)
                    for (var c = r[o], p = c[0], u = c[1], v = p; v < u; v++) l.filter('[data-time-start="' + v + '"]').addClass("selected");
            return t
        },
        getValue: function(t) {
            for (var i = (t = t || this).get(0).msg.find("div.timepicker-picker"), a = {}, s = 0, n = i.length; s < n; s++) {
                var r = e(i[s]),
                    l = r.attr("data-week"),
                    o = parseInt(r.attr("data-time-start"), 10),
                    d = parseInt(r.attr("data-time-end"), 10);
                r.hasClass("selected") && (a[l] = a[l] || [], a[l].push([o, d]))
            }
            for (var c in a) {
                var p = a[c],
                    u = [],
                    v = [],
                    h = -1;
                p.sort(function(e, t) {
                    return e[0] - t[0]
                });
                for (s = 0, n = p.length; s < n; s++) {
                    var f = p[s];
                    1 != n ? -1 != h ? (h[1] == f[0] ? h = f : (v.push(h[1]), u.push(v), v = [(h = f)[0]]), s != n - 1 || (v.push(f[1]), u.push(v), h = -1, v = [])) : v = [(h = f)[0]] : (u.push(f), h = -1, v = [])
                }
                a[c] = u
            }
            var b = e.su.json.toJSONString(a);
            return t.val(b), b
        },
        restore: function(e) {
            var t = (e = e || this).get(0),
                i = (t.msg, t.snapshot);
            return i || (i = "[]"), e.timepicker("setValue", i), e
        },
        reset: function(e) {
            return (e = e || this).get(0).msg.find("div.timepicker-picker").removeClass("selected"), e.val(""), e
        }
    })
}(jQuery),
function($) {
    $.su.Widget("progressbar", {
        defaults: {
            text: "",
            fieldLabel: "",
            tips: "",
            unit: "%",
            _timeout: 0,
            value: 0,
            url: null,
            isProgressbar: !0,
            showPercentage: !0,
            width: 18,
            height: 6,
            fn: null,
            widgetName: "progressbar",
            expression: "percentage*1",
            ptype: "horizontal"
        },
        create: function(e, t) {
            return this.each(function(i, a) {
                var s = $(a);
                $.extend(a, e, t);
                var n = a.ptype,
                    r = t.value || e.value,
                    l = t.width || e.width,
                    o = t.height || e.height,
                    d = "horizontal" === n ? "width:" + l * r + "px" : "height:" + o * r + "px",
                    c = '<div class="container widget-container progressbar-container progressbar-' + n + " " + a.cls + '">';
                null !== a.fieldLabel && (c += '<div class="widget-fieldlabel-wrap ' + a.labelCls + '">', c += '<label class="widget-fieldlabel processbar-fieldlabel">' + a.fieldLabel + "</label>", "" !== a.fieldLabel && (c += '<span class="widget-separator">' + a.separator + "</span>"), c += "</div>"), c += '<div class="widget-wrap-outer progressbar-wrap-outer">', c += '<div class="widget-wrap progressbar-wrap">', c += '<div class="widget-wrap progressbar-content">', c += '<div class="progressbar-value" style="' + d + '"></div>', c += "</div>", c += '<div class="progressbar-text">', "" != a.text && (c += '<span class="progressbar-text">' + a.text + "</span>"), a.showPercentage && (c += '<span class="progressbar-percentage">' + 100 * r + a.unit + "</span>"), c += "</div>", c += "</div>", null != this.tips && this.tips != undefined && (c += '<div class="widget-tips textbox-tips ' + a.tipsCls + '">', c += '<div class="content tips-content"></div>', c += "</div>"), c += '<div class="widget-error-tips textbox-error-tips ' + a.errorTipsCls + '">', c += '<span class="widget-error-tips-delta"></span>', c += '<div class="widget-error-tips-wrap">', c += '<div class="content error-tips-content"></div>', c += "</div>", c += "</div>", c += "</div>";
                var p = $(c += "</div>");
                s.replaceWith(p), p.append(s.addClass("hidden"));
                p.find("div.progressbar-content").css("width", l).css("height", o)
            }), this.password("setTips", t.tips), this
        },
        animate: function(me, args) {
            var me = me || this,
                obj = me.get(0),
                container = me.closest("div.progressbar-container"),
                type = obj.ptype,
                unit = obj.unit,
                expression = obj.expression,
                property = "horizontal" === type ? "width" : "height";
            args[1] = null === args[1] ? me.percentageCurrent || 0 : args[1];
            var percentageStart = parseInt(100 * args[1], 10),
                percentageEnd = parseInt(100 * args[2], 10),
                duration = "number" === $.type(parseInt(args[3], 10)) ? parseInt(args[3], 10) : 500,
                callback = args[4] || null,
                percentageCurrent = percentageStart || 0,
                progressbarBox = container.find("div.progressbar-content"),
                progressbarBar = progressbarBox.children("div.progressbar-value"),
                percentageBox = container.find("span.progressbar-percentage"),
                num = progressbarBox[property]();
            progressbarBar.css(property, parseInt(num * percentageStart / 100, 10));
            var p = Math.round(100 * eval(expression.replace("percentage", percentageStart))) / 100;
            percentageBox.html(p + unit);
            var t = parseInt(duration / Math.abs(percentageEnd - percentageStart), 10),
                start = new Date,
                start_time = start.getTime();
            return me.get(0)._timeout = setInterval(function() {
                var now = new Date,
                    now_time = now.getTime(),
                    time_gap = now_time - start_time,
                    bar_gap = Math.round(time_gap / t);
                if (start_time = now_time, percentageCurrent != percentageEnd) {
                    percentageCurrent > percentageEnd ? (percentageCurrent -= bar_gap, percentageCurrent = percentageCurrent < percentageEnd ? percentageEnd : percentageCurrent) : (percentageCurrent += bar_gap, percentageCurrent = percentageCurrent > percentageEnd ? percentageEnd : percentageCurrent), me.percentageCurrent = percentageCurrent.toFixed(1) / 100;
                    var animateObj = "width" === property ? {
                        width: parseInt(num * percentageCurrent / 100, 10)
                    } : {
                        height: parseInt(num * percentageCurrent / 100, 10)
                    };
                    progressbarBar.clearQueue().animate(animateObj, t, function() {
                        var p = Math.round(100 * eval(expression.replace("percentage", percentageCurrent))) / 100;
                        percentageBox.html(p + unit), me.val(percentageCurrent / 100)
                    })
                } else {
                    clearInterval(me.get(0)._timeout), me.get(0)._timeout = 0;
                    var animateObj = "width" === property ? {
                        width: parseInt(num * percentageEnd / 100, 10)
                    } : {
                        height: parseInt(num * percentageEnd / 100, 10)
                    };
                    progressbarBar.css(animateObj);
                    var p = Math.round(100 * eval(expression.replace("percentage", percentageEnd))) / 100;
                    percentageBox.html(p + unit), callback && callback.call(me)
                }
            }, t), me.val(percentageEnd / 100), me
        },
        reset: function(me) {
            var me = me || this,
                obj = me.get(0),
                container = me.closest("div.progressbar-container"),
                type = obj.ptype,
                unit = obj.unit,
                expression = obj.expression,
                property = "horizontal" === type ? "width" : "height";
            me.progressbar("stop");
            var progressbarBox = container.find("div.progressbar-content"),
                progressbarBar = progressbarBox.children("div.progressbar-value"),
                percentageBox = container.find("span.progressbar-percentage"),
                animateObj = "width" === property ? {
                    width: 0
                } : {
                    height: 0
                };
            progressbarBar.stop(), progressbarBar.css(animateObj);
            var p = Math.round(100 * eval(expression.replace("percentage", 0))) / 100;
            return percentageBox.html(+unit), me
        },
        stop: function(e) {
            (e = e || this).closest("div.progressbar-container");
            var t = e.get(0)._timeout;
            return clearInterval(t), e
        },
        setText: function(e, arguments) {
            var t = (e = e || this).closest("div.progressbar-container"),
                i = arguments[0];
            t.find("span.progressbar-text").html(i)
        },
        setValue: function(me, arguments) {
            var me = me || this,
                obj = me.get(0),
                container = me.closest("div.progressbar-container"),
                type = obj.ptype,
                unit = obj.unit,
                expression = obj.expression,
                property = "horizontal" === type ? "width" : "height",
                value = arguments[1] || 0,
                text = arguments[2] || me.get(0).text,
                animateFlag = arguments[3] || !1,
                progressbarBox = container.find("div.progressbar-content"),
                progressbarBar = progressbarBox.children("div.progressbar-value"),
                percentageBox = container.find("span.progressbar-percentage"),
                textBox = container.find("span.progressbar-text"),
                num = progressbarBox[property]();
            if (animateFlag) me.progressbar("animate", me.val(), value, 500, function() {
                textBox.html(text)
            });
            else {
                progressbarBar.css(property, num * value);
                var p = Math.round(100 * eval(expression.replace("percentage", value))) / 100;
                percentageBox.html(p + unit), textBox.html(text)
            }
            return me.val(parseInt(value, 10)), me
        },
        update: function(e, arguments) {
            (e = e || this).get(0).ptype;
            var t = t || "percentage",
                i = arguments[1] || e.get(0).url,
                a = arguments[2],
                s = arguments[3] || null;
            a = $.su.encryptor.dataEncrypt($.param(a, !0)), $.ajax({
                url: i,
                type: "POST",
                data: a,
                dataType: "json",
                traditional: !0,
                cache: !1,
                success: s || function(i) {
                    if (!("" == i || i && i.data == undefined)) {
                        try {
                            i = JSON.parse($.su.encryptor.dataDecrypt(i.data))
                        } catch (s) {
                            $.encrypt.encryptManager.cleanStorage(), location.href = "/"
                        }
                        var a = i[t];
                        if (!a) return null;
                        e.progressbar("setValue", a, null, !0)
                    }
                }
            })
        },
        hide: function(e) {
            return (e = e || this).closest("div.progressbar-container").css("display", "none"), e
        },
        show: function(e) {
            return (e = e || this).closest("div.progressbar-container").fadeIn(150), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("password", {
        defaults: {
            fieldLabel: "",
            tips: "",
            hint: null,
            validateIcon: !1,
            showLevel: !0,
            allowBlank: !0,
            encrypt: e.su.encrypt,
            encryptParam: ["n", "e"],
            _minLength: 2,
            _maxLength: 16,
            vtype: "password",
            invalidText: e.su.CHAR.VTYPETEXT.INVALIDTEXT,
            blankText: e.su.CHAR.VTYPETEXT.BLANKTEXT,
            allowVisible: !1
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                var r = '<div class="container widget-container text-container password-container ' + s.cls + " " + (s.showLevel ? "level" : "") + '">';
                null !== s.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', r += '<label class="widget-fieldlabel text-fieldlabel password-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (r += '<span class="widget-separator">' + s.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap-outer text-wrap-outer password-wrap-outer">', r += '<div class="widget-wrap text-wrap password-wrap ' + (s.allowVisible ? "allow-visible" : "") + '">', r += '<span class="text-wrap-before"></span>', r += '<span class="text-wrap password-wrap ">', r += '<input type="password" class="text-text password-text password-hidden ' + s.inputCls + '" maxlength="' + s._maxLength + '"/>', s.allowVisible && (s.passwordVisible = !1, r += '<input type="text" class="text-text password-text password-visible hidden ' + s.inputCls + '" maxlength="' + s._maxLength + '"/>', r += '<span class="icon allow-visible-btn"></span>'), r += "</span>", s.hint && (r += '<span class="hint text-hint password-hint">', r += '<input class="text-hint password-hint ' + s.inputCls + '" value="' + s.hint + '" contenteditable="false" readonly="readonly"/>', r += "</span>"), s.showLevel && (r += '<div class="password-level ' + s.inputCls + '">', r += '<span class="level low">' + e.su.CHAR.OPERATION.LOW + "</span>", r += '<span class="level middle">' + e.su.CHAR.OPERATION.MIDDLE + "</span>", r += '<span class="level high">' + e.su.CHAR.OPERATION.HIGH + "</span>", r += "</div>"), r += '<span class="text-wrap-after"></span>', r += "</div>", this.validateIcon && (r += '<span class="widget-validate-icon"></span>'), null != this.tips && this.tips != undefined && (r += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', r += '<div class="content tips-content"></div>', r += "</div>"), r += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', r += '<span class="widget-error-tips-delta"></span>', r += '<div class="widget-error-tips-wrap">', r += '<div class="content error-tips-content"></div>', r += "</div>", r += "</div>", r += "</div>";
                var l = e(r += "</div>");
                if (n.replaceWith(l), l.find("span.password-wrap").append(n.addClass("hidden")), this.vtype) {
                    var o = this.vtype;
                    this.vtypeText && (this.vtype.vtypeText = this.vtypeText), this.vtype = new e.su.vtype(o)
                }
            });
            var s = a.closest("div.password-container"),
                n = s.find("input.password-hidden"),
                r = s.find("input.password-visible"),
                l = s.find("input.password-hint");
            s.find("input.password-level");
            return s.delegate("input.password-text", "click", function(e) {
                e.stopPropagation()
            }).delegate("span.allow-visible-btn", "click", function(t) {
                var i = a.get(0),
                    s = e(this),
                    l = "";
                i.passwordVisible ? (l = r.val(), n.val(l), r.css("display", "none"), n.css("display", "inline-block"), s.removeClass("visible"), i.passwordVisible = !1) : (l = n.val(), r.val(l), n.css("display", "none"), r.css("display", "inline-block"), s.addClass("visible"), i.passwordVisible = !0)
            }), a.on("ev_validatechange", function(t, i, a) {
                t.stopPropagation(), i ? e(this).textbox("setValid") : e(this).textbox("setError", a)
            }), l.on("click focus", function(t) {
                t.preventDefault();
                var i = a.get(0);
                return e(this).fadeOut(50, function() {
                    i.passwordVisible ? r.focus() : n.focus()
                }), !1
            }), s.delegate("input.password-text", "click focus", function(e) {
                e.preventDefault(), l.fadeOut(50), a.password("setFocus")
            }), s.delegate("input.password-text", "blur", function(e) {
                var t = a.get(0),
                    i = (t.encrypt, t.e, t.n, t.passwordVisible ? r.val() : n.val());
                a.password("removeFocus"), i || l.css("display", "inline"), a.password("validate") && a.password("doEncrypt")
            }), s.delegate("input.password-text", "keyup", function(t) {
                var i = e(this).val();
                a.password("levelCheck"), a.trigger("ev_change", [i, t.key, t.keyCode])
            }), setTimeout(function() {
                "" != n.val() && l.css("display", "none")
            }, 100), a.password("setTips", i.tips), a
        },
        levelCheck: function(e) {
            var t = (e = e || this).get(0),
                i = e.closest("div.password-container"),
                a = i.find("input.password-visible"),
                s = i.find("input.password-hidden"),
                n = "",
                r = 0,
                l = 0,
                o = 0,
                d = 0,
                c = 0,
                p = (n = t.passwordVisible ? a.val() : s.val()).length;
            r = /[A-Z]/g.test(n) ? 1 : 0, l = /[a-z]/g.test(n) ? 1 : 0, o = /[0-9]/g.test(n) ? 1 : 0, d = /[\`\~\!\@\#\$\%\^\&\*\(\)\-\=\_\+\[\]\{\}\;\:\'\"\\\|\/\?\.\,\<\>\x20]/g.test(n) ? 1 : 0, c = r + l + o + (p >= 10 ? 1 : 0) + d;
            var u = 0;
            p <= 5 ? c <= 2 ? u = 1 : 3 != c && 4 != c || (u = 2) : c <= 1 ? u = 1 : 2 == c || 3 == c ? u = 2 : c >= 4 && (u = 3);
            var v = i.find("div.password-level");
            return v.removeClass("level-0 level-1 level-2 level-3"), v.fadeIn(100).addClass("level-" + u), e
        },
        validate: function(t, i) {
            var a = (t = t || this).get(0),
                s = t.closest("div.password-container"),
                n = s.find("input.password-visible"),
                r = s.find("input.password-hidden"),
                l = "",
                o = !0,
                d = (i = !1 !== i[1], function(t, a) {
                    return !0 === a ? (i && e(t).trigger("ev_validatechange", [!0, t.tips]), !0) : (a || (a = t.tips), i && e(t).trigger("ev_validatechange", [!1, a]), !1)
                });
            if ("" === (l = a.passwordVisible ? n.val() : r.val())) return !0 !== a.allowBlank ? (o = !1, d(a, a.blankText)) : (o = !0, d(a, !0));
            var c = a.vtype;
            return c && !0 === c.isVtype && !0 !== (o = c.validate(l)) ? d(a, !1 === o ? c.vtypeText : o) : a.validator && (o = a.validator(l), "boolean" !== e.type(o) || 0 == o) ? (o = !1, d(a, a.invalidText)) : d(a, !0)
        },
        setValue: function(t, i) {
            var a = (t = t || this).get(0),
                s = a.encryptParam,
                n = i[1];
            if ("function" == e.type(a.encrypt) && e.isArray(n))
                for (var r = 0, l = s.length; r < l; r++) {
                    a[s[r]] = n[r]
                } else t.val(n), t.siblings("input").val(n);
            return t
        },
        getValue: function(e) {
            var t = (e = e || this).closest("div.password-container");
            if (e.get(0).passwordVisible) var i = t.find("input.password-text.hidden");
            else i = t.find("input.password-text");
            return i.val()
        },
        doEncrypt: function(t) {
            var i = t.get(0),
                a = i.encrypt,
                s = i.encryptParam,
                n = t.closest("div.password-container"),
                r = n.find("input.password-hidden"),
                l = n.find("input.password-visible"),
                o = n.find("input.password-hint"),
                d = i.passwordVisible ? l.val() : r.val();
            t.password("removeFocus"), d || o.css("display", "inline");
            for (var c = !0, p = [], u = 0, v = s.length; u < v; u++) {
                var h = s[u];
                if (null == i[h] || i[h] == undefined) {
                    c = !1;
                    break
                }
                p[u] = i[h]
            }
            return "function" == e.type(a) && c && (d = a(d, p, 1)), t.val(d), t
        },
        disable: function(e) {
            var t = (e = e || this).textbox("getContainer"),
                i = t.find("input.password-text");
            return t.addClass("disabled"), i.prop("disabled", !0), e
        },
        enable: function(e) {
            var t = (e = e || this).textbox("getContainer"),
                i = t.find("input.password-text");
            return t.removeClass("disabled"), i.prop("disabled", !1), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("status", {
        defaults: {
            proxy: null,
            fieldLabel: null,
            interval: 500,
            loadingText: e.su.CHAR.OPERATION.CONNECTING,
            loadedText: e.su.CHAR.OPERATION.CONNECTED,
            loadedFailedText: e.su.CHAR.OPERATION.CONNECTFAILED,
            unloadingText: e.su.CHAR.OPERATION.DISCONNECTING,
            unloadedText: e.su.CHAR.OPERATION.DISCONNECTED,
            unloadedFailedText: e.su.CHAR.OPERATION.DISCONNECTFAILED,
            showText: !0
        },
        create: function(t, i) {
            return this.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                var r = '<div class="container widget-container status-container ' + s.cls + '">';
                null !== s.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', r += '<label class="widget-fieldlabel status-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (r += '<span class="widget-separator">' + s.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap status-wrap">', r += '<span class="icon"></span>';
                r += '<span class="text ' + (s.textCls || "") + '"></span>', r += "</div>";
                var l = e(r += "</div>");
                n.replaceWith(l), l.append(n.addClass("hidden")), s.showText || l.find("span.text").css("display", "none");
                var o = s.proxy;
                o && !o.isProxy && (s.proxy = new e.su.Proxy(o))
            }), this.status("setNormal"), this
        },
        sync: function(e, t) {
            var i = (e = e || this).get(0).proxy,
                a = t[1] || {},
                s = t[2] || null,
                n = t[3] || null;
            return i && i.isProxy ? (i.write(a, function(t, i, a) {
                s && s.call(e, t, i, a)
            }, function(t, i, a) {
                n && n.call(e, i, a)
            }), e) : e
        },
        connect: function(t, i) {
            var a = (t = t || this).get(0),
                s = i[1] || {},
                n = i[2] || null,
                r = i[3] || null;
            s = e.extend({
                operation: "connect"
            }, s);
            return t.status("setLoading", a.loadingText), t.status("sync", s, function(e, i, s) {
                t.status("setSuccess", a.loadedText), n && n.call(t, e, i, s)
            }, function(e, i) {
                loadedFailedTextArray,
                t.status("setFailed", a.loadedFailedText),
                r && r.call(t, e, i)
            }), t
        },
        disconnect: function(t, i) {
            var a = (t = t || this).get(0),
                s = i[1] || {},
                n = i[2] || null,
                r = i[3] || null;
            s = e.extend({
                operation: "disconnect"
            }, s);
            return t.status("setLoading", a.unloadingText), t.status("sync", s, function(e, i, s) {
                t.status("setSuccess", a.unloadedText), n && n.call(t, e, i, s)
            }, function(e, i) {
                t.status("setFailed", a.unloadedFailedText), r && r.call(t, e, i)
            }), t
        },
        refresh: function(t, i) {
            (t = t || this).get(0);
            var a = i[1] || {},
                s = i[2] || null,
                n = i[3] || null;
            return a = e.extend({
                operation: "refresh"
            }, a), t.status("sync", a, function(e, i, a) {
                s && s.call(t, e, i, a)
            }, function(e, i) {
                n && n.call(t, e, i)
            }), t
        },
        reset: function(e) {
            var t = (e = e || this).closest("div.status-container");
            return t.find("div.status-wrap span.text").empty(), t.removeClass("loading failed success normal"), e
        },
        setNormal: function(e, t) {
            var i = (e = e || this).closest("div.status-container");
            t = t[1] || "";
            return e.status("reset"), i.addClass("normal"), e.status("setText", t), e
        },
        setSuccess: function(e, t) {
            var i = (e = e || this).closest("div.status-container");
            t = t[1] || "";
            return e.status("reset"), i.addClass("success"), e.status("setText", t), e
        },
        setFailed: function(e, t) {
            var i = (e = e || this).closest("div.status-container");
            t = t[1] || "";
            return e.status("reset"), i.addClass("failed"), e.status("setText", t), e
        },
        setLoading: function(e, t) {
            var i = (e = e || this).closest("div.status-container");
            t = t[1] || "";
            return e.status("reset"), i.addClass("loading"), e.status("setText", t), e
        },
        setText: function(e, t) {
            var i = (e = e || this).closest("div.status-container").find("div.status-wrap span.text");
            t = t[1] || "";
            return i.empty().html(t), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("slider", {
        defaults: {
            showPercentage: !0,
            _width: 206,
            increment: 5,
            minValue: 0,
            maxValue: 100,
            range: null,
            unit: "%",
            value: 50
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                if (i.width && (i._width = i.width, delete i.width), !(s.maxValue <= s.minValue)) {
                    e.extend(s, t, i), s.range || (s.range = [s.minValue, s.maxValue]);
                    var r = i.value || n.val() || t.value,
                        l = '<div class="container widget-container slider-container ' + s.cls + '">';
                    null !== s.fieldLabel && (l += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', l += '<label class="widget-fieldlabel slider-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (l += '<span class="widget-separator">' + s.separator + "</span>"), l += "</div>"), l += '<div class="widget-wrap-outer slider-wrap-outer">', l += '<div class="widget-wrap slider-wrap">', l += '<div class="widget-wrap slider-content">', l += '<div class="widget-value slider-value">', l += '<div class="widget-value-inner slider-value-inner">', l += "</div>", l += "</div>", l += "</div>", s.showPercentage && (l += '<div class="slider-text">', l += '<span class="slider-percentage">' + r + s.unit + "</span>", l += "</div>"), l += "</div>", l += "</div>";
                    var o = e(l += "</div>");
                    n.replaceWith(o), o.prepend(n.addClass("hidden")), o.find("div.slider-content").css({
                        width: s._width
                    })
                }
            });
            var s = a.closest("div.slider-container"),
                n = function(t) {
                    e("html").off("mousemove", r), e("html").off("mouseup", n)
                },
                r = function(e) {
                    e.preventDefault();
                    var t = s.find("div.slider-value"),
                        i = a.get(0),
                        n = parseInt(i.maxValue, 10),
                        r = (parseInt(i.minValue, 10), parseInt(i._width, 10)),
                        l = parseInt(i.increment, 10),
                        o = (e.pageX || e.screenX) - t.offset().left,
                        d = Math.round(o / r * n),
                        c = Math.round(d / l) * l;
                    a.slider("setValue", c)
                };
            return s.delegate("div.slider-value-inner", "mousedown", function(t) {
                e("html").on("mousemove", r), e("html").on("mouseup", n)
            }).delegate("div.slider-value-inner", "mouseup", n), a
        },
        getValue: function(e) {
            return (e = e || this).val()
        },
        setValue: function(e, t) {
            var i = (e = e || this).closest("div.slider-container"),
                a = i.find("div.slider-value"),
                s = e.get(0),
                n = e.val(),
                r = (t = t[1], parseInt(s.maxValue, 10)),
                l = (parseInt(s.minValue, 10), parseInt(s.range[1], 10)),
                o = parseInt(s.range[0], 10);
            t > l ? t = l : t < o && (t = o);
            var d = parseInt(s._width, 10),
                c = Math.round(d / r * t);
            return a.css({
                width: c
            }), i.find("span.slider-percentage").html(t + s.unit), e.val(t), n.toString() !== t.toString() && e.trigger("ev_change", [n, t]), e
        },
        reset: function(e) {
            var t = (e = e || this).get(0),
                i = parseInt(t.minValue, 10),
                a = parseInt(t.defaultValue, 10) || i;
            return e.slider("setValue", a), e
        },
        setRange: function(e, t) {
            var i = (e = e || this).get(0),
                a = (t = t[1], parseInt(i.maxValue, 10)),
                s = parseInt(i.minValue, 10);
            if (t[0] < s && (t[0] = s), t[1] > a && (t[1] = a), !(t[0] > t[1])) return i.range = t, e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("switchbutton", {
        defaults: {
            handler: null,
            onHandler: null,
            onCallback: null,
            onValue: "on",
            offValue: "off",
            onText: e.su.CHAR.OPERATION.ON,
            offText: e.su.CHAR.OPERATION.OFF,
            offHandler: null,
            offCallback: null,
            cls: "",
            proxy: null,
            field: null,
            autoLoad: !0
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i), s.proxy && !s.proxy.isProxy && (s.proxy = new e.su.Proxy(s.proxy));
                var r = '<div class="container widget-container switch-button-container off ' + s.cls + '">';
                null !== s.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', r += '<label class="widget-fieldlabel switch-button-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (r += '<span class="widget-separator">' + s.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap-outer switch-button-wrap-outer">', r += '<a class="switch-button-btn off" href="javascript:void(0);">', r += '<span class="switch-button-btn-wrap">', r += '<span class="switch-button-text-wrap">', r += '<span class="switch-button-text on">' + s.onText + "</span>", r += '<span class="switch-button-text off">' + s.offText + "</span>", r += "</span>", r += '<span class="switch-button-btn-slider"></span>', r += "</span>", r += "</a>", r += '<div class="loading-wrap">', r += '<div class="loading-wrap-outer">', r += '<span class="loading"></span>', r += "</div>", r += "</div>", null != this.tips && this.tips != undefined && (r += '<div class="widget-tips switch-button-tips ' + s.tipsCls + '">', r += '<div class="content tips-content"></div>', r += "</div>"), r += '<div class="widget-error-tips switch-button-error-tips ' + s.errorTipsCls + '">', r += '<span class="widget-error-tips-delta"></span>', r += '<div class="widget-error-tips-wrap">', r += '<div class="content error-tips-content"></div>', r += "</div>", r += "</div>", r += "</div>";
                var l = e(r += "</div>");
                n.replaceWith(l), l.prepend(n.addClass("hidden"))
            });
            a.closest("div.switch-button-container").delegate("a.switch-button-btn", "click", function(t) {
                var i = e(this),
                    s = a.get(0);
                if (!i.hasClass("disabled")) {
                    var n = s.defaultValue;
                    n = i.hasClass("on") ? s.offValue : s.onValue, a.switchbutton("startWaiting");
                    var r = s.proxy;
                    if (r && r.isProxy) {
                        var l = {};
                        l[a.attr("name")] = n, r.write(l, function() {
                            a.switchbutton("stopWaiting")
                        }, function() {
                            a.switchbutton("stopWaiting")
                        }, function() {
                            a.switchbutton("stopWaiting")
                        })
                    } else a.switchbutton("setValue", n), a.switchbutton("stopWaiting");
                    a.trigger("ev_click")
                }
            });
            var s = a.get(0),
                n = s.value || s.defaultValue;
            n && a.switchbutton("setValue", n);
            var r = s.proxy,
                l = s.field;
            if (r && r.isProxy) {
                if (!l) return !1;
                (r = e(r)).on("ev_read", function(e, t, i, s) {
                    a.switchbutton("loadData", t)
                }).on("ev_write", function(e, t, i, s) {
                    a.switchbutton("loadData", t)
                }), s.autoLoad && s.proxy.read()
            }
            return a
        },
        loadData: function(e, t) {
            var i = (e = e || this).get(0),
                a = i.field,
                s = (t = t[1], a.name),
                n = t[a.mapping || s];
            e.switchbutton("setValue", n);
            var r = i.onValue,
                l = i.onCallback,
                o = i.offCallback;
            return r == n ? l && l.call(e, n) : o && o.call(e, n), e.trigger("ev_loadData", [t, n]), e
        },
        getValue: function(e) {
            var t = (e = e || this).get(0);
            return e.closest("div.switch-button-container").find("a.switch-button-btn").hasClass("on") ? t.onValue : t.offValue
        },
        setValue: function(e, t) {
            var i = (e = e || this).get(0),
                a = (t = t[1] || i.offValue, ""),
                s = "";
            a = e.val();
            var n = i.onValue,
                r = i.offValue,
                l = e.closest("div.switch-button-container"),
                o = l.find("a.switch-button-btn"),
                d = o.find("span.switch-button-btn-slider");
            return n == t ? (s = n, d.css({
                right: 0,
                left: "inherit"
            }), o.addClass("on"), l.addClass("on"), o.removeClass("off"), l.removeClass("off"), i.handler && i.handler.call(e, t), i.onHandler && i.onHandler.call(e, t)) : (s = r, d.css({
                right: "inherit",
                left: 0
            }), o.removeClass("on"), l.removeClass("on"), o.addClass("off"), l.addClass("off"), i.handler && i.handler.call(e, t), i.offHandler && i.offHandler.call(e, t)), e.val(t), a != s && e.trigger("ev_change", [a, s]), e
        },
        disable: function(e) {
            var t = (e = e || this).closest("div.switch-button-container"),
                i = t.find("a.switch-button-btn");
            return t.addClass("disabled"), i.addClass("disabled"), e
        },
        enable: function(e) {
            var t = (e = e || this).closest("div.switch-button-container"),
                i = t.find("a.switch-button-btn");
            return t.removeClass("disabled"), i.removeClass("disabled"), e
        },
        startWaiting: function(e) {
            var t = (e = e || this).closest("div.switch-button-container");
            return t.find("a.switch-button-btn").addClass("disabled"), t.find("div.loading-wrap-outer").fadeIn(50), e
        },
        stopWaiting: function(e) {
            var t = (e = e || this).closest("div.switch-button-container"),
                i = t.find("a.switch-button-btn");
            return t.find("div.loading-wrap-outer").fadeOut(50, function() {
                i.removeClass("disabled")
            }), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("timeset", {
        defaults: {
            fieldLabel: "",
            cls: "",
            hour12: !0,
            tips: "",
            hourExchange: function(e) {
                return 0 == e ? [12, "AM"] : 12 == e ? [12, "PM"] : e <= 11 ? [e, "AM"] : [e % 12, "PM"]
            }
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                var r = '<div class="container widget-container text-container timeset-container ' + this.cls + '">';
                null !== this.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', r += '<label class="widget-fieldlabel text-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (r += '<span class="widget-separator">' + this.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap-outer text-wrap-outer timeset-wrap-outer">', r += '<div class="timeset-mask hidden"></div>', r += '<div class="widget-wrap text-wrap timeset-wrap">', r += '<span class="text-wrap-before"></span>', r += '<span class="text-wrap timeset-wrap">', r += '<input type="text" class="text-text timeset-text timeset-text-hour" maxLength="2" />', r += "<span>:</span>", r += '<input type="text" class="text-text timeset-text timeset-text-minute" maxLength="2" />', r += '<input class="text-text timeset-text hour12 ' + (this.hour12 ? "inline-block" : "hidden") + '" />', r += '<div class="arrow-wrap">', r += '<span class="arrow arrow-up"></span>', r += '<span class="arrow arrow-down"></span>', r += "</div>", r += "</span>", r += '<span class="text-wrap-after"></span>', r += "</div>", null != this.tips && this.tips != undefined && (r += '<div class="widget-tips textbox-tips ' + this.tipsCls + '">', r += '<div class="content tips-content">' + this.tips + "</div>", r += "</div>"), r += "</div>", r += '<div class="widget-error-tips textbox-error-tips ' + this.errorTipsCls + '">', r += '<span class="widget-error-tips-delta"></span>', r += '<div class="widget-error-tips-wrap">', r += '<div class="content error-tips-content"></div>', r += "</div>", r += "</div>";
                var l = e(r += "</div>");
                n.replaceWith(l), l.find("span.timeset-wrap").append(n.addClass("hidden"))
            });
            var s = a.closest("div.timeset-container"),
                n = s.find("input.timeset-text-hour"),
                r = s.find("input.timeset-text-minute"),
                l = s.find("input.hour12"),
                o = 0,
                d = !1,
                c = !1;
            return s.delegate("div.widget-wrap", "focus", function(e) {
                s.find("div.widget-wrap").addClass("focus")
            }).delegate("div.widget-wrap", "blur", function(e) {
                s.find("div.widget-wrap").removeClass("focus")
            }).delegate("input.timeset-text-hour", "click", function(e) {
                o = 0
            }).delegate("input.timeset-text-hour", "blur", function(e) {
                "" == n.val() && n.val(a.val().split(a.get(0).separator)[0]);
                var t = 0;
                (t = parseInt(n.val())) >= 0 && t <= 9 && (t = "0" + t), a.get(0).hour12 && 0 == t && (t = 12), n.val(t), a.val(n.val() + ":" + r.val()), a.trigger("ev_change")
            }).delegate("input.timeset-text-hour", "keydown", function(e) {
                if (e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105 || 8 == e.keyCode || 46 == e.keyCode) {
                    d && (n.val(""), d = !1);
                    var t = n.val();
                    8 == e.keyCode || 46 == e.keyCode || t.length >= 2 || (t += e.key, t = parseInt(t), a.get(0).hour12 && (t > 12 || 0 == t) ? e.preventDefault() : t >= 24 ? e.preventDefault() : (a.val(t + ":" + r.val()), a.trigger("ev_change")))
                } else e.preventDefault()
            }).delegate("input.timeset-text-minute", "click", function(e) {
                o = 1
            }).delegate("input.timeset-text-minute", "blur", function(e) {
                "" == r.val() && r.val(a.val().split(a.get(0).separator)[1]);
                var t = 0;
                (t = parseInt(r.val())) >= 0 && t <= 9 && (t = "0" + t), r.val(t), a.val(n.val() + ":" + r.val()), a.trigger("ev_change")
            }).delegate("input.timeset-text-minute", "keydown", function(e) {
                if (e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105 || 8 == e.keyCode || 46 == e.keyCode) {
                    c && (r.val(""), c = !1);
                    var t = r.val();
                    8 == e.keyCode || 46 == e.keyCode || t.length >= 2 || (t += e.key, (t = parseInt(t)) >= 60 ? e.preventDefault() : (a.val(n.val() + ":" + t), a.trigger("ev_change")))
                } else e.preventDefault()
            }).delegate("input.hour12", "click", function(e) {
                o = 2
            }).delegate("input.hour12", "keydown", function(e) {
                e.preventDefault(), 80 == e.keyCode || 112 == e.keyCode ? (l.val("PM"), a.trigger("ev_change")) : 65 != e.keyCode && 97 != e.keyCode || (l.val("AM"), a.trigger("ev_change"))
            }).delegate("span.arrow-up", "click", function(e) {
                if (!s.hasClass("disabled")) {
                    var t = 0,
                        i = 0;
                    0 == o ? (t = parseInt(n.val()), t++, a.get(0).hour12 && t > 12 && (t = 1), !a.get(0).hour12 && t >= 24 && (t = 0), t >= 0 && t <= 9 && (t = "0" + t), n.val(t), n.select(), d = !0, a.val(n.val() + ":" + r.val())) : 1 == o ? (i = parseInt(r.val()), ++i >= 60 && (i = 0), i >= 0 && i <= 9 && (i = "0" + i), r.val(i), r.select(), c = !0, a.val(n.val() + ":" + r.val())) : 2 == o && ("AM" == l.val() ? l.val("PM") : l.val("AM"), l.select()), a.trigger("ev_change")
                }
            }).delegate("span.arrow-down", "click", function(e) {
                if (!s.hasClass("disabled")) {
                    var t = 0,
                        i = 0;
                    0 == o ? (t = parseInt(n.val()), --t <= 0 && (t = a.get(0).hour12 ? 12 : 23), t >= 0 && t <= 9 && (t = "0" + t), n.val(t), n.select(), d = !0, a.val(n.val() + ":" + r.val())) : 1 == o ? (i = parseInt(r.val()), --i <= 0 && (i = 59), i >= 0 && i <= 9 && (i = "0" + i), r.val(i), r.select(), c = !0, a.val(n.val() + ":" + r.val())) : 2 == o && ("AM" == l.val() ? l.val("PM") : l.val("AM"), l.select()), a.trigger("ev_change")
                }
            }), a
        },
        setValue: function(e, t) {
            var i = (e = e || this).closest("div.timeset-container"),
                a = e.get(0),
                s = a.separator,
                n = t[1];
            e.val(n);
            var r = n.split(s);
            a.hour12 ? (i.find("input.timeset-text-hour").val(a.hourExchange(r[0])[0] < 10 ? "0" + 1 * a.hourExchange(r[0])[0] : a.hourExchange(r[0])[0]), i.find("input.hour12").val(a.hourExchange(r[0])[1])) : i.find("input.timeset-text-hour").val(r[0]), i.find("input.timeset-text-minute").val(r[1])
        },
        getValue: function(e) {
            var t, i = (e = e || this).closest("div.timeset-container"),
                a = e.get(0),
                s = (a.separator, i.find("input.timeset-text-minute").val());
            return a.hour12 && (t = "AM" == i.find("input.hour12").val() ? 12 == i.find("input.timeset-text-hour").val() ? "00" : i.find("input.timeset-text-hour").val() : 12 == i.find("input.timeset-text-hour").val() ? 12 : 1 * i.find("input.timeset-text-hour").val() + 12, e.val(t + ":" + s)), e.val()
        },
        enable: function(e) {
            var t = (e = e || this).closest("div.timeset-container");
            return t.removeClass("disabled"), t.find("div.timeset-mask").addClass("hidden"), e.prop("disabled", !1), e
        },
        disable: function(e) {
            var t = (e = e || this).closest("div.timeset-container");
            return t.addClass("disabled"), t.find("div.timeset-mask").removeClass("hidden"), e.prop("disabled", !0), e
        },
        setTips: function(t, i) {
            var a = (t = t || this).closest("div.timeset-container").find("div.widget-tips div.tips-content"),
                s = i[1] || "";
            return t.get(0) && (t.get(0).tips = s), "string" === e.type(s) && a.html(s), t
        },
        showTips: function() {
            var e = e || this,
                t = e.closest("div.timeset-container").find("div.widget-tips div.tips-content");
            t.show(), t.fadeIn(150)
        },
        hideTips: function() {
            var e = e || this,
                t = e.closest("div.timeset-container").find("div.widget-tips div.tips-content");
            t.hide(), t.css("display", "none")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("buttongroup", {
        defaults: {
            btnsType: "on/off",
            handler: null,
            onHandler: null,
            onCallback: null,
            onValue: "on",
            offValue: "off",
            lowValue: "low",
            middleValue: "middle",
            highValue: "high",
            offHandler: null,
            offCallback: null,
            lowHandler: null,
            middleHandler: null,
            highHandler: null,
            items: null,
            url: null,
            cls: "",
            value: "",
            proxy: null,
            field: null,
            autoLoad: !0
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                var r = "";
                "on/off" == s.btnsType && null == s.items && (r = "on-off-container"), s.proxy && !s.proxy.isProxy && (s.proxy = new e.su.Proxy(s.proxy));
                var l = '<div class="container widget-container button-group-container ' + s.cls + " " + r + '">';
                null !== this.fieldLabel && (l += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', l += '<label class="widget-fieldlabel button-group-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (l += '<span class="widget-separator">' + this.separator + "</span>"), l += "</div>"), l += '<div class="widget-wrap-outer button-group-wrap-outer">', l += '<div class="widget-wrap button-group-wrap">', l += '<ul class="button-group-container"></ul>', l += "</div>", null != this.tips && this.tips != undefined && (l += '<div class="widget-tips textbox-tips ' + s.tipsCls + '">', l += '<div class="content tips-content"></div>', l += "</div>"), l += '<div class="widget-error-tips textbox-error-tips ' + s.errorTipsCls + '">', l += '<span class="widget-error-tips-delta"></span>', l += '<div class="widget-error-tips-wrap">', l += '<div class="content error-tips-content"></div>', l += "</div>", l += "</div>", l += "</div>";
                var o = e(l += "</div>");
                if (n.replaceWith(o), o.append(n.addClass("hidden button-group-value")), null == s.items) switch (s.btnsType) {
                    case "on/off":
                        s.items = [{
                            text: e.su.CHAR.OPERATION.ON,
                            handler: s.onHandler,
                            value: s.onValue,
                            callback: s.onCallback
                        }, {
                            text: e.su.CHAR.OPERATION.OFF,
                            handler: s.offHandler,
                            value: s.offValue,
                            callback: s.offCallback
                        }];
                        break;
                    case "low/middle/high":
                        s.items = [{
                            text: e.su.CHAR.OPERATION.LOW,
                            handler: s.lowHandler,
                            value: s.lowValue,
                            callback: s.lowCallback
                        }, {
                            text: e.su.CHAR.OPERATION.MIDDLE,
                            handler: s.middleHandler,
                            value: s.middleValue,
                            callback: s.middleCallback
                        }, {
                            text: e.su.CHAR.OPERATION.HIGH,
                            handler: s.highHandler,
                            value: s.highValue,
                            callback: s.highCallback
                        }];
                        break;
                    default:
                        return !1
                }
                for (var d = s.items, c = o.find("ul.button-group-container"), p = 0; p < d.length; p++) {
                    var u = d[p],
                        v = 0 === p ? "fst" : p === d.length - 1 ? "lst" : "";
                    l = "<li>";
                    l += '<button type="button" value="' + (u.value === undefined || null === u.value ? "" : u.value) + '" class="button-group-button ' + v + " " + (u.cls || "s") + '" item-index="' + p + '">', l += '<span class="button-text">' + u.text + "</span>", l += "</button>", l += "</li>", c.append(e(l))
                }
            });
            a.closest("div.button-group-container").delegate("button.button-group-button", "click", function(t) {
                var i = e(this),
                    s = i.val() || i.attr("value"),
                    n = i.closest("ul.button-group-container"),
                    r = a.get(0),
                    l = r.items[i.attr("item-index")];
                if (l)
                    if (n.find("button").removeClass("selected"), n.find("li").removeClass("selected"), i.addClass("selected"), i.closest("li").addClass("selected"), r.proxy && r.proxy.isProxy) {
                        var o = {},
                            d = a.attr("name"),
                            c = l.value;
                        o[d] = c, r.proxy.write(o, function() {
                            l.callback && l.callback.call(a, s)
                        })
                    } else a.buttongroup("setValue", l.value)
            });
            var s = a.get(0),
                n = s.value,
                r = s.proxy,
                l = s.field;
            if (n !== undefined && null !== n && a.buttongroup("setValue", n), r && r.isProxy) {
                if (!l) return !1;
                (r = e(r)).on("ev_read", function(e, t, i, s) {
                    a.buttongroup("loadData", t)
                }), r.on("ev_write", function(e, t, i, s) {
                    a.buttongroup("loadData", t)
                }), s.autoLoad && s.proxy.read()
            }
            return a.buttongroup("setTips", i.tips), a
        },
        loadData: function(e, t) {
            var i = (e = e || this).get(0).field,
                a = (t = t[1] || [], i.name),
                s = t[i.mapping || a];
            return e.buttongroup("setValue", s), e.trigger("ev_loadData", [t, s]), e
        },
        setValue: function(t, i) {
            var a = (t = t || this).closest("div.button-group-container"),
                s = a.find("input.button-group-value"),
                n = (i = null === i[1] || i[1] === undefined ? "" : i[1], t.get(0).items),
                r = a.find("button.button-group-button");
            return r.removeClass("selected").closest("li").removeClass("selected"), r.each(function(a, s) {
                var r = e(s),
                    l = s.value || r.attr(i) || r.val(),
                    o = n[a];
                if (i == l) return o.handler && o.handler.call(t, i), s.handler && s.handler.call(t, i), r.addClass("selected").closest("li").addClass("selected"), !1
            }), s.val(i), t
        },
        getValue: function(e) {
            return (e = e || this).closest("div.button-group-container").find("input.button-group-value").val()
        },
        getProxy: function(e) {
            var t = (e = e || this).get(0);
            return t && t.proxy && t.proxy.isProxy ? t.proxy : undefined
        },
        disable: function(e) {
            e = e || this;
            return container = e.closest("div.button-group-container"), buttons = container.find("button.button-group-button"), buttons.prop("disabled", !0), container.addClass("disabled"), e
        },
        enable: function(e) {
            e = e || this;
            return container = e.closest("div.button-group-container"), buttons = container.find("button.button-group-button"), buttons.prop("disabled", !1), container.removeClass("disabled"), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("number", {
        defaults: {
            fieldLabel: "",
            tips: "",
            cls: "",
            isdisabled: !1,
            isvalid: !1,
            maxValue: null,
            minValue: null,
            validator: null,
            invalidText: e.su.CHAR.INVALIDTEXT,
            allowBlank: !0,
            blankText: e.su.CHAR.BLANKTEXT,
            isNumber: !0
        },
        create: function(t, i) {
            this.each(function(a, s) {
                var n = e(this);
                if (!n.is("input")) return null;
                var r = i.id || this.id || "textbox-" + parseInt(1e3 * Math.random() * 1e3 * 1e3, 10).toString(),
                    l = i.value || this.value || t.value,
                    o = i.name || this.name || t.name;
                e.extend(this, t, i), e(this).attr({
                    value: l,
                    id: r,
                    name: o
                }).val(l).addClass("number-text"), this._maxLength && e(this).attr("maxlength", this._maxLength);
                var d = '<div class="container widget-container text-container number-container ' + this.cls + '">';
                null !== this.fieldLabel && (d += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', d += '<label class="widget-fieldlabel number-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (d += '<span class="widget-separator">' + this.separator + "</span>"), d += "</div>"), d += '<span class="widget-wrap text-wrap number-wrap">', d += '<button class="widget-switch number-switch number-switch-up" title="Increase" type="button"></button>', d += '<button class="widget-switch number-switch number-switch-down" title="Decrease" type="button"></button>', d += "</span>", d += '<div class="widget-tips number-tips ' + s.tipsCls + '">', d += '<div class="content tips-content"></div>', d += "</div>";
                var c = e(d += "</div>");
                n.replaceWith(c), c.find("span.number-wrap").prepend(n.remove().addClass("text-text number-text"))
            });
            var a = this.parents("div.number-container"),
                s = 0;
            return a.delegate(".number-switch-up", "mousedown", function(t) {
                var i = e(this).parent("span.number-wrap").find("input.number-text");
                s = setInterval(function() {
                    var t = i.val();
                    e.su.vtype.types.number.regex.test(t) && (t++, i.val(t))
                }, 60)
            }).delegate(".number-switch-up", "mouseup mouseleave mouseout", function(e) {
                clearTimeout(s)
            }), a.delegate(".number-switch-down", "mousedown", function(t) {
                var i = e(this).parent("span.number-wrap").find("input.number-text");
                s = setInterval(function() {
                    var t = i.val();
                    e.su.vtype.types.number.regex.test(t) && (t -= 1, i.val(t))
                }, 60)
            }).delegate(".number-switch-down", "mouseup mouseleave mouseout", function(e) {
                clearTimeout(s)
            }), a.delegate("input.number-text", "keydown", e.su.vtype.types.number.keybordHandler), this.number("setTips", i.tips), this
        },
        validate: function(e) {}
    })
}(jQuery),
function(e) {
    var t = e.su.CHAR.REGION;
    e.su.Widget("region", {
        defaults: {
            noneSelectedText: e.su.CHAR.NOSELECTEDTEXT,
            tabs: [{
                title: "ABCD",
                classify: "ABCD"
            }, {
                title: "EFGHI",
                classify: "EFGHI"
            }, {
                title: "JKMN",
                classify: "JKMN"
            }],
            items: [{
                text: t.ALBANIA,
                value: "alb",
                search: "albania",
                classify: "ABCD",
                capital: "A"
            }, {
                text: t.ALGERIA,
                value: "alg",
                search: "algeria",
                classify: "ABCD",
                capital: "A"
            }, {
                text: t.ARGENTINA,
                value: "arg",
                search: "Argentina",
                classify: "ABCD",
                capital: "A"
            }, {
                text: t.ARMENIA,
                value: "arm",
                search: "Armenia",
                classify: "ABCD",
                capital: "A"
            }, {
                text: t.AUSTRALIA,
                value: "ausa",
                search: "Australia",
                classify: "ABCD",
                capital: "B"
            }]
        },
        create: function(t, i) {
            this.each(function(a, s) {
                var n = e(s);
                e.extend(s, t, i);
                s.tabs;
                var r = '<div class="container widget-container region-container ' + s.cls + '">';
                null !== s.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + s.labelCls + '">', r += '<label class="widget-fieldlabel region-fieldlabel">' + s.fieldLabel + "</label>", "" !== s.fieldLabel && (r += '<span class="widget-separator">' + s.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap region-wrap">', r += '<input class="region-text" type="text" value="' + s.noneSelectedText + '"/>', r += '<a class="region-switch" href="javascript:void(0);"></a>', r += '<div class="region-search-wrap">', r += '<ul class="region-search"></ul>', r += "</div>", r += '<div class="region-select-wrap">', r += '<div class="region-tabs-container">', r += '<ul class="region-tabs">', r += "</ul>", r += "</div>", r += '<div class="region-content-container">', r += "</div>", r += "</div>", r += "</div>";
                var l = e(r += "</div>");
                n.replaceWith(l), l.prepend(n.addClass("hidden region-value"))
            }), this.region("initSelection"), this.region("initSearch");
            var a = this.region("getContainer");
            return a.delegate("a.region-switch", "click", function(e) {
                e.stopPropagation();
                var t = a.find("div.region-search-wrap"),
                    i = a.find("div.region-select-wrap");
                t.fadeOut(100, function(e) {
                    i.slideDown(200)
                })
            }).delegate("div.region-select-wrap", "click", function(e) {
                e.stopPropagation()
            }).delegate("input.region-text", "keyup", function(e) {
                var t = a.find("div.region-search-wrap");
                a.find("div.region-select-wrap").fadeOut(100, function(e) {
                    t.slideDown(200)
                })
            }), this.region("setValue", this.get(0).value), this
        },
        initSearch: function(t) {
            for (var i = (t = t || this).get(0).items, a = t.region("getContainer").find("ul.region-search"), s = "", n = 0, r = i.length; n < r; n++) {
                var l = i[n];
                s += '<li class="region-search-btn" data-search="' + l.search + '">', s += '<a class="" href="javascript:void(0);">' + l.text + "</a>", s += "</li>"
            }
            return a.append(e(s)), t
        },
        initSelection: function(t) {
            for (var i = (t = t || this).get(0), a = i.tabs, s = i.items, n = t.region("getContainer"), r = n.find("ul.region-tabs"), l = n.find("div.region-content-container"), o = "", d = "", c = 0, p = a.length; c < p; c++) {
                var u = a[c];
                o += '<li class="region-tab">', o += '<a class="" href="javascript:void(0);">' + u.title + "</a>", o += "</li>", d += '<div class="region-content-wrap" data-classify="' + u.classify + '">', d += "</div>"
            }
            r.empty().append(e(o)), l.empty().append(e(d));
            var v = {};
            for (c = 0, p = s.length; c < p; c++) {
                v[(m = s[c]).classify] = v[m.classify] || [], v[m.classify].push(m)
            }
            for (var c in v) {
                var h = v[c];
                h.sort(function(e, t) {
                    return e.capital - t.capital
                });
                var f = "",
                    b = h[0].capital;
                f += "<div>", f += "<div>", f += "<span>" + b + "</span>", f += "</div>", f += "<div>", f += "<ul>";
                var g = 0;
                for (p = h.length; g < p; g++) {
                    var m;
                    b !== (m = h[g]).capital ? (f += "</ul>", f += "</div>", f += "</div>", f += "<div>", f += "<div>", f += "<span>" + (b = m.capital) + "</span>", f += "</div>", f += "<div>", f += "<ul>", f += '<li class="region-select">', f += '<a href="javascript:void(0);" data-value="' + m.value + '">' + m.text + "</a>", f += "</li>") : (f += '<li class="region-select">', f += '<a href="javascript:void(0);" data-value="' + m.value + '">' + m.text + "</a>", f += "</li>")
                }
                f += "</ul>", f += "</div>", f += "</div>", l.find("div.region-content-wrap[data-classify=" + c + "]").append(e(f))
            }
            return t
        },
        setValue: function(e, t) {
            e = e || this, t = t[1];
            return e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("tip", {
        defaults: {
            cls: "",
            icon: "",
            iconCls: "",
            _title: "",
            text: "",
            position: null,
            positionRelative: "mouse",
            showEvent: "mouseover",
            showDelay: 1e3,
            dismissDelay: 1e3,
            html: null,
            content: null
        },
        create: function(t, i) {
            var a = this;
            a.each(function(a, s) {
                this.tip = this.tip || {};
                var n = e.extend(this.tip, t, i);
                if (this.tip.global && !this.tip.id) return null;
                this.tip.id = this.tip.id || e.su.randomId("tip");
                var r = e(this),
                    l = '<div class="container widget-container tip-container ' + this.tip.cls + '" id="' + this.tip.id + '">';
                l += '<div class="tip-wrap">', l += '<span class="tip-delta"></span>', this.tip._title && (l += '<h4 class="tip-title">' + this.tip._title + "</h4>"), "click" === this.tip.showEvent && (l += '<a href="javascript:void(0);" class="tip-close">x</a>'), l += '<div class="tip-text">' + this.tip.text + "</div>", l += "</div>";
                var o = e(l += "</div>"),
                    d = o.find("div.tip-text");
                if (this.tip.content) {
                    var c = e(this.tip.content),
                        p = c.get(0);
                    p.isWidget ? d.append(c[p.xtype]("getContainer")) : d.append(c)
                } else this.tip.html && d.append(e(html));
                n.hostId = r.attr("id"), n.isTip = !0, this.tip = e.extend(o.get(0), n), e.su.tipManager.add(this.tip), n.t = 0
            });
            var s = a.get(0).tip;
            return "mouseover" === s.showEvent ? (a.bind("mouseover", function(e) {
                clearTimeout(this.tip.t), this.tip.showDelay && (this.tip.t = setTimeout(function() {
                    a.tip("show", e)
                }, this.tip.showDelay))
            }), a.bind("mouseout mouseleave", function(e) {
                clearTimeout(this.tip.t), this.tip.dismissDelay && (this.tip.t = setTimeout(function() {
                    a.tip("hide")
                }, this.tip.dismissDelay))
            })) : "click" === s.showEvent && (a.bind("click", function(t) {
                e(this).tip("show", t)
            }), e(s).delegate("a.tip-close", "click", function(e) {
                e.preventDefault(), a.tip("hide")
            })), a
        },
        show: function(t, i) {
            var a = (t = t || this).get(0).tip,
                s = e(a).tip("getContainer"),
                n = a.positionRelative,
                r = a.position || {
                    pageX: 0,
                    pageY: 0
                };
            switch (n) {
                case "mouse":
                    r = i[1];
                    break;
                case "body":
                    break;
                case "me":
                    if (t.is("div")) t.append(e(a).detach());
                    else {
                        var l = t.parent();
                        "absolute" != l.css("position") && l.css("position", "relative"), l.append(e(a).detach())
                    }
                    break;
                default:
                    e(n).length > 0 && e(n).append(e(a).detach())
            }
            return clearTimeout(a.t), s.css({
                left: r.pageX,
                top: r.pageY
            }).fadeIn(200, function() {
                e(this).css("display", "block")
            }), t.trigger("ev_show"), t
        },
        hide: function(t) {
            var i = (t = t || this).get(0).tip,
                a = e(i).tip("getContainer");
            return clearTimeout(i.t), a.fadeOut(200, function() {
                e(this).css("display", "none")
            }), t.trigger("ev_hide"), t
        },
        setText: function(t, i) {
            var a = (t = t || this).get(0);
            i = i[1];
            return e(a.tip).find("div.tip-text").html(i), t
        }
    })
}(jQuery),
function(e) {
    var t = {
        _canvasSupport: function() {
            var t = !0,
                i = e('<canvas width="0" height="0" style="display: none;"></canvas>').appendTo(e("body"));
            try {
                i[0].getContext("2d"), t = !0
            } catch (a) {
                t = !1
            }
            return i.remove(), t
        }(),
        _blobSupport: function() {
            var e = !1;
            try {
                new Blob, e = !0
            } catch (t) {
                e = !1
            }
            return e
        }(),
        _browserSupport: function() {
            var e = navigator.userAgent;
            return !/AppleWebKit.*Mobile.*/i.test(e) || !!(/chrome\/(\d|\.)+\s+(mobile\s+)?Safari\/(\d|\.)+$/i.test(e) || /firefox/i.test(e) || /YaBrowser/i.test(e) || /(OPR|opera)/i.test(e) || !/chrome/i.test(e) && /safari/i.test(e))
        }()
    };
    e.su.Widget("wifisharing", {
        create: function(i, a) {
            var s = this;
            return s.each(function(n, r) {
                var l = e(this);
                e.extend(r, i, a, t);
                l.attr("id") || e.su.randomId("wifisharing"), l.attr("class");
                l.addClass("hidden");
                var o = '<div class="container widget-container wifisharing-container ' + r.cls + '">';
                o += '<div class="widget-wrap-outer wifisharing-wrap-outer">', o += '<div class="widget-wrap wifisharing-wrap">', o += '<div class="wifisharing-sharing-btn-container">', o += '<a href="javascript:void(0);" class="wifisharing-sharing-btn">' + this.sharingText + "</a>", o += "</div>", o += '<div class="wifisharing-main-container">', o += '<div class="wifisharing-delta-container">', o += '<span class="icon-delta"></span>', o += "</div>", o += '<div class="wifisharing-main-wrap">', o += '<div class="wifisharing-content">', o += '<div class="wifisharing-qrcode-container">', o += '<div class="wifisharing-qrcode-wrap"></div>', this._blobSupport && this._browserSupport && (o += '<div class="wifisharing-checkbox-container wifisharing-qrcode-checkbox-container">', o += '<label class="wifisharing-checkbox-label">', o += '<span class="icon"></span>', o += "</label>", o += "</div>"), o += "</div>", o += '<div class="wifisharing-text-container">', o += '<div class="wifisharing-text-wrap">', o += '<div class="wifisharing-ssid-container">', o += '<p class="wifisharing-ssid-label">' + e.su.CHAR.WIFISHARING.SSID + ":</p>", o += '<p class="wifisharing-ssid-text"></p>', o += "</div>", o += '<div class="wifisharing-password-container">', o += '<div class="wifisharing-password-content">', o += '<p class="wifisharing-password-label">' + e.su.CHAR.WIFISHARING.PASSWORD + ":</p>", o += '<p class="wifisharing-password-text"></p>', o += "</div>", o += '<div class="wifisharing-no-password-content hidden">', o += '<p class="wifisharing-no-password-text">' + e.su.CHAR.WIFISHARING.NO_PASSWORD + "</p>", o += "</div>", o += "</div>", o += "</div>", this._blobSupport && this._browserSupport && (o += '<div class="wifisharing-checkbox-container wifisharing-text-checkbox-container">', o += '<label class="wifisharing-checkbox-label">', o += '<span class="icon"></span>', o += "</label>", o += "</div>"), o += "</div>", o += "</div>", this._blobSupport && this._browserSupport && (o += '<div class="wifisharing-save-btn-container">', o += '<a href="javascript:void(0);" class="wifisharing-save-btn">' + e.su.CHAR.WIFISHARING.SAVE_PICTURE + "</a>", o += "</div>"), o += "</div>", o += "</div>", o += "</div>";
                var d = e(o += "</div>");
                l.replaceWith(d), d.append(l), d.on("click", ".wifisharing-sharing-btn", function() {
                    e(s).wifisharing("showContent")
                }), d.on("click", ".wifisharing-qrcode-checkbox-container .wifisharing-checkbox-label", function() {
                    r.qrcodeEnable ? (e(this).removeClass("checked"), s.wifisharing("disableQrcode")) : (e(this).addClass("checked"), s.wifisharing("enableQrcode"))
                }), d.on("click", ".wifisharing-text-checkbox-container .wifisharing-checkbox-label", function() {
                    r.textEnable ? (e(this).removeClass("checked"), s.wifisharing("disableText")) : (e(this).addClass("checked"), s.wifisharing("enableText"))
                }), d.on("click", ".wifisharing-save-btn", function() {
                    (r.textEnable || r.qrcodeEnable) && s.wifisharing("saveImage")
                }), d.find(".wifisharing-checkbox-label").addClass("checked"), s.wifisharing("enableQrcode"), s.wifisharing("enableText")
            }), s
        },
        _getBlob: function(e, t) {
            return function(e, t, i) {
                t = t || "", i = i || 512;
                for (var a = atob(e), s = [], n = 0; n < a.length; n += i) {
                    for (var r = a.slice(n, n + i), l = new Array(r.length), o = 0; o < r.length; o++) l[o] = r.charCodeAt(o);
                    var d = new Uint8Array(l);
                    s.push(d)
                }
                return new Blob(s, {
                    type: t
                })
            }(function(e) {
                return e.substr(e.indexOf("base64,") + 7, e.length)
            }(t = t[1]), function(e) {
                return /data:([^;]*);/i.exec(e)[1]
            }(t))
        },
        generateQRCodeText: function(t, i) {
            var a = function(e) {
                return e.replace(/([\\\,\"\;\:])/g, "\\$1")
            };
            i = i[1];
            var s, n = "";
            switch ((i = e.extend({
                ssid: "",
                password: "",
                security: ""
            }, i)).security.toLowerCase()) {
                case "wpa":
                case "wpa2":
                case "psk":
                case "psk_sae":
                    s = "WPA";
                    break;
                case "wep":
                    s = "WEP";
                    break;
                default:
                    s = "nopass"
            }
            return n += "WIFI:S:", n += a(i.ssid) + ";", n += "T:", n += s + ";", n += "P:", n += a(i.password) + ";"
        },
        generateQRCode: function(t, i) {
            t = this;
            i = i[1];
            var a = t.get(0),
                s = e(t).wifisharing("generateQRCodeText", {
                    ssid: a.ssid,
                    password: a.password,
                    security: a.security
                });
            i = e.extend({
                width: 84,
                height: 84,
                render: a._canvasSupport ? "canvas" : "table",
                foreground: "#000000",
                text: function(e) {
                    var t, i, a, s;
                    for (t = "", a = e.length, i = 0; i < a; i++)(s = e.charCodeAt(i)) >= 1 && s <= 127 ? t += e.charAt(i) : s > 2047 ? (t += String.fromCharCode(224 | s >> 12 & 15), t += String.fromCharCode(128 | s >> 6 & 63), t += String.fromCharCode(128 | s >> 0 & 63)) : (t += String.fromCharCode(192 | s >> 6 & 31), t += String.fromCharCode(128 | s >> 0 & 63));
                    return t
                }(s)
            }, i), t.closest(".wifisharing-container").find(".wifisharing-qrcode-wrap").empty().qrcode(i)
        },
        setSsid: function(e, t) {
            e = e || this, (t = t[1]) !== undefined && null !== t || (t = "");
            e.get(0).ssid = t, e.closest(".wifisharing-container").find(".wifisharing-ssid-text").text(t)
        },
        setPassword: function(e, t) {
            e = e || this, (t = t[1]) !== undefined && null !== t || (t = "");
            e.get(0).password = t, 0 === t.length ? e.closest(".wifisharing-container").find(".wifisharing-no-password-content").removeClass("hidden").end().find(".wifisharing-password-content").addClass("hidden").find(".wifisharing-password-text").text(t) : e.closest(".wifisharing-container").find(".wifisharing-no-password-content").addClass("hidden").end().find(".wifisharing-password-content").removeClass("hidden").find(".wifisharing-password-text").text(t)
        },
        setSecurity: function(e, t) {
            e = e || this, t = t[1];
            e.get(0).security = t
        },
        setData: function(t, i) {
            t = t || this, i = i[1];
            var a = t.get(0);
            i = e.extend({
                ssid: a.ssid,
                password: a.password,
                security: a.security
            }, i), e(t).wifisharing("setSsid", i.ssid), e(t).wifisharing("setPassword", i.password), e(t).wifisharing("setSecurity", i.security), e(t).wifisharing("generateQRCode")
        },
        showContent: function() {
            var t = this,
                i = t.closest(".wifisharing-container").find(".wifisharing-main-container");
            t.closest(".wifisharing-container").find(".wifisharing-sharing-btn-container").hasClass("disabled") || i.filter(":animated").length > 0 || i.slideDown(300, function() {
                e("html").off(".wifisharing").on("click.wifisharing", "div", function(a) {
                    a.stopPropagation(), (0 === i.find(this).length || i.is(this)) && (e(t).wifisharing("hideContent"), e("html").off(".wifisharing"))
                });
                var a = e("div").not(i);
                a.off("scroll.wifisharing").on("scroll.wifisharing", function() {
                    e(t).wifisharing("hideContent"), a.off("scroll.wifisharing").off("scroll.wifisharing")
                })
            })
        },
        hideContent: function() {
            var e = this.closest(".wifisharing-container").find(".wifisharing-main-container");
            e.filter(":animated").length > 0 || e.slideUp(300)
        },
        show: function() {
            this.closest(".wifisharing-container").show()
        },
        hide: function() {
            this.closest(".wifisharing-container").hide()
        },
        enablePopup: function() {
            this.closest(".wifisharing-container").find(".wifisharing-sharing-btn-container").removeClass("disabled")
        },
        disablePopup: function() {
            this.closest(".wifisharing-container").find(".wifisharing-sharing-btn-container").addClass("disabled")
        },
        enableQrcode: function() {
            var e = this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-qrcode-container").removeClass("disabled"), e.qrcodeEnable = !0, this.wifisharing("generateQRCode", {
                foreground: "#000000"
            }), this.wifisharing("refreshStatus")
        },
        disableQrcode: function() {
            var e = this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-qrcode-container").addClass("disabled"), e.qrcodeEnable = !1, this.wifisharing("generateQRCode", {
                foreground: "#a7a9ac"
            }), this.wifisharing("refreshStatus")
        },
        enableText: function() {
            var e = this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-text-container").removeClass("disabled"), e.textEnable = !0, this.wifisharing("refreshStatus")
        },
        disableText: function() {
            var e = this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-text-container").addClass("disabled"), e.textEnable = !1, this.wifisharing("refreshStatus")
        },
        enableSaveBtn: function() {
            this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-save-btn-container").removeClass("disabled")
        },
        disableSaveBtn: function() {
            this.get(0);
            this.closest(".wifisharing-container").find(".wifisharing-save-btn-container").addClass("disabled")
        },
        refreshStatus: function() {
            var e = this.get(0);
            e.qrcodeEnable || e.textEnable ? this.wifisharing("enableSaveBtn") : this.wifisharing("disableSaveBtn")
        },
        saveImage: function() {
            var t, i = this,
                a = i.get(0),
                s = i.closest(".wifisharing-container");
            if (!a._canvasSupport || !a._blobSupport || !a._browserSupport) return !1;
            var n = function(e) {
                var t = e.clone(!1);
                return t.find("canvas")[0].getContext("2d").drawImage(e.find("canvas")[0], 0, 0), t.css({
                    position: "absolute",
                    bottom: 0,
                    opacity: 0
                }), t
            }(s).removeClass("popup").prependTo("body");
            if (n.find(".wifisharing-checkbox-container").remove(), a.qrcodeEnable && a.textEnable) t = n.find(".wifisharing-content");
            else if (a.qrcodeEnable && !a.textEnable) t = n.find(".wifisharing-qrcode-wrap");
            else {
                if (a.qrcodeEnable || !a.textEnable) return !1;
                t = n.find(".wifisharing-text-wrap")
            }
            t.css({
                "background-color": "#ffffff",
                border: "1px solid #cbcbcb",
                "border-radius": "5px",
                width: t.width(),
                height: t.height(),
                margin: "0 auto",
                padding: "18px",
                "box-sizing": "content-box",
                "text-align": t.css("text-align")
            });
            html2canvas(t[0], {
                letterRendering: !0,
                onrendered: function(a) {
                    var s = function(i, a) {
                            a = e.extend({
                                width: 300,
                                height: 300
                            }, a);
                            var s = document.createElement("canvas");
                            return s.width = a.width, s.height = Math.max(t.outerHeight(), a.height), s.getContext("2d").drawImage(i, (s.width - i.width) / 2, (s.height - i.height) / 2), s
                        }(a, {
                            width: 300,
                            height: 300
                        }).toDataURL("image/png"),
                        r = i.wifisharing("_getBlob", s);
                    n.remove(),
                        function(e, t) {
                            if (navigator.msSaveBlob) navigator.msSaveBlob(e, t);
                            else {
                                var i = document.createElement("a"),
                                    a = window.URL.createObjectURL(e);
                                i.href = a, i.download = t, document.body.appendChild(i), i.click(), setTimeout(function() {
                                    window.URL.revokeObjectURL(a), document.body.removeChild(i)
                                }, 100)
                            }
                        }(r, "qrcode.png")
                }
            })
        }
    })
}(jQuery);