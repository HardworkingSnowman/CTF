Gadgets information
============================================================
0x00000000004c6b60 : adc ah, bl ; cli ; call rsi
0x00000000004a3788 : adc ah, ch ; clc ; call qword ptr [rax]
0x00000000004298ff : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429969 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c405 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000046afaa : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000423f78 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042fee5 : adc al, 0x13 ; jmp rdx
0x000000000042e4d5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043ffda : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000409184 : adc al, 0x24 ; call 0x405c74
0x000000000049c0fa : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e9e8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000418e07 : adc al, 0x41 ; pop rsp ; ret
0x000000000043bce0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000043f638 : adc al, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004c5474 : adc al, 0x6f ; add byte ptr [rax], al ; js 0x4c5486 ; cli ; jmp rdx
0x000000000041ff7a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f786 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ad90 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004294be : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fee1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004217c7 : adc al, 0xa ; jmp r10
0x000000000042e643 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046afa8 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f568 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f5c8 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f628 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ae18 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004015c9 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422ca1 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c4da : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3cc5 : adc al, 0xf9 ; call rsp
0x00000000004a3b89 : adc al, 0xf9 ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3b85 : adc al, 0xf9 ; jmp qword ptr [rax]
0x00000000004c56e1 : adc al, 0xfa ; jmp rdx
0x0000000000476a92 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x0000000000491a1e : adc al, 9 ; ret 0xa074
0x00000000004bf85d : adc al, byte ptr [rax] ; add byte ptr [rax + 0x25], ah ; cmc ; jmp qword ptr [rsi]
0x0000000000429aa7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b11 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492f0e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004968df : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3780 : adc al, ch ; clc ; call qword ptr [rax]
0x000000000040d767 : adc al, ch ; push rbx ; ret
0x000000000046431f : adc al, ch ; retf
0x000000000047febe : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a3cd5 : adc bh, cl ; call rsp
0x00000000004a3b99 : adc bh, cl ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3b95 : adc bh, cl ; jmp qword ptr [rax]
0x0000000000426f65 : adc bl, ch ; call 0xffffffffc412f8ba
0x0000000000423a35 : adc bl, ch ; call 0xffffffffc43ac38a
0x0000000000479042 : adc bl, ch ; jno 0x479098 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483ae4 : adc bl, ch ; ret 0x8348
0x0000000000426954 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b616 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b687 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b5e7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b615 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004747c0 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413276 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044fcbd : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045081b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fcb6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004787bf : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046aaa9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa7d
0x0000000000416c7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000471804 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041836e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000440ab2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410833 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478c3c : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a55e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043b43a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000044fcb7 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004189c3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041d70d : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000418f55 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000419347 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d9c6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x00000000004787c0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412797 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048858a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004796de : adc byte ptr [rax + 1], cl ; ret
0x000000000046aa78 : adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046aa77 : adc byte ptr [rax + 1], r9b ; retf 0x8348
0x00000000004a3624 : adc byte ptr [rax + rdi*8 - 0x752cf01], ch ; call rax
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474b34 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x0000000000470d41 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000042c4d4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c4f1 ; jne 0x42c4c8 ; ret
0x000000000046b0c5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000047092c : adc byte ptr [rax - 0x73], cl ; push rsp ; retf 0xeb08
0x000000000046b0c4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440722 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447538 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447e9b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c8ea : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000046431c : adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x0000000000409977 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c77
0x0000000000409220 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c78
0x0000000000463c77 : adc byte ptr [rax - 0x77], cl ; jo 0x463c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046aaaa : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa7c
0x0000000000463c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e383 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416c7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485e0f : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a4b4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c9b9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048ac5d : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047d709 : adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000432bcf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438387 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004383c3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b3a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420e83 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fe5b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479c19 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041836f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x00000000004c3780 : adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000046d0dc : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x0000000000429552 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000422cf0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000422e90 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000042b068 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000042b35c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429cb1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e6ba : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004243f8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004364d8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048cb10 : adc byte ptr [rax], al ; jne 0x48cae1 ; jmp 0x48cae9
0x0000000000418d9a : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000045050c : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000478be5 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426a78 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c4d8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440597 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400c16 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049cffc : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041edbb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040ff23 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0b82 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413277 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000041fe9e : adc byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2aa9
0x0000000000416732 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a8e7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a901 ; ret
0x000000000043e36a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004071ae : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x000000000043ef9d : adc byte ptr [rbx], al ; add cl, ch ; retf 0xfffe
0x0000000000410834 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c764 : adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000479c1d : adc byte ptr [rcx + 0x39], cl ; retf
0x00000000004506b7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fca3 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462340 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049eea8 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d36c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418d47 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422d23 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004945c7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004c0930 : adc byte ptr [rcx - 0xb], ch ; call qword ptr [rdx]
0x00000000004bde68 : adc byte ptr [rcx - 3], bh ; push rax ; jp 0x4bde73 ; call rax
0x00000000004a3eec : adc byte ptr [rcx - 7], bh ; inc dword ptr [rax] ; jl 0x4a3ef3 ; call qword ptr [rax]
0x000000000043eae4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a33d8 : adc byte ptr [rcx], al ; clc ; jmp rax
0x0000000000416735 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420689 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043ebcf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a3e9c : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x000000000043bef3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000497a3b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049653f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000049773f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496e3f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049713f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496837 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ae4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004976e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004979e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004970e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496de4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000004967dc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049586d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049568d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496065 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f85 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e85 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044fcbe : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045081c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045023c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c7390 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x00000000004303d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004860ea : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004a3558 : adc byte ptr [rdx - 8], dl ; jmp qword ptr [rax]
0x0000000000492f0d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f33b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f1ea : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e7e5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ebe5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ebb9
0x000000000042ec63 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42ec37
0x000000000042f0f5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f0c9
0x000000000042f173 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f147
0x000000000042ebe0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ebbe
0x000000000042ec5e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ec3c
0x000000000042f0f0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f0ce
0x000000000042f16e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f14c
0x0000000000421915 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004273cb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004989ed : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491a4f : adc byte ptr [rsp - 4], al ; ret
0x0000000000491a95 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496ae7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3c25 : adc cl, bh ; call rdx
0x00000000004a3d65 : adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3da1 : adc cl, bh ; jmp qword ptr [rax]
0x00000000004a3ba9 : adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x00000000004528bf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000423a25 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004528c2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000047511a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b6dc : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479c11 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004269e0 : adc dh, bh ; ret
0x000000000041b391 : adc dh, dh ; ret 0xf0f
0x00000000004a3784 : adc dl, ch ; clc ; call qword ptr [rax]
0x00000000004a38b4 : adc dl, cl ; clc ; jmp qword ptr [rax - 0x35]
0x000000000048d203 : adc dword ptr [rax + 0x39], ecx ; retf 0x840f
0x0000000000479583 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411dd2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f715 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410825 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479c5c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f7ec : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417f4e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004166dc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000463375 : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004761ca : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b35b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429c47 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b25f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424278 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042143b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x0000000000435d57 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004359f2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004359b6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000469a3f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402f44 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x0000000000435eb9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043dfbc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043e0ef : adc dword ptr [rsi + 3], edx ; ret
0x000000000043e18c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043df8e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429c46 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3b81 : adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3cb9 : adc eax, 0x1554fff9 ; stc ; call rsp
0x000000000044f6f6 : adc eax, 0x27c33d ; je 0x44f708 ; ret
0x0000000000444377 : adc eax, 0x285c1c ; pop rbx ; ret
0x00000000004b98e4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x00000000004713ed : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000471329 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004297d1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000496539 : adc eax, 0x83490000 ; jmp 0x496559
0x000000000046e5f9 : adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004965e0 : adc eax, 0x894d0000 ; retf
0x000000000046685a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042b0be : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494da9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004240f8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041793f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417966
0x00000000004967df : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a549 : adc eax, eax ; ret
0x000000000047a686 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b9585 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046b0cc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000040118c : adc ecx, dword ptr [r10] ; mov eax, 2 ; syscall
0x000000000049bd42 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004422ff : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041574a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004474d1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044ca34 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452b81 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x000000000040118d : adc ecx, dword ptr [rdx] ; mov eax, 2 ; syscall
0x00000000004420db : adc ecx, eax ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3cdd : adc ecx, edi ; call rsp
0x00000000004a3b9d : adc ecx, edi ; jmp qword ptr [rax]
0x00000000004a3ccd : adc edi, ecx ; call rsp
0x00000000004a3b91 : adc edi, ecx ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3b8d : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004baa9e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049d03c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f577 : adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004969c2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435d56 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004359f1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004359b5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435eb8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043e0ee : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043e18b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043df8d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426953 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494f10 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004011fd : adc r9, qword ptr [r10] ; mov eax, 2 ; syscall
0x000000000047a685 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004269df : adc sil, r15b ; ret
0x00000000004be843 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 0x37], ch ; hlt ; call qword ptr [rdx]
0x00000000004c0843 : add ah, ah ; and al, byte ptr [rax] ; add al, ch ; cmc ; call qword ptr [rsi]
0x00000000004a37d8 : add ah, ah ; clc ; jmp rax
0x00000000004c6f43 : add ah, ah ; mov dword ptr [rax], eax ; add al, ch ; or bh, bl ; jmp rsi
0x00000000004c0223 : add ah, al ; sbb al, 0 ; add al, bl ; push rsp ; cmc ; call qword ptr [rcx]
0x00000000004bf85b : add ah, bh ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x25], ah ; cmc ; jmp qword ptr [rsi]
0x00000000004c4d5b : add ah, bh ; add byte ptr [eax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x000000000043e61e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e63e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e6cd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e5fd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7fa9 : add ah, bh ; jmp qword ptr [rax]
0x00000000004c6b5b : add ah, bh ; test dword ptr [rax], eax ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x00000000004c533b : add ah, bl ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004baac7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004bfbef : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bfcc8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043e0ea : add ah, byte ptr [rdx - 0xf] ; jl 0x43e13f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004bef4b : add ah, ch ; or dword ptr [rax], eax ; add byte ptr [rax], al ; sti ; hlt ; call qword ptr [rbx]
0x00000000004c0053 : add ah, dh ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000449b71 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449ba9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041c01b : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x0000000000471869 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042345d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bf7f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423481 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cd41 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440f82 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426ff8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043f4cf : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004be9e5 : add al, 0 ; add byte ptr [rax], bh ; add edi, esi ; call rdi
0x000000000048f831 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000424ff8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449ed1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041848d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402c45 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x0000000000418fb6 : add al, 0 ; add dh, dh ; ret
0x000000000046b0cb : add al, 0x11 ; ret
0x000000000043e66d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474769 : add al, 0x16 ; jae 0x474717 ; xor eax, eax ; ret
0x000000000042e4d1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000422b5a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000046a1b5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a186
0x000000000043f4ad : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000040997a : add al, 0x24 ; call 0x405c74
0x000000000047180c : add al, 0x24 ; call rax
0x000000000046fb23 : add al, 0x24 ; lea rdi, [rax + 0x6cb1e0] ; call rdx
0x000000000043f5e8 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046afc8 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043f648 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043f588 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000046ae38 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044aafa : add al, 0x24 ; mov r12, rsi ; jmp 0x44aad2
0x000000000044237c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f75a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047cac5 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea30 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d18d : add al, 0x29 ; ret 0x8941
0x0000000000465bde : add al, 0x31 ; ret
0x0000000000465ada : add al, 0x37 ; ret
0x0000000000415e2f : add al, 0x3a ; ret
0x00000000004b8ba6 : add al, 0x3d ; retf
0x0000000000480d7c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480d51
0x00000000004669a6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004713f1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043bb4b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000043b059 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000043b06b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000464163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004640a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043543a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439899 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004657d4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474766 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x47471a ; xor eax, eax ; ret
0x0000000000474056 : add al, 0x4c ; cmp edx, eax ; jne 0x474004 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043b067 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004398a7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044ca32 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bfd4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004669a4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000042015a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bfc87 : add al, 0x79 ; ret
0x00000000004753a1 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000049a0d3 : add al, 0x81 ; je 0x49a0b5 ; ret
0x00000000004294bb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049a0cf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x49a0b9 ; ret
0x000000000042ad93 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e768 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e758 ; ret
0x0000000000429217 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044953d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000004c6a64 : add al, 0x85 ; add byte ptr [rax], al ; sub al, bl ; cli ; jmp rdi
0x000000000046b320 : add al, 0x85 ; leave ; jne 0x46b2d8 ; xor eax, eax ; ret
0x0000000000467089 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049bbeb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043b056 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000439896 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000049a13b : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e25a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000444229 : add al, 0x89 ; retf 0xeac0
0x000000000043e76b : add al, 0x8a ; je 0x43e755 ; ret
0x000000000045c640 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b9d4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000048a183 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c2050 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c553e : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b663 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004c8264 : add al, 0x9d ; add byte ptr [rax], al ; call 0x134c7e7c
0x00000000004420e8 : add al, 0xc1 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4420f8 ; call rbx
0x000000000047a5dd : add al, 0xde ; lea r9, [rdx] ; jmp 0x47a639
0x00000000004800ed : add al, 0xde ; lea r9, [rdx] ; jmp 0x480149
0x0000000000466df7 : add al, 0xe8 ; ret
0x000000000047af55 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422c9d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000004357a3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f52b : add al, 0xf3 ; ret
0x0000000000426a39 : add al, 0xf6 ; ret 0x7408
0x0000000000481478 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000047471c : add al, 1 ; cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004bfcff : add al, 2 ; hlt ; ret
0x000000000042fa47 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7dd0 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x00000000004a5bb8 : add al, 4 ; add al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a55
0x00000000004a5bba : add al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a55
0x000000000042153d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042d068 : add al, 7 ; ret
0x000000000042e63f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c3d4f : add al, ah ; ret
0x00000000004a35b7 : add al, ah ; retf
0x0000000000441dea : add al, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004c59bf : add al, al ; and edx, edi ; jmp rdi
0x00000000004c6d9f : add al, al ; out dx, al ; cli ; jmp qword ptr [rdx]
0x00000000004a35af : add al, al ; retf
0x00000000004ae627 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004bd257 : add al, bh ; and byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a33d5 : add al, bh ; call qword ptr [rax]
0x00000000004c28a1 : add al, bh ; call qword ptr [rcx]
0x00000000004c2901 : add al, bh ; call qword ptr [rdi]
0x00000000004bc74f : add al, bh ; ret 0x4b
0x00000000004c0227 : add al, bl ; push rsp ; cmc ; call qword ptr [rcx]
0x000000000041aeb5 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046553f : add al, bpl ; pop rdx ; ret 0xfff9
0x000000000041b016 : add al, bpl ; ret 0xffff
0x00000000004978c2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423a21 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004be845 : add al, byte ptr [rax] ; add byte ptr [rax + 0x37], ch ; hlt ; call qword ptr [rdx]
0x000000000041941d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000426013 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410905 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469fb6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417940 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041fa96 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445f0d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451edd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004235fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dd6c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042ab51 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423621 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cd51 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440172 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004413f2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441165 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441031 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440fa9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004668c3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046a6ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000403845 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000478468 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000425178 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d4f4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047530d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x00000000004831ce : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418a68 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d277 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a86c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447dbc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044743c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044cbc4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c954e : add al, byte ptr [rax] ; ret
0x000000000044438a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44437e
0x0000000000467547 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x0000000000442a2e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf820 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c515d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4f35 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c056d : add al, byte ptr [rdx] ; ret
0x00000000004bf730 : add al, byte ptr [rdx] ; retf
0x000000000047ab15 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c2054 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004c7fa7 : add al, ch ; add ah, bh ; jmp qword ptr [rax]
0x00000000004c0847 : add al, ch ; cmc ; call qword ptr [rsi]
0x0000000000454ca6 : add al, ch ; hlt ; retf 0xfffa
0x0000000000481359 : add al, ch ; int1 ; retf 0xfff9
0x0000000000403c4d : add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x000000000041aeb6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c8267 : add al, ch ; or ah, bh ; call qword ptr [rdx]
0x00000000004c6f47 : add al, ch ; or bh, bl ; jmp rsi
0x0000000000454c42 : add al, ch ; pop rax ; retf
0x0000000000465540 : add al, ch ; pop rdx ; ret 0xfff9
0x000000000041d0aa : add al, ch ; push rax ; retf
0x00000000004c6097 : add al, ch ; push rcx ; cli ; jmp rsp
0x0000000000420b67 : add al, ch ; ret
0x0000000000402538 : add al, ch ; ret 0x404
0x0000000000483dd8 : add al, ch ; ret 0xf7d9
0x000000000046b668 : add al, ch ; ret 0xf94c
0x000000000049f778 : add al, ch ; ret 0xfa25
0x0000000000468a28 : add al, ch ; ret 0xfb57
0x000000000041b017 : add al, ch ; ret 0xffff
0x00000000004023cf : add al, ch ; retf
0x000000000045aa50 : add al, ch ; retf 0x8d
0x000000000046d6d0 : add al, ch ; retf 0xf940
0x000000000046b460 : add al, ch ; retf 0xf94e
0x00000000004c30a7 : add al, cl ; iretd ; std ; jmp qword ptr [rdx]
0x00000000004bc827 : add al, cl ; ret
0x00000000004c10f7 : add al, cl ; retf
0x00000000004c824f : add al, dh ; or ah, bh ; call qword ptr [rax]
0x00000000004c887f : add al, dh ; xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004c314f : add al, dh ; xor al, bh ; jmp rsp
0x00000000004a33d4 : add al, dil ; call qword ptr [rax]
0x00000000004c168f : add al, dl ; cmc ; call qword ptr [rdx]
0x00000000004c485f : add al, dl ; jg 0x4c4860 ; call rdx
0x00000000004c66ff : add al, dl ; lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x00000000004bc737 : add al, dl ; ret 0x4b
0x00000000004c6ed2 : add bh, ah ; ret
0x0000000000444c0f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004587cc : add bh, al ; sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x000000000045f96e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000041365a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b37 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e3cf : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000441fac : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e1f8
0x0000000000402c4c : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a6f0 : add bh, byte ptr [rax + 1] ; ret
0x00000000004125c2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc4b : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf423 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d8c2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000470416 : add bh, dh ; ret 0x804
0x00000000004a3758 : add bl, al ; clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004262f6 : add bl, al ; lea rax, [rip + 0x15e71] ; ret
0x0000000000467061 : add bl, al ; mov eax, 2 ; ret
0x00000000004213a4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044433a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004bef50 : add bl, bh ; hlt ; call qword ptr [rbx]
0x00000000004c5cc7 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c4f07 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c5d85 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000004a3a0c : add bl, byte ptr [rip + 0x1c92fff9] ; stc ; jmp qword ptr [rdx]
0x000000000046a1ba : add bl, ch ; ret 0x1f0f
0x000000000046bdae : add bl, ch ; retf
0x000000000047f5af : add bl, ch ; retf 0x1f0f
0x000000000043facc : add bl, ch ; retf 0x4890
0x0000000000487028 : add bl, ch ; retf 0x8945
0x0000000000406327 : add bl, dh ; ret
0x00000000004c4a93 : add byte ptr [0xffffffffe4180000], dh ; stc ; jmp rax
0x00000000004c4d5d : add byte ptr [eax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004705aa : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004674e4 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x0000000000465521 : add byte ptr [r15 + 0x4a1ff6], dil ; call 0x4017a9
0x000000000046553a : add byte ptr [r15 + 0x4a200c], dil ; call 0x4017a9
0x0000000000454ca0 : add byte ptr [r15 + 0x4b2d88], dil ; call 0x4017a9
0x000000000045549e : add byte ptr [r15 + 0x4b2db8], dil ; call 0x4017a9
0x000000000047acc0 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047adeb : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045b8f3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a8df : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x00000000004747a1 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425f6f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000046906e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488db1 : add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000049d70f : add byte ptr [r8 + 1], r9b ; ret
0x00000000004685e5 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000443331 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459948 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ee15a
0x0000000000446fd5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004bc74a : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x00000000004bc822 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc732 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004bc752 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bc6d2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6ba : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x00000000004c289d : add byte ptr [r8], al ; and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c28fd : add byte ptr [r8], al ; push rax ; add al, bh ; call qword ptr [rdi]
0x000000000043f579 : add byte ptr [r8], r8b ; ret
0x0000000000473567 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c44c4
0x00000000004c56df : add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x000000000042139f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043f46f : add byte ptr [rax + 0x18], bh ; syscall
0x00000000004bf85f : add byte ptr [rax + 0x25], ah ; cmc ; jmp qword ptr [rsi]
0x000000000049a0ef : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043de8f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405457 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c3e8 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418f75 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b560 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000420520 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041e295 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000041d91f : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004be847 : add byte ptr [rax + 0x37], ch ; hlt ; call qword ptr [rdx]
0x00000000004c780f : add byte ptr [rax + 0x38], dh ; sti ; jmp qword ptr [rdx]
0x000000000041750b : add byte ptr [rax + 0x39], cl ; ret
0x000000000046dd67 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483dbb : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000417956 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044ebcb : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000417917 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046df45 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000447410 : add byte ptr [rax + 0x39], cl ; retf
0x00000000004302c6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004346e3 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432e7e : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000043e018 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042fdf1 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004c8dd7 : add byte ptr [rax + 0x3a], cl ; std ; call rcx
0x000000000046acdf : add byte ptr [rax + 0x3f], bh ; syscall
0x0000000000425f6b : add byte ptr [rax + 0x43d8e0], bh ; cmove rax, rdx ; ret
0x000000000047a996 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c0057 : add byte ptr [rax + 0x4e], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000463037 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043fecf : add byte ptr [rax + 0x61], bh ; syscall
0x000000000044296f : add byte ptr [rax + 0x63], bh ; syscall
0x00000000004125a8 : add byte ptr [rax + 0x63], cl ; jnp 0x412622 ; syscall
0x000000000045d0ee : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000048b244 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000045c715 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000040eea1 : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000040dc12 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043f7d0 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044ccc8 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x000000000046ad1f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ad0f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ad2f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417eb2 : add byte ptr [rax + 0x6ca800], bh ; ret
0x0000000000423a1f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004769c4 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043baef : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040f82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046d0de : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000004400af : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004673bf : add byte ptr [rax + 0xc9], bh ; syscall
0x0000000000442a11 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ee56 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041d855 : add byte ptr [rax + 0xf48006c], ch ; retf 0x894c
0x0000000000465a45 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004437eb : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412937 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425f70 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040f9c9 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046906f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426893 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448caa : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004484fd : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b0ba : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cc45 : add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000004696f8 : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d858 : add byte ptr [rax + 0xf], cl ; retf 0x894c
0x00000000004014a0 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474ad7 : add byte ptr [rax + 1], bh ; ret
0x0000000000426015 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410907 : add byte ptr [rax + 1], cl ; ret
0x0000000000488d0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b72c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f397 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000469e3c : add byte ptr [rax + 1], cl ; retf
0x000000000047f4a7 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x00000000004347a1 : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000042601f : add byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000402a5f : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000488db2 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000479b80 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044ee84 : add byte ptr [rax + 3], bh ; syscall
0x00000000004c5477 : add byte ptr [rax + 5], bh ; cli ; jmp rdx
0x000000000049ae5f : add byte ptr [rax + 5], bh ; ret
0x000000000043e68e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000044292f : add byte ptr [rax + 8], bh ; syscall
0x000000000043e68d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ad5cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041c1f8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041cb09 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c8dd3 : add byte ptr [rax + rbp*4], dh ; add byte ptr [rax + 0x3a], cl ; std ; call rcx
0x00000000004713f0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c6d9b : add byte ptr [rax + rcx*4], bh ; add byte ptr [rax], al ; shr dh, 0xfa ; jmp qword ptr [rdx]
0x00000000004ae777 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049c39f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c4d5f : add byte ptr [rax - 0x14], dl ; stc ; call qword ptr [rsi]
0x0000000000462847 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000041f42a : add byte ptr [rax - 0x16ffbe34], dh ; retf 0xfffd
0x00000000004032a6 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c425f : add byte ptr [rax - 0x25], al ; clc ; call qword ptr [rbx]
0x00000000004c428f : add byte ptr [rax - 0x25], al ; clc ; call qword ptr [rdx]
0x00000000004c4277 : add byte ptr [rax - 0x25], cl ; clc ; call qword ptr [rax]
0x00000000004c884f : add byte ptr [rax - 0x27], al ; cld ; call qword ptr [rax]
0x000000000043ff31 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004528af : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc3f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042127b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f7ef : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045889f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000410927 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004668cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004668af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046690f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004668bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004668ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044f8cf : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000459298 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044cbdd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478b25 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000041dcac : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004c0edf : add byte ptr [rax - 0x46], dh ; cmc ; call qword ptr [rax]
0x0000000000489722 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048d857 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000004c3b6f : add byte ptr [rax - 0x66], ah ; clc ; call qword ptr [rdx]
0x000000000044fcb3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000418f51 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000449b8f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449b73 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449bab : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047ba2a : add byte ptr [rax - 0x73], cl ; jl 0x47ba5a ; js 0x47ba79 ; call rsp
0x000000000047bd3f : add byte ptr [rax - 0x73], cl ; jl 0x47bd6f ; js 0x47bd8e ; call rsp
0x000000000047c106 : add byte ptr [rax - 0x73], cl ; jl 0x47c136 ; js 0x47c155 ; call rsp
0x000000000049adbf : add byte ptr [rax - 0x73], cl ; jl 0x49adf0 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b38d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000475117 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bd3f : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044cc0f : add byte ptr [rax - 0x75], cl ; add eax, 0x27fae1 ; ret
0x000000000044589f : add byte ptr [rax - 0x75], cl ; add eax, 0x287a21 ; ret
0x0000000000416a0f : add byte ptr [rax - 0x75], cl ; add eax, 0x2b36a9 ; ret
0x0000000000419ddb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fccf : add byte ptr [rax - 0x75], cl ; jl 0x44fd00 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045ad58 : add byte ptr [rax - 0x75], cl ; jl 0x45ad89 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x00000000004153e6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464fe6 : add byte ptr [rax - 0x75], cl ; jp 0x465031 ; jmp 0x464fb6
0x000000000046501f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d82d : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416fb7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x000000000043180f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e5d7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000478eef : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x00000000004453c2 : add byte ptr [rax - 0x75], cl ; ret
0x000000000041d2b3 : add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x000000000049c4d7 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x0000000000416a3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fac2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041e1e3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000414f52 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004150c2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000454187 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455ed2 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004699f9 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441845 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441745 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044133d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000041c01d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x000000000047aa2c : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004694c8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091e1e
0x000000000040f911 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000401412 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000441401 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e890 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004033dc : add byte ptr [rax - 0x77], cl ; ret
0x0000000000417942 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041ddbc : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047aab3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a28f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485de4 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000043ef6a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a4e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c85f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419ccf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459c19 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044ef24 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004556e1 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043edd3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f2f7 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470ef7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000425f1b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045abbf : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045a324 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413660 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000473926 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000429554 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041cc57 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000410307 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000046a22e : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x0000000000422cf2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000004435f4 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404dc2 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x0000000000422e92 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000004536bf : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b790 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422c50 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000041d2b6 : add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004293d6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042af4c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000004721cf : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e27d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x000000000049e333 : add byte ptr [rax - 0x77], cl ; sub byte ptr [r11 - 0x17], bl ; ret 0xb61c
0x0000000000470e93 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043ec2f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049c3 : add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x00000000004657cf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046820f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000464b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000443332 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004117d7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045ee9c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000047186b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459949 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ee159
0x000000000041e7a8 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004214bd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401738 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004551c8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004567ef : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000004898db : add byte ptr [rax - 0x7d], cl ; jl 0x48990c ; or byte ptr [rax], al ; jne 0x4898b6 ; jmp 0x4898be
0x000000000048cb0b : add byte ptr [rax - 0x7d], cl ; jl 0x48cb3c ; adc byte ptr [rax], al ; jne 0x48cae6 ; jmp 0x48caee
0x000000000041e8d2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004015ce : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bf7f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d9bf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c959 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469def : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040edbf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004760af : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0baf : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004531cf : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040132f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446fd6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bfc0 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422d1f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000042620f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042619f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dd6e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004473cf : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462817 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000484b2f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004257b0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429633 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d43 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046773f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a2af : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040d9d8 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d988 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d83c : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9b0 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da00 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d915 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8a0 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040daa0 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da74 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d8e2 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d870 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042e57f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046590f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c744 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e1cf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000402531 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x404
0x00000000004a0076 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000446cbc : add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x0000000000432f8b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000416cdf : add byte ptr [rax - 1], bh ; jmp 0x416cb8
0x0000000000464092 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410452 : add byte ptr [rax - 1], bh ; ret
0x0000000000416b6e : add byte ptr [rax - 1], dil ; ret
0x00000000004a3554 : add byte ptr [rax - 8], dl ; call qword ptr [rax]
0x00000000004c6a63 : add byte ptr [rax*4 - 0x27d80000], al ; cli ; jmp rdi
0x0000000000403c4a : add byte ptr [rax], 0 ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000402535 : add byte ptr [rax], 0 ; add al, ch ; ret 0x404
0x0000000000414629 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417eaf : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043479e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000410689 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047aa29 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000048b850 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041365d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e22b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x00000000004357ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047859b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046637b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044eb63 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041cca3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417ebb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d00b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c6d5 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042ea61 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004471c2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f82b : add byte ptr [rax], 0 ; je 0x40f840 ; mov eax, edx ; pop rbx ; ret
0x000000000047a997 : add byte ptr [rax], 0 ; je 0x47a9a8 ; mov eax, edx ; pop rbx ; ret
0x00000000004c289f : add byte ptr [rax], ah ; add al, bh ; call qword ptr [rcx]
0x00000000004c249f : add byte ptr [rax], ah ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004bc757 : add byte ptr [rax], ah ; ret
0x00000000004c6b5e : add byte ptr [rax], al ; adc ah, bl ; cli ; call rsi
0x00000000004c5472 : add byte ptr [rax], al ; adc al, 0x6f ; add byte ptr [rax], al ; js 0x4c5488 ; cli ; jmp rdx
0x00000000004c377e : add byte ptr [rax], al ; adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004c092e : add byte ptr [rax], al ; adc byte ptr [rcx - 0xb], ch ; call qword ptr [rdx]
0x00000000004713ef : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c6a62 : add byte ptr [rax], al ; add al, 0x85 ; add byte ptr [rax], al ; sub al, bl ; cli ; jmp rdi
0x00000000004c8262 : add byte ptr [rax], al ; add al, 0x9d ; add byte ptr [rax], al ; call 0x134c7e7e
0x00000000004a35b5 : add byte ptr [rax], al ; add al, ah ; retf
0x00000000004a35ad : add byte ptr [rax], al ; add al, al ; retf
0x00000000004bc74d : add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x0000000000403c4b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x000000000041d0a8 : add byte ptr [rax], al ; add al, ch ; push rax ; retf
0x0000000000420b65 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000402536 : add byte ptr [rax], al ; add al, ch ; ret 0x404
0x0000000000468a26 : add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000420d5d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000004bc825 : add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc735 : add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004605e6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000046705f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000004bef4e : add byte ptr [rax], al ; add bl, bh ; hlt ; call qword ptr [rbx]
0x000000000046a1b8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046bdac : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000487026 : add byte ptr [rax], al ; add bl, ch ; retf 0x8945
0x000000000041462a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042139d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043f46d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045c8cb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046dd65 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483db9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044ebc9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004302c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004346e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043fecd : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x000000000044296d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x00000000004125a6 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x412624 ; syscall
0x0000000000464d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dc10 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046ad1d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ad0d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ad2d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417eb0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043baed : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004400ad : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x0000000000442a0f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ee54 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448ca8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004484fb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b0b8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cc43 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8348
0x000000000040149e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a723 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488e34 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488d0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000043479f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044ee82 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049ae5d : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000044292d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000049c39d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462845 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000043ff2f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000041350d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045889d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041068a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044cbdb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478b23 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047ba28 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47ba5c ; js 0x47ba7b ; call rsp
0x000000000047bd3d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bd71 ; js 0x47bd90 ; call rsp
0x000000000047c104 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47c138 ; js 0x47c157 ; call rsp
0x0000000000419dd9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004153e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x465033 ; jmp 0x464fb8
0x0000000000416a3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454185 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455ed0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004699f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441843 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441743 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044133b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000047aa2a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004413ff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040f951 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041ddba : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485de2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000046c85d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046df72 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043edd1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425f19 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045abbd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041365e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000473924 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000410305 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004536bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b78e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422c4e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004293d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042af4a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000004721cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043ec2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045ee9a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000442d9c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d9bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444c13 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004760ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0bad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004531cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044bfbe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042ac87 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042620d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042619d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004473cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484c0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042acf1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046773d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e57d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e1cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434798 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410450 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004bc755 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004a35b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x00000000004a35ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x00000000004bc74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x0000000000468a24 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000420d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004bc823 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc733 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004169fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047478b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000041350b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045889b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049aecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000416a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041ddb8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485de0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000045eacb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045828b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004760ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004531cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042620b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042619b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004473cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004bc753 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000041583b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004aeb02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004aeafa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004bc6d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x000000000041721b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043dbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004218cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041200b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442f19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000049e4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000046688c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047837f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e22c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b147c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b062c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bc74c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000045f9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043c11c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c12c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c13c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c14c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c15c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043c09c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043c0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043c0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043c0cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043c0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043c0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043c0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043c10c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043c08c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400a20 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000043baec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042139c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f46c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000043fecc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044296c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ad1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ad0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ad2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004400ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004152cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a722 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049ae5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044292c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004357ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047859c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000416a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000416a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044edd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000402dc6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x43f819
0x000000000043ec2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000041200c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004358fc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442f1a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004bc704 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x4b
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004156b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414eb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041583d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b044c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af454 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af944 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a5bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a55
0x00000000004b7144 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b6a
0x00000000004a35dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0484 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c24 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004af494 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af984 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bdde5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004b3ce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x461b
0x00000000004a6ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4b29
0x00000000004aeafc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043f5ca : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041cca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400cac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042d00c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bc6d5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6bd : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x0000000000476189 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045c69c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004428c8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046223d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448162 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e2ea : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e639 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bd6f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442b5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000047f5a8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4bcd40], bh ; jmp 0x47f585
0x000000000043508d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004117c3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004156b1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413170 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046329c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x00000000004c10d1 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], dh ; add byte ptr [rax], bh ; retf
0x000000000046a714 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000460766 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045df0c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443d1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463096 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000041683c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000040fc37 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000045d512 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d495 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d23 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043dbfd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b51d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420968 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000441041 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000402dc7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x43f818
0x0000000000441175 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440faa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440fb9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000425b11 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458bfc : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422cfd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004218cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ee07 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041d325 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000426320 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426346 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c6d6 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045b99a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ec3a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c1b7 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c1df : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e595 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043588d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004358fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448d5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462cb5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041200d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042624d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004673d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d796 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000443174 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bd67 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042ea62 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426162 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f83 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e8c5 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c92de : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442f1b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004588ed : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449bf5 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004725b2 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000049b076 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048bac8 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff2
0x0000000000453a0e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000043f19d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000400a21 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004656e0 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x0000000000417718 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004471c3 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d351 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485cb0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049b005 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478af7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046688e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000426014 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e80e : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043eb57 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c408 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040116c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044fab6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f3e5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445907 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478381 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c9382 : add byte ptr [rax], al ; and al, 0xae ; add byte ptr [rax], al ; or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004c289e : add byte ptr [rax], al ; and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x000000000042624e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000423b10 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465a44 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c8266 : add byte ptr [rax], al ; call 0x134c7e7a
0x00000000004c8296 : add byte ptr [rax], al ; call 0x134c7eaa
0x00000000004c82c6 : add byte ptr [rax], al ; call 0x134c7eda
0x00000000004c0846 : add byte ptr [rax], al ; call 0x174bfdb9
0x00000000004c7fa6 : add byte ptr [rax], al ; call 0x214c7bb2
0x0000000000481358 : add byte ptr [rax], al ; call 0x41de54
0x0000000000415f68 : add byte ptr [rax], al ; call 0x4429d4
0x000000000040f5e3 : add byte ptr [rax], al ; call 0x4458c9
0x00000000004c6096 : add byte ptr [rax], al ; call 0xffffffffe54c5af3
0x00000000004c6f46 : add byte ptr [rax], al ; call 0xffffffffe74c6a5c
0x000000000044c8eb : add byte ptr [rax], al ; call r12
0x000000000047bbe4 : add byte ptr [rax], al ; call r14
0x000000000044c9c5 : add byte ptr [rax], al ; call r15
0x000000000040168a : add byte ptr [rax], al ; call rax
0x0000000000440f89 : add byte ptr [rax], al ; call rbx
0x00000000004b147e : add byte ptr [rax], al ; call rdi
0x000000000040e9ec : add byte ptr [rax], al ; call rdx
0x00000000004b062e : add byte ptr [rax], al ; call rsp
0x00000000004c71cf : add byte ptr [rax], al ; cdq ; std ; call rcx
0x00000000004bc74e : add byte ptr [rax], al ; clc ; ret 0x4b
0x00000000004bf85a : add byte ptr [rax], al ; cld ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x25], ah ; cmc ; jmp qword ptr [rsi]
0x00000000004c4d5a : add byte ptr [rax], al ; cld ; add byte ptr [eax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c6b5a : add byte ptr [rax], al ; cld ; test dword ptr [rax], eax ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x00000000004c289a : add byte ptr [rax], al ; cmp al, 0x43 ; add byte ptr [rax], al ; and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c6d9a : add byte ptr [rax], al ; cmp al, 0x88 ; add byte ptr [rax], al ; shr dh, 0xfa ; jmp qword ptr [rdx]
0x00000000004c8dd6 : add byte ptr [rax], al ; cmp dil, bpl ; call rcx
0x0000000000410e47 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x410e58 ; pop rbx ; ret
0x0000000000464aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x464ab9 ; ret
0x000000000048cb0a : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x48cae7 ; jmp 0x48caef
0x00000000004898da : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x4898b7 ; jmp 0x4898bf
0x00000000004bf006 : add byte ptr [rax], al ; cwde ; cld ; hlt ; call qword ptr [rax]
0x00000000004bf5a6 : add byte ptr [rax], al ; enter -0xae8, -1 ; ret 1
0x00000000004ad5da : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b162e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004ae786 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004adf86 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ae386 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b182e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b1a2e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b1c2e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b1e2e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b202e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b222e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b242e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b262e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b282e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c884e : add byte ptr [rax], al ; frndint ; call qword ptr [rax]
0x00000000004c533a : add byte ptr [rax], al ; fsubr qword ptr [rbp] ; add byte ptr [rax], dh ; add dl, bh ; call rsi
0x00000000004c0052 : add byte ptr [rax], al ; hlt ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000004c0842 : add byte ptr [rax], al ; in al, 0x22 ; add byte ptr [rax], al ; call 0x174bfdbd
0x00000000004c6f42 : add byte ptr [rax], al ; in al, 0x89 ; add byte ptr [rax], al ; call 0xffffffffe74c6a60
0x00000000004bef4a : add byte ptr [rax], al ; in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; sti ; hlt ; call qword ptr [rbx]
0x00000000004c71ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov word ptr [rax], es ; add byte ptr [rax], al ; cdq ; std ; call rcx
0x00000000004c1bf6 : add byte ptr [rax], al ; jbe 0x4c1bf6 ; call qword ptr [rax]
0x000000000040f82c : add byte ptr [rax], al ; je 0x40f83f ; mov eax, edx ; pop rbx ; ret
0x0000000000421207 : add byte ptr [rax], al ; je 0x421214 ; ret
0x000000000047a998 : add byte ptr [rax], al ; je 0x47a9a7 ; mov eax, edx ; pop rbx ; ret
0x000000000049c39e : add byte ptr [rax], al ; je 0x49c35a ; add rsp, 0x18 ; ret
0x000000000049e8c6 : add byte ptr [rax], al ; je 0x49e8d5 ; ret
0x00000000004c8dd2 : add byte ptr [rax], al ; je 0x4c8d87 ; add byte ptr [rax], al ; cmp dil, bpl ; call rcx
0x00000000004c0eda : add byte ptr [rax], al ; jl 0x4c0f10 ; add byte ptr [rax], al ; jo 0x4c0ea5 ; cmc ; call qword ptr [rax]
0x0000000000458809 : add byte ptr [rax], al ; jmp 0x4585db
0x000000000046a1b9 : add byte ptr [rax], al ; jmp 0x46a182
0x000000000046bdad : add byte ptr [rax], al ; jmp 0x46bd7f
0x00000000004797bf : add byte ptr [rax], al ; jmp 0x479791
0x0000000000479e9f : add byte ptr [rax], al ; jmp 0x479e71
0x0000000000487027 : add byte ptr [rax], al ; jmp 0x486ff8
0x000000000049ae1c : add byte ptr [rax], al ; jmp 0x49adee
0x0000000000440174 : add byte ptr [rax], al ; jmp rax
0x000000000043f565 : add byte ptr [rax], al ; jne 0x43f586 ; mov eax, 2 ; syscall
0x000000000043f5c5 : add byte ptr [rax], al ; jne 0x43f5e6 ; mov eax, 0 ; syscall
0x000000000043f625 : add byte ptr [rax], al ; jne 0x43f646 ; mov eax, 1 ; syscall
0x000000000046ae15 : add byte ptr [rax], al ; jne 0x46ae36 ; mov eax, 3 ; syscall
0x000000000046afa5 : add byte ptr [rax], al ; jne 0x46afc6 ; mov eax, 0x14 ; syscall
0x00000000004c0ede : add byte ptr [rax], al ; jo 0x4c0ea1 ; cmc ; call qword ptr [rax]
0x00000000004c780e : add byte ptr [rax], al ; jo 0x4c784f ; sti ; jmp qword ptr [rdx]
0x00000000004c0056 : add byte ptr [rax], al ; js 0x4c00ad ; cmc ; jmp qword ptr [rcx]
0x00000000004c5476 : add byte ptr [rax], al ; js 0x4c5484 ; cli ; jmp rdx
0x000000000043c11e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c12e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c13e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c14e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c15e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043c07d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043c09e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043c0ae : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043c0be : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043c0ce : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043c0de : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043c0ee : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043c02a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000043c0fe : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043c10e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043c08e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000047ba29 : add byte ptr [rax], al ; lea rdi, [rsp + 0x78] ; call r12
0x0000000000400a22 : add byte ptr [rax], al ; leave ; ret
0x00000000004c780a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c7853 ; sti ; jmp qword ptr [rdx]
0x00000000004c19ae : add byte ptr [rax], al ; loopne 0x4c19f7 ; idiv bh ; ret
0x00000000004c7512 : add byte ptr [rax], al ; mov ah, 0x8f ; add byte ptr [rax], al ; mov byte ptr [rdx], ch ; sti ; call rsp
0x00000000004c2a1e : add byte ptr [rax], al ; mov al, 1 ; clc ; call rsp
0x000000000043affe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000043984e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c6cf6 : add byte ptr [rax], al ; mov bl, ah ; cli ; jmp qword ptr [rdx]
0x00000000004c57e6 : add byte ptr [rax], al ; mov byte ptr [rax], bl ; cli ; jmp qword ptr [rax]
0x000000000043baee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b4ce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c7516 : add byte ptr [rax], al ; mov byte ptr [rdx], ch ; sti ; call rsp
0x0000000000464b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b4de : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400a1d : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000042139e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f46e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000046acde : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000043fece : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044296e : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ad1e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ad0e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ad2e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x0000000000417eb1 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x000000000046d0dd : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004400ae : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000442a10 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ee55 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000416cde : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x416cb9
0x0000000000464091 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410451 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474ad6 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ee83 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049ae5e : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044292e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004166fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e2ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e2c9 ; ret
0x000000000049e4ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e4e9 ; ret
0x00000000004887ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244aaa] ; ret
0x000000000040f641 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc38 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473716 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046af43 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040f875 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444bb3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000047f5a9 : add byte ptr [rax], al ; mov ebx, 0x4bcd40 ; jmp 0x47f584
0x000000000046af3e : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043b50e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000481353 : add byte ptr [rax], al ; mov edi, 0x190 ; call 0x41de59
0x0000000000402c46 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x000000000049c1b8 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c1e0 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043508e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004357ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473d69 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43fff9
0x0000000000442ac6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440f84 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000046a715 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004bf01a : add byte ptr [rax], al ; mov esp, 0x9000000a ; cld ; hlt ; call qword ptr [rdx]
0x00000000004c121a : add byte ptr [rax], al ; mov esp, 0x9000002c ; sal ebp, 1 ; call rdx
0x00000000004c2a1a : add byte ptr [rax], al ; mov esp, 0xb0000044 ; add eax, edi ; call rsp
0x000000000047b158 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000455145 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004880c2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488146 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470e64 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cc9e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c51e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a710 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f7ff : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004169ae : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044f8ce : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000004668ae : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004668be : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004668ce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004668de : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004668ee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004668fe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046690e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414ee9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410e60 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004153e5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047859e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471c9e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046501e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416a2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c4ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c52e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c58e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c57e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c53e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044589e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287a21] ; ret
0x0000000000416a0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b36a9] ; ret
0x000000000047493f : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c697 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fac1 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e1e2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041c1fb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000416a3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e88f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aad9 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000044edd5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464fb7
0x0000000000402dc8 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x43f817
0x0000000000441176 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441042 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440fba : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440fab : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x0000000000441400 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041c01c : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418277
0x00000000004629e6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004622fb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043ec2e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000040febc : add byte ptr [rax], al ; mov rdi, rsi ; call 0x49c907
0x00000000004355ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000417941 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417964
0x000000000049cafe : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000474868 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x0000000000440066 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000049a35f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004125a7 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dc11 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044f9c4 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000041200e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043521e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004358fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043588e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c88ae : add byte ptr [rax], al ; nop ; cld ; call qword ptr [rax]
0x00000000004bf01e : add byte ptr [rax], al ; nop ; cld ; hlt ; call qword ptr [rdx]
0x000000000046adec : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x00000000004400ec : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046acfc : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x00000000004400cc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x0000000000442f1c : add byte ptr [rax], al ; nop ; ret
0x00000000004c22be : add byte ptr [rax], al ; nop ; retf 0xfff7
0x00000000004c121e : add byte ptr [rax], al ; nop ; sal ebp, 1 ; call rdx
0x00000000004c9386 : add byte ptr [rax], al ; or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004c62e6 : add byte ptr [rax], al ; or byte ptr [rsi - 6], bh ; call rax
0x00000000004c70b6 : add byte ptr [rax], al ; or byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x0000000000476a94 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c3ebe : add byte ptr [rax], al ; or cl, 0xfd ; call qword ptr [rbx]
0x00000000004c1f86 : add byte ptr [rax], al ; or dl, al ; idiv edi ; retf 2
0x00000000004bc706 : add byte ptr [rax], al ; pop rax ; ret 0x4b
0x000000000045c5cd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c69d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e63a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000463097 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a69c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000442b5d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004117c4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411dab : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c59ba : add byte ptr [rax], al ; pop rsp ; je 0x4c59c8 ; add al, al ; and edx, edi ; jmp rdi
0x00000000004c72ba : add byte ptr [rax], al ; pop rsp ; lea eax, [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c3eba : add byte ptr [rax], al ; pop rsp ; pop rcx ; add byte ptr [rax], al ; or cl, 0xfd ; call qword ptr [rbx]
0x00000000004c82c2 : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; call 0x134c7ede
0x00000000004c28fe : add byte ptr [rax], al ; push rax ; add al, bh ; call qword ptr [rdi]
0x00000000004c4d5e : add byte ptr [rax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c28fa : add byte ptr [rax], al ; pushfq ; add byte ptr [r8], al ; push rax ; add al, bh ; call qword ptr [rdi]
0x00000000004c66fa : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], 0xfaadd000 ; call rdx
0x0000000000401173 : add byte ptr [rax], al ; ret
0x00000000004a7806 : add byte ptr [rax], al ; ret 0
0x00000000004ae77e : add byte ptr [rax], al ; ret 0x10
0x00000000004b044e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af456 : add byte ptr [rax], al ; ret 0x24
0x00000000004af946 : add byte ptr [rax], al ; ret 0x33
0x00000000004a5bbe : add byte ptr [rax], al ; ret 0x4a55
0x00000000004b7146 : add byte ptr [rax], al ; ret 0x4b6a
0x00000000004adf7e : add byte ptr [rax], al ; ret 0xa
0x00000000004ae37e : add byte ptr [rax], al ; ret 0xd
0x00000000004b1822 : add byte ptr [rax], al ; ret 1
0x00000000004b1a22 : add byte ptr [rax], al ; ret 2
0x00000000004b1c22 : add byte ptr [rax], al ; ret 3
0x00000000004b1e22 : add byte ptr [rax], al ; ret 4
0x00000000004b2022 : add byte ptr [rax], al ; ret 5
0x00000000004adb26 : add byte ptr [rax], al ; ret 6
0x00000000004b2422 : add byte ptr [rax], al ; ret 7
0x00000000004b2622 : add byte ptr [rax], al ; ret 8
0x00000000004b2822 : add byte ptr [rax], al ; ret 9
0x00000000004a35de : add byte ptr [rax], al ; retf
0x00000000004a7826 : add byte ptr [rax], al ; retf 0
0x00000000004ae8de : add byte ptr [rax], al ; retf 0x11
0x00000000004b0486 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c26 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004af496 : add byte ptr [rax], al ; retf 0x24
0x00000000004af986 : add byte ptr [rax], al ; retf 0x33
0x00000000004bdde7 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004b3ce6 : add byte ptr [rax], al ; retf 0x461b
0x00000000004a6ec6 : add byte ptr [rax], al ; retf 0x4b29
0x00000000004ae0de : add byte ptr [rax], al ; retf 0xb
0x00000000004ae4de : add byte ptr [rax], al ; retf 0xe
0x00000000004aeafe : add byte ptr [rax], al ; retf 1
0x00000000004b1a32 : add byte ptr [rax], al ; retf 2
0x00000000004b1c32 : add byte ptr [rax], al ; retf 3
0x00000000004ad986 : add byte ptr [rax], al ; retf 4
0x00000000004b2032 : add byte ptr [rax], al ; retf 5
0x00000000004b2232 : add byte ptr [rax], al ; retf 6
0x00000000004b2432 : add byte ptr [rax], al ; retf 7
0x00000000004b2632 : add byte ptr [rax], al ; retf 8
0x00000000004b2832 : add byte ptr [rax], al ; retf 9
0x00000000004b1e1e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ae226 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c1b3e : add byte ptr [rax], al ; ror byte ptr [rbp - 0xa], 1 ; jmp rbx
0x00000000004c168e : add byte ptr [rax], al ; sal bl, 1 ; cmc ; call qword ptr [rdx]
0x00000000004c485e : add byte ptr [rax], al ; sar byte ptr [rdi - 7], 1 ; call rdx
0x00000000004c4a96 : add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004c377a : add byte ptr [rax], al ; sbb al, 0x52 ; add byte ptr [rax], al ; adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004c59be : add byte ptr [rax], al ; shl byte ptr [rcx], 0xfa ; jmp rdi
0x00000000004c6d9e : add byte ptr [rax], al ; shr dh, 0xfa ; jmp qword ptr [rdx]
0x00000000004bef4f : add byte ptr [rax], al ; sti ; hlt ; call qword ptr [rbx]
0x00000000004c168a : add byte ptr [rax], al ; sub al, 0x31 ; add byte ptr [rax], al ; sal bl, 1 ; cmc ; call qword ptr [rdx]
0x00000000004c6a66 : add byte ptr [rax], al ; sub al, bl ; cli ; jmp rdi
0x000000000042f4ac : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415e36 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000046ae9f : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004be9e2 : add byte ptr [rax], al ; test byte ptr [rax + rax], al ; add byte ptr [rax], bh ; add edi, esi ; call rdi
0x00000000004c62e2 : add byte ptr [rax], al ; test byte ptr [rbp], bh ; add byte ptr [rax], cl ; jle 0x4c62ee ; call rax
0x00000000004428c9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c1bf2 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr ss:[rax], al ; jbe 0x4c1bfa ; call qword ptr [rax]
0x00000000004c06f2 : add byte ptr [rax], al ; xchg eax, esp ; and dword ptr [rax], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rax]
0x00000000004c10f2 : add byte ptr [rax], al ; xchg eax, esp ; sub eax, dword ptr [rax] ; add al, cl ; retf
0x00000000004c4a92 : add byte ptr [rax], al ; xor al, 0x65 ; add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004c6092 : add byte ptr [rax], al ; xor al, 0x7b ; add byte ptr [rax], al ; call 0xffffffffe54c5af7
0x00000000004c8292 : add byte ptr [rax], al ; xor al, 0x9d ; add byte ptr [rax], al ; call 0x134c7eae
0x00000000004c533e : add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004c72be : add byte ptr [rax], al ; xor byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004c1a2e : add byte ptr [rax], al ; xor byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x0000000000451d97 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec3b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a6b5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041cca6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d7e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041360e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413629 ; ret
0x0000000000400cae : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000488331 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000043ed8a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403847 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000440ef6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440f1b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440f3f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440f5f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004261fd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004be9e7 : add byte ptr [rax], bh ; add edi, esi ; call rdi
0x0000000000400a1e : add byte ptr [rax], bh ; leave ; ret
0x00000000004bc6d7 : add byte ptr [rax], bh ; ret 0x4b
0x00000000004c10d7 : add byte ptr [rax], bh ; retf
0x00000000004c4a97 : add byte ptr [rax], bl ; in al, 0xf9 ; jmp rax
0x00000000004bc6bf : add byte ptr [rax], bl ; ret 0x4b
0x00000000004c6a67 : add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x00000000004c6487 : add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x000000000044ef7d : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x00000000004c06f7 : add byte ptr [rax], cl ; cmc ; jmp qword ptr [rax]
0x0000000000476a95 : add byte ptr [rax], cl ; je 0x476b02 ; pop rbx ; ret
0x00000000004c62e7 : add byte ptr [rax], cl ; jle 0x4c62e9 ; call rax
0x000000000049ac3e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231f19], 8 ; ret
0x00000000004c9387 : add byte ptr [rax], cl ; push rax ; std ; jmp qword ptr [rbx]
0x000000000049ac45 : add byte ptr [rax], cl ; ret
0x00000000004c1f87 : add byte ptr [rax], cl ; ret 0xfff7
0x00000000004a3e2c : add byte ptr [rax], cl ; stc ; call rax
0x00000000004c533f : add byte ptr [rax], dh ; add dl, bh ; call rsi
0x00000000004c72bf : add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x0000000000474866 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c28ff : add byte ptr [rax], dl ; clc ; call qword ptr [rdi]
0x00000000004c6b5f : add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x000000000040105f : add byte ptr [rax], dl ; jmp 0x400fc3
0x00000000004c377f : add byte ptr [rax], dl ; js 0x4c377f ; call qword ptr [rcx]
0x00000000004c3e7f : add byte ptr [rax], dl ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004a3ba8 : add byte ptr [rax], dl ; stc ; push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x0000000000470f4d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047856d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e3cd : add byte ptr [rax], r8b ; call rbx
0x00000000004c2a1d : add byte ptr [rax], r8b ; mov al, 1 ; clc ; call rsp
0x000000000046acdd : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x0000000000416cdd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x416cba
0x0000000000474ad5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b4fd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042cc9d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b53d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047aed5 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412e2d : add byte ptr [rax], r8b ; ret
0x000000000049a295 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004135ed : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f5c6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046afa6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043f626 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043f566 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000046ae16 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x00000000004675e7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x0000000000468447 : add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x000000000041b4a1 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b61e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047618b : add byte ptr [rbp + 0x39], cl ; retf
0x000000000047898c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c5ce : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c69e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000046906c : add byte ptr [rbp + 0x4b], cl ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000004748a7 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x0000000000416ad3 : add byte ptr [rbp + 0xa], dh ; jmp 0x416b01
0x0000000000451d72 : add byte ptr [rbp + 0xa], dh ; jmp 0x451da0
0x000000000045a677 : add byte ptr [rbp + 0xa], dh ; jmp 0x45a6a5
0x0000000000478812 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x00000000004791af : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047909f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004788b4 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c82c3 : add byte ptr [rbp + rbx*4], ah ; add al, ch ; or ah, bh ; call qword ptr [rdx]
0x00000000004c82ab : add byte ptr [rbp + rbx*4], cl ; add al, dh ; or ah, bh ; call qword ptr [rax]
0x00000000004ae377 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000046516e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047846a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004c72bb : add byte ptr [rbp + rcx*4], bl ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x00000000004c62e3 : add byte ptr [rbp + rdi*2 + 0x7e080000], al ; cli ; call rax
0x0000000000451da5 : add byte ptr [rbp - 0x16f98a40], al ; xchg eax, ecx ; retf 0xfffb
0x000000000049ee34 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004898e1 : add byte ptr [rbp - 0x36], dh ; jmp 0x4898b8
0x000000000048cb11 : add byte ptr [rbp - 0x36], dh ; jmp 0x48cae8
0x00000000004428ca : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae623 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041dcaf : add byte ptr [rbp - 0x42], dh ; ret
0x0000000000475e7a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004529d9 : add byte ptr [rbp - 0x75], cl ; jl 0x452a0a ; and byte ptr [rax + 1], cl ; ret
0x000000000045cc59 : add byte ptr [rbp - 0x75], cl ; jl 0x45cc8a ; and byte ptr [rax + 1], cl ; ret
0x000000000040dc27 : add byte ptr [rbp - 0x76208037], al ; retf 0xdaf7
0x000000000046223f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448164 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x0000000000423d1d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000004674e5 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043e2ec : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000048083f : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004a3f20 : add byte ptr [rbp - 7], bh ; jmp qword ptr [rax]
0x00000000004294b9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474ac8 : add byte ptr [rbx + 0x2566a00d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e63b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000470410 : add byte ptr [rbx + 0x25cde115], cl ; add bh, dh ; ret 0x804
0x0000000000410e48 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416aa7 : add byte ptr [rbx + 0x2b5af505], al ; add byte ptr [rcx], al ; ret
0x000000000047bd71 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442b5e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a69d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b50f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043b03f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000047f5aa : add byte ptr [rbx + 0x4bcd40], bh ; jmp 0x47f583
0x0000000000420467 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000043508f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470f46 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e997 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412841 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004117c5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046329e : add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000049e2af : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483db5 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f6fa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c28fb : add byte ptr [rbx + rax*2 + 0x500000], bl ; clc ; call qword ptr [rdi]
0x00000000004c289b : add byte ptr [rbx + rax*2], bh ; add byte ptr [rax], al ; and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004c10d3 : add byte ptr [rbx + rbp], dh ; add byte ptr [rax], bh ; retf
0x00000000004c30a3 : add byte ptr [rbx + rcx*2], al ; add al, cl ; iretd ; std ; jmp qword ptr [rdx]
0x000000000046a716 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x00000000004705ab : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004752d2 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a677 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480187 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047409e : add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x258c
0x0000000000404f0e : add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x2c84
0x000000000046e5ad : add byte ptr [rbx + rdi + 0xd], cl ; sti ; retf
0x00000000004c6093 : add byte ptr [rbx + rdi*2], dh ; add byte ptr [rax], al ; call 0xffffffffe54c5af6
0x0000000000460768 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047ca97 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47cab1 ; ret
0x0000000000467cda : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410ddf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e6b6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e6af : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e6a8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e6a1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e69a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e693 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045df0e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e405 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e3f0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474b31 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047539e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000041a0a7 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000443d1f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463098 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410644 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d4f6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004067e3 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462cc4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000407380 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b2b4 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a458 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000442bbf : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041683e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c4273 : add byte ptr [rbx*2 - 0x24b80000], dl ; clc ; call qword ptr [rax]
0x00000000004c428b : add byte ptr [rbx*2 - 0x24c00000], ch ; clc ; call qword ptr [rdx]
0x00000000004c8263 : add byte ptr [rbx*4 + 0x8e80000], al ; cld ; call qword ptr [rdx]
0x00000000004c8293 : add byte ptr [rbx*4 + 0x8e80000], dh ; cld ; call qword ptr [rdx]
0x00000000004c827b : add byte ptr [rbx*4 + 0x8f00000], bl ; cld ; call qword ptr [rax]
0x0000000000470e97 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004a3960 : add byte ptr [rbx], bl ; stc ; call qword ptr [rax + 0x20fff91a]
0x0000000000494475 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044f07f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046593f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b3df : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489c5d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426b76 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e61e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040fc39 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000040f642 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000047530f : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000415706 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470f43 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fede : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403943 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042e75c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b388 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a360 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004c06f3 : add byte ptr [rcx + 0x64080000], dl ; cmc ; jmp qword ptr [rax]
0x000000000046af3f : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x0000000000440795 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d514 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d497 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041b0d7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f5be : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d25 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000041729b : add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000043dbff : add byte ptr [rcx + 1], cl ; ret
0x000000000049b51f : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042096a : add byte ptr [rcx + 9], al ; ret
0x0000000000412792 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d51b : add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004c66fb : add byte ptr [rcx + rax*4 - 0x52300000], bl ; cli ; call rdx
0x00000000004c0edb : add byte ptr [rcx + rbp], bh ; add byte ptr [rax - 0x46], dh ; cmc ; call qword ptr [rax]
0x00000000004c3f13 : add byte ptr [rcx + rbx*2 - 0x47e80000], dh ; clc ; call qword ptr [rdi]
0x000000000042cc9f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000041fe9a : add byte ptr [rcx + rcx*4 + 0x57], cl ; adc byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2aa9
0x0000000000412793 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d51c : add byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004518b5 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e3b6
0x0000000000441043 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044ef7f : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x0000000000473d6a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43fff8
0x000000000047e51f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000402dc9 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x43f816
0x0000000000441177 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445532 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000041ae08 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049caff : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440fac : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044548c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440fbb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c56db : add byte ptr [rcx + rsi*2], bh ; add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x00000000004c168b : add byte ptr [rcx + rsi], ch ; add byte ptr [rax], al ; sal bl, 1 ; cmc ; call qword ptr [rdx]
0x000000000048f0bb : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c203 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000489003 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b214 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000041a737 : add byte ptr [rcx - 0x43], al ; loopne 0x41a76b ; add cl, bpl ; retf 0xfffe
0x0000000000405564 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449ed3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449ef0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449f0d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000041a040 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004831d0 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000046336f : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047febb : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000440aaf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e94f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000448e5d : add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000044aaf7 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44aad5
0x0000000000442a27 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044f29a : add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000473568 : add byte ptr [rcx - 0x77], cl ; call 0xffffffffca8c44c3
0x0000000000425b13 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000044353a : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443567 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000040fbd7 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004116b3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458bfe : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000491dbb : add byte ptr [rcx - 0x7d], cl ; jmp 0x491dd7
0x000000000049653b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496557
0x0000000000496b3b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496b57
0x0000000000496e3b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496e57
0x000000000049713b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497157
0x000000000049743b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497457
0x000000000049773b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497757
0x0000000000444217 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445f87 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046cb8f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422cff : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041ffb0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004218cf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ee09 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041848f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a399 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a3a3 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cf71 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047ca9a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x0000000000426322 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426348 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000443172 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000474ace : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x000000000044436c : add byte ptr [rcx], bh ; ret
0x0000000000400c7c : add byte ptr [rcx], bh ; ret 0x860f
0x00000000004682f9 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x000000000049cb70 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b99c : add byte ptr [rcx], ch ; ret 0xd089
0x0000000000413a9a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000043ed8b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047b697 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec3c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b2df : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b2da ; ret
0x000000000046af5a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46af91 ; ret
0x0000000000488d27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000041360f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413628 ; ret
0x000000000047a988 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000488332 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447dbe : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446fb7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044743e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044438b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bda7 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000481354 : add byte ptr [rdi + 0x190], bh ; call 0x41de58
0x0000000000465522 : add byte ptr [rdi + 0x4a1ff6], bh ; call 0x4017a8
0x000000000046553b : add byte ptr [rdi + 0x4a200c], bh ; call 0x4017a8
0x000000000041b02b : add byte ptr [rdi + 0x4a24bc], bh ; call 0x417268
0x000000000041b02a : add byte ptr [rdi + 0x4a24bc], dil ; call 0x417269
0x000000000041b012 : add byte ptr [rdi + 0x4a24eb], bh ; call 0x417268
0x000000000041b011 : add byte ptr [rdi + 0x4a24eb], dil ; call 0x417269
0x00000000004425b2 : add byte ptr [rdi + 0x4a4ddd], bh ; mov eax, ebx ; syscall
0x00000000004425e1 : add byte ptr [rdi + 0x4a4de8], bh ; mov eax, ebx ; syscall
0x000000000044f584 : add byte ptr [rdi + 0x4a6d20], bh ; mov eax, ecx ; syscall
0x0000000000454ca1 : add byte ptr [rdi + 0x4b2d88], bh ; call 0x4017a8
0x000000000045549f : add byte ptr [rdi + 0x4b2db8], bh ; call 0x4017a8
0x0000000000432e95 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445940 : add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x000000000044593f : add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000402c47 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047acc1 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047adec : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x000000000049c1b9 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c1e1 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c6cf3 : add byte ptr [rdi + rax*4 - 0x1c780000], dl ; cli ; jmp qword ptr [rdx]
0x00000000004c5473 : add byte ptr [rdi + rbp*2], dl ; add byte ptr [rax], al ; js 0x4c5487 ; cli ; jmp rdx
0x000000000045b8f4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a8e0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c7513 : add byte ptr [rdi + rcx*4 + 0x2a880000], dh ; sti ; call rsp
0x0000000000443537 : add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x0000000000443564 : add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004435f1 : add byte ptr [rdi - 0x76b7ff94], bl ; retf 0x348
0x00000000004a3f64 : add byte ptr [rdi - 7], bh ; jmp qword ptr [rax]
0x00000000004a3e98 : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x00000000004a3b38 : add byte ptr [rdi], bl ; stc ; call qword ptr [rax + 0x20fff91e]
0x000000000043482a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e597 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043588f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004358ff : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448d5e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462cb7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000004481ca : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000422b6f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466a30 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000041200f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e76f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004263cf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cfcf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042626f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042625f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042624f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004673d7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d798 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004032c3 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000044960a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420964 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460d39 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451ed9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dd68 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044a0ec : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000042027a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040edb9 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e13b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467e89 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000443176 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467dfd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bd6a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000476185 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000042688e : add byte ptr [rdx + 0x42fd90], bh ; cmove rax, rdx ; ret
0x000000000043afff : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000043984f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000444baf : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c356 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c7fa3 : add byte ptr [rdx + rbx*4], al ; add al, ch ; add ah, bh ; jmp qword ptr [rax]
0x00000000004adf77 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bf003 : add byte ptr [rdx + rcx - 0x3680000], ah ; hlt ; call qword ptr [rax]
0x00000000004bf01b : add byte ptr [rdx + rcx - 0x3700000], bh ; hlt ; call qword ptr [rdx]
0x00000000004c1f83 : add byte ptr [rdx + rdi], ah ; add byte ptr [rax], al ; or dl, al ; idiv edi ; retf 2
0x00000000004c377b : add byte ptr [rdx + rdx*2], bl ; add byte ptr [rax], al ; adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x00000000004c780b : add byte ptr [rdx + rdx*4 + 0x38700000], ch ; sti ; jmp qword ptr [rdx]
0x00000000004c57e3 : add byte ptr [rdx + rsi*2 + 0x18880000], al ; cli ; jmp qword ptr [rax]
0x00000000004c881b : add byte ptr [rdx - 0x46600000], bh ; cld ; call qword ptr [rax]
0x0000000000469b40 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b55
0x00000000004890b5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f7fd : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x0000000000442ac7 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042ea64 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457fd3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000426164 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f85 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000441172 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000044103e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440fb6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004413f0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000441163 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000044102f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440fa7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e8c7 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c9383 : add byte ptr [rsi + rbp*4], ah ; add byte ptr [rax], al ; or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004c92e0 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c3bfb : add byte ptr [rsi + rdx*2 - 0x65800000], bl ; clc ; jmp rbx
0x000000000046aded : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x00000000004400ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046acfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x00000000004400cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x0000000000442f1d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004bdecc : add byte ptr [rsi - 3], 0xff ; ror byte ptr [rax - 3], 1 ; jmp qword ptr [rax]
0x00000000004a3f44 : add byte ptr [rsi - 7], bh ; jmp qword ptr [rax]
0x00000000004a3e28 : add byte ptr [rsi], 0xf9 ; inc dword ptr [rax] ; or cl, bh ; call rax
0x00000000004c2a1b : add byte ptr [rsp + rax*2 + 0x1b00000], bh ; clc ; call rsp
0x00000000004a5bb7 : add byte ptr [rsp + rax], al ; add al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a55
0x00000000004c121b : add byte ptr [rsp + rbp - 0x2e700000], bh ; cmc ; call rdx
0x00000000004c71cb : add byte ptr [rsp + rcx*4], ch ; add byte ptr [rax], al ; cdq ; std ; call rcx
0x00000000004bf9fb : add byte ptr [rsp + rdx + 0x2dc00000], bl ; cmc ; call qword ptr [rax]
0x00000000004c59bb : add byte ptr [rsp + rsi*2], bl ; add al, al ; and edx, edi ; jmp rdi
0x000000000045ca26 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a010 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045c714 : add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x00000000004696f7 : add byte ptr es:[rax + 0xf], cl ; retf 0x8948
0x0000000000469e3b : add byte ptr es:[rax + 1], cl ; retf
0x00000000004694c7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091e1f
0x00000000004680b3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000468a23 : add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000417299 : add byte ptr es:[rcx + 0xf], cl ; retf 0xff31
0x0000000000467e88 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467dfc : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469b3f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b56
0x0000000000425f18 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004428c7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004135e0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c4a95 : add byte ptr gs:[rax], al ; sbb ah, ah ; stc ; jmp rax
0x0000000000411d43 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045b8f2 : add byte ptr ss:[r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a8de : add byte ptr ss:[r15 + r9 + 0x45], cl ; ret 0xf4c
0x00000000004c1bf5 : add byte ptr ss:[rax], al ; jbe 0x4c1bf7 ; call qword ptr [rax]
0x00000000004a385c : add ch, ah ; clc ; jmp rax
0x00000000004ae383 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000414310 : add ch, al ; pop rdx ; retf
0x00000000004588ef : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb5dc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb5dd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046758b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458df0 : add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000464e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d550 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041afed : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472688 : add ch, cl ; ret 0xfffd
0x000000000049e34a : add ch, dl ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3874 : add cl, ah ; clc ; call rax
0x000000000045a9b9 : add cl, bl ; in eax, 0xdf ; loopne 0x45a94e ; ret 0xe680
0x00000000004ba9aa : add cl, bl ; retf 0xea91
0x000000000041a73c : add cl, bpl ; retf 0xfffe
0x0000000000439877 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045de4e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000489754 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048977d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044b8dc : add cl, byte ptr [rax + 0x39] ; int 0xf
0x0000000000449b93 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fa7b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004325ba : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000045c65d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041d8ec : add cl, byte ptr [rax + 0xf] ; retf 0x8348
0x0000000000410829 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000484015 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d203 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439878 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004397e5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047c0c1 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004166e2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041b1d2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047b570 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd80
0x000000000046b3a9 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000479acc : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004239b0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004487a4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000423a13 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004644b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bfdf8 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000048a143 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004356d2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c274 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x0000000000403d5b : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047d704 : add cl, byte ptr [rcx - 0x73] ; jl 0x47d6d6 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000043f78f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f6e7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000404468 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000041b618 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462e95 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e4c9 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e36d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7cff : add cl, byte ptr [rdx] ; ret
0x000000000047679d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443f8f : add cl, ch ; ret
0x0000000000408658 : add cl, ch ; ret 0xffe2
0x00000000004725b4 : add cl, ch ; ret 0xfffd
0x0000000000407bc4 : add cl, ch ; retf
0x000000000048baca : add cl, ch ; retf 0xfff2
0x0000000000453a10 : add cl, ch ; retf 0xfffa
0x000000000043f19f : add cl, ch ; retf 0xfffc
0x000000000041f42e : add cl, ch ; retf 0xfffd
0x000000000041a73d : add cl, ch ; retf 0xfffe
0x0000000000400a23 : add cl, cl ; ret
0x00000000004ba863 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004ba862 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a37bc : add dh, ah ; clc ; jmp rax
0x00000000004bfd00 : add dh, ah ; ret
0x00000000004b202b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004656e2 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b969e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004b1477 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435883 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ff9b : add dh, bl ; ret
0x00000000004844a8 : add dh, byte ptr [rax] ; jmp 0x480f41
0x00000000004bfbfe : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e8d2 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470aa0 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x0000000000412e03 : add dh, byte ptr [rdx + rsi + 0x48] ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041771a : add dh, dh ; ret
0x00000000004471c5 : add dh, dh ; ret 0x4801
0x0000000000426a28 : add dh, dh ; ret 0x7404
0x0000000000400eba : add dh, dh ; ret 0x7420
0x000000000043bf27 : add dh, dh ; ret 0x7501
0x000000000043bf34 : add dh, dh ; ret 0x7502
0x000000000043bf41 : add dh, dh ; ret 0x7504
0x000000000043bef9 : add dh, dh ; ret 0x7510
0x000000000043bf06 : add dh, dh ; ret 0x7520
0x000000000043bf13 : add dh, dh ; ret 0x7540
0x000000000041b615 : add dh, dh ; ret 0xf02
0x0000000000470a8a : add dh, dh ; ret 0xf08
0x00000000004bdf4c : add dl, 0xfd ; dec dword ptr [rax] ; ret 0xfffd
0x00000000004c5341 : add dl, bh ; call rsi
0x000000000046d0db : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c9547 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000004c1c9c : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449ed6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000004625ce : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462d22 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449540 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043b001 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047e761 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x000000000048ae22 : add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047eac1 : add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x0000000000415361 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000474919 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047492b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479c60 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045994d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041cc4d : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047c484 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049cca9 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000475b76 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047c00d : add dword ptr [rax + 1], ecx ; ret
0x000000000040dba6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e8c2 : add dword ptr [rax + 3], edi ; je 0x49e8d9 ; ret
0x000000000041caaa : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000004c500e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004ba45b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4ba4c7 ; retf
0x0000000000458436 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402893 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b60a : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439851 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004747bd : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004397e2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415163 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004189de : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004152fa : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465611 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471df7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041304f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047b574 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000047471d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004259d2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004739d4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004625cf : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450799 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041b1d6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044478c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452c73 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446e9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000048a034 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d833 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462d23 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048147a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048926c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c66fd : add dword ptr [rax], 0xfaadd000 ; call rdx
0x0000000000481357 : add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x000000000049ae1b : add dword ptr [rax], eax ; add bl, ch ; retf
0x000000000040f916 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c3e6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b55e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473ae4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044740e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000047ee57 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421279 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b38b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000411706 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f2f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049c045 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e7a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e8d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405a77 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c957 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040edbd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042379d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449994 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004257ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c21f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004236f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d9d6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d986 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d83a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040d9fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d913 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d89e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040da9e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da72 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d8e0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d86e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044c742 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000464090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444c11 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b147a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b062a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b0452 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b044a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b048a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0482 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049c1bb : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401688 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440f87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046a1b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a184
0x000000000046bdab : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bd81
0x0000000000487025 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486ffa
0x000000000049caad : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000442a0e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ee53 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044ee81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c728 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a70e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000441174 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441040 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440fb8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004413fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004629e4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004622f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c69b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415763 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ebec : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444337 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041b61c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000004252f8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049c01e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444423 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000404f0c : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x2c84
0x0000000000467cd8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410642 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462cc2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044f298 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x000000000044600c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041ffae : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000044960e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d31b : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a3a1 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004682f7 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x0000000000413a98 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446fb5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004481c8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000043bf25 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043bf32 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043bf3f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bef7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bf04 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bf11 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004214e8 : add dword ptr [rax], eax ; ret
0x0000000000425dd1 : add dword ptr [rax], edi ; ret
0x00000000004259d6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043e3a7 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004ba9a4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000047e512 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048a123 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041ee0d : add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x0000000000486047 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442839 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bad8a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435742 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b996a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000040d5dd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c95a1 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c959e : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000045c70f : add dword ptr [rcx + 0x26f3960d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000046a2c9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446fda : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447468 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041bc4a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439881 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004620e0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000049dbff : add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000049ae16 : add dword ptr [rcx - 0x78], eax ; xchg eax, esi ; jo 0x49ae26 ; add byte ptr [rax], al ; jmp 0x49adf4
0x0000000000445fbd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004042cd : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004257c7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f9f1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041bf55 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047778b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047532a : add dword ptr [rcx], edi ; retf
0x00000000004ba8b5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c6f1d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c6e5d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6ebd : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c6e6e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6ece : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6f2e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2b0d : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7cfb : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7c4a : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e408 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e3f3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045be81 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041853e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a8bd : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000044740a : add dword ptr [rdi], ecx ; test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041d321 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474b37 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x00000000004753a4 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e2cd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000049a0d0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000042ad86 : add dword ptr [rdx + 0x710d8d48], edx ; retf
0x0000000000403d55 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043de92 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000435a8d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004885ab : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfcfe : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046dad7 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004ba58f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000046ddc7 : add dword ptr [rdx - 0x77], eax ; je 0x46dd57 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046ddc6 : add dword ptr [rdx - 0x77], eax ; je 0x46dd58 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c0f6d : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6c2d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c931c : add dword ptr [rdx], 0x54 ; ret
0x00000000004c66ec : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6c24 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c92c4 : add dword ptr [rdx], 0x69 ; ret
0x00000000004c515c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4f34 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c056c : add dword ptr [rdx], 2 ; ret
0x00000000004bfe0a : add dword ptr [rdx], ecx ; ret
0x00000000004bf72b : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000416aa8 : add dword ptr [rip + 0x2b5af5], 1 ; ret
0x00000000004bf216 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf22c ; ret
0x00000000004bf224 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439862 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004c010e : add dword ptr [rsi], 0xa ; ret
0x00000000004c0180 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1c9d : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d2d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c2666 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004979e7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7d12 : add dword ptr es:[rdx], ecx ; ret
0x0000000000426e88 : add eax, 0x12ad3 ; ret
0x0000000000423958 : add eax, 0x14853 ; ret
0x00000000004262fa : add eax, 0x15e71 ; ret
0x00000000004268d4 : add eax, 0x17647 ; ret
0x00000000004214e5 : add eax, 0x1a966 ; ret
0x00000000004262de : add eax, 0x1d ; ret
0x000000000044f7fc : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c17e4 : add eax, 0x2300e4a ; ret
0x00000000004887b1 : add eax, 0x244aaa ; ret
0x00000000004769c0 : add eax, 0x256832 ; jne 0x476a09 ; ret
0x00000000004741cc : add eax, 0x258b97 ; mov qword ptr [rsi], rax ; ret
0x000000000047416b : add eax, 0x258c00 ; ret
0x000000000047408a : add eax, 0x258ce1 ; add rsp, 8 ; ret
0x000000000044cc12 : add eax, 0x27fae1 ; ret
0x00000000004458a2 : add eax, 0x287a21 ; ret
0x0000000000444351 : add eax, 0x288f5a ; test eax, eax ; je 0x444369 ; ret
0x000000000041de39 : add eax, 0x2ae7c6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416a12 : add eax, 0x2b36a9 ; ret
0x0000000000416b16 : add eax, 0x2b5a89 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040156b : add eax, 0x2c8b20 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c1c9b : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000004897b1 : add eax, 0x394d0000 ; retf
0x000000000043b098 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004398c8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b596 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043b119 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000439909 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047ab16 : add eax, 0x5b000000 ; ret
0x00000000004b201d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418dd5 : add eax, 0x5c415d5b ; ret
0x00000000004b202d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000426fa4 : add eax, 0x67 ; ret
0x000000000048a1a3 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e2c7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042338d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a811 : add eax, 0x83480000 ; ret 0xe910
0x00000000004232e1 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004567ed : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043b09b : add eax, 0x8428d48 ; ret
0x00000000004262f2 : add eax, 0x8449 ; ret
0x000000000048588a : add eax, 0x89000001 ; ret 0x348
0x0000000000424e78 : add eax, 0x894d0000 ; retf
0x0000000000449b8d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449eee : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449f0b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f79a : add eax, 0xc0310000 ; ret
0x000000000043b11d : add eax, 0xc428d48 ; ret
0x000000000043bbfd : add eax, 0xc478d48 ; ret
0x0000000000441422 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441447 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441590 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441629 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a397 : add eax, 0xf6410000 ; ret 0xf01
0x0000000000435733 : add eax, 0xf7f0ff3 ; ret
0x00000000004739cf : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000478afa : add eax, 0xfffffff8 ; ret
0x000000000043e3a5 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466881 : add eax, 1 ; ret
0x0000000000444bf5 : add eax, 2 ; push rax ; call rbx
0x0000000000466878 : add eax, 2 ; ret
0x0000000000421738 : add eax, 3 ; ret
0x0000000000426ff7 : add eax, 4 ; ret
0x000000000044f759 : add eax, dword ptr [0] ; ret
0x0000000000470e98 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418f73 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000417a3b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004713ee : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000418f4f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044de18 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fdd3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042352d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9b1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423551 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445846 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e8c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e8d7 ; ret
0x000000000044018c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000046a713 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044196d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004419c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441a44 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441b44 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004125a5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000421739 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476a93 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476b04 ; pop rbx ; ret
0x0000000000495d6a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e403 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e61c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000448e5b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x0000000000442a25 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000497739 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497759
0x0000000000418542 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000442ac5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470a88 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000040176a : add eax, dword ptr [rax] ; mov rdi, qword ptr [rsp + 8] ; call 0x41e1f9
0x0000000000445531 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044548b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444e3a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e620 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e640 : add eax, dword ptr [rax] ; ret
0x00000000004c60c3 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bfdf2 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047ec41 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6e71 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004114b4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047cecd : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7dcb : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf81a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046b0ca : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471ca5 : add eax, dword ptr [rdi] ; call rax
0x00000000004788a4 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475ff9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6ed1 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6f31 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf56a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c46e2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfcfa : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c2662 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000047180b : add eax, dword ptr [rsp] ; call rax
0x00000000004977df : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e6e8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049a13e : add eax, eax ; jmp r8
0x000000000049b666 : add eax, eax ; jmp rax
0x000000000045a5e8 : add eax, eax ; ret
0x00000000004421e9 : add eax, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4421f9 ; call rbx
0x0000000000425f16 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000040563e : add eax, ebp ; in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405546 : add eax, ebp ; in eax, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b30e : add eax, ebp ; jmp rax
0x000000000049d69b : add eax, ebx ; cmp rdi, r8 ; jae 0x49d66b ; mov rdx, rcx ; jmp 0x49d683
0x0000000000416783 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000042601a : add eax, ecx ; ret
0x0000000000426017 : add eax, edi ; add rax, rcx ; ret
0x00000000004c2a21 : add eax, edi ; call rsp
0x00000000004a33d9 : add eax, edi ; jmp rax
0x0000000000426254 : add eax, edi ; ret
0x0000000000423c26 : add eax, edx ; sub rax, rdi ; ret
0x000000000049bbee : add eax, esi ; jmp rax
0x00000000004673f7 : add eax, esi ; ret
0x000000000045a5e7 : add eax, r8d ; ret
0x0000000000457b28 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b90d : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c954a : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000047bebd : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b94f7 : add ebp, ebp ; retf
0x00000000004c954c : add ebp, esi ; add al, byte ptr [rax] ; ret
0x0000000000471807 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x00000000004887ea : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6ec2 : add ebx, dword ptr [rbx + 3] ; ret
0x00000000004714a3 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bfe08 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478b91 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000048560a : add ebx, ebp ; ret 0x8d48
0x00000000004358f3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x00000000004269b4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x4269a9 ; ret
0x0000000000487021 : add ecx, 8 ; mov esi, 1 ; jmp 0x486ffe
0x00000000004398b5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000004183a9 : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000449baf : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004644b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432bca : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x00000000004154b5 : add ecx, dword ptr [rax + 0x39] ; retf 0x8948
0x000000000046dd09 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b60e : add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004398b9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047de88 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d64e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418e98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004346e8 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004473d5 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e01d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e0f7 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000411c37 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048a163 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435662 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6e62 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b534 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e4df : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004398b6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046dd3b : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c2052 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c5540 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b90d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000004521bc : add ecx, ebp ; ret
0x000000000046b4bb : add ecx, ebp ; retf 0xfffe
0x000000000042fdbe : add ecx, ebx ; jmp r9
0x000000000042e762 : add ecx, ebx ; jmp rcx
0x000000000049a366 : add ecx, esi ; jmp rcx
0x0000000000470c87 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ee9f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004647c7 : add edi, dword ptr [rcx] ; retf 0xf48
0x000000000042fdbb : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004be9e9 : add edi, esi ; call rdi
0x00000000004727ec : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c94bb : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x00000000004764b5 : add edx, eax ; jmp 0x4764ca
0x0000000000479722 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452b83 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444440 : add edx, ebx ; loopne 0x4444a4 ; pop rbp ; ret
0x00000000004bf6da : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c275a : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d607 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c95a2 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435813 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f4dc : add esi, ebx ; ret
0x000000000043e6d0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fdb8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004633e8 : add esi, esi ; ret 0x7420
0x0000000000487d47 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040ff21 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e829 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420687 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e811 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473712 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004736f4 : add esp, 0x140 ; pop rbx ; ret
0x000000000043ffdd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416f01 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410da7 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f4b0 : add esp, 0x18 ; ret
0x0000000000444420 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452403 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048811c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445961 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041520f : add esp, 0x20 ; pop rbx ; ret
0x000000000047b1a9 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040db78 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414a6e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488071 : add esp, 0x28 ; ret
0x000000000046af12 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478789 : add esp, 0x30 ; pop rbx ; ret
0x000000000043ee70 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478816 : add esp, 0x38 ; ret
0x000000000047869c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046ae82 : add esp, 0x48 ; movzx eax, al ; ret
0x00000000004788a8 : add esp, 0x48 ; ret
0x000000000047862a : add esp, 0x50 ; jmp qword ptr [rax]
0x00000000004881c4 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466a3c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f760 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478992 : add esp, 0x68 ; ret
0x000000000044283d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f871 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046ab9b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414627 : add esp, 0x80 ; ret
0x0000000000420146 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046ac99 : add esp, 0x90 ; pop rbx ; ret
0x000000000046acb7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041316d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040116f : add esp, 0x98 ; ret
0x000000000044fab9 : add esp, 0xd0 ; ret
0x000000000040f3e8 : add esp, 0xd8 ; ret
0x0000000000478565 : add esp, 8 ; jmp rax
0x0000000000411153 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fdac : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043ff3a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417aa8 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eba0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f623 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004880a7 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dfae : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004059c1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401843 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412db8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423a79 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473fe1 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004babeb : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004c6a92 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7d11 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x0000000000446e9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042395a : add qword ptr [rax], rax ; ret
0x000000000041bf54 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c7cfa : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047f5ae : add r11b, bpl ; retf 0x1f0f
0x000000000042689c : add r11b, sil ; ret
0x00000000004358f2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435882 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435812 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f96d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495e10 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a13d : add r8, rax ; jmp r8
0x0000000000454ca5 : add r8b, bpl ; hlt ; retf 0xfffa
0x0000000000454c41 : add r8b, bpl ; pop rax ; retf
0x0000000000474dd6 : add r8b, bpl ; ret
0x0000000000483dd7 : add r8b, bpl ; ret 0xf7d9
0x000000000046b667 : add r8b, bpl ; ret 0xf94c
0x000000000049f777 : add r8b, bpl ; ret 0xfa25
0x0000000000454c73 : add r8b, bpl ; retf
0x000000000046d6cf : add r8b, bpl ; retf 0xf940
0x000000000046b45f : add r8b, bpl ; retf 0xf94e
0x000000000042fdbd : add r9, r11 ; jmp r9
0x00000000004ba9a9 : add r9b, bl ; retf 0xea91
0x000000000041f42d : add r9b, bpl ; retf 0xfffd
0x000000000044b8db : add r9b, byte ptr [r8 + 0x39] ; int 0xf
0x0000000000449ef3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449f10 : add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000004975c2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478af9 : add rax, -8 ; ret
0x000000000043e3a4 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466880 : add rax, 1 ; ret
0x0000000000466877 : add rax, 2 ; ret
0x0000000000466890 : add rax, 3 ; ret
0x000000000044f758 : add rax, qword ptr [0] ; ret
0x000000000047180a : add rax, qword ptr [r12] ; call rax
0x0000000000471ca4 : add rax, qword ptr [r15] ; call rax
0x0000000000448e5a : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000047ec40 : add rax, qword ptr [rbx] ; call rax
0x00000000004788a3 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475ff8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f757 : add rax, qword ptr fs:[0] ; ret
0x000000000049bbed : add rax, r14 ; jmp rax
0x000000000049b665 : add rax, r8 ; jmp rax
0x000000000049b30d : add rax, rbp ; jmp rax
0x0000000000426019 : add rax, rcx ; ret
0x0000000000426016 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426253 : add rax, rdi ; ret
0x0000000000423c25 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047bebc : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000471806 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e761 : add rcx, r11 ; jmp rcx
0x000000000049a365 : add rcx, r14 ; jmp rcx
0x0000000000470c86 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ee9e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fdba : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004727eb : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452b82 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000479721 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004764b4 : add rdx, rax ; jmp 0x4764cb
0x0000000000487d46 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040ff20 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e828 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e810 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736f3 : add rsp, 0x140 ; pop rbx ; ret
0x000000000043ffdc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410da6 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f4af : add rsp, 0x18 ; ret
0x000000000044441f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452402 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048811b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445960 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041520e : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b1a8 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000414a6d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488070 : add rsp, 0x28 ; ret
0x000000000046af11 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478788 : add rsp, 0x30 ; pop rbx ; ret
0x000000000043ee6f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478815 : add rsp, 0x38 ; ret
0x000000000047869b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046ae81 : add rsp, 0x48 ; movzx eax, al ; ret
0x00000000004788a7 : add rsp, 0x48 ; ret
0x0000000000478629 : add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004881c3 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466a3b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f75f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478991 : add rsp, 0x68 ; ret
0x000000000044283c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046ab9a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414626 : add rsp, 0x80 ; ret
0x000000000046ac98 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041316c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040116e : add rsp, 0x98 ; ret
0x000000000044fab8 : add rsp, 0xd0 ; ret
0x000000000040f3e7 : add rsp, 0xd8 ; ret
0x0000000000478564 : add rsp, 8 ; jmp rax
0x0000000000411152 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fdab : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043ff39 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417aa7 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb9f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f622 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004880a6 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dfad : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401842 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412db7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423a78 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c48e : add sil, sil ; ret 0x7404
0x00000000004885aa : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a37b8 : and ah, ah ; clc ; inc dword ptr [rax] ; out 0xf8, al ; jmp rax
0x00000000004a38ac : and ah, ch ; clc ; call rax
0x0000000000491d35 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004885a8 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004887b4 : and al, 0 ; ret
0x000000000048cb0f : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48caea
0x000000000043f78d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c568 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000447243 : and al, 0x10 ; call r12
0x000000000041b7cd : and al, 0x10 ; call rax
0x0000000000465099 : and al, 0x10 ; call rbx
0x0000000000400c15 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440721 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447537 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e9a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000048806b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049cc15 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000004506b6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000004656e5 : and al, 0x14 ; add al, ch ; ret
0x0000000000418e06 : and al, 0x14 ; pop r12 ; ret
0x000000000041dfab : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044ba8c : and al, 0x18 ; call r14
0x0000000000400c72 : and al, 0x18 ; call rax
0x0000000000465094 : and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x000000000041b7c8 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444b68 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448280 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b270 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044723e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000465172 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418dd2 : and al, 0x1c ; je 0x418de3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418dd1 : and al, 0x1c ; je 0x418de4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044753c : and al, 0x20 ; call rax
0x0000000000466bf7 : and al, 0x20 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000450cd3 : and al, 0x20 ; mov rdi, r12 ; call r15
0x000000000046a4ed : and al, 0x26 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004b9724 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000478810 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489c5b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004479b7 : and al, 0x28 ; call r12
0x00000000004486e2 : and al, 0x28 ; call r14
0x0000000000447044 : and al, 0x28 ; call r15
0x0000000000447e9f : and al, 0x28 ; call rax
0x0000000000447a6b : and al, 0x28 ; call rbx
0x0000000000466f12 : and al, 0x28 ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466c9f : and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x000000000041ecc3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048fcef : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b2cc : and al, 0x30 ; call r14
0x00000000004736bf : and al, 0x30 ; call r9
0x00000000004498ea : and al, 0x30 ; call rbx
0x000000000048818f : and al, 0x30 ; je 0x4881a3 ; mov edi, 0x6cb140 ; call rax
0x000000000040e0b9 : and al, 0x30 ; lea r15, [rbx + r14] ; call rax
0x0000000000466add : and al, 0x30 ; lea rcx, [rax + 1] ; call rbx
0x0000000000449d2a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004470e1 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447a66 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041addb : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000004822ff : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048ce92 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004789be : and al, 0x38 ; add rsp, 0x68 ; ret
0x00000000004736ba : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004498e5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004c1f84 : and al, 0x3a ; add byte ptr [rax], al ; or dl, al ; idiv edi ; retf 2
0x0000000000478699 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478627 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000448c6a : and al, 0x40 ; call r15
0x0000000000466bfc : and al, 0x40 ; call rbx
0x0000000000449011 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043ffdb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f4ae : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000041e2d3 : and al, 0x48 ; call rax
0x000000000046fb24 : and al, 0x48 ; lea edi, [rax + 0x6cb1e0] ; call rdx
0x000000000044237d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x00000000004479b2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044703f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448c65 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467302 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049e09c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044aafb : and al, 0x49 ; mov esp, esi ; jmp 0x44aad1
0x000000000041b015 : and al, 0x4a ; add al, ch ; ret 0xffff
0x000000000044ba87 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041caed : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418e01 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466e10 : and al, 0x60 ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000041e5db : and al, 0x68 ; call rax
0x000000000041f8bb : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004117de : and al, 0x74 ; ret 0x8b4c
0x0000000000472d5a : and al, 0x75 ; ret
0x000000000047ba2e : and al, 0x78 ; call r12
0x000000000047befd : and al, 0x78 ; lea rdi, [rsp + 0x78] ; call r12
0x00000000004486dd : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b2c7 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b84f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c6d4 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004471c1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041bfd6 : and al, 0x89 ; ret 0xb48b
0x000000000041bf52 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000043f6e5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000004c9384 : and al, 0xae ; add byte ptr [rax], al ; or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x000000000046afc9 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f589 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f5e9 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f649 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ae39 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049c0fb : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000047883f : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400c19 : and al, 0xc ; call r12
0x0000000000400c6d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004be42c : and al, 0xd6 ; std ; call qword ptr [rcx]
0x000000000047bcaa : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040886b : and al, 0xe8 ; call rbx
0x00000000004099c4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004099da : and al, 0xe8 ; nop ; ret 0xffff
0x000000000040997b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x00000000004099fc : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409a12 : and al, 0xe8 ; pop rax ; ret 0xffff
0x000000000040991c : and al, 0xe8 ; ret
0x0000000000409a23 : and al, 0xe8 ; ret 0xffff
0x000000000040a71f : and al, 0xe8 ; retf
0x0000000000406520 : and al, 0xe8 ; retf 0x17c
0x000000000040cfa0 : and al, 0xe8 ; retf 0xff8c
0x000000000041d520 : and al, 0xe8 ; retf 0xffa1
0x00000000004091a0 : and al, 0xe8 ; retf 0xffca
0x00000000004091c0 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004098d3 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000408595 : and al, 0xe9 ; retf
0x00000000004786d0 : and al, 0xe9 ; retf 0x76
0x0000000000491ad8 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cff5 : and al, 0xf ; ret 0x8348
0x000000000041c477 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x00000000004a37b0 : and al, 0xf8 ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x000000000042c596 : and al, 0xf8 ; jne 0x42c472 ; ret
0x0000000000491a91 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491a97 : and al, 0xf8 ; ret
0x00000000004a3e31 : and al, 0xf9 ; call rax
0x0000000000491a4b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491a51 : and al, 0xfc ; ret
0x000000000044f827 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f82b : and al, 0xfe ; ret
0x0000000000441fba : and al, 0xff ; ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41e1f8
0x000000000046a1b6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fc3c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000004898df : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x4898ba
0x000000000043e826 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047ad22 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409211 : and al, 8 ; call 0x405c74
0x0000000000409210 : and al, 8 ; call 0x405c75
0x000000000040176f : and al, 8 ; call 0x41e1f4
0x0000000000440638 : and al, 8 ; call rbx
0x00000000004880e9 : and al, 8 ; je 0x4880fd ; mov edi, 0x6cb140 ; call rax
0x000000000043f7f1 : and al, 8 ; jmp 0x43f768
0x000000000043fbfb : and al, 8 ; mov eax, 0x101 ; syscall
0x000000000043fcb2 : and al, 8 ; mov eax, 3 ; syscall
0x00000000004783d0 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041b884 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000409180 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c78
0x000000000040917f : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c79
0x000000000040e276 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004423c2 : and al, 8 ; xor eax, eax ; syscall
0x00000000004c0845 : and al, byte ptr [rax] ; add al, ch ; cmc ; call qword ptr [rsi]
0x00000000004a0ac8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491ede : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410e46 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040737e : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049ee33 : and al, byte ptr [rax] ; jne 0x49ee1d ; pop rbx ; ret
0x000000000049e1f4 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000423a2a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004a38a4 : and al, ch ; clc ; jmp qword ptr [rax]
0x0000000000466ef7 : and al, ch ; ret
0x0000000000474acc : and ax, 0x100 ; pop rbx ; ret
0x000000000045d54e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a3858 : and bl, ah ; clc ; inc dword ptr [rax] ; in eax, 0xf8 ; jmp rax
0x0000000000474913 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046284b : and bl, ch ; retf 0x9066
0x000000000040dc1f : and bl, dh ; ret
0x000000000046762e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000041a043 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000414e34 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049ea94 : and byte ptr [rax + 0x39], cl ; ret
0x000000000041a0d9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000410617 : and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x00000000004529de : and byte ptr [rax + 1], cl ; ret
0x0000000000423af8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423c1d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046597e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048f830 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000488612 : and byte ptr [rax - 0x2f], cl ; jmp 0x4885d7
0x000000000040e9e0 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000466bf8 : and byte ptr [rax - 0x73], cl ; je 0x466c27 ; call rbx
0x000000000041bce3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045d47c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000040ed23 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469b44 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445f94 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00000000004524b6 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045ad5d : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044f134 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f148 ; call rax
0x000000000049d26b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445e2e : and byte ptr [rax - 0x7d], cl ; ret
0x000000000041a044 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412632 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043e6b3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049212e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c28a0 : and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004bd259 : and byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004302a5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000000000466df2 : and byte ptr [rbp - 0x73], cl ; jl 0x466d85 ; add al, 0xe8 ; ret
0x00000000004c7dce : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bb4c8 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405bc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046762f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445963 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf81d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bfdf5 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004606ae : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000040156c : and byte ptr [rbx - 0x3fceffd4], cl ; ret
0x0000000000455710 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000463039 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004a3b90 : and byte ptr [rbx], dl ; stc ; jmp qword ptr [rax + 0x20fff912]
0x000000000042689a : and byte ptr [rcx + 0x43], bl ; add bl, dh ; ret
0x0000000000414e35 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c4616 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450cd4 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452405 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004a3b88 : and byte ptr [rcx + rdi*8], dl ; jmp qword ptr [rax + 0x20fff913]
0x0000000000491ad5 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445f1c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000445f09 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bf00 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000046553e : and byte ptr [rdx], cl ; call 0x4017a5
0x00000000004a3b98 : and byte ptr [rdx], dl ; stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3b80 : and byte ptr [rip + 0x14a0fff9], dl ; stc ; jmp qword ptr [rax]
0x000000000042e7fa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c46e5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000466872 : and ch, 0xf ; je 0x466899 ; add rax, 2 ; ret
0x000000000046685d : and cl, 0xf ; je 0x466885 ; ret
0x000000000041c7ce : and cl, bpl ; ret 0xfff9
0x000000000047eb83 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004263dd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041c7cf : and cl, ch ; ret 0xfff9
0x00000000004269c7 : and dh, dh ; ret 0x7504
0x000000000045d54d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a37d4 : and dl, ah ; clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a38a8 : and dl, ch ; clc ; jmp qword ptr [rax]
0x00000000004c06f5 : and dword ptr [rax], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rax]
0x0000000000497eae : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457989 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb242 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415d9c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040fbd9 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000048ee9c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000045a675 : and dword ptr [rdi], esp ; add byte ptr [rbp + 0xa], dh ; jmp 0x45a6a7
0x0000000000454c26 : and dword ptr [rip + 0x71e8004b], ebp ; retf
0x00000000004b82f9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb241 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f75b : and eax, 0 ; ret
0x000000000049cd8a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047cac6 : and eax, 0x2d0 ; ret
0x000000000040ea31 : and eax, 0x30 ; call rax
0x000000000040e9e9 : and eax, 0x30 ; call rdx
0x00000000004769c3 : and eax, 0x38754000 ; ret
0x000000000043e61d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e63d : and eax, 0x3fc00 ; ret
0x000000000043e5fc : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000471340 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f66b : and eax, 0x4e ; add byte ptr [rax], al ; ret
0x00000000004741cf : and eax, 0x6894800 ; ret
0x000000000043e670 : and eax, 0x7ff80000 ; ret
0x0000000000474ab3 : and eax, 0x89485300 ; ret
0x000000000046a3f9 : and eax, 0x894c0026 ; ret
0x000000000041b0d6 : and eax, 0x950f4100 ; ret
0x0000000000442aa7 : and eax, 0xc ; cmp eax, 4 ; je 0x442ab8 ; ret
0x000000000047409d : and eax, 0xd8b4c00 ; retf 0x258c
0x0000000000400d2f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444556 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478b8c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000497d05 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491db9 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x491dd9
0x0000000000415d9d : and ebp, edi ; pop rbx ; ret
0x0000000000442a42 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442a55 ; ret
0x00000000004b99f4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042fd75 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f4a8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000041a15b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041ff7c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000416b4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004c59c1 : and edx, edi ; jmp rdi
0x0000000000491aae : and esi, 0xe0837fff ; jg 0x491ac7 ; ret 0x5488
0x00000000004a00c9 : and esp, ecx ; idiv edi ; nop dword ptr [rax] ; ret
0x000000000043ec3e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000467087 : bnd je 0x467096 ; test edx, edx ; jne 0x467088 ; ret
0x000000000042ce6a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426250 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426260 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426270 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426240 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042618f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042d063 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000423ac6 : bsf eax, edx ; ret
0x0000000000423c22 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042d180 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000423b12 : bsf rax, rdx ; ret
0x0000000000465a47 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465ccb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004a3630 : bsr edi, eax ; jmp rax
0x0000000000465bd9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000465ad5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000465a46 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465cca : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465bd8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000465ad4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047bdb7 : call 0x1009f5de
0x000000000047c71a : call 0x1009ff41
0x00000000004c8268 : call 0x134c7e78
0x00000000004c8298 : call 0x134c7ea8
0x00000000004c82c8 : call 0x134c7ed8
0x00000000004c0848 : call 0x174bfdb7
0x0000000000452895 : call 0x1f54f387
0x000000000044b3b8 : call 0x2073708
0x00000000004c7fa8 : call 0x214c7bb0
0x000000000042c7a4 : call 0x24b752fd
0x000000000047399a : call 0x400357
0x00000000004554a5 : call 0x4017a2
0x000000000040997c : call 0x405c72
0x000000000044b45e : call 0x40774e
0x00000000004119b1 : call 0x40dc62
0x000000000041b018 : call 0x417262
0x000000000041c021 : call 0x418272
0x0000000000420ae6 : call 0x418d07
0x000000000041d161 : call 0x419c02
0x00000000004206c1 : call 0x41c952
0x0000000000461c30 : call 0x41de52
0x0000000000441f11 : call 0x41e1f2
0x0000000000408654 : call 0x41e1f6
0x000000000049ec79 : call 0x41e1f8
0x00000000004a0ed3 : call 0x41e1f9
0x00000000004518b9 : call 0x41e3b2
0x0000000000420490 : call 0x41f136
0x000000000045ca98 : call 0x426a07
0x00000000004101ef : call 0x42c462
0x0000000000400721 : call 0x43e586
0x0000000000402dcd : call 0x43f812
0x0000000000473d70 : call 0x43fff2
0x0000000000456782 : call 0x442992
0x0000000000415f6a : call 0x4429d2
0x000000000040f5e5 : call 0x4458c7
0x0000000000402c8d : call 0x44f732
0x000000000045dd58 : call 0x45a812
0x0000000000456dc9 : call 0x463822
0x0000000000458806 : call 0x4638e6
0x000000000046a271 : call 0x467b88
0x000000000046eb4b : call 0x46b5a2
0x000000000047816c : call 0x473d86
0x000000000048cf4c : call 0x479212
0x000000000047b5a7 : call 0x4911b6f7
0x000000000040fec1 : call 0x49c902
0x00000000004bac3a : call 0x4c15d5f5
0x0000000000434e7a : call 0x4fc25e78
0x0000000000434e79 : call 0x4fc25e79
0x000000000047d703 : call 0x7cd52013
0x000000000041980a : call 0xffffffff83466294
0x000000000047b91b : call 0xffffffff8a09e242
0x000000000047ba82 : call 0xffffffff8a09e3a9
0x000000000047bc6f : call 0xffffffff8a09e596
0x000000000047c29b : call 0xffffffff8a09ebc2
0x000000000047c3f8 : call 0xffffffff8a09ed1f
0x000000000047c5c6 : call 0xffffffff8a09eeed
0x00000000004bab9a : call 0xffffffffab597690
0x00000000004b8d63 : call 0xffffffffaf0e2bd9
0x000000000047b59a : call 0xffffffffc270fde2
0x000000000041c0f8 : call 0xffffffffc27b0909
0x000000000045994c : call 0xffffffffc27ee156
0x000000000041c9b8 : call 0xffffffffc2cb11d1
0x00000000004693ad : call 0xffffffffc37fdcba
0x0000000000485f6a : call 0xffffffffc381ab74
0x0000000000466cdc : call 0xffffffffc3a2ae42
0x000000000044fc35 : call 0xffffffffc3f40b86
0x0000000000467cdc : call 0xffffffffc40dc515
0x0000000000426f67 : call 0xffffffffc412f8b8
0x0000000000423a37 : call 0xffffffffc43ac388
0x000000000048bad9 : call 0xffffffffc78202e6
0x000000000047356b : call 0xffffffffca8c44c0
0x000000000047a554 : call 0xffffffffca9430a9
0x0000000000480064 : call 0xffffffffca948bb9
0x000000000047a561 : call 0xffffffffce9c30bb
0x0000000000480071 : call 0xffffffffce9c8bcb
0x00000000004c6098 : call 0xffffffffe54c5af1
0x00000000004c6f48 : call 0xffffffffe74c6a5a
0x0000000000452b85 : call qword ptr [r10 + rax*8]
0x00000000004a375b : call qword ptr [rax + 0x20fff8c3]
0x00000000004a372f : call qword ptr [rax + 0x20fff8c6]
0x00000000004a3963 : call qword ptr [rax + 0x20fff91a]
0x00000000004a3b3b : call qword ptr [rax + 0x20fff91e]
0x0000000000410687 : call qword ptr [rax + 0x80]
0x00000000004bdebf : call qword ptr [rax - 0x1f0002c1]
0x00000000004a3927 : call qword ptr [rax - 0x1f000725]
0x00000000004a38d3 : call qword ptr [rax - 0x1f00072c]
0x00000000004a350f : call qword ptr [rax - 0x1f00077b]
0x00000000004be02f : call qword ptr [rax - 0x35]
0x000000000040f46e : call qword ptr [rax]
0x0000000000400b38 : call qword ptr [rbx + 0x10]
0x00000000004015c8 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e528 : call qword ptr [rbx]
0x00000000004a3697 : call qword ptr [rcx - 0x3d]
0x000000000049a85e : call qword ptr [rcx]
0x00000000004c2903 : call qword ptr [rdi]
0x00000000004a3a0f : call qword ptr [rdx + 0x22fff91c]
0x0000000000452b86 : call qword ptr [rdx + rax*8]
0x000000000049c95d : call qword ptr [rdx]
0x0000000000492a52 : call qword ptr [rsi]
0x000000000047701c : call r11
0x0000000000400c1b : call r12
0x000000000040e040 : call r14
0x00000000004035a1 : call r15
0x00000000004629eb : call r8
0x00000000004736c1 : call r9
0x00000000004a38af : call rax
0x0000000000402c4d : call rbx
0x000000000040556a : call rcx
0x00000000004035a2 : call rdi
0x000000000040e9ee : call rdx
0x000000000040e041 : call rsi
0x0000000000400c1c : call rsp
0x0000000000443590 : cdq ; add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x000000000044f2f4 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004baaa0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c71d1 : cdq ; std ; call rcx
0x0000000000485e0e : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bfd3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000045907a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004049c0 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045de4d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041ee0c : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000040d5dc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e2cc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047cecc : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046dd3a : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000426018 : clc ; add rax, rcx ; ret
0x00000000004bd258 : clc ; and byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a375a : clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004a372e : clc ; call qword ptr [rax + 0x20fff8c6]
0x00000000004a3926 : clc ; call qword ptr [rax - 0x1f000725]
0x00000000004a38d2 : clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004a350e : clc ; call qword ptr [rax - 0x1f00077b]
0x00000000004a33d6 : clc ; call qword ptr [rax]
0x00000000004c4262 : clc ; call qword ptr [rbx]
0x00000000004a3696 : clc ; call qword ptr [rcx - 0x3d]
0x00000000004c28a2 : clc ; call qword ptr [rcx]
0x00000000004c2902 : clc ; call qword ptr [rdi]
0x00000000004c3b72 : clc ; call qword ptr [rdx]
0x00000000004a38ae : clc ; call rax
0x00000000004a364e : clc ; call rsi
0x00000000004c2a22 : clc ; call rsp
0x000000000042fd19 : clc ; cmp rcx, rax ; jne 0x42fd4b ; xor eax, eax ; ret
0x000000000042fd18 : clc ; cmp rcx, rax ; jne 0x42fd4c ; xor eax, eax ; ret
0x0000000000474720 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004214c0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412766 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040173b : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a3712 : clc ; dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x00000000004a370a : clc ; dec dword ptr [rbx + 0xbfff8c1] ; ret 0xfff8
0x00000000004a370e : clc ; dec dword ptr [rbx] ; ret 0xfff8
0x00000000004551cb : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004567f2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a98d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a392e : clc ; dec dword ptr [rsi + 0x19] ; stc ; call rax
0x00000000004a384e : clc ; inc dword ptr [rax + 0x40fff8df] ; loope 0x4a3858 ; jmp qword ptr [rax]
0x00000000004a37ae : clc ; inc dword ptr [rax + 0x40fff8e0] ; loop 0x4a37b8 ; jmp qword ptr [rax]
0x00000000004a34c2 : clc ; inc dword ptr [rax + 0x68] ; clc ; jmp rax
0x00000000004a34e2 : clc ; inc dword ptr [rax + 0x75] ; clc ; jmp rax
0x00000000004a383a : clc ; inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a3796 : clc ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a37b2 : clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3852 : clc ; inc dword ptr [rax - 0x1f] ; clc ; jmp qword ptr [rax]
0x00000000004a386e : clc ; inc dword ptr [rax - 0x21] ; clc ; inc dword ptr [rax] ; loope 0x4a3878 ; call rax
0x00000000004a3922 : clc ; inc dword ptr [rax - 0x26] ; clc ; call qword ptr [rax - 0x1f000725]
0x00000000004a38ce : clc ; inc dword ptr [rax - 0x2d] ; clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004a38de : clc ; inc dword ptr [rax - 0x2f000728] ; fprem ; jmp qword ptr [rax]
0x00000000004a38f2 : clc ; inc dword ptr [rax - 0x2f000736] ; retf
0x00000000004a351a : clc ; inc dword ptr [rax - 0x2f000777] ; mov bh, al ; jmp qword ptr [rax]
0x00000000004a350a : clc ; inc dword ptr [rax - 0x7c] ; clc ; call qword ptr [rax - 0x1f00077b]
0x00000000004a37d6 : clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a385a : clc ; inc dword ptr [rax] ; in eax, 0xf8 ; jmp rax
0x00000000004a3872 : clc ; inc dword ptr [rax] ; loope 0x4a3874 ; call rax
0x00000000004a37ba : clc ; inc dword ptr [rax] ; out 0xf8, al ; jmp rax
0x00000000004a3552 : clc ; inc dword ptr [rax] ; push rax ; clc ; call qword ptr [rax]
0x00000000004a3756 : clc ; inc dword ptr [rax] ; ret
0x00000000004a368e : clc ; inc dword ptr [rcx - 0x3e] ; clc ; inc ecx ; ret 0xfff8
0x000000000044e599 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a3542 : clc ; inc eax ; clc ; call rax
0x00000000004a3902 : clc ; inc eax ; iretd ; clc ; call qword ptr [rax]
0x00000000004a3646 : clc ; inc eax ; mov esi, 0xbfb0fff8 ; clc ; call rsi
0x00000000004a3692 : clc ; inc ecx ; ret 0xfff8
0x00000000004a368a : clc ; inc ecx ; sar eax, 0xff ; ret 0xfff8
0x00000000004a36da : clc ; inc esi ; ret
0x0000000000449d7e : clc ; jg 0x449d0d ; ret 0x5c77
0x00000000004a34be : clc ; jmp qword ptr [rax + 0x40fff866]
0x00000000004a38b6 : clc ; jmp qword ptr [rax - 0x35]
0x00000000004a34ce : clc ; jmp qword ptr [rax]
0x00000000004a36c2 : clc ; jmp qword ptr [rsi + 0x26fff8c0]
0x00000000004a36ca : clc ; jmp qword ptr [rsi + 0x26fff8c1]
0x000000000047e478 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a36b6 : clc ; jmp qword ptr [rsi]
0x00000000004a33da : clc ; jmp rax
0x00000000004c3c02 : clc ; jmp rbx
0x00000000004a369a : clc ; jmp rcx
0x00000000004a36e2 : clc ; jmp rsi
0x00000000004c3152 : clc ; jmp rsp
0x000000000042c597 : clc ; jne 0x42c471 ; ret
0x00000000004a3716 : clc ; lcall [rbx] ; ret
0x000000000049c770 : clc ; leave ; ret
0x00000000004b9702 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004317f7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432167 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c07 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432367 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b77 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432567 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ae7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431813 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435a5c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c808 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f519 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491a92 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a38fe : clc ; push qword ptr [rax - 0x32] ; clc ; inc eax ; iretd ; clc ; call qword ptr [rax]
0x00000000004a3752 : clc ; push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a353e : clc ; push qword ptr [rax - 0x3f0007bb] ; clc ; call rax
0x00000000004a38ee : clc ; push qword ptr [rax - 0x7f000739] ; retf 0xfff8
0x00000000004a3626 : clc ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x00000000004a37ee : clc ; push qword ptr [rax] ; loopne 0x4a37f4 ; push rax ; loope 0x4a37f8 ; call rax
0x00000000004a377a : clc ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x0000000000410e4a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415df0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442bc1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415d98 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000415275 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046ac7c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a36d6 : clc ; push qword ptr [rsi] ; ret
0x00000000004a354e : clc ; push rax ; clc ; inc dword ptr [rax] ; push rax ; clc ; call qword ptr [rax]
0x00000000004a37f2 : clc ; push rax ; loope 0x4a37f4 ; call rax
0x00000000004a361e : clc ; push rax ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rax]
0x0000000000416a42 : clc ; ret
0x00000000004bc750 : clc ; ret 0x4b
0x00000000004bdf54 : clc ; ret 0xfffd
0x000000000042b034 : clc ; rol ch, 1 ; jns 0x42b015 ; retf 0xead3
0x000000000042b184 : clc ; rol ch, 1 ; jns 0x42b165 ; retf 0xead3
0x000000000042b2d4 : clc ; rol ch, 1 ; jns 0x42b2b5 ; retf 0xead3
0x000000000042b424 : clc ; rol ch, 1 ; jns 0x42b405 ; retf 0xead3
0x000000000042b574 : clc ; rol ch, 1 ; jns 0x42b555 ; retf 0xead3
0x000000000042b6c4 : clc ; rol ch, 1 ; jns 0x42b6a5 ; retf 0xead3
0x000000000042b814 : clc ; rol ch, 1 ; jns 0x42b7f5 ; retf 0xead3
0x000000000042b964 : clc ; rol ch, 1 ; jns 0x42b945 ; retf 0xead3
0x000000000042bab4 : clc ; rol ch, 1 ; jns 0x42ba95 ; retf 0xead3
0x000000000042bc04 : clc ; rol ch, 1 ; jns 0x42bbe5 ; retf 0xead3
0x000000000042bd54 : clc ; rol ch, 1 ; jns 0x42bd35 ; retf 0xead3
0x000000000042bea4 : clc ; rol ch, 1 ; jns 0x42be85 ; retf 0xead3
0x000000000042bff4 : clc ; rol ch, 1 ; jns 0x42bfd5 ; retf 0xead3
0x000000000042c144 : clc ; rol ch, 1 ; jns 0x42c125 ; retf 0xead3
0x000000000042c294 : clc ; rol ch, 1 ; jns 0x42c275 ; retf 0xead3
0x0000000000496434 : clc ; rol ch, 1 ; jns 0x496415 ; retf 0xead3
0x00000000004965b4 : clc ; rol ch, 1 ; jns 0x496595 ; retf 0xead3
0x0000000000496734 : clc ; rol ch, 1 ; jns 0x496715 ; retf 0xead3
0x00000000004968b4 : clc ; rol ch, 1 ; jns 0x496895 ; retf 0xead3
0x0000000000496a34 : clc ; rol ch, 1 ; jns 0x496a15 ; retf 0xead3
0x0000000000496bb4 : clc ; rol ch, 1 ; jns 0x496b95 ; retf 0xead3
0x0000000000496d34 : clc ; rol ch, 1 ; jns 0x496d15 ; retf 0xead3
0x0000000000496eb4 : clc ; rol ch, 1 ; jns 0x496e95 ; retf 0xead3
0x0000000000497034 : clc ; rol ch, 1 ; jns 0x497015 ; retf 0xead3
0x00000000004971b4 : clc ; rol ch, 1 ; jns 0x497195 ; retf 0xead3
0x0000000000497334 : clc ; rol ch, 1 ; jns 0x497315 ; retf 0xead3
0x00000000004974b4 : clc ; rol ch, 1 ; jns 0x497495 ; retf 0xead3
0x0000000000497634 : clc ; rol ch, 1 ; jns 0x497615 ; retf 0xead3
0x00000000004977b4 : clc ; rol ch, 1 ; jns 0x497795 ; retf 0xead3
0x0000000000497934 : clc ; rol ch, 1 ; jns 0x497915 ; retf 0xead3
0x00000000004790ea : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047835d : clc ; std ; jbe 0x47836c ; ret
0x000000000044ef85 : clc ; syscall
0x00000000004bf85c : cld ; adc al, byte ptr [rax] ; add byte ptr [rax + 0x25], ah ; cmc ; jmp qword ptr [rsi]
0x00000000004c4d5c : cld ; add byte ptr [eax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x000000000046e4c8 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e61f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e63f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c8252 : cld ; call qword ptr [rax]
0x00000000004c826a : cld ; call qword ptr [rdx]
0x0000000000480d7f : cld ; cmove rsi, r9 ; jmp 0x480d4e
0x000000000045ca9b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004be44c : cld ; fdivr st(5) ; dec dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004bf009 : cld ; hlt ; call qword ptr [rax]
0x00000000004bf021 : cld ; hlt ; call qword ptr [rdx]
0x000000000047149e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e6ce : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e5fe : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7faa : cld ; jmp qword ptr [rax]
0x00000000004ba485 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4ba454 ; retf
0x0000000000431f82 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432185 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432385 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432585 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435a6e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000403946 : cld ; mov eax, 3 ; syscall
0x0000000000432ab8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431bb6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d96 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d96 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d16 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431f76 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c96 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319d6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e16 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000491a4c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004269e8 : cld ; ret
0x00000000004b8ba3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000417fe0 : cld ; sub r8d, dword ptr [r8] ; test rax, rax ; je 0x417ff4 ; call rax
0x00000000004b8bb6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c6b5c : cld ; test dword ptr [rax], eax ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x000000000041ff79 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000420159 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000467546 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000041dcab : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047ca99 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000041430f : cli ; add ch, al ; pop rdx ; retf
0x000000000046758a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458def : cli ; add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000489753 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048977c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045c65c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000410828 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e36c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044953f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474b36 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x00000000004753a3 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043de91 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000435a8c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b90c : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bab99 : cli ; call 0xffffffffab597691
0x00000000004c62ea : cli ; call rax
0x00000000004c6702 : cli ; call rdx
0x00000000004c5342 : cli ; call rsi
0x0000000000481684 : cli ; dec dword ptr [rdi] ; retf 0x8d89
0x0000000000432a7b : cli ; jg 0x432a8e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435a47 : cli ; jg 0x435a5a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043de51 : cli ; jg 0x43de63 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dfd6 : cli ; jg 0x43dfe8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c57ea : cli ; jmp qword ptr [rax]
0x00000000004c6cfa : cli ; jmp qword ptr [rdx]
0x00000000004c59c2 : cli ; jmp rdi
0x00000000004c547a : cli ; jmp rdx
0x00000000004c69e2 : cli ; jmp rsi
0x00000000004c609a : cli ; jmp rsp
0x0000000000432388 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004263f8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b642 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047b3f6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000048a108 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bb021 : cli ; push 0x6e ; ja 0x4bafae ; ret 0x48f
0x00000000004b9ac5 : cli ; ret 0xac65
0x00000000004429cb : cli ; setae al ; ret
0x00000000004b9970 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000423b69 : cli ; test rdx, rdx ; je 0x423b89 ; bsf rax, rdx ; ret
0x00000000004658d8 : cli ; test rdx, rdx ; je 0x465909 ; bsf rax, rdx ; ret
0x00000000004b870a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c954d : cmc ; add al, byte ptr [rax] ; ret
0x0000000000496068 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443d1c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041dff0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bfa02 : cmc ; call qword ptr [rax]
0x00000000004c022a : cmc ; call qword ptr [rcx]
0x00000000004c0932 : cmc ; call qword ptr [rdx]
0x00000000004c084a : cmc ; call qword ptr [rsi]
0x00000000004c1222 : cmc ; call rdx
0x0000000000487067 : cmc ; jmp 0x487036
0x00000000004c06fa : cmc ; jmp qword ptr [rax]
0x00000000004c005a : cmc ; jmp qword ptr [rcx]
0x00000000004bf862 : cmc ; jmp qword ptr [rsi]
0x00000000004bb449 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434d1a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c0e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004421f7 : cmc ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000043d3e3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b82f7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047ac3d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000441df7 : cmc ; ret
0x000000000043d3e7 : cmc ; sub eax, edx ; ret
0x00000000004baa85 : cmc ; xlatb ; ret 0x4e27
0x000000000049cb77 : cmova eax, edx ; ret
0x00000000004673f1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417249 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417248 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f4ab : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000465001 : cmove eax, ecx ; ret
0x000000000043f790 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004214c3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425f72 : cmove eax, edx ; ret
0x0000000000480d81 : cmove esi, ecx ; jmp 0x480d4c
0x0000000000465000 : cmove r8, rcx ; ret
0x000000000043f4aa : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b350 : cmove rax, r9 ; ret
0x00000000004214c2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425f71 : cmove rax, rdx ; ret
0x0000000000480d80 : cmove rsi, r9 ; jmp 0x480d4d
0x0000000000414d8b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414d89 ; ret
0x0000000000463bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x463bf9 ; ret
0x0000000000400546 : cmovle eax, ecx ; jmp 0x400519
0x0000000000413823 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421543 : cmovne eax, edx ; ret
0x0000000000421542 : cmovne rax, rdx ; ret
0x0000000000443cc3 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000425fcd : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004567bd : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000404d29 : cmovs eax, dword ptr [rbx - 0x76b70f1d] ; fucomip st(0) ; retf 0x21c
0x0000000000446d8c : cmovs eax, edx ; ret
0x0000000000419f80 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049caa8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489d80 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x0000000000480d7e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480d4f
0x0000000000440681 : cmp al, 0x24 ; call rbx
0x000000000049e09b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e0bd : cmp al, 0x33 ; call rax
0x00000000004c289c : cmp al, 0x43 ; add byte ptr [rax], al ; and byte ptr [rax], al ; clc ; call qword ptr [rcx]
0x00000000004b9700 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b8603 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004c6d9c : cmp al, 0x88 ; add byte ptr [rax], al ; shr dh, 0xfa ; jmp qword ptr [rdx]
0x00000000004bb0eb : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000040ee9f : cmp al, 0xa ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000004a3e61 : cmp al, 0xf9 ; call rax
0x000000000048aabb : cmp al, 9 ; ja 0x4896c0 ; jmp 0x48aa99
0x000000000048dcf3 : cmp al, 9 ; ja 0x48c8e0 ; jmp 0x48dcd1
0x000000000049143b : cmp al, 9 ; ja 0x48f740 ; jmp 0x491419
0x00000000004c1f85 : cmp al, byte ptr [rax] ; add byte ptr [rax], cl ; ret 0xfff7
0x000000000043d8a6 : cmp al, byte ptr [rsi - 1] ; jne 0x43d8cc ; xor eax, eax ; ret
0x000000000043f978 : cmp al, ch ; ret 0x2b3
0x0000000000426246 : cmp al, dh ; ret
0x0000000000426245 : cmp al, r14b ; ret
0x00000000004c8dd9 : cmp bh, ch ; call rcx
0x00000000004a3e5d : cmp bh, cl ; call rax
0x00000000004532c3 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c7811 : cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004872e9 : cmp bl, ch ; ret 0x8148
0x000000000042cca3 : cmp bl, dh ; ret
0x00000000004104cb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000040fb97 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401333 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426daf : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426287 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440634 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041665e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004104cc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000459baa : cmp byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004832f7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426276 : cmp byte ptr [rax], ah ; ret
0x0000000000415243 : cmp byte ptr [rax], al ; je 0x415254 ; ret
0x000000000049c355 : cmp byte ptr [rax], al ; je 0x49c3cb ; add rsp, 0x18 ; ret
0x0000000000421540 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426266 : cmp byte ptr [rax], dl ; ret
0x0000000000426265 : cmp byte ptr [rax], r10b ; ret
0x0000000000426275 : cmp byte ptr [rax], r12b ; ret
0x000000000042153f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2b0c : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6ecd : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6f2d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c6e6d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ee72 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004736bb : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000479b19 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000460375 : cmp byte ptr [rbx], cl ; jmp rax
0x0000000000464ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476ff6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000415208 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f1ed : cmp byte ptr [rdi], dl ; ret
0x000000000042fd00 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fce9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fcd2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e78e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046b34c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449bf3 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045d81f : cmp ch, cl ; retf
0x000000000040d81d : cmp ch, cl ; retf 0xfffb
0x00000000004a3e59 : cmp cl, bh ; call rax
0x000000000041aa80 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481fdb : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000473c0e : cmp cl, byte ptr [rax - 0x77] ; retf
0x0000000000461b7d : cmp cl, byte ptr [rbx] ; jmp rax
0x000000000046b34f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004303b1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000430501 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430651 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x00000000004307a1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x00000000004308f1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000430a41 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000430b91 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000430ce1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430e31 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430f81 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x00000000004310d1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000431221 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431371 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004314c1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000431611 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004330fa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043327a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004333fa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043357a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004336fa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043387a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004339fa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433b7a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433cfa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433e7a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433ffa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043417a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004342fa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043447a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004345fa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004bb4c6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000489816 : cmp cl, ch ; ret
0x000000000046b31e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b2da ; xor eax, eax ; ret
0x000000000046e4c3 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004c8dd8 : cmp dil, bpl ; call rcx
0x0000000000435a8b : cmp dl, 1 ; jb 0x435a9d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043de90 : cmp dl, 1 ; jb 0x43de9e ; mov byte ptr [rdi], cl ; ret
0x000000000043e00a : cmp dl, 1 ; jb 0x43e018 ; mov byte ptr [rdi], cl ; ret
0x0000000000464aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x464ab6 ; ret
0x000000000043482c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000461699 : cmp dword ptr [rbx], ecx ; jmp rax
0x0000000000450b3e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415241 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415256 ; ret
0x0000000000442bb0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00000000004bc748 : cmp dword ptr [rsi + 0x4b], edi ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000049cb74 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000048cb0d : cmp dword ptr [rsp + 0x10], 0 ; jne 0x48cae4 ; jmp 0x48caec
0x00000000004898dd : cmp dword ptr [rsp + 8], 0 ; jne 0x4898b4 ; jmp 0x4898bc
0x000000000043f6e3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047471f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000415274 : cmp eax, -1 ; je 0x415289 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d97 : cmp eax, -1 ; je 0x415da8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464cba : cmp eax, -1 ; je 0x464ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464cfe : cmp eax, -1 ; je 0x464d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410e49 : cmp eax, -1 ; jne 0x410e56 ; pop rbx ; ret
0x0000000000415def : cmp eax, -1 ; jne 0x415de0 ; pop rbx ; ret
0x0000000000442bc0 : cmp eax, -1 ; jne 0x442bc0 ; xor eax, eax ; leave ; ret
0x000000000047835c : cmp eax, -3 ; jbe 0x47836d ; ret
0x000000000047b009 : cmp eax, 0x2519b6 ; call rax
0x000000000047aecc : cmp eax, 0x251af3 ; jmp rax
0x000000000041dddb : cmp eax, 0x2ae8 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000044f6f7 : cmp eax, 0x740027c3 ; add esi, ebx ; ret
0x00000000004b89eb : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040dc19 : cmp eax, 0xfffff000 ; ja 0x40dc48 ; ret
0x000000000043f4d6 : cmp eax, 0xfffff000 ; ja 0x43f4e8 ; ret
0x000000000043f525 : cmp eax, 0xfffff000 ; ja 0x43f538 ; ret
0x000000000043f6b4 : cmp eax, 0xfffff000 ; ja 0x43f6f8 ; ret
0x000000000044fb51 : cmp eax, 0xfffff000 ; ja 0x44fb68 ; ret
0x000000000046a9c8 : cmp eax, 0xfffff000 ; ja 0x46a9e0 ; pop rbx ; ret
0x000000000046ad56 : cmp eax, 0xfffff000 ; ja 0x46ad68 ; ret
0x000000000046adab : cmp eax, 0xfffff000 ; ja 0x46adc0 ; ret
0x000000000043e71b : cmp eax, 2 ; je 0x43e72f ; xor eax, eax ; ret
0x0000000000442aaa : cmp eax, 4 ; je 0x442ab5 ; ret
0x0000000000413275 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413288 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441421 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474768 : cmp eax, dword ptr [rsi + rdx] ; jae 0x474718 ; xor eax, eax ; ret
0x00000000004ba8b7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000416b49 : cmp eax, ecx ; jae 0x416b77 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d8c3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000478534 : cmp eax, esi ; je 0x478544 ; ret
0x0000000000442a46 : cmp ebx, 0xa ; je 0x442a51 ; ret
0x000000000044438e : cmp ebx, eax ; setne dl ; jmp 0x44437a
0x0000000000471801 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046d7de : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447e39 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004673f0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464ffe : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fd1b : cmp ecx, eax ; jne 0x42fd49 ; xor eax, eax ; ret
0x0000000000474046 : cmp ecx, edx ; jne 0x474025 ; ret
0x00000000004c31e1 : cmp edi, eax ; call qword ptr [rax]
0x000000000049d69e : cmp edi, eax ; jae 0x49d668 ; mov rdx, rcx ; jmp 0x49d680
0x000000000045a5d5 : cmp edi, ecx ; ja 0x45a5c0 ; mov eax, r8d ; ret
0x000000000046af5e : cmp edi, edx ; ja 0x46af8d ; ret
0x000000000047ca98 : cmp edx, 0 ; mov eax, edx ; jle 0x47cab0 ; ret
0x000000000041dcaa : cmp edx, 0x6ca800 ; jne 0x41dc79 ; ret
0x0000000000474058 : cmp edx, eax ; jne 0x474002 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000441fb3 : cmp edx, eax ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004269b8 : cmp edx, ecx ; jne 0x4269a5 ; ret
0x00000000004429ca : cmp edx, edi ; setae al ; ret
0x0000000000467086 : cmp edx, esi ; je 0x467097 ; test edx, edx ; jne 0x467089 ; ret
0x0000000000416b89 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000044d605 : cmp esi, 3 ; je 0x44d616 ; pop rbx ; ret
0x0000000000469e39 : cmp esi, dword ptr [rip + 0x1480026] ; retf
0x00000000004baa84 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464d5a : cmp esi, ecx ; jb 0x464d57 ; lea eax, [rdx + rdi] ; ret
0x0000000000415e2a : cmp esi, ecx ; jne 0x415e27 ; lea eax, [rdx + rdi] ; ret
0x0000000000464aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x464ab7 ; ret
0x0000000000415240 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415257 ; ret
0x000000000049cb73 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000048cb0c : cmp qword ptr [rsp + 0x10], 0 ; jne 0x48cae5 ; jmp 0x48caed
0x00000000004898dc : cmp qword ptr [rsp + 8], 0 ; jne 0x4898b5 ; jmp 0x4898bd
0x000000000042cca2 : cmp r11b, r14b ; ret
0x0000000000442a45 : cmp r11d, 0xa ; je 0x442a52 ; ret
0x0000000000480d7d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480d50
0x0000000000474767 : cmp r8, qword ptr [rsi + rdx] ; jae 0x474719 ; xor eax, eax ; ret
0x000000000040dc18 : cmp rax, -0x1000 ; ja 0x40dc49 ; ret
0x000000000043f4d5 : cmp rax, -0x1000 ; ja 0x43f4e9 ; ret
0x000000000043f524 : cmp rax, -0x1000 ; ja 0x43f539 ; ret
0x000000000043f6b3 : cmp rax, -0x1000 ; ja 0x43f6f9 ; ret
0x000000000044fb50 : cmp rax, -0x1000 ; ja 0x44fb69 ; ret
0x000000000046a9c7 : cmp rax, -0x1000 ; ja 0x46a9e1 ; pop rbx ; ret
0x000000000046ad55 : cmp rax, -0x1000 ; ja 0x46ad69 ; ret
0x000000000046adaa : cmp rax, -0x1000 ; ja 0x46adc1 ; ret
0x000000000047471e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000047835b : cmp rax, -3 ; jbe 0x47836e ; ret
0x0000000000413274 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413289 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416b48 : cmp rax, rcx ; jae 0x416b78 ; movzx eax, byte ptr [rax] ; ret
0x0000000000478533 : cmp rax, rsi ; je 0x478545 ; ret
0x0000000000464ffd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fd1a : cmp rcx, rax ; jne 0x42fd4a ; xor eax, eax ; ret
0x0000000000474045 : cmp rcx, rdx ; jne 0x474026 ; ret
0x000000000049d69d : cmp rdi, r8 ; jae 0x49d669 ; mov rdx, rcx ; jmp 0x49d681
0x000000000046af5d : cmp rdi, rdx ; ja 0x46af8e ; ret
0x0000000000474057 : cmp rdx, r8 ; jne 0x474003 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004269b7 : cmp rdx, rcx ; jne 0x4269a6 ; ret
0x00000000004269b6 : cmp rdx, rcx ; jne 0x4269a7 ; ret
0x00000000004429c9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464d59 : cmp rsi, rcx ; jb 0x464d58 ; lea eax, [rdx + rdi] ; ret
0x0000000000415e29 : cmp rsi, rcx ; jne 0x415e28 ; lea eax, [rdx + rdi] ; ret
0x0000000000496667 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496967 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497867 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c956 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425d25 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497567 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f799 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a82 ; mov ecx, 0x5b92ac50 ; retf
0x000000000042a2c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497267 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004babd1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a36d4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff8
0x00000000004099c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004a36cc : cmpsb byte ptr [rsi], byte ptr [rdi] ; sar eax, 0xff ; ret 0xfff8
0x0000000000468a21 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004b859f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000047ed9a : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000047ac31 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000041316f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b664 : cwde ; add rax, r8 ; jmp rax
0x0000000000402c8c : cwde ; call 0x44f733
0x0000000000402c8b : cwde ; call 0x44f734
0x00000000004bf008 : cwde ; cld ; hlt ; call qword ptr [rax]
0x0000000000442654 : cwde ; mov eax, 3 ; syscall
0x0000000000414f9c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004674e2 : dec al ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004685e3 : dec al ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004395c1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b9d6 : dec byte ptr [r8 - 0x75] ; ret
0x000000000048e455 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004395c2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047a126 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041ba54 : dec byte ptr [rax - 0x73] ; ret
0x000000000045d1ac : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b9d7 : dec byte ptr [rax - 0x75] ; ret
0x000000000048e456 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000440ce8 : dec byte ptr [rax - 0x77] ; fucomip st(0) ; call rsp
0x000000000046578d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e27a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e67d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x00000000004831d3 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000478359 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478370 ; ret
0x000000000041b20c : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004107e9 : dec dword ptr [rax + 0x29] ; ret
0x0000000000439702 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473c51 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e816 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041936d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d9ed : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418a25 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480ea4 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485c9d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000470945 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x00000000004748aa : dec dword ptr [rax + 0x63] ; ret
0x000000000045e93e : dec dword ptr [rax + 0x63] ; retf
0x000000000046a9bc : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x00000000004625cb : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462d1f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465cc9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000474721 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004214c1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004596de : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412767 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041084c : dec dword ptr [rax + 1] ; ret
0x000000000047dbe7 : dec dword ptr [rax + 1] ; ret 0x3948
0x00000000004be44f : dec dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x000000000045d766 : dec dword ptr [rax - 0x39] ; ret
0x000000000045ca9c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004119d7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480e0e : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043eedc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049b0a1 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000419343 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d9c2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000046981e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478ded : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x0000000000474915 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004104c8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481fd8 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004403bd : dec dword ptr [rax - 0x75] ; jge 0x4403c7 ; call rbx
0x0000000000440670 : dec dword ptr [rax - 0x75] ; jge 0x44067a ; call rbx
0x0000000000442208 : dec dword ptr [rax - 0x75] ; jge 0x442212 ; call rbx
0x0000000000479417 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041bccf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414251 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004787bc : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000484012 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x00000000004887e7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000426b28 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000045f3ad : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf 0x72
0x000000000049ee9a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040173c : dec dword ptr [rax - 0x77] ; ret
0x000000000046af4e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000048405f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041df91 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f9d2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e7da : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466606 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004838e9 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455407 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045ffa6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000048291d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042143e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b513 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402b68 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x000000000045926d : dec dword ptr [rax - 0x77] ; retf
0x000000000047d825 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x00000000004481ce : dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000456571 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000049dbe4 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000478721 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487b58 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463e9e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000484454 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x0000000000485e0b : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000047835a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47836f ; ret
0x0000000000453e81 : dec dword ptr [rax - 0x7d] ; jge 0x453ebe ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040412c : dec dword ptr [rax - 0x7d] ; ret
0x000000000041931f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448d62 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470d4f : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470d3d : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004571e4 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a326 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470ddb : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x0000000000485802 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000004532c6 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434830 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046cb70 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000004bdf3f : dec dword ptr [rax] ; ret 0xfffd
0x000000000049dbfb : dec dword ptr [rbp + rcx*4 + 0x42] ; add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000047e67e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b6d9 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000478eec : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000044087e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004a3713 : dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x000000000041b60f : dec dword ptr [rbx + 0x2af1ee15] ; add dh, dh ; ret 0xf02
0x000000000047883c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000447f96 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x447f8f ; retf
0x00000000004a370b : dec dword ptr [rbx + 0xbfff8c1] ; ret 0xfff8
0x000000000046a275 : dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000000004a370f : dec dword ptr [rbx] ; ret 0xfff8
0x000000000049b9bc : dec dword ptr [rcx + 0x21] ; retf 0x894c
0x00000000004846a6 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004556c4 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dd73 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049b99e : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x000000000049ba26 : dec dword ptr [rcx + 0x31] ; retf 0x894c
0x00000000004552d3 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046cba2 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455251 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047247a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049b9c7 : dec dword ptr [rcx + 0x39] ; retf 0x894c
0x000000000049d70c : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x00000000004697f6 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045addc : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x000000000049ba52 : dec dword ptr [rcx + 1] ; retf 0x894c
0x000000000049ba5d : dec dword ptr [rcx + 9] ; retf 0x894c
0x0000000000452892 : dec dword ptr [rcx + rcx*4 - 0x18] ; jmp 0x452867
0x0000000000452f29 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000467f4e : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x0000000000480f1f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000402c87 : dec dword ptr [rcx - 0x67ba7639] ; call 0x44f738
0x00000000004401f5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044067e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440288 : dec dword ptr [rcx - 0x75] ; jge 0x440292 ; call rbx
0x00000000004403af : dec dword ptr [rcx - 0x75] ; jge 0x4403b9 ; call rbx
0x00000000004404f2 : dec dword ptr [rcx - 0x75] ; jge 0x4404fc ; call rbx
0x0000000000440662 : dec dword ptr [rcx - 0x75] ; jge 0x44066c ; call rbx
0x0000000000441e80 : dec dword ptr [rcx - 0x75] ; jge 0x441e8a ; call rbx
0x0000000000441fa8 : dec dword ptr [rcx - 0x75] ; jge 0x441fb2 ; call rbx
0x00000000004420eb : dec dword ptr [rcx - 0x75] ; jge 0x4420f5 ; call rbx
0x00000000004421ec : dec dword ptr [rcx - 0x75] ; jge 0x4421f6 ; call rbx
0x000000000047ce8c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453ec3 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000446208 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044ea67 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000004564f3 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041b20d : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485f67 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381ab77
0x000000000043f575 : dec dword ptr [rdi] ; adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000043f669 : dec dword ptr [rdi] ; and eax, 0x4e ; add byte ptr [rax], al ; ret
0x0000000000484386 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486c3f : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000044297c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f47c : dec dword ptr [rdi] ; or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000446d8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000404617 : dec dword ptr [rdi] ; retf
0x0000000000481685 : dec dword ptr [rdi] ; retf 0x8d89
0x000000000044295f : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000410901 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000449524 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x000000000048b317 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x000000000043d750 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004709dc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000416b8b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485b5f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a98e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459d26 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043edcd : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f5d5 : dec dword ptr [rdi] ; xor dword ptr [rdi + rcx*2], 0 ; ret
0x00000000004a392f : dec dword ptr [rsi + 0x19] ; stc ; call rax
0x00000000004bdfc7 : dec ebx ; retf
0x000000000047a4ad : dec ecx ; ret
0x0000000000439701 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462756 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448d61 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dd72 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004a3429 : div bh ; jmp rax
0x000000000040dbf4 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x00000000004657d2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047ac3c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a5e5 : div ecx ; add eax, r8d ; ret
0x000000000043e6d1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000463236 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047ac3b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d8c4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004395be : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004396fe : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047941b : enter -0x74b8, 0x14 ; ret
0x000000000046d954 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d928
0x000000000046c094 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x0000000000442bae : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000004bf5a8 : enter -0xae8, -1 ; ret 1
0x00000000004402d4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004ad5dc : enter 0, 0 ; retf
0x00000000004b1630 : enter 0, 0 ; retf 0
0x00000000004ae788 : enter 0x10, 0 ; retf
0x0000000000448e5f : enter 0x1388, -0x77 ; retf 0xe083
0x0000000000416b4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a7ae : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000422b5d : enter 0x31c3, -0x40 ; ret
0x00000000004c202b : enter 0x380e, 0x41 ; ret
0x00000000004189dd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041b1d5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000047513f : enter 0x4b, -0x7d ; ret
0x000000000046b2d6 : enter 0x4f75, -0xd ; ret
0x00000000004bb23c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004adf88 : enter 0xa, 0 ; retf
0x00000000004ae388 : enter 0xd, 0 ; retf
0x000000000042f846 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421591 : enter 0xf66, -0x15 ; ret
0x000000000042601b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004b1830 : enter 1, 0 ; retf 1
0x00000000004aeb40 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b1a30 : enter 2, 0 ; retf 2
0x00000000004b1c30 : enter 3, 0 ; retf 3
0x00000000004b1e30 : enter 4, 0 ; retf 4
0x00000000004b2030 : enter 5, 0 ; retf 5
0x00000000004b2230 : enter 6, 0 ; retf 6
0x00000000004b2430 : enter 7, 0 ; retf 7
0x00000000004b2630 : enter 8, 0 ; retf 8
0x00000000004b2830 : enter 9, 0 ; retf 9
0x0000000000414ee7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004153e3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f3ea : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442bb6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041cc7f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000425f6e : fadd dword ptr [rbx] ; cmove rax, rdx ; ret
0x0000000000411d40 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444422 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c95a0 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004114b7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b919 : fadd st(1) ; call 0xffffffff8a09e244
0x000000000047ba80 : fadd st(1) ; call 0xffffffff8a09e3ab
0x000000000047c299 : fadd st(1) ; call 0xffffffff8a09ebc4
0x000000000047c3f6 : fadd st(1) ; call 0xffffffff8a09ed21
0x0000000000477b05 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f391 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ecc4 : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000441f12 : fcmovb st(0), st(2) ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004ba878 : fcmovb st(0), st(3) ; ret
0x000000000044f26e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004c24a1 : fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000468d97 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f9aa : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fa8f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043ff3f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041e1e6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb5f9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004015cb : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004b9860 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041df8f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000046a273 : fcos ; dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000000004a392d : fdiv st(0), st(0) ; dec dword ptr [rsi + 0x19] ; stc ; call rax
0x00000000004a38ed : fdiv st(0), st(0) ; push qword ptr [rax - 0x7f000739] ; retf 0xfff8
0x0000000000485e09 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004c6b61 : fdiv st(2), st(0) ; call rsi
0x0000000000440584 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004404f0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4404fe ; call rbx
0x00000000004403bb : fdivp st(5) ; dec dword ptr [rax - 0x75] ; jge 0x4403c9 ; call rbx
0x000000000044031a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004403ad : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4403bb ; call rbx
0x00000000004403ac : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4403bc ; call rbx
0x00000000004a38e1 : fdivr st(0) ; call rax
0x00000000004c6a69 : fdivr st(2) ; jmp rdi
0x00000000004b8bb5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004be44d : fdivr st(5) ; dec dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004be451 : fdivr st(5) ; jmp rsp
0x000000000043d8c8 : fdivr st(7) ; ret
0x000000000043f6e2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004644b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000489d7d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000044005c : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x0000000000440a39 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb446 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000444335 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e2ef : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004680b1 : fild dword ptr [rdi + 0x26] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000045a5d8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a715 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432d00 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045c659 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000412805 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047b646 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004108f0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048ae1e : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000404e28 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426b52 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048d32c : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048af32 : fimul word ptr [rax + 0x29] ; ret
0x0000000000411ace : fimul word ptr [rax - 0x77] ; ret
0x000000000045a06f : fimul word ptr [rax - 0x77] ; retf
0x00000000004732aa : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a61c : fimul word ptr [rbp + 0x11] ; retf
0x000000000047a5de : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a638
0x00000000004800ee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x480148
0x000000000044fca0 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000041191f : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000414f55 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004150c5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000417808 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468212 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049ecc1 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474279 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048de03 : fisttp dword ptr [rax - 0x77] ; jl 0x48de34 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000479681 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b660 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047969b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004691c5 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440f19 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e60e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000448167 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048e459 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041ca19 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000045418a : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455ed5 : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x000000000047971f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b5fd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f761 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f461 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432b4c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000042672d : fld dword ptr [rbx + 0x294807e1] ; retf 0x8548
0x00000000004691ca : fld dword ptr [rcx + 0xf] ; retf
0x000000000047d852 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400c7a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b98a1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000491ada : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f829 : fldcw word ptr [rsp - 2] ; ret
0x0000000000426179 : fldenv [rsi + 0xf] ; je 0x4261d6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cfa7 : fldenv [rsi + 0xf] ; je 0x42d004 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f7e1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426071 : fldenv [rsi + 0xf] ; xlatb ; ret
0x000000000047a684 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418faf : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e861 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047eb86 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043db97 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048f167 : fmul dword ptr [rax - 0x39] ; ret
0x00000000004588f1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004115b1 : fmul dword ptr [rax - 0x77] ; ret
0x00000000004846a9 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d2a3 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x00000000004699fc : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411c3a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045afee : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a90d : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049aba5 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000049d69c : fmul dword ptr [rcx + rdi - 0x39] ; jae 0x49d66a ; mov rdx, rcx ; jmp 0x49d682
0x000000000045d04b : fmul dword ptr [rdi] ; ret
0x000000000048ae37 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a4bc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000421919 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004273cf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048f062 : fmul st(0) ; ret
0x000000000048efe0 : fmulp st(1) ; ret
0x00000000004bb0ea : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dbc5 : fpatan ; ret
0x00000000004a38e5 : fprem ; jmp qword ptr [rax]
0x00000000004c8851 : frndint ; call qword ptr [rax]
0x000000000042f561 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000402a4b : fst dword ptr [rbp - 0x76b7ffd4] ; ret 0x8348
0x00000000004b9587 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9900 : fstp st(0) ; ret 0xde5d
0x00000000004015ca : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8acb : fstp st(3), st(0) ; retf 0xeb83
0x000000000040dc48 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042f861 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438434 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004baeb8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047cac2 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043dcdb : fsub qword ptr [rsi + 0xf] ; jmp 0x43dca7
0x000000000042f661 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004216ac : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004402d2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441ddb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004421da : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441848 : fsubp st(0) ; ret 0xffe8
0x0000000000441748 : fsubp st(0) ; ret 0xffe9
0x0000000000441340 : fsubp st(0) ; retf 0xffed
0x00000000004c533c : fsubr qword ptr [rbp] ; add byte ptr [rax], dh ; add dl, bh ; call rsi
0x00000000004bb5d8 : fucom st(5) ; loop 0x4bb631 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047f005 : fucomi st(1) ; ret
0x0000000000440ceb : fucomip st(0) ; call rsp
0x000000000049e937 : fucomip st(0) ; ret
0x000000000041c020 : fucomip st(0) ; ret 0xffff
0x000000000045bcff : fucomip st(0) ; retf
0x0000000000404d30 : fucomip st(0) ; retf 0x21c
0x000000000045f3b0 : fucomip st(0) ; retf 0x72
0x0000000000418230 : fucomip st(0) ; retf 0xff97
0x0000000000445a02 : fucomip st(3) ; ret
0x000000000041f918 : fucomp st(0) ; retf
0x000000000043f8cf : fucomp st(2) ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000468216 : fucompp ; ret 0xfffe
0x00000000004bac1e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494e69 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043edd0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000495d69 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044283b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bea2a : hlt ; call qword ptr [rax]
0x00000000004bef52 : hlt ; call qword ptr [rbx]
0x00000000004be84a : hlt ; call qword ptr [rdx]
0x000000000044aafe : hlt ; jmp 0x44aace
0x000000000048aabf : hlt ; jmp 0x48aac6
0x00000000004b9988 : hlt ; jmp 0x4b995d
0x0000000000434c9a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431dfe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043ec3f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043d3d3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004bfd01 : hlt ; ret
0x0000000000454ca8 : hlt ; retf 0xfffa
0x00000000004c0054 : hlt ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000004b9ac3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d3d7 : hlt ; sub eax, edx ; ret
0x00000000004c19b2 : idiv bh ; ret
0x000000000043ed8d : idiv byte ptr [rax + 2] ; syscall
0x000000000044cc4f : idiv byte ptr [rdi + 0x4a6228] ; mov eax, ecx ; syscall
0x0000000000401686 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446d86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004a33d2 : idiv edi ; add al, dil ; call qword ptr [rax]
0x000000000049d70a : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049bb8f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a33ce : idiv edi ; jo 0x4a33da ; idiv edi ; add al, dil ; call qword ptr [rax]
0x00000000004a00cb : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004a0088 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0a88 : idiv edi ; ret
0x00000000004c1f8a : idiv edi ; retf 2
0x00000000004a3422 : idiv edi ; sal ah, 0xf7 ; inc dword ptr [rax] ; div bh ; jmp rax
0x0000000000441df5 : imul eax ; cmc ; ret
0x000000000045ca97 : imul eax ; movsxd rbx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x0000000000441e7b : imul eax ; outsd dx, dword ptr [rsi] ; ret
0x000000000046b548 : imul eax ; ret 0xfff8
0x0000000000441fa3 : imul eax ; ret 0xfffd
0x000000000047aa2f : imul eax ; retf
0x000000000044b55d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043bf31 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004252f7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000424cf7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000044743b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444389 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x0000000000440583 : imul ebx, esp, 0x8b49fffd ; call rbx
0x000000000047ce8f : imul ecx ; ret
0x00000000004134b4 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041d709 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c43ed : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x00000000004249f7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004a34c9 : imul edi, eax, 0xf86b80ff ; jmp qword ptr [rax]
0x000000000049b9b9 : imul edi, ecx, -1 ; dec dword ptr [rcx + 0x21] ; retf 0x894c
0x00000000004243f7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000004240f7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000423df7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x00000000004673f4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000497d04 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000043b3ac : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004c0844 : in al, 0x22 ; add byte ptr [rax], al ; call 0x174bfdbb
0x00000000004038f6 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004baf01 : in al, 0x4c ; pop rax ; retf
0x0000000000423a2c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e368 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004c6f44 : in al, 0x89 ; add byte ptr [rax], al ; call 0xffffffffe74c6a5e
0x00000000004be060 : in al, 0xd2 ; std ; jmp rsp
0x000000000048604a : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457c68 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000434c7a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004269bb : in al, 0xf3 ; ret
0x00000000004a37b9 : in al, 0xf8 ; inc dword ptr [rax] ; out 0xf8, al ; jmp rax
0x00000000004a3799 : in al, 0xf8 ; jmp qword ptr [rax]
0x00000000004a37d9 : in al, 0xf8 ; jmp rax
0x00000000004a3779 : in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004c4a99 : in al, 0xf9 ; jmp rax
0x00000000004055d9 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000402534 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x404
0x0000000000474865 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004232e0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004a3789 : in al, dx ; clc ; call qword ptr [rax]
0x00000000004a38ad : in al, dx ; clc ; call rax
0x000000000047149d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000491ad9 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004424b4 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000431dfa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043507a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465607 : in al, dx ; or al, ch ; ret 1
0x000000000041ccb7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041f138 : in al, dx ; or byte ptr [rbx + rcx*4 + 0x25], cl ; call rsp
0x00000000004bef4c : in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; sti ; hlt ; call qword ptr [rbx]
0x00000000004bb0ed : in al, dx ; retf 0xae32
0x00000000004c4d61 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004bb01e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb1 ; ret 0x48f
0x00000000004bb01d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb2 ; ret 0x48f
0x000000000043ee58 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004b9723 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046754a : in eax, 0x29 ; retf 0x8d41
0x0000000000426a7a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000004522f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b89b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a9bb : in eax, 0xdf ; loopne 0x45a94c ; ret 0xe680
0x00000000004bb5d9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b977a : in eax, 0xe5 ; retf 0x2a91
0x0000000000466873 : in eax, 0xf ; je 0x466898 ; add rax, 2 ; ret
0x0000000000434cfa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c4da : in eax, 0xf3 ; ret
0x00000000004a383d : in eax, 0xf8 ; jmp qword ptr [rax]
0x00000000004a385d : in eax, 0xf8 ; jmp rax
0x00000000004baaa1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000405549 : in eax, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048ae21 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000041fa03 : in eax, dx ; call 0x42c463
0x000000000049ed0f : in eax, dx ; jne 0x49ecf1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dbf2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x0000000000431c0a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004350fa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495870 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478e2b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e532 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414d92 : in eax, dx ; ret
0x00000000004b94f8 : in eax, dx ; retf
0x000000000043dd42 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cdb5 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043e008 : inc bl ; cmp dl, 1 ; jb 0x43e01a ; mov byte ptr [rdi], cl ; ret
0x0000000000432ad6 : inc bl ; jb 0x432ae6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004269e1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000415202 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045e21a : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044d606 : inc byte ptr [rbx] ; je 0x44d615 ; pop rbx ; ret
0x00000000004a3b47 : inc dword ptr [rax + 0x1d] ; stc ; call rax
0x00000000004a384f : inc dword ptr [rax + 0x40fff8df] ; loope 0x4a3857 ; jmp qword ptr [rax]
0x00000000004a37af : inc dword ptr [rax + 0x40fff8e0] ; loop 0x4a37b7 ; jmp qword ptr [rax]
0x00000000004a34c3 : inc dword ptr [rax + 0x68] ; clc ; jmp rax
0x00000000004bde43 : inc dword ptr [rax + 0x68] ; std ; jmp qword ptr [rax]
0x00000000004a34e3 : inc dword ptr [rax + 0x75] ; clc ; jmp rax
0x00000000004bdf3b : inc dword ptr [rax + 0x8fffd9d] ; ret 0xfffd
0x00000000004bdf4b : inc dword ptr [rax + 0x8fffdc2] ; ret 0xfffd
0x00000000004a3e27 : inc dword ptr [rax + 0xfff906] ; or cl, bh ; call rax
0x00000000004a383b : inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a3797 : inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a37b3 : inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3853 : inc dword ptr [rax - 0x1f] ; clc ; jmp qword ptr [rax]
0x00000000004a386f : inc dword ptr [rax - 0x21] ; clc ; inc dword ptr [rax] ; loope 0x4a3877 ; call rax
0x00000000004a3923 : inc dword ptr [rax - 0x26] ; clc ; call qword ptr [rax - 0x1f000725]
0x00000000004a38cf : inc dword ptr [rax - 0x2d] ; clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004bdecb : inc dword ptr [rax - 0x2f0002ba] ; std ; jmp qword ptr [rax]
0x00000000004a38df : inc dword ptr [rax - 0x2f000728] ; fprem ; jmp qword ptr [rax]
0x00000000004a38f3 : inc dword ptr [rax - 0x2f000736] ; retf
0x00000000004a351b : inc dword ptr [rax - 0x2f000777] ; mov bh, al ; jmp qword ptr [rax]
0x000000000045359a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045574c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a350b : inc dword ptr [rax - 0x7c] ; clc ; call qword ptr [rax - 0x1f00077b]
0x00000000004a3ba7 : inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x00000000004602f3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000453a0c : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000042fd77 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a33d3 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3427 : inc dword ptr [rax] ; div bh ; jmp rax
0x00000000004a37d7 : inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a385b : inc dword ptr [rax] ; in eax, 0xf8 ; jmp rax
0x00000000004a3e97 : inc dword ptr [rax] ; ja 0x4a3e98 ; call qword ptr [rax]
0x00000000004a3f63 : inc dword ptr [rax] ; jg 0x4a3f64 ; jmp qword ptr [rax]
0x00000000004a3f1f : inc dword ptr [rax] ; jge 0x4a3f20 ; jmp qword ptr [rax]
0x00000000004a3eef : inc dword ptr [rax] ; jl 0x4a3ef0 ; call qword ptr [rax]
0x00000000004a3f43 : inc dword ptr [rax] ; jle 0x4a3f44 ; jmp qword ptr [rax]
0x00000000004a3873 : inc dword ptr [rax] ; loope 0x4a3873 ; call rax
0x00000000004a3e2b : inc dword ptr [rax] ; or cl, bh ; call rax
0x00000000004a37bb : inc dword ptr [rax] ; out 0xf8, al ; jmp rax
0x00000000004a3553 : inc dword ptr [rax] ; push rax ; clc ; call qword ptr [rax]
0x00000000004a3757 : inc dword ptr [rax] ; ret
0x00000000004a395f : inc dword ptr [rax] ; sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x0000000000460ba6 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047d095 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x000000000047149f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004736b0 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b4c0 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b545 ; ret
0x00000000004be05b : inc dword ptr [rbx + rdx*8 - 3] ; jmp rsp
0x00000000004606e7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d5da : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d242 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e597 : inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004587cf : inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x000000000046885c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407692 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a712 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043e6cf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e5ff : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000444224 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000045e3b9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045e217 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x0000000000477ad0 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047eb03 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x00000000004a368f : inc dword ptr [rcx - 0x3e] ; clc ; inc ecx ; ret 0xfff8
0x000000000047fc4e : inc dword ptr [rcx - 0x43] ; retf
0x0000000000487064 : inc dword ptr [rcx - 0x77] ; cmc ; jmp 0x487039
0x000000000044e59a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000413d55 : inc dword ptr [rcx - 0x7f] ; retf 0
0x0000000000413eaa : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x0000000000413ef5 : inc dword ptr [rcx - 0x80] ; retf 0xe980
0x00000000004c959d : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000048b369 : inc dword ptr [rdi + rcx + 0x44] ; retf 0xf741
0x000000000047ff70 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3a1b : inc dword ptr [rdx + 0x1b] ; stc ; call rdx
0x00000000004a3c2b : inc dword ptr [rdx + 0xf] ; stc ; call rdx
0x00000000004a3ae3 : inc dword ptr [rdx + rbx - 7] ; call rsp
0x00000000004a3a0b : inc dword ptr [rdx] ; sbb eax, 0x1c92fff9 ; stc ; jmp qword ptr [rdx]
0x000000000042bddd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a3977 : inc dword ptr [rsi + 0x1f] ; stc ; call rsi
0x00000000004a3543 : inc eax ; clc ; call rax
0x00000000004a3903 : inc eax ; iretd ; clc ; call qword ptr [rax]
0x00000000004a3e87 : inc eax ; jbe 0x4a3e88 ; call rax
0x00000000004a3f3b : inc eax ; jge 0x4a3f3c ; jmp rax
0x00000000004a3f17 : inc eax ; jl 0x4a3f18 ; jmp rax
0x00000000004a3f5b : inc eax ; jle 0x4a3f5c ; jmp rax
0x00000000004a3647 : inc eax ; mov esi, 0xbfb0fff8 ; clc ; call rsi
0x00000000004bdedb : inc eax ; std ; call qword ptr [rax]
0x000000000046500c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d8c9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412e28 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000477b0b : inc ebx ; sub eax, edx ; ret
0x00000000004a3693 : inc ecx ; ret 0xfff8
0x00000000004a368b : inc ecx ; sar eax, 0xff ; ret 0xfff8
0x00000000004604a2 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000481476 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004844a6 : inc esi ; add dh, byte ptr [rax] ; jmp 0x480f43
0x00000000004a36db : inc esi ; ret
0x00000000004a3ac3 : inc esp ; sbb eax, 0x1d54fff9 ; stc ; jmp rsp
0x0000000000402c4b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x0000000000488346 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d857 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x0000000000401411 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004435f3 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000041d2b5 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004015cd : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041dcae : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470f45 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000443539 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443566 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000047b046 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047bec1 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x0000000000491adb : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f82a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bb5de : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c71cc : insb byte ptr [rdi], dx ; mov word ptr [rax], es ; add byte ptr [rax], al ; cdq ; std ; call rcx
0x00000000004101f0 : insb byte ptr [rdi], dx ; ret 1
0x0000000000478df0 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004ba9a6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004950f0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c533d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x000000000043fedf : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495ff0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462cc1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb5df : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b998d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004ba89f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478cd3 : int 0x48
0x000000000040ee71 : int 0x80
0x00000000004c1fa9 : int 0xa
0x000000000044b8df : int 0xf
0x0000000000488b1f : int 0xfc
0x000000000045a5e6 : int1 ; add eax, r8d ; ret
0x0000000000444b6c : int1 ; call rbx
0x0000000000474044 : int1 ; cmp rcx, rdx ; jne 0x474027 ; ret
0x000000000043df8b : int1 ; jl 0x43dfdc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfac : int1 ; jl 0x43dffd ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfbf : int1 ; jl 0x43e010 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e094 : int1 ; jl 0x43e0e5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e0ec : int1 ; jl 0x43e13d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e189 : int1 ; jl 0x43e1da ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480d83 : int1 ; jmp 0x480d4a
0x0000000000480d82 : int1 ; jmp 0x480d4b
0x000000000049a367 : int1 ; jmp rcx
0x00000000004ba864 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000434aeb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004323cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d3a3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000470d45 : int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000043e6d2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bafb6 : int1 ; ret 0x5803
0x000000000048135b : int1 ; retf 0xfff9
0x000000000043d3a7 : int1 ; sub eax, edx ; ret
0x00000000004a3905 : iretd ; clc ; call qword ptr [rax]
0x000000000041ae0b : iretd ; mov eax, 3 ; syscall
0x000000000041addf : iretd ; mov eax, r8d ; syscall
0x00000000004c30a9 : iretd ; std ; jmp qword ptr [rdx]
0x000000000040dc1e : ja 0x40dc43 ; ret
0x0000000000426942 : ja 0x426953 ; ret
0x000000000042c468 : ja 0x42c462 ; ret 0x7401
0x0000000000435eb3 : ja 0x435eb7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b4f7 : ja 0x43b4fd ; ret
0x000000000043b513 : ja 0x43b51d ; mov dword ptr [rdi], ecx ; ret
0x000000000043b554 : ja 0x43b563 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b5d9 : ja 0x43b5ed ; ret
0x000000000043b62f : ja 0x43b647 ; ret
0x000000000043b6b1 : ja 0x43b6cd ; ret
0x000000000043bb17 : ja 0x43bb21 ; lea rax, [rdi + 2] ; ret
0x000000000043bb33 : ja 0x43bb41 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043bb84 : ja 0x43bb97 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043bc69 : ja 0x43bc81 ; lea rax, [rdi + 0x10] ; ret
0x000000000043bcdf : ja 0x43bcfb ; lea rax, [rdi + 0x14] ; ret
0x000000000043bd61 : ja 0x43bd81 ; lea rax, [rdi + 0x18] ; ret
0x000000000043ec3d : ja 0x43ec69 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043f4db : ja 0x43f4e3 ; ret
0x000000000043f52a : ja 0x43f533 ; ret
0x000000000043f6b9 : ja 0x43f6f3 ; ret
0x000000000043f75d : ja 0x43f7a7 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044fb56 : ja 0x44fb63 ; ret
0x000000000045a5d7 : ja 0x45a5be ; mov eax, r8d ; ret
0x000000000046a9cd : ja 0x46a9db ; pop rbx ; ret
0x000000000046ad5b : ja 0x46ad63 ; ret
0x000000000046adb0 : ja 0x46adbb ; ret
0x000000000046af60 : ja 0x46af8b ; ret
0x000000000047914e : ja 0x4791a0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484d44 : ja 0x484cd1 ; ret 0x348
0x00000000004876bb : ja 0x487648 ; ret 0x348
0x000000000048aabd : ja 0x4896be ; jmp 0x48aa97
0x000000000048dcf5 : ja 0x48c8de ; jmp 0x48dccf
0x000000000049143d : ja 0x48f73e ; jmp 0x491417
0x00000000004a3e99 : ja 0x4a3e96 ; call qword ptr [rax]
0x00000000004a3e9d : ja 0x4a3e9a ; jmp qword ptr [rax]
0x00000000004a3ec1 : ja 0x4a3ebe ; call rax
0x00000000004a3ec9 : ja 0x4a3ec6 ; call qword ptr [rax]
0x00000000004a3ec5 : ja 0x4a3ec6 ; push rax ; ja 0x4a3eca ; call qword ptr [rax]
0x00000000004bb024 : ja 0x4bafab ; ret 0x48f
0x00000000004bde65 : ja 0x4bde66 ; call qword ptr [rax]
0x0000000000413278 : jae 0x413285 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416b4b : jae 0x416b75 ; movzx eax, byte ptr [rax] ; ret
0x000000000044410c : jae 0x444099 ; retf 0x8d48
0x0000000000444334 : jae 0x444317 ; mov eax, 1 ; ret
0x000000000043f47d : jae 0x444556 ; ret
0x000000000046d6cd : jae 0x46d722 ; add r8b, bpl ; retf 0xf940
0x000000000047476b : jae 0x474715 ; xor eax, eax ; ret
0x000000000049d6a0 : jae 0x49d666 ; mov rdx, rcx ; jmp 0x49d67e
0x00000000004a34e1 : jae 0x4a34e1 ; inc dword ptr [rax + 0x75] ; clc ; jmp rax
0x00000000004b95e2 : jae 0x4b95c4 ; jo 0x4b9660 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba47e : jae 0x4ba459 ; push rsi ; pop rdx ; je 0x4ba44e ; ret 0xacfc
0x00000000004bf221 : jae 0x4bf239 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4f47 : jae 0x4c4f55 ; ret
0x00000000004303da : jb 0x4303ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043052a : jb 0x43053a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043067a : jb 0x43068a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004307ca : jb 0x4307da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043091a : jb 0x43092a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a6a : jb 0x430a7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bba : jb 0x430bca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d0a : jb 0x430d1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e5a : jb 0x430e6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430faa : jb 0x430fba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310fa : jb 0x43110a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043124a : jb 0x43125a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043139a : jb 0x4313aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314ea : jb 0x4314fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043163a : jb 0x43164a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004329d1 : jb 0x4329ba ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432a34 : jb 0x432a1d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000432ad8 : jb 0x432ae4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000435a8e : jb 0x435a9a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043de77 : jb 0x43de87 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043de83 : jb 0x43de99 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043de93 : jb 0x43de9b ; mov byte ptr [rdi], cl ; ret
0x000000000043dff5 : jb 0x43e004 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043e000 : jb 0x43e013 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043e00d : jb 0x43e015 ; mov byte ptr [rdi], cl ; ret
0x0000000000464d5c : jb 0x464d55 ; lea eax, [rdx + rdi] ; ret
0x000000000049b003 : jb 0x49b00d ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004bac38 : jb 0x4bac92 ; call 0x4c15d5f7
0x0000000000401418 : jbe 0x40142c ; syscall
0x0000000000414f9b : jbe 0x414f3b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426286 : jbe 0x4262c5 ; add rax, rdi ; ret
0x0000000000426296 : jbe 0x4262c7 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000004262a6 : jbe 0x4262c7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004262b6 : jbe 0x4262c7 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c4d3 : jbe 0x42c4ee ; lea rdi, [rdi + 0x10] ; jne 0x42c4c9 ; ret
0x000000000045a8dd : jbe 0x45a91c ; add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x000000000045ada2 : jbe 0x45ad2f ; ret 0x8166
0x000000000046428a : jbe 0x464200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047835f : jbe 0x47836a ; ret
0x000000000049de96 : jbe 0x49dea8 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a3e89 : jbe 0x4a3e86 ; call rax
0x00000000004a3e85 : jbe 0x4a3e86 ; inc eax ; jbe 0x4a3e8a ; call rax
0x00000000004a3e8d : jbe 0x4a3e8a ; jmp rax
0x00000000004a3e95 : jbe 0x4a3e96 ; inc dword ptr [rax] ; ja 0x4a3e9a ; call qword ptr [rax]
0x00000000004baebc : jbe 0x4bae8f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004baebb : jbe 0x4bae90 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004c1bf9 : jbe 0x4c1bf3 ; call qword ptr [rax]
0x00000000004c1bf8 : jbe 0x4c1bf4 ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be560 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400c14 : je 0x400c42 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401683 : je 0x401697 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004021c9 : je 0x4021dd ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402415 : je 0x402429 ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402cf4 : je 0x402d04 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f43 : je 0x402f5d ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403137 : je 0x403151 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403552 : je 0x403562 ; mov edi, 0x6cc0a0 ; call rax
0x000000000040359a : je 0x4035ac ; mov edi, 0x6cc0a0 ; call r15
0x000000000040369a : je 0x4036aa ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f82e : je 0x40f83d ; mov eax, edx ; pop rbx ; ret
0x000000000040fbd8 : je 0x40fc03 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412e04 : je 0x412e40 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041438b : je 0x414331 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414f63 : je 0x414f1d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004150d3 : je 0x41508d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415245 : je 0x415252 ; ret
0x0000000000415277 : je 0x415286 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d9a : je 0x415da5 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041793d : je 0x417b5e ; mov rdx, rax ; jmp 0x417968
0x0000000000417f0a : je 0x417f11 ; pop rbx ; ret
0x0000000000417fe7 : je 0x417fed ; call rax
0x0000000000418dd4 : je 0x418de1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041adda : je 0x41ae09 ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041e2d2 : je 0x41e2fb ; call rax
0x000000000041ecc2 : je 0x41ecee ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041f208 : je 0x41f20e ; call rax
0x0000000000421209 : je 0x421212 ; ret
0x0000000000421492 : je 0x4214a7 ; mov eax, 0x16 ; ret
0x00000000004214e1 : je 0x4214f3 ; lea rax, [rip + 0x1a966] ; ret
0x0000000000422c13 : je 0x422bdd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004238e5 : je 0x4238ed ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423954 : je 0x423966 ; lea rax, [rip + 0x14853] ; ret
0x0000000000423ac4 : je 0x423ace ; bsf eax, edx ; ret
0x0000000000423ac4 : je 0x423acf ; bsf eax, edx ; ret
0x0000000000423b6d : je 0x423b85 ; bsf rax, rdx ; ret
0x0000000000423b6d : je 0x423b86 ; bsf rax, rdx ; ret
0x0000000000423b0c : je 0x423b99 ; bsf rax, rdx ; ret
0x000000000042583b : je 0x425866 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000042617c : je 0x4261d3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004262ee : je 0x426301 ; lea rax, [rip + 0x8449] ; ret
0x00000000004268d0 : je 0x4268e2 ; lea rax, [rip + 0x17647] ; ret
0x0000000000426e84 : je 0x426e96 ; lea rax, [rip + 0x12ad3] ; ret
0x0000000000429353 : je 0x42931d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042aee3 : je 0x42aead ; lea r10, [r10 + r9] ; jmp r10
0x000000000042cfaa : je 0x42d001 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d061 : je 0x42d079 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000042fad7 : je 0x42fae1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e60d : je 0x43e5d6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e5e5 : je 0x43e5d8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e60d : je 0x43e5d8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e71e : je 0x43e72c ; xor eax, eax ; ret
0x000000000043e719 : je 0x43e739 ; cmp eax, 2 ; je 0x43e731 ; xor eax, eax ; ret
0x000000000043e76d : je 0x43e753 ; ret
0x000000000043e858 : je 0x43e868 ; mov edi, 0x6cc720 ; call rax
0x000000000043e870 : je 0x43e880 ; mov edi, 0x6cc720 ; call rax
0x000000000043ebd0 : je 0x43ebb1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f5d8 : je 0x43f62d ; add byte ptr [rax], al ; ret
0x000000000043ff9a : je 0x43ffa1 ; ret
0x0000000000440278 : je 0x440260 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004412e0 : je 0x4412f2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442a49 : je 0x442a4e ; ret
0x0000000000442aad : je 0x442ab2 ; ret
0x0000000000444043 : je 0x444053 ; mov edi, 0x6cb140 ; call rax
0x00000000004441d1 : je 0x4441e1 ; mov edi, 0x6cb140 ; call rax
0x0000000000444358 : je 0x444362 ; ret
0x0000000000444374 : je 0x444389 ; mov dword ptr [rip + 0x285c1c], edx ; pop rbx ; ret
0x0000000000444b67 : je 0x444b93 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448c64 : je 0x448c93 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d608 : je 0x44d613 ; pop rbx ; ret
0x000000000044d603 : je 0x44d618 ; cmp esi, 3 ; je 0x44d618 ; pop rbx ; ret
0x000000000044db90 : je 0x44dba0 ; mov edi, 0x6cc720 ; call rax
0x000000000044dbbf : je 0x44dbd7 ; mov edi, 0x6cc720 ; call rax
0x000000000044dcc0 : je 0x44dcc6 ; call rax
0x000000000044dd1f : je 0x44dd2f ; mov edi, 0x6cc720 ; call rax
0x000000000044de98 : je 0x44deaf ; mov edi, 0x6cc720 ; call rax
0x000000000044e178 : je 0x44e188 ; mov edi, 0x6cc720 ; call rax
0x000000000044e27c : je 0x44e282 ; call rax
0x000000000044e595 : je 0x44e59a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000044f13b : je 0x44f141 ; call rax
0x000000000044f6fb : je 0x44f703 ; ret
0x0000000000450cd2 : je 0x450cff ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000463038 : je 0x463062 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463cc6 : je 0x463d16 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463cc5 : je 0x463d17 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000464aac : je 0x464ab2 ; ret
0x0000000000464ada : je 0x464b3c ; pop rbp ; pop r12 ; ret
0x0000000000464b7f : je 0x464be1 ; pop rbp ; pop r12 ; ret
0x0000000000464cbd : je 0x464cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464d01 : je 0x464d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004658dc : je 0x465905 ; bsf rax, rdx ; ret
0x00000000004658dc : je 0x465906 ; bsf rax, rdx ; ret
0x000000000046586c : je 0x465919 ; bsf rax, rdx ; ret
0x0000000000466859 : je 0x466879 ; mov cl, dl ; and cl, 0xf ; je 0x466889 ; ret
0x0000000000466860 : je 0x466882 ; ret
0x0000000000466875 : je 0x466896 ; add rax, 2 ; ret
0x0000000000466bfb : je 0x466c24 ; call rbx
0x0000000000466ca3 : je 0x466ccc ; call rbx
0x0000000000466df0 : je 0x466e1f ; and byte ptr [rbp - 0x73], cl ; jl 0x466d87 ; add al, 0xe8 ; ret
0x0000000000467088 : je 0x467095 ; test edx, edx ; jne 0x467087 ; ret
0x000000000046aa72 : je 0x46aa90 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046b2e5 : je 0x46b2d4 ; ret
0x000000000046ddca : je 0x46dd54 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470ed4 : je 0x470ee4 ; mov edi, 0x6cb100 ; call rax
0x0000000000474ec8 : je 0x474ed8 ; mov edi, 0x6cb140 ; call rax
0x0000000000474ef0 : je 0x474f00 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f66 : je 0x474f76 ; mov edi, 0x6cb140 ; call rax
0x000000000047648b : je 0x47649f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x00000000004764ae : je 0x4764fa ; shl rdx, 5 ; add rdx, rax ; jmp 0x4764d1
0x0000000000476a7c : je 0x476aa1 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000476a33 : je 0x476aa7 ; mov edi, 0x6cb140 ; call rax
0x0000000000476a97 : je 0x476b00 ; pop rbx ; ret
0x0000000000476bd4 : je 0x476bdb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476dcf : je 0x476dd6 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004783ee : je 0x4783b9 ; mov edi, 0x6cb140 ; call rax
0x00000000004783cf : je 0x4783fd ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x0000000000478536 : je 0x478542 ; ret
0x000000000047854c : je 0x47855c ; mov edi, 0x6cb140 ; call rax
0x000000000047a99a : je 0x47a9a5 ; mov eax, edx ; pop rbx ; ret
0x000000000047b292 : je 0x47b2a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047befc : je 0x47bf2b ; js 0x47bf51 ; lea edi, [rsp + 0x78] ; call r12
0x000000000047e968 : je 0x47e978 ; mov edi, 0x6cb140 ; call rax
0x000000000047e994 : je 0x47e9a4 ; mov edi, 0x6cb140 ; call rax
0x000000000047ec3a : je 0x47ec4e ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048796b : je 0x4878f8 ; ret 0x348
0x00000000004880eb : je 0x4880fb ; mov edi, 0x6cb140 ; call rax
0x0000000000488112 : je 0x488122 ; mov edi, 0x6cb140 ; call rax
0x0000000000488191 : je 0x4881a1 ; mov edi, 0x6cb140 ; call rax
0x00000000004881ba : je 0x4881ca ; mov edi, 0x6cb140 ; call rax
0x0000000000488610 : je 0x48863e ; and byte ptr [rax - 0x2f], cl ; jmp 0x4885d9
0x00000000004942f3 : je 0x4942bd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004962a3 : je 0x49626d ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a0d5 : je 0x49a0b3 ; ret
0x000000000049c3a0 : je 0x49c358 ; add rsp, 0x18 ; ret
0x000000000049c357 : je 0x49c3c9 ; add rsp, 0x18 ; ret
0x000000000049e293 : je 0x49e2a4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e2a9 ; ret
0x000000000049e44d : je 0x49e4b7 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e8c8 : je 0x49e8d3 ; ret
0x000000000049eb3a : je 0x49eb4a ; mov edi, 0x6cb100 ; call rax
0x000000000049ebfb : je 0x49ec0b ; mov edi, 0x6cb100 ; call rax
0x00000000004a089e : je 0x4a08a9 ; call rax
0x00000000004b89ec : je 0x4b8a1a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b9748 : je 0x4b9713 ; xor al, 0xd8 ; ret
0x00000000004b9987 : je 0x4b9984 ; jmp 0x4b995e
0x00000000004ba482 : je 0x4ba44a ; ret 0xacfc
0x00000000004bf21a : je 0x4bf228 ; ret
0x00000000004c59bd : je 0x4c59c5 ; add al, al ; and edx, edi ; jmp rdi
0x00000000004c8dd4 : je 0x4c8d85 ; add byte ptr [rax], al ; cmp dil, bpl ; call rcx
0x0000000000411dc2 : jg 0x411e3b ; mov eax, 3 ; syscall
0x0000000000412e08 : jg 0x412e7e ; xor eax, eax ; syscall
0x0000000000426952 : jg 0x4269a4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004269b0 : jg 0x4269fc ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000426a77 : jg 0x426a90 ; jne 0x426a67 ; mov rax, rdi ; ret
0x000000000042c4d7 : jg 0x42c4ee ; jne 0x42c4c5 ; ret
0x0000000000431fb9 : jg 0x43200c ; ret
0x0000000000432000 : jg 0x432050 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432005 : jg 0x432058 ; retf
0x000000000043203f : jg 0x43208a ; ret
0x000000000043207f : jg 0x4320ca ; retf
0x00000000004321b9 : jg 0x43220c ; ret 0x894c
0x0000000000432200 : jg 0x432250 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432205 : jg 0x432258 ; retf 0x894c
0x000000000043223f : jg 0x43228a ; ret 0x894c
0x000000000043227b : jg 0x4322c6 ; retf 0x894c
0x00000000004329d0 : jg 0x432a4c ; loopne 0x4329a1 ; jp 0x432a5d ; jp 0x4329d0 ; ret
0x0000000000432a7c : jg 0x432a8d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434ac8 : jg 0x434b19 ; loope 0x434ac7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b3f : jg 0x434b8a ; ret 0xff2
0x0000000000434b58 : jg 0x434ba9 ; loop 0x434b57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bcf : jg 0x434c1a ; ret
0x0000000000434be8 : jg 0x434c39 ; jrcxz 0x434be7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c78 : jg 0x434cc9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434cf8 : jg 0x434d49 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d78 : jg 0x434dc9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434df8 : jg 0x434e49 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e78 : jg 0x434ec9 ; call 0x4fc25e7a
0x0000000000434ef8 : jg 0x434f49 ; jmp 0x4fc25efa
0x0000000000434f55 : jg 0x434fa5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434f5f : jg 0x434faa ; retf 0xff2
0x0000000000434fd5 : jg 0x435025 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434fdf : jg 0x43502a ; retf
0x0000000000435078 : jg 0x4350c9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350f8 : jg 0x435149 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435188 : jg 0x4351d9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435208 : jg 0x435259 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043527c : jg 0x435287 ; ret
0x00000000004352d6 : jg 0x4352e9 ; ret
0x00000000004352d1 : jg 0x435321 ; psllq mm1, qword ptr [rdi] ; jg 0x4352ee ; ret
0x0000000000435346 : jg 0x435359 ; ret
0x00000000004353b6 : jg 0x4353c9 ; ret
0x00000000004353b1 : jg 0x435401 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435426 : jg 0x435439 ; ret
0x0000000000435421 : jg 0x435471 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435496 : jg 0x4354a9 ; ret
0x0000000000435491 : jg 0x4354e1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435506 : jg 0x435519 ; ret
0x0000000000435501 : jg 0x435551 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435576 : jg 0x435589 ; ret
0x0000000000435571 : jg 0x4355c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355e6 : jg 0x4355f9 ; ret
0x00000000004355e1 : jg 0x435631 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435656 : jg 0x435669 ; ret
0x00000000004356c6 : jg 0x4356d9 ; ret
0x0000000000435736 : jg 0x435749 ; ret
0x0000000000435731 : jg 0x435781 ; add eax, 0xf7f0ff3 ; ret
0x00000000004357a6 : jg 0x4357b9 ; ret
0x00000000004357a1 : jg 0x4357f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435816 : jg 0x435829 ; ret
0x0000000000435811 : jg 0x435861 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435886 : jg 0x435899 ; ret
0x0000000000435881 : jg 0x4358d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358f6 : jg 0x435909 ; ret
0x00000000004358f1 : jg 0x435941 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435a34 : jg 0x435a45 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435a48 : jg 0x435a59 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435eba : jg 0x435eb6 ; ret
0x000000000043b5c6 : jg 0x43b5d1 ; ret
0x000000000043b5d6 : jg 0x43b5e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b5ea : jg 0x43b5f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b609 : jg 0x43b617 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b619 : jg 0x43b627 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b629 : jg 0x43b63a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b64a : jg 0x43b659 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b66a : jg 0x43b679 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b68a : jg 0x43b699 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b6aa : jg 0x43b6bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b6ed : jg 0x43b6ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b70d : jg 0x43b71f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b72b : jg 0x43b73b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b74b : jg 0x43b75b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b76b : jg 0x43b77b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b78b : jg 0x43b79b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bc56 : jg 0x43bc65 ; lea rax, [rdi + 0xf] ; ret
0x000000000043bc66 : jg 0x43bc78 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043bc99 : jg 0x43bcab ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bcb9 : jg 0x43bccb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bddf : jg 0x43be3f ; or eax, 0x1c478d48 ; ret
0x000000000043de52 : jg 0x43de62 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043def3 : jg 0x43df44 ; loopne 0x43df48 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dfd7 : jg 0x43dfe7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dfcd : jg 0x43dfed ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e5a0 : jg 0x43e5dd ; ret 0x2b77
0x000000000044066d : jg 0x440652 ; std ; dec dword ptr [rax - 0x75] ; jge 0x44067d ; call rbx
0x0000000000449d7f : jg 0x449d0c ; ret 0x5c77
0x00000000004694c5 : jg 0x469504 ; add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091e21
0x00000000004736ad : jg 0x473679 ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000047f3a1 : jg 0x47f3a7 ; add byte ptr [rcx], bh ; ret
0x0000000000491ab4 : jg 0x491ac1 ; ret 0x5488
0x00000000004a3f65 : jg 0x4a3f62 ; jmp qword ptr [rax]
0x00000000004c4861 : jg 0x4c485e ; call rdx
0x00000000004c6485 : jg 0x4c648d ; add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x000000000040e03e : jge 0x40e043 ; call r14
0x000000000044028b : jge 0x44028f ; call rbx
0x00000000004403b2 : jge 0x4403b6 ; call rbx
0x00000000004403c0 : jge 0x4403c4 ; call rbx
0x00000000004404f5 : jge 0x4404f9 ; call rbx
0x0000000000440665 : jge 0x440669 ; call rbx
0x0000000000440673 : jge 0x440677 ; call rbx
0x0000000000440ac6 : jge 0x440a91 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441e83 : jge 0x441e87 ; call rbx
0x0000000000441fab : jge 0x441faf ; call rbx
0x00000000004420ee : jge 0x4420f2 ; call rbx
0x00000000004421ef : jge 0x4421f3 ; call rbx
0x000000000044220b : jge 0x44220f ; call rbx
0x0000000000442566 : jge 0x442517 ; mov eax, 3 ; syscall
0x0000000000442653 : jge 0x4425f4 ; mov eax, 3 ; syscall
0x0000000000453e84 : jge 0x453ebb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466604 : jge 0x466606 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466a36 : jge 0x466a3b ; call r12
0x000000000049c76f : jge 0x49c76c ; leave ; ret
0x000000000049c807 : jge 0x49c80a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c89b : jge 0x49c898 ; leave ; ret
0x000000000049c8e7 : jge 0x49c8ea ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c9b0 : jge 0x49c9b3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ca3f : jge 0x49ca3c ; leave ; ret
0x000000000049ca90 : jge 0x49ca93 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049eea0 : jge 0x49eeb5 ; call r12
0x00000000004a3f21 : jge 0x4a3f1e ; jmp qword ptr [rax]
0x00000000004a3f39 : jge 0x4a3f3a ; inc eax ; jge 0x4a3f3e ; jmp rax
0x00000000004a3f3d : jge 0x4a3f3a ; jmp rax
0x00000000004a3f41 : jge 0x4a3f42 ; inc dword ptr [rax] ; jle 0x4a3f46 ; jmp qword ptr [rax]
0x00000000004b8a4a : jge 0x4b8a2b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004ba394 : jge 0x4ba405 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c4761 : jge 0x4c475e ; call rdi
0x00000000004c62e5 : jge 0x4c62ed ; add byte ptr [rax], cl ; jle 0x4c62eb ; call rax
0x0000000000400c18 : jl 0x400c42 ; or al, 0x41 ; call rsp
0x0000000000400c6c : jl 0x400c9a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000041413b : jl 0x414186 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b425 : jl 0x41b450 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b55c : jl 0x41b587 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004359b4 : jl 0x435a03 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004359f0 : jl 0x435a3f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435bee : jl 0x435c3d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435d55 : jl 0x435da4 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435eb7 : jl 0x435f06 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043df8c : jl 0x43dfdb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfad : jl 0x43dffc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfc0 : jl 0x43e00f ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e095 : jl 0x43e0e4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043e0ed : jl 0x43e13c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e18a : jl 0x43e1d9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f6e4 : jl 0x43f710 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f6e4 : jl 0x43f711 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043fbfa : jl 0x43fc28 ; or byte ptr [rax + 0x101], bh ; syscall
0x000000000043fcb1 : jl 0x43fcdf ; or byte ptr [rax + 3], bh ; syscall
0x0000000000440720 : jl 0x44074e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000441e70 : jl 0x441e3c ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000447536 : jl 0x447564 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447e99 : jl 0x447ec7 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044827f : jl 0x4482ad ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448c69 : jl 0x448c93 ; call r15
0x0000000000449010 : jl 0x44903e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449d29 : jl 0x449d57 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044ac35 : jl 0x44ac63 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d1e8 : jl 0x44d213 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fcd2 : jl 0x44fcfd ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004529dc : jl 0x452a07 ; and byte ptr [rax + 1], cl ; ret
0x0000000000459078 : jl 0x459042 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ad5b : jl 0x45ad86 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045cc5c : jl 0x45cc87 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464a25 : jl 0x4649c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466df5 : jl 0x466d82 ; add al, 0xe8 ; ret
0x00000000004736b9 : jl 0x4736e8 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047ba2d : jl 0x47ba57 ; js 0x47ba76 ; call rsp
0x000000000047bd42 : jl 0x47bd6c ; js 0x47bd8b ; call rsp
0x000000000047bf01 : jl 0x47bf2b ; js 0x47bf4a ; call rsp
0x000000000047c109 : jl 0x47c133 ; js 0x47c152 ; call rsp
0x000000000047d707 : jl 0x47d6d3 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000004898de : jl 0x489909 ; or byte ptr [rax], al ; jne 0x4898b3 ; jmp 0x4898bb
0x000000000048cb0e : jl 0x48cb39 ; adc byte ptr [rax], al ; jne 0x48cae3 ; jmp 0x48caeb
0x000000000048de06 : jl 0x48de31 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049adc2 : jl 0x49aded ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3ef1 : jl 0x4a3eee ; call qword ptr [rax]
0x00000000004a3ef5 : jl 0x4a3ef2 ; jmp qword ptr [rax]
0x00000000004a3f15 : jl 0x4a3f16 ; inc eax ; jl 0x4a3f1a ; jmp rax
0x00000000004a3f19 : jl 0x4a3f16 ; jmp rax
0x00000000004a3f1d : jl 0x4a3f1e ; inc dword ptr [rax] ; jge 0x4a3f22 ; jmp qword ptr [rax]
0x00000000004ba592 : jl 0x4ba5f1 ; leave ; retf
0x00000000004c0edc : jl 0x4c0f0e ; add byte ptr [rax], al ; jo 0x4c0ea3 ; cmc ; call qword ptr [rax]
0x0000000000423b0e : jle 0x423b17 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000423b0e : jle 0x423b18 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d652 : jle 0x44d665 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000045b8f1 : jle 0x45b930 ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000047ca9d : jle 0x47caab ; ret
0x00000000004a3f45 : jle 0x4a3f42 ; jmp qword ptr [rax]
0x00000000004a3f59 : jle 0x4a3f5a ; inc eax ; jle 0x4a3f5e ; jmp rax
0x00000000004a3f5d : jle 0x4a3f5a ; jmp rax
0x00000000004a3f61 : jle 0x4a3f62 ; inc dword ptr [rax] ; jg 0x4a3f66 ; jmp qword ptr [rax]
0x00000000004b8a42 : jle 0x4b89db ; xlatb ; retf 0xa1eb
0x00000000004ba605 : jle 0x4ba640 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004c62e9 : jle 0x4c62e7 ; call rax
0x00000000004217ed : jmp 0x100c4139
0x0000000000421896 : jmp 0x100c41e2
0x00000000004219d6 : jmp 0x100c4322
0x0000000000421b16 : jmp 0x100c4462
0x0000000000421c56 : jmp 0x100c45a2
0x0000000000421d96 : jmp 0x100c46e2
0x0000000000421ed6 : jmp 0x100c4822
0x0000000000422016 : jmp 0x100c4962
0x0000000000422156 : jmp 0x100c4aa2
0x0000000000422296 : jmp 0x100c4be2
0x00000000004223d6 : jmp 0x100c4d22
0x0000000000422516 : jmp 0x100c4e62
0x0000000000422656 : jmp 0x100c4fa2
0x0000000000422796 : jmp 0x100c50e2
0x00000000004228d6 : jmp 0x100c5222
0x0000000000422a16 : jmp 0x100c5362
0x0000000000422c39 : jmp 0x100c5585
0x0000000000422cc6 : jmp 0x100c5612
0x0000000000422d96 : jmp 0x100c56e2
0x0000000000422e66 : jmp 0x100c57b2
0x0000000000422f26 : jmp 0x100c5872
0x0000000000422ff6 : jmp 0x100c5942
0x00000000004230c6 : jmp 0x100c5a12
0x0000000000423196 : jmp 0x100c5ae2
0x0000000000423266 : jmp 0x100c5bb2
0x0000000000423336 : jmp 0x100c5c82
0x0000000000423406 : jmp 0x100c5d52
0x00000000004234d6 : jmp 0x100c5e22
0x00000000004235a6 : jmp 0x100c5ef2
0x0000000000423676 : jmp 0x100c5fc2
0x0000000000423746 : jmp 0x100c6092
0x0000000000423816 : jmp 0x100c6162
0x0000000000423cfd : jmp 0x100c6649
0x0000000000423dd6 : jmp 0x100c6722
0x0000000000423f56 : jmp 0x100c68a2
0x00000000004240d6 : jmp 0x100c6a22
0x0000000000424256 : jmp 0x100c6ba2
0x00000000004243d6 : jmp 0x100c6d22
0x0000000000424556 : jmp 0x100c6ea2
0x00000000004246d6 : jmp 0x100c7022
0x0000000000424856 : jmp 0x100c71a2
0x00000000004249d6 : jmp 0x100c7322
0x0000000000424b56 : jmp 0x100c74a2
0x0000000000424cd6 : jmp 0x100c7622
0x0000000000424e56 : jmp 0x100c77a2
0x0000000000424fd6 : jmp 0x100c7922
0x0000000000425156 : jmp 0x100c7aa2
0x00000000004252d6 : jmp 0x100c7c22
0x0000000000427187 : jmp 0x100c9ad3
0x000000000042730c : jmp 0x100c9c58
0x000000000042751c : jmp 0x100c9e68
0x000000000042772c : jmp 0x100ca078
0x000000000042793c : jmp 0x100ca288
0x0000000000427b4c : jmp 0x100ca498
0x0000000000427d5c : jmp 0x100ca6a8
0x0000000000427f6c : jmp 0x100ca8b8
0x000000000042817c : jmp 0x100caac8
0x000000000042838c : jmp 0x100cacd8
0x000000000042859c : jmp 0x100caee8
0x00000000004287ac : jmp 0x100cb0f8
0x00000000004289bc : jmp 0x100cb308
0x0000000000428bcc : jmp 0x100cb518
0x0000000000428ddc : jmp 0x100cb728
0x0000000000428fec : jmp 0x100cb938
0x00000000004293bf : jmp 0x100cbd0b
0x0000000000429528 : jmp 0x100cbe74
0x00000000004296c8 : jmp 0x100cc014
0x0000000000429868 : jmp 0x100cc1b4
0x0000000000429a08 : jmp 0x100cc354
0x0000000000429ba8 : jmp 0x100cc4f4
0x0000000000429d48 : jmp 0x100cc694
0x0000000000429ee8 : jmp 0x100cc834
0x000000000042a088 : jmp 0x100cc9d4
0x000000000042a228 : jmp 0x100ccb74
0x000000000042a3c8 : jmp 0x100ccd14
0x000000000042a568 : jmp 0x100cceb4
0x000000000042a708 : jmp 0x100cd054
0x000000000042a8a8 : jmp 0x100cd1f4
0x000000000042aa48 : jmp 0x100cd394
0x000000000042abe8 : jmp 0x100cd534
0x000000000042af35 : jmp 0x100cd881
0x000000000042b03e : jmp 0x100cd98a
0x000000000042b18e : jmp 0x100cdada
0x000000000042b2de : jmp 0x100cdc2a
0x000000000042b42e : jmp 0x100cdd7a
0x000000000042b57e : jmp 0x100cdeca
0x000000000042b6ce : jmp 0x100ce01a
0x000000000042b81e : jmp 0x100ce16a
0x000000000042b96e : jmp 0x100ce2ba
0x000000000042babe : jmp 0x100ce40a
0x000000000042bc0e : jmp 0x100ce55a
0x000000000042bd5e : jmp 0x100ce6aa
0x000000000042beae : jmp 0x100ce7fa
0x000000000042bffe : jmp 0x100ce94a
0x000000000042c14e : jmp 0x100cea9a
0x000000000042c29e : jmp 0x100cebea
0x000000000042d2dd : jmp 0x100cfc29
0x000000000042d386 : jmp 0x100cfcd2
0x000000000042d4a6 : jmp 0x100cfdf2
0x000000000042d5c6 : jmp 0x100cff12
0x000000000042d6e6 : jmp 0x100d0032
0x000000000042d806 : jmp 0x100d0152
0x000000000042d926 : jmp 0x100d0272
0x000000000042da46 : jmp 0x100d0392
0x000000000042db66 : jmp 0x100d04b2
0x000000000042dc86 : jmp 0x100d05d2
0x000000000042dda6 : jmp 0x100d06f2
0x000000000042dec6 : jmp 0x100d0812
0x000000000042dfe6 : jmp 0x100d0932
0x000000000042e106 : jmp 0x100d0a52
0x000000000042e226 : jmp 0x100d0b72
0x000000000042e346 : jmp 0x100d0c92
0x00000000004361e7 : jmp 0x100d8b33
0x000000000043636c : jmp 0x100d8cb8
0x000000000043656c : jmp 0x100d8eb8
0x000000000043676c : jmp 0x100d90b8
0x000000000043696c : jmp 0x100d92b8
0x0000000000436b6c : jmp 0x100d94b8
0x0000000000436d6c : jmp 0x100d96b8
0x0000000000436f6c : jmp 0x100d98b8
0x000000000043716c : jmp 0x100d9ab8
0x000000000043736c : jmp 0x100d9cb8
0x000000000043756c : jmp 0x100d9eb8
0x000000000043776c : jmp 0x100da0b8
0x000000000043796c : jmp 0x100da2b8
0x0000000000437b6c : jmp 0x100da4b8
0x0000000000437d6c : jmp 0x100da6b8
0x0000000000437f6c : jmp 0x100da8b8
0x0000000000491d17 : jmp 0x10134663
0x0000000000491ebc : jmp 0x10134808
0x000000000049210c : jmp 0x10134a58
0x000000000049235c : jmp 0x10134ca8
0x00000000004925ac : jmp 0x10134ef8
0x00000000004927fc : jmp 0x10135148
0x0000000000492a4c : jmp 0x10135398
0x0000000000492c9c : jmp 0x101355e8
0x0000000000492eec : jmp 0x10135838
0x000000000049313c : jmp 0x10135a88
0x000000000049338c : jmp 0x10135cd8
0x00000000004935dc : jmp 0x10135f28
0x000000000049382c : jmp 0x10136178
0x0000000000493a7c : jmp 0x101363c8
0x0000000000493ccc : jmp 0x10136618
0x0000000000493f1c : jmp 0x10136868
0x000000000049435f : jmp 0x10136cab
0x00000000004944f8 : jmp 0x10136e44
0x00000000004946d8 : jmp 0x10137024
0x00000000004948b8 : jmp 0x10137204
0x0000000000494a88 : jmp 0x101373d4
0x0000000000494c68 : jmp 0x101375b4
0x0000000000494e48 : jmp 0x10137794
0x0000000000495028 : jmp 0x10137974
0x0000000000495208 : jmp 0x10137b54
0x00000000004953e8 : jmp 0x10137d34
0x00000000004955c8 : jmp 0x10137f14
0x00000000004957a8 : jmp 0x101380f4
0x0000000000495988 : jmp 0x101382d4
0x0000000000495b68 : jmp 0x101384b4
0x0000000000495d48 : jmp 0x10138694
0x0000000000495f28 : jmp 0x10138874
0x00000000004962f5 : jmp 0x10138c41
0x000000000049643e : jmp 0x10138d8a
0x00000000004965be : jmp 0x10138f0a
0x000000000049673e : jmp 0x1013908a
0x00000000004968be : jmp 0x1013920a
0x0000000000496a3e : jmp 0x1013938a
0x0000000000496bbe : jmp 0x1013950a
0x0000000000496d3e : jmp 0x1013968a
0x0000000000496ebe : jmp 0x1013980a
0x000000000049703e : jmp 0x1013998a
0x00000000004971be : jmp 0x10139b0a
0x000000000049733e : jmp 0x10139c8a
0x00000000004974be : jmp 0x10139e0a
0x000000000049763e : jmp 0x10139f8a
0x00000000004977be : jmp 0x1013a10a
0x000000000049793e : jmp 0x1013a28a
0x0000000000497ce7 : jmp 0x1013a633
0x0000000000497e8c : jmp 0x1013a7d8
0x00000000004980cc : jmp 0x1013aa18
0x000000000049830c : jmp 0x1013ac58
0x000000000049854c : jmp 0x1013ae98
0x000000000049878c : jmp 0x1013b0d8
0x00000000004989cc : jmp 0x1013b318
0x0000000000498c0c : jmp 0x1013b558
0x0000000000498e4c : jmp 0x1013b798
0x000000000049908c : jmp 0x1013b9d8
0x00000000004992cc : jmp 0x1013bc18
0x000000000049950c : jmp 0x1013be58
0x000000000049974c : jmp 0x1013c098
0x000000000049998c : jmp 0x1013c2d8
0x0000000000499bcc : jmp 0x1013c518
0x0000000000499e0c : jmp 0x1013c758
0x0000000000400549 : jmp 0x400516
0x00000000004007bd : jmp 0x400782
0x0000000000401061 : jmp 0x400fc1
0x00000000004020f2 : jmp 0x402108
0x0000000000451daa : jmp 0x40e842
0x00000000004119d3 : jmp 0x4118db
0x0000000000416ad6 : jmp 0x416afe
0x0000000000416ce5 : jmp 0x416cb2
0x0000000000418003 : jmp 0x418050
0x000000000041afdd : jmp 0x41a4ec
0x000000000041afee : jmp 0x41ae09
0x000000000041dbb3 : jmp 0x41d87a
0x0000000000421594 : jmp 0x42155a
0x00000000004216e8 : jmp 0x4216ad
0x000000000042d0bc : jmp 0x42d082
0x000000000042d208 : jmp 0x42d1cd
0x000000000042ebe8 : jmp 0x42ebb6
0x000000000042ec66 : jmp 0x42ec34
0x000000000042f0f8 : jmp 0x42f0c6
0x000000000042f176 : jmp 0x42f144
0x000000000043db9e : jmp 0x43db64
0x000000000043dc6f : jmp 0x43dc35
0x000000000043dcde : jmp 0x43dca4
0x000000000043f7f3 : jmp 0x43f766
0x0000000000440093 : jmp 0x440036
0x0000000000443e8c : jmp 0x44396f
0x0000000000445a03 : jmp 0x4459c9
0x0000000000445e7e : jmp 0x445e43
0x0000000000448373 : jmp 0x448341
0x000000000044aaff : jmp 0x44aacd
0x000000000044f63f : jmp 0x44f261
0x00000000004504d1 : jmp 0x4504db
0x0000000000451d75 : jmp 0x451d9d
0x0000000000452896 : jmp 0x452863
0x0000000000456cc3 : jmp 0x456c9f
0x000000000045880b : jmp 0x4585d9
0x000000000045a67a : jmp 0x45a6a2
0x0000000000462854 : jmp 0x462819
0x0000000000462853 : jmp 0x46281a
0x0000000000464feb : jmp 0x464fb1
0x0000000000464fea : jmp 0x464fb2
0x00000000004660fb : jmp 0x465f51
0x000000000046a1bb : jmp 0x46a180
0x000000000046aab0 : jmp 0x46aa76
0x000000000046bdaf : jmp 0x46bd7d
0x000000000046d95b : jmp 0x46d921
0x00000000004706ba : jmp 0x4703f4
0x0000000000473d78 : jmp 0x473d45
0x00000000004766aa : jmp 0x476583
0x00000000004797c1 : jmp 0x47978f
0x0000000000479ea1 : jmp 0x479e6f
0x000000000047a5e2 : jmp 0x47a634
0x000000000047d74c : jmp 0x47d75e
0x000000000047e232 : jmp 0x47e1a2
0x000000000047e45c : jmp 0x47e3a8
0x000000000047cab5 : jmp 0x47f27b
0x000000000047f5b0 : jmp 0x47f57d
0x000000000047fc4a : jmp 0x47f6f4
0x00000000004800f2 : jmp 0x480144
0x0000000000480d84 : jmp 0x480d49
0x00000000004844aa : jmp 0x480f3f
0x00000000004855ac : jmp 0x48205c
0x0000000000483ae5 : jmp 0x483aaa
0x0000000000468ae3 : jmp 0x4846b12c
0x000000000048560b : jmp 0x4855d0
0x0000000000485749 : jmp 0x485716
0x0000000000487029 : jmp 0x486ff6
0x0000000000487068 : jmp 0x487035
0x00000000004872ea : jmp 0x4872af
0x0000000000488615 : jmp 0x4885d4
0x000000000048aac3 : jmp 0x48aa91
0x000000000048aac0 : jmp 0x48aac5
0x000000000048dcfb : jmp 0x48dcc9
0x000000000048dcf8 : jmp 0x48dcfd
0x000000000045a033 : jmp 0x49102983
0x0000000000491443 : jmp 0x491411
0x0000000000491dbe : jmp 0x491dd4
0x000000000049653e : jmp 0x496554
0x0000000000496b3e : jmp 0x496b54
0x0000000000496e3e : jmp 0x496e54
0x000000000049713e : jmp 0x497154
0x000000000049743e : jmp 0x497454
0x000000000049773e : jmp 0x497754
0x000000000049ae1e : jmp 0x49adec
0x00000000004b8c4a : jmp 0x4b8c89
0x00000000004b9989 : jmp 0x4b995c
0x00000000004ba609 : jmp 0x4ba5d7
0x00000000004ba980 : jmp 0x4ba914
0x00000000004ba97f : jmp 0x4ba915
0x00000000004bab56 : jmp 0x4bab24
0x0000000000434efa : jmp 0x4fc25ef8
0x0000000000434ef9 : jmp 0x4fc25ef9
0x0000000000448ec2 : jmp 0xffffffff810f11e8
0x0000000000449175 : jmp 0xffffffff810f149b
0x00000000004b8bf7 : jmp 0xffffffff9115a5ce
0x00000000004694cb : jmp 0xffffffffbf091e1b
0x0000000000479151 : jmp 0xffffffffc3571aa6
0x000000000047b5e9 : jmp 0xffffffffca70fe31
0x000000000041cc4c : jmp 0xffffffffcb7b1456
0x000000000041cdbd : jmp 0xffffffffcb7b15c7
0x000000000041d8f3 : jmp 0xffffffffcb7b20fd
0x000000000047b573 : jmp 0xffffffffcbd0fd7d
0x00000000004a3d67 : jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3b9b : jmp qword ptr [rax + 0x20fff911]
0x00000000004a3b93 : jmp qword ptr [rax + 0x20fff912]
0x00000000004a3b8b : jmp qword ptr [rax + 0x20fff913]
0x00000000004a3b83 : jmp qword ptr [rax + 0x20fff914]
0x00000000004a3b7b : jmp qword ptr [rax + 0x20fff915]
0x00000000004a34bf : jmp qword ptr [rax + 0x40fff866]
0x00000000004bdf27 : jmp qword ptr [rax - 0x1f00024b]
0x00000000004bdf17 : jmp qword ptr [rax - 0x1f000254]
0x00000000004bdf07 : jmp qword ptr [rax - 0x1f00025d]
0x00000000004a38b7 : jmp qword ptr [rax - 0x35]
0x000000000041ce29 : jmp qword ptr [rax]
0x000000000048370e : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c1ee3 : jmp qword ptr [rbx]
0x00000000004c005b : jmp qword ptr [rcx]
0x00000000004bb244 : jmp qword ptr [rdi]
0x00000000004a39f3 : jmp qword ptr [rdx + 0x32fff91f]
0x00000000004a3a13 : jmp qword ptr [rdx]
0x00000000004a36c3 : jmp qword ptr [rsi + 0x26fff8c0]
0x00000000004a36cb : jmp qword ptr [rsi + 0x26fff8c1]
0x000000000047e479 : jmp qword ptr [rsi + 0xf]
0x00000000004a36b7 : jmp qword ptr [rsi]
0x00000000004217c9 : jmp r10
0x0000000000476c81 : jmp r11
0x000000000049a140 : jmp r8
0x000000000042fdc0 : jmp r9
0x00000000004008e5 : jmp rax
0x0000000000476c82 : jmp rbx
0x000000000042074e : jmp rcx
0x00000000004c59c3 : jmp rdi
0x00000000004217ca : jmp rdx
0x00000000004a36e3 : jmp rsi
0x00000000004a3acb : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dbc4 : jne 0x40dba2 ; ret
0x000000000040dbf5 : jne 0x40dc2f ; mov eax, 0xba ; syscall
0x000000000040fa8b : jne 0x40faa1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410e4c : jne 0x410e53 ; pop rbx ; ret
0x0000000000413615 : jne 0x413622 ; ret
0x0000000000414d91 : jne 0x414d83 ; ret
0x0000000000415aa1 : jne 0x415ab8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415df2 : jne 0x415ddd ; pop rbx ; ret
0x0000000000415e2c : jne 0x415e25 ; lea eax, [rdx + rdi] ; ret
0x00000000004166e6 : jne 0x4166db ; ret
0x0000000000416ad4 : jne 0x416ae6 ; jmp 0x416b00
0x000000000041dcb0 : jne 0x41dc73 ; ret
0x0000000000421734 : jne 0x421746 ; lea rax, [rip + 3] ; ret
0x0000000000426239 : jne 0x426295 ; xor rax, rax ; ret
0x00000000004261f9 : jne 0x4262b9 ; xor rax, rax ; ret
0x00000000004262da : jne 0x4262ed ; lea rax, [rip + 0x1d] ; ret
0x00000000004269ba : jne 0x4269a3 ; ret
0x0000000000426b23 : jne 0x426a0f ; mov rax, rdi ; ret
0x0000000000426a79 : jne 0x426a65 ; mov rax, rdi ; ret
0x0000000000426fa0 : jne 0x426fb2 ; lea rax, [rip + 0x67] ; ret
0x0000000000426ff3 : jne 0x427005 ; lea rax, [rip + 4] ; ret
0x000000000042c598 : jne 0x42c470 ; ret
0x000000000042c4d9 : jne 0x42c4c3 ; ret
0x000000000042e72c : jne 0x42e716 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042fd1d : jne 0x42fd47 ; xor eax, eax ; ret
0x000000000042f311 : jne 0x42fd4b ; xor eax, eax ; ret
0x000000000042f339 : jne 0x42fd57 ; xor eax, eax ; ret
0x000000000043bf45 : jne 0x43bed6 ; lea rax, [rdi + 3] ; ret
0x000000000043bf17 : jne 0x43bed6 ; lea rax, [rdi + 7] ; ret
0x000000000043bf16 : jne 0x43bed7 ; lea rax, [rdi + 7] ; ret
0x000000000043d6a4 : jne 0x43d8b8 ; xor eax, eax ; ret
0x000000000043d8a9 : jne 0x43d8c9 ; xor eax, eax ; ret
0x000000000043d751 : jne 0x43d8cd ; xor eax, eax ; ret
0x000000000043d8c1 : jne 0x43d8ce ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d9d1 : jne 0x43d9c2 ; ret
0x000000000043da81 : jne 0x43da72 ; ret
0x000000000043dbf1 : jne 0x43dbe6 ; lea rax, [rcx - 1] ; ret
0x000000000043dd41 : jne 0x43dd36 ; sub rax, 1 ; ret
0x000000000043f567 : jne 0x43f584 ; mov eax, 2 ; syscall
0x000000000043f5c7 : jne 0x43f5e4 ; mov eax, 0 ; syscall
0x000000000043f627 : jne 0x43f644 ; mov eax, 1 ; syscall
0x0000000000440a38 : jne 0x440a20 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044283a : jne 0x442838 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004428aa : jne 0x4428a8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004429f2 : jne 0x4429e9 ; pop rdx ; pop r10 ; ret
0x00000000004429e2 : jne 0x4429f4 ; nop ; mov eax, 0xca ; syscall
0x0000000000442bc3 : jne 0x442bbd ; xor eax, eax ; leave ; ret
0x0000000000445e7c : jne 0x445e53 ; jmp 0x445e45
0x0000000000451d73 : jne 0x451d85 ; jmp 0x451d9f
0x0000000000451da8 : jne 0x451db4 ; jmp 0x40e844
0x00000000004522f1 : jne 0x4522dd ; mov rax, rsi ; ret
0x0000000000452375 : jne 0x452355 ; mov rax, rsi ; ret
0x000000000045a678 : jne 0x45a68a ; jmp 0x45a6a4
0x0000000000463c01 : jne 0x463bf3 ; ret
0x00000000004657d3 : jne 0x4657de ; xor rax, rax ; ret
0x00000000004669a5 : jne 0x4669b2 ; mov dword ptr [r9 + 8], esi ; ret
0x000000000046704b : jne 0x467006 ; mov rax, rdx ; ret
0x000000000046708c : jne 0x467083 ; ret
0x000000000046ae17 : jne 0x46ae34 ; mov eax, 3 ; syscall
0x000000000046afa7 : jne 0x46afc4 ; mov eax, 0x14 ; syscall
0x000000000046b323 : jne 0x46b2d5 ; xor eax, eax ; ret
0x000000000046b2d7 : jne 0x46b32b ; ret
0x000000000046b31f : jne 0x46b32d ; test ecx, ecx ; jne 0x46b2d9 ; xor eax, eax ; ret
0x000000000047405a : jne 0x474000 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000474048 : jne 0x474023 ; ret
0x0000000000474167 : jne 0x47417a ; mov rax, qword ptr [rip + 0x258c00] ; ret
0x00000000004741b0 : jne 0x474183 ; ret
0x00000000004769c6 : jne 0x476a03 ; ret
0x00000000004769c5 : jne 0x476a04 ; ret
0x0000000000478813 : jne 0x478826 ; add rsp, 0x38 ; ret
0x00000000004788b5 : jne 0x4788c8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047898d : jne 0x4789d0 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000478a45 : jne 0x478a58 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047ac10 : jne 0x47ac26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047cab4 : jne 0x47caa8 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047e3c8 : jne 0x47e385 ; nop word ptr [rax + rax] ; call rbx
0x00000000004898e2 : jne 0x4898af ; jmp 0x4898b7
0x000000000048cb12 : jne 0x48cadf ; jmp 0x48cae7
0x0000000000491b10 : jne 0x491b22 ; lea rax, [rip + 0x67] ; ret
0x0000000000491b63 : jne 0x491b75 ; lea rax, [rip + 4] ; ret
0x000000000049c463 : jne 0x49c45c ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c4c7 : jne 0x49c4bc ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c76b : jne 0x49c764 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c897 : jne 0x49c890 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049ca3b : jne 0x49ca34 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cdb4 : jne 0x49cdab ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049ce14 : jne 0x49ce0b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e299 : jne 0x49e2a3 ; ret
0x000000000049e2b4 : jne 0x49e2c3 ; ret
0x000000000049e4d4 : jne 0x49e4e3 ; ret
0x000000000049e8d3 : jne 0x49e8e2 ; mov eax, 8 ; ret
0x000000000049ecc5 : jne 0x49ecb3 ; pop rbx ; ret
0x000000000049ed10 : jne 0x49ecf0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049ee35 : jne 0x49ee1b ; pop rbx ; ret
0x00000000004a34e5 : jne 0x4a34e1 ; jmp rax
0x00000000004a34e4 : jne 0x4a34e2 ; jmp rax
0x00000000004b8ab7 : jne 0x4b8a81 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004baa4b : jne 0x4baa72 ; retf 0x32dd
0x00000000004bde61 : jne 0x4bde66 ; push qword ptr [rax] ; ja 0x4bde6a ; call qword ptr [rax]
0x00000000004262fb : jno 0x42635f ; add dword ptr [rax], eax ; ret
0x000000000042f5ce : jno 0x42f5dd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004359b0 : jno 0x4359b9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435bea : jno 0x435bf3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435d51 : jno 0x435d62 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435eb6 : jno 0x435f3a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000044067b : jno 0x440660 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004669a3 : jno 0x4669b2 ; jne 0x4669b4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004669a9 : jno 0x4669b6 ; ret
0x0000000000479044 : jno 0x479096 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004c56dd : jno 0x4c56e5 ; add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x00000000004125ab : jnp 0x41261f ; syscall
0x00000000004b9465 : jnp 0x4b9422 ; ret
0x00000000004ba462 : jnp 0x4ba4c0 ; retf
0x00000000004ba869 : jnp 0x4ba8b6 ; retf 0x99e0
0x00000000004bb4c9 : jnp 0x4bb50a ; retf
0x00000000004c6095 : jnp 0x4c609d ; add al, ch ; push rcx ; cli ; jmp rsp
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x000000000042b037 : jns 0x42b012 ; retf 0xead3
0x000000000042b187 : jns 0x42b162 ; retf 0xead3
0x000000000042b2d7 : jns 0x42b2b2 ; retf 0xead3
0x000000000042b427 : jns 0x42b402 ; retf 0xead3
0x000000000042b577 : jns 0x42b552 ; retf 0xead3
0x000000000042b6c7 : jns 0x42b6a2 ; retf 0xead3
0x000000000042b817 : jns 0x42b7f2 ; retf 0xead3
0x000000000042b967 : jns 0x42b942 ; retf 0xead3
0x000000000042bab7 : jns 0x42ba92 ; retf 0xead3
0x000000000042bc07 : jns 0x42bbe2 ; retf 0xead3
0x000000000042bd57 : jns 0x42bd32 ; retf 0xead3
0x000000000042bea7 : jns 0x42be82 ; retf 0xead3
0x000000000042bff7 : jns 0x42bfd2 ; retf 0xead3
0x000000000042c147 : jns 0x42c122 ; retf 0xead3
0x000000000042c297 : jns 0x42c272 ; retf 0xead3
0x00000000004359b7 : jns 0x4359ba ; ret
0x0000000000435bf1 : jns 0x435bf4 ; ret
0x0000000000435d58 : jns 0x435d63 ; ret
0x000000000046a22c : jns 0x46a23b ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046f5bc : jns 0x46f5ca ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000496437 : jns 0x496412 ; retf 0xead3
0x00000000004965b7 : jns 0x496592 ; retf 0xead3
0x0000000000496737 : jns 0x496712 ; retf 0xead3
0x00000000004968b7 : jns 0x496892 ; retf 0xead3
0x0000000000496a37 : jns 0x496a12 ; retf 0xead3
0x0000000000496bb7 : jns 0x496b92 ; retf 0xead3
0x0000000000496d37 : jns 0x496d12 ; retf 0xead3
0x0000000000496eb7 : jns 0x496e92 ; retf 0xead3
0x0000000000497037 : jns 0x497012 ; retf 0xead3
0x00000000004971b7 : jns 0x497192 ; retf 0xead3
0x0000000000497337 : jns 0x497312 ; retf 0xead3
0x00000000004974b7 : jns 0x497492 ; retf 0xead3
0x0000000000497637 : jns 0x497612 ; retf 0xead3
0x00000000004977b7 : jns 0x497792 ; retf 0xead3
0x0000000000497937 : jns 0x497912 ; retf 0xead3
0x000000000049c354 : jns 0x49c397 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a3eed : jns 0x4a3eee ; inc dword ptr [rax] ; jl 0x4a3ef2 ; call qword ptr [rax]
0x00000000004b856e : jns 0x4b8504 ; ret 0xf869
0x00000000004b856d : jns 0x4b8505 ; ret 0xf869
0x00000000004ba97e : jns 0x4ba9d5 ; jmp 0x4ba916
0x00000000004bde69 : jns 0x4bde6e ; push rax ; jp 0x4bde72 ; call rax
0x000000000043e4bb : jns 0xffffffffe9336ea5 ; retf
0x0000000000411dc3 : jo 0x411d83 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413494 : jo 0x4134e5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463c7a : jo 0x463c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046719c : jo 0x4671b0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a8ea : jo 0x47a877 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a8e9 : jo 0x47a878 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000049ae1a : jo 0x49ae22 ; add byte ptr [rax], al ; jmp 0x49adf0
0x00000000004a33d0 : jo 0x4a33d8 ; idiv edi ; add al, dil ; call qword ptr [rax]
0x00000000004a3754 : jo 0x4a371d ; clc ; inc dword ptr [rax] ; ret
0x00000000004a38ec : jo 0x4a38d3 ; clc ; push qword ptr [rax - 0x7f000739] ; retf 0xfff8
0x00000000004a3900 : jo 0x4a38d7 ; clc ; inc eax ; iretd ; clc ; call qword ptr [rax]
0x00000000004a3bac : jo 0x4a3bc0 ; stc ; jmp rsi
0x00000000004b95e4 : jo 0x4b965e ; mov ebp, 0xfb67d10d ; ret
0x00000000004bdf48 : jo 0x4bdf15 ; std ; inc dword ptr [rax + 0x8fffdc2] ; ret 0xfffd
0x00000000004bded8 : jo 0x4bdf2e ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004c0ee0 : jo 0x4c0e9f ; cmc ; call qword ptr [rax]
0x00000000004c1489 : jo 0x4c148f ; retf 0xe0a
0x00000000004c7810 : jo 0x4c784d ; sti ; jmp qword ptr [rdx]
0x0000000000426a05 : jp 0x4269ff ; ret 0x7401
0x00000000004329d6 : jp 0x4329ca ; ret
0x0000000000432a39 : jp 0x432a2d ; ret
0x00000000004329cf : jp 0x432a59 ; jb 0x4329bc ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004329d4 : jp 0x432a59 ; jp 0x4329cc ; ret
0x0000000000464fe9 : jp 0x46502e ; jmp 0x464fb3
0x000000000047b76e : jp 0x47b783 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004887e5 : jp 0x4887ee ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004b9773 : jp 0x4b972d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004bde6d : jp 0x4bde6e ; call rax
0x0000000000434bea : jrcxz 0x434be5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434be9 : jrcxz 0x434be6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442a43 : jrcxz 0x442a08 ; cmp r11d, 0xa ; je 0x442a54 ; ret
0x0000000000447f9c : jrcxz 0x447f89 ; retf
0x000000000045b4c6 : jrcxz 0x45b53f ; ret
0x000000000045d4d8 : jrcxz 0x45d4d2 ; ret 0xf40
0x00000000004a3839 : jrcxz 0x4a3839 ; inc dword ptr [rax - 0x1b] ; clc ; jmp qword ptr [rax]
0x00000000004a3859 : jrcxz 0x4a3859 ; inc dword ptr [rax] ; in eax, 0xf8 ; jmp rax
0x00000000004b83c5 : jrcxz 0x4b841f ; ret
0x00000000004ba58d : jrcxz 0x4ba550 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004bb0e9 : jrcxz 0x4bb0cd ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c6cf9 : jrcxz 0x4c6cf7 ; jmp qword ptr [rdx]
0x000000000040920c : js 0x40922f ; mov qword ptr [rsp + 8], rax ; call 0x405c79
0x000000000040921f : js 0x40923a ; mov qword ptr [rsp + 8], rax ; call 0x405c79
0x0000000000409232 : js 0x409245 ; mov qword ptr [rsp + 8], rax ; call 0x405c79
0x000000000040924a : js 0x40926d ; mov qword ptr [rsp + 8], rax ; call 0x405c79
0x000000000040925d : js 0x409278 ; mov qword ptr [rsp + 8], rax ; call 0x405c79
0x0000000000409976 : js 0x409990 ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409987 : js 0x409999 ; mov qword ptr [rsp], rax ; call 0x405c78
0x000000000040999d : js 0x4099bf ; mov qword ptr [rsp], rax ; call 0x405c78
0x00000000004099ae : js 0x4099c8 ; mov qword ptr [rsp], rax ; call 0x405c78
0x00000000004099bf : js 0x4099d1 ; mov qword ptr [rsp], rax ; call 0x405c78
0x00000000004099d5 : js 0x4099f7 ; mov qword ptr [rsp], rax ; call 0x405c78
0x00000000004099e6 : js 0x409a00 ; mov qword ptr [rsp], rax ; call 0x405c78
0x00000000004099f7 : js 0x409a09 ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409a0d : js 0x409a2f ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409a1e : js 0x409a38 ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409a2f : js 0x409a41 ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409a45 : js 0x409a67 ; mov qword ptr [rsp], rax ; call 0x405c78
0x0000000000409a56 : js 0x409a70 ; mov qword ptr [rsp], rax ; call 0x405c78
0x000000000044283f : js 0x44289f ; pop rbp ; ret
0x00000000004428af : js 0x44290f ; pop rbp ; ret
0x00000000004486de : js 0x44872f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b2c8 : js 0x44b319 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c128 : js 0x44c179 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044e594 : js 0x44e613 ; sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000044ef21 : js 0x44ef8c ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000046b45d : js 0x46b4b9 ; add r8b, bpl ; retf 0xf94e
0x00000000004714a2 : js 0x4714ab ; pop rbx ; ret
0x000000000047a8ed : js 0x47a8fb ; ret
0x000000000047ba2f : js 0x47ba74 ; call rsp
0x000000000047bd44 : js 0x47bd89 ; call rsp
0x000000000047bec3 : js 0x47bf08 ; call rsp
0x000000000047bf03 : js 0x47bf48 ; call rsp
0x000000000047befe : js 0x47bf4f ; lea edi, [rsp + 0x78] ; call r12
0x000000000047c0c6 : js 0x47c10b ; call rsp
0x000000000047c10b : js 0x47c150 ; call rsp
0x0000000000483dd5 : js 0x483daa ; add r8b, bpl ; ret 0xf7d9
0x000000000049c695 : js 0x49c6a2 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c6a2 : js 0x49c6ae ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3ee1 : js 0x4a3ede ; call rax
0x00000000004a3ee9 : js 0x4a3ee6 ; call qword ptr [rax]
0x00000000004a3ee5 : js 0x4a3ee6 ; push rax ; js 0x4a3eea ; call qword ptr [rax]
0x00000000004ba4c8 : js 0x4ba49c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004ba461 : js 0x4ba4e1 ; pop rdx ; retf
0x00000000004c0058 : js 0x4c00ab ; cmc ; jmp qword ptr [rcx]
0x00000000004c3781 : js 0x4c377d ; call qword ptr [rcx]
0x00000000004c5478 : js 0x4c5482 ; cli ; jmp rdx
0x000000000041ffad : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004a35f9 : lahf ; clc ; call rax
0x000000000045ca9a : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004435f2 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000443538 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443565 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004baaa3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047405b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042bb3d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba392 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bab94 : lahf ; push -0x57d3205 ; call 0xffffffffab597696
0x00000000004b8ba0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000440798 : lahf ; ret
0x000000000048604c : lahf ; ret 0x2941
0x000000000040feee : lahf ; ret 0x3841
0x000000000044079e : lahf ; ret 0x3845
0x00000000004b82fd : lahf ; ret 0x871e
0x0000000000484221 : lahf ; ret 0xb60f
0x0000000000486cb8 : lahf ; ret 0xd129
0x0000000000486d2f : lahf ; ret 0xd629
0x0000000000486c41 : lahf ; ret 0xd729
0x000000000043e599 : lahf ; ret 0xea81
0x000000000049b9f6 : lahf ; ret 0xf45
0x0000000000463e9c : lahf ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000041160d : lahf ; sub eax, 0x29480005 ; ret
0x000000000042c1cd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004112f3 : lcall [rbp + 0x41] ; pop rsp ; ret
0x00000000004884aa : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cd83 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451ba2 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000041113d : lcall [rbx + 0x5d] ; ret
0x0000000000474ae6 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000420223 : lcall [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004a3717 : lcall [rbx] ; ret
0x0000000000435276 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000415e3b : lea eax, [r8 - 1] ; ret
0x000000000046b34b : lea eax, [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x00000000004400bf : lea eax, [rax + rax] ; ret
0x0000000000426264 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000426274 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000426244 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000415e3c : lea eax, [rax - 1] ; ret
0x00000000004c72bd : lea eax, [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x0000000000465bdd : lea eax, [rcx + rsi] ; ret
0x000000000043dbf4 : lea eax, [rcx - 1] ; ret
0x000000000043bc6c : lea eax, [rdi + 0x10] ; ret
0x000000000043bc81 : lea eax, [rdi + 0x11] ; ret
0x000000000043bc9f : lea eax, [rdi + 0x12] ; ret
0x000000000043bcbf : lea eax, [rdi + 0x13] ; ret
0x000000000043bce2 : lea eax, [rdi + 0x14] ; ret
0x000000000043bd01 : lea eax, [rdi + 0x15] ; ret
0x000000000043bd21 : lea eax, [rdi + 0x16] ; ret
0x000000000043bd41 : lea eax, [rdi + 0x17] ; ret
0x000000000043bd64 : lea eax, [rdi + 0x18] ; ret
0x000000000043bd89 : lea eax, [rdi + 0x19] ; ret
0x000000000043bda7 : lea eax, [rdi + 0x1a] ; ret
0x000000000043bdc7 : lea eax, [rdi + 0x1b] ; ret
0x000000000043bde3 : lea eax, [rdi + 0x1c] ; ret
0x000000000043be03 : lea eax, [rdi + 0x1d] ; ret
0x000000000043be23 : lea eax, [rdi + 0x1e] ; ret
0x000000000043be43 : lea eax, [rdi + 0x1f] ; ret
0x000000000043bbbd : lea eax, [rdi + 0xa] ; ret
0x000000000043bbdd : lea eax, [rdi + 0xb] ; ret
0x000000000043bbff : lea eax, [rdi + 0xc] ; ret
0x000000000043bc1f : lea eax, [rdi + 0xd] ; ret
0x000000000043bc3f : lea eax, [rdi + 0xe] ; ret
0x000000000043bc59 : lea eax, [rdi + 0xf] ; ret
0x000000000043bb07 : lea eax, [rdi + 1] ; ret
0x000000000043bb1a : lea eax, [rdi + 2] ; ret
0x000000000043bb25 : lea eax, [rdi + 3] ; ret
0x000000000043bb38 : lea eax, [rdi + 4] ; ret
0x000000000043bb4d : lea eax, [rdi + 5] ; ret
0x000000000043bb6b : lea eax, [rdi + 6] ; ret
0x000000000043bb77 : lea eax, [rdi + 7] ; ret
0x000000000043bb8a : lea eax, [rdi + 8] ; ret
0x000000000043bb9f : lea eax, [rdi + 9] ; ret
0x0000000000426299 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000004262a9 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000426193 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000042d067 : lea eax, [rdi + rax] ; ret
0x0000000000465ad9 : lea eax, [rdi + rsi] ; ret
0x0000000000478358 : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x478371 ; ret
0x000000000043baf3 : lea eax, [rdi] ; ret
0x000000000043b0dd : lea eax, [rdx + 0xa] ; ret
0x000000000043b0fd : lea eax, [rdx + 0xb] ; ret
0x000000000043b11f : lea eax, [rdx + 0xc] ; ret
0x000000000043b13f : lea eax, [rdx + 0xd] ; ret
0x000000000043b15f : lea eax, [rdx + 0xe] ; ret
0x000000000043afef : lea eax, [rdx + 0xf] ; ret
0x000000000043b017 : lea eax, [rdx + 1] ; ret
0x000000000043b02d : lea eax, [rdx + 2] ; ret
0x000000000043b045 : lea eax, [rdx + 3] ; ret
0x000000000043b05b : lea eax, [rdx + 4] ; ret
0x000000000043b06d : lea eax, [rdx + 5] ; ret
0x000000000043b08b : lea eax, [rdx + 6] ; ret
0x000000000043af97 : lea eax, [rdx + 7] ; ret
0x000000000043b09d : lea eax, [rdx + 8] ; ret
0x000000000043b0bd : lea eax, [rdx + 9] ; ret
0x0000000000415e2e : lea eax, [rdx + rdi] ; ret
0x000000000043e66c : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043b005 : lea eax, [rdx] ; ret
0x0000000000426e87 : lea eax, [rip + 0x12ad3] ; ret
0x0000000000423957 : lea eax, [rip + 0x14853] ; ret
0x00000000004262f9 : lea eax, [rip + 0x15e71] ; ret
0x00000000004268d3 : lea eax, [rip + 0x17647] ; ret
0x00000000004214e4 : lea eax, [rip + 0x1a966] ; ret
0x00000000004262dd : lea eax, [rip + 0x1d] ; ret
0x0000000000426fa3 : lea eax, [rip + 0x67] ; ret
0x00000000004262f1 : lea eax, [rip + 0x8449] ; ret
0x0000000000421737 : lea eax, [rip + 3] ; ret
0x0000000000426ff6 : lea eax, [rip + 4] ; ret
0x00000000004c553d : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c9c0 : lea eax, [rsp + 0x88] ; call r15
0x000000000047c0bf : lea ebx, [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8bb1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049cbc5 : lea ebx, [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466ae0 : lea ecx, [rax + 1] ; call rbx
0x0000000000469b42 : lea ecx, [rax] ; mov rdx, rax ; jmp 0x469b53
0x000000000042fe17 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000043b38e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000452b7f : lea ecx, [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000464161 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a5e0 : lea ecx, [rdx] ; jmp 0x47a636
0x00000000004800f0 : lea ecx, [rdx] ; jmp 0x480146
0x000000000046b0c7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000465097 : lea ecx, [rsp + 0x10] ; call rbx
0x0000000000465170 : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466bf5 : lea ecx, [rsp + 0x20] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000466f10 : lea ecx, [rsp + 0x28] ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466e0e : lea ecx, [rsp + 0x60] ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000046fb26 : lea edi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021cc : lea edi, [rbx + 0x80] ; call rax
0x000000000040e0bc : lea edi, [rbx + rsi] ; call rax
0x0000000000426a76 : lea edi, [rdi + 0x10] ; jne 0x426a68 ; mov rax, rdi ; ret
0x000000000042c4d6 : lea edi, [rdi + 0x10] ; jne 0x42c4c6 ; ret
0x000000000047ba2c : lea edi, [rsp + 0x78] ; call r12
0x000000000047bdd2 : lea edi, [rsp + 0x80] ; call r12
0x000000000047bbdf : lea edi, [rsp + 0x88] ; call r14
0x00000000004166eb : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465340 : lea edx, [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fee4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000464eed : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004217c6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000004302d8 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000004640a1 : lea edx, [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000465092 : lea edx, [rsp + 0x18] ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466c9d : lea edx, [rsp + 0x28] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000467300 : lea edx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c8e6 : lea edx, [rsp + 0x80] ; call r12
0x000000000048610c : lea esi, [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cf45 : lea esi, [rax*8 + 0x4b8048] ; call 0x479219
0x0000000000466e13 : lea esi, [rsp + 0x30] ; call rbx
0x0000000000466adb : lea esi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466bfa : lea esi, [rsp + 0x40] ; call rbx
0x000000000046b46d : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f4f1 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004217c5 : lea r10, [r10 + r9] ; jmp r10
0x000000000040e0bb : lea r15, [rbx + r14] ; call rax
0x000000000044c9bf : lea r8, [rsp + 0x88] ; call r15
0x000000000042fe16 : lea r9, [r11 + r9] ; jmp r9
0x000000000047a5df : lea r9, [rdx] ; jmp 0x47a637
0x00000000004800ef : lea r9, [rdx] ; jmp 0x480147
0x0000000000465096 : lea r9, [rsp + 0x10] ; call rbx
0x000000000046516f : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426263 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426273 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426243 : lea rax, [rax + rdi - 0x10] ; ret
0x0000000000465bdc : lea rax, [rcx + rsi] ; ret
0x000000000043dbf3 : lea rax, [rcx - 1] ; ret
0x000000000043bc6b : lea rax, [rdi + 0x10] ; ret
0x000000000043bc80 : lea rax, [rdi + 0x11] ; ret
0x000000000043bc9e : lea rax, [rdi + 0x12] ; ret
0x000000000043bcbe : lea rax, [rdi + 0x13] ; ret
0x000000000043bce1 : lea rax, [rdi + 0x14] ; ret
0x000000000043bd00 : lea rax, [rdi + 0x15] ; ret
0x000000000043bd20 : lea rax, [rdi + 0x16] ; ret
0x000000000043bd40 : lea rax, [rdi + 0x17] ; ret
0x000000000043bd63 : lea rax, [rdi + 0x18] ; ret
0x000000000043bd88 : lea rax, [rdi + 0x19] ; ret
0x000000000043bda6 : lea rax, [rdi + 0x1a] ; ret
0x000000000043bdc6 : lea rax, [rdi + 0x1b] ; ret
0x000000000043bde2 : lea rax, [rdi + 0x1c] ; ret
0x000000000043be02 : lea rax, [rdi + 0x1d] ; ret
0x000000000043be22 : lea rax, [rdi + 0x1e] ; ret
0x000000000043be42 : lea rax, [rdi + 0x1f] ; ret
0x000000000043bbbc : lea rax, [rdi + 0xa] ; ret
0x000000000043bbdc : lea rax, [rdi + 0xb] ; ret
0x000000000043bbfe : lea rax, [rdi + 0xc] ; ret
0x000000000043bc1e : lea rax, [rdi + 0xd] ; ret
0x000000000043bc3e : lea rax, [rdi + 0xe] ; ret
0x000000000043bc58 : lea rax, [rdi + 0xf] ; ret
0x000000000043bb06 : lea rax, [rdi + 1] ; ret
0x000000000043bb19 : lea rax, [rdi + 2] ; ret
0x000000000043bb24 : lea rax, [rdi + 3] ; ret
0x000000000043bb37 : lea rax, [rdi + 4] ; ret
0x000000000043bb4c : lea rax, [rdi + 5] ; ret
0x000000000043bb6a : lea rax, [rdi + 6] ; ret
0x000000000043bb76 : lea rax, [rdi + 7] ; ret
0x000000000043bb89 : lea rax, [rdi + 8] ; ret
0x000000000043bb9e : lea rax, [rdi + 9] ; ret
0x0000000000426298 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000004262a8 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000426192 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000042d066 : lea rax, [rdi + rax] ; ret
0x0000000000465ad8 : lea rax, [rdi + rsi] ; ret
0x000000000043baf2 : lea rax, [rdi] ; ret
0x000000000043b0dc : lea rax, [rdx + 0xa] ; ret
0x000000000043b0fc : lea rax, [rdx + 0xb] ; ret
0x000000000043b11e : lea rax, [rdx + 0xc] ; ret
0x000000000043b13e : lea rax, [rdx + 0xd] ; ret
0x000000000043b15e : lea rax, [rdx + 0xe] ; ret
0x000000000043afee : lea rax, [rdx + 0xf] ; ret
0x000000000043b016 : lea rax, [rdx + 1] ; ret
0x000000000043b02c : lea rax, [rdx + 2] ; ret
0x000000000043b044 : lea rax, [rdx + 3] ; ret
0x000000000043b05a : lea rax, [rdx + 4] ; ret
0x000000000043b06c : lea rax, [rdx + 5] ; ret
0x000000000043b08a : lea rax, [rdx + 6] ; ret
0x000000000043af96 : lea rax, [rdx + 7] ; ret
0x000000000043b09c : lea rax, [rdx + 8] ; ret
0x000000000043b0bc : lea rax, [rdx + 9] ; ret
0x000000000043b004 : lea rax, [rdx] ; ret
0x0000000000426e86 : lea rax, [rip + 0x12ad3] ; ret
0x0000000000423956 : lea rax, [rip + 0x14853] ; ret
0x00000000004262f8 : lea rax, [rip + 0x15e71] ; ret
0x00000000004268d2 : lea rax, [rip + 0x17647] ; ret
0x00000000004214e3 : lea rax, [rip + 0x1a966] ; ret
0x00000000004262dc : lea rax, [rip + 0x1d] ; ret
0x0000000000426fa2 : lea rax, [rip + 0x67] ; ret
0x00000000004262f0 : lea rax, [rip + 0x8449] ; ret
0x0000000000421736 : lea rax, [rip + 3] ; ret
0x0000000000426ff5 : lea rax, [rip + 4] ; ret
0x000000000049cbc4 : lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b38d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000466adf : lea rcx, [rax + 1] ; call rbx
0x0000000000469b41 : lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0x469b54
0x000000000046b0c6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046fb25 : lea rdi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021cb : lea rdi, [rbx + 0x80] ; call rax
0x0000000000426a75 : lea rdi, [rdi + 0x10] ; jne 0x426a69 ; mov rax, rdi ; ret
0x000000000042c4d5 : lea rdi, [rdi + 0x10] ; jne 0x42c4c7 ; ret
0x000000000047ba2b : lea rdi, [rsp + 0x78] ; call r12
0x000000000047bdd1 : lea rdi, [rsp + 0x80] ; call r12
0x000000000047bbde : lea rdi, [rsp + 0x88] ; call r14
0x000000000042fee3 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004302d7 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000004672ff : lea rdx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c8e5 : lea rdx, [rsp + 0x80] ; call r12
0x0000000000466e12 : lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466ada : lea rsi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466bf9 : lea rsi, [rsp + 0x40] ; call rbx
0x000000000046b46c : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a35a9 : leave ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x0000000000488336 : leave ; cmove rax, rdx ; ret
0x000000000047b045 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043d9d0 : leave ; jne 0x43d9c3 ; ret
0x000000000043da80 : leave ; jne 0x43da73 ; ret
0x000000000043dd40 : leave ; jne 0x43dd37 ; sub rax, 1 ; ret
0x000000000046704a : leave ; jne 0x467007 ; mov rax, rdx ; ret
0x000000000046b322 : leave ; jne 0x46b2d6 ; xor eax, eax ; ret
0x000000000049a138 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444bf0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400a24 : leave ; ret
0x00000000004ba594 : leave ; retf
0x00000000004b8d61 : leave ; retf 0x6ee8
0x00000000004b7e89 : leave ; retf 0xcccb
0x00000000004c3ec1 : leave ; std ; call qword ptr [rbx]
0x00000000004bdfbd : leave ; std ; ljmp [rbx] ; retf 0xfffd
0x00000000004bdfbf : ljmp [rbx] ; retf 0xfffd
0x00000000004bdfc3 : ljmp [rdi - 0x36] ; std ; dec ebx ; retf
0x000000000040f950 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a8d5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042eb1e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047ff6f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423620 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047acbf : lodsb al, byte ptr [rsi] ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000043d350 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b84e : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a3625 : lodsb al, byte ptr [rsi] ; clc ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x000000000047ac30 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004ba486 : lodsb al, byte ptr [rsi] ; loop 0x4ba453 ; retf
0x000000000047852f : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478549 ; ret
0x00000000004bb23d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004bdf19 : lodsb al, byte ptr [rsi] ; std ; jmp rax
0x00000000004c780c : lodsb al, byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c7851 ; sti ; jmp qword ptr [rdx]
0x00000000004b8abb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046b324 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000040737d : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004a3629 : lodsd eax, dword ptr [rsi] ; clc ; call rax
0x00000000004c6701 : lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x00000000004ba865 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004954b0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a2ab : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000403c4f : lodsd eax, dword ptr [rsi] ; ret
0x000000000047637f : lodsd eax, dword ptr [rsi] ; retf
0x000000000041c01a : loop 0x41c029 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418279
0x000000000042e72d : loop 0x42e765 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434b5a : loop 0x434b55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b59 : loop 0x434b56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045ca4b : loop 0x45c9d8 ; ret
0x00000000004764b2 : loop 0x4764bd ; add rdx, rax ; jmp 0x4764cd
0x00000000004a3795 : loop 0x4a3795 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a37b5 : loop 0x4a37b1 ; jmp qword ptr [rax]
0x00000000004a37b4 : loop 0x4a37b2 ; jmp qword ptr [rax]
0x00000000004a37d5 : loop 0x4a37d5 ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004ba487 : loop 0x4ba452 ; retf
0x00000000004bb5da : loop 0x4bb62f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042ca72 : loope 0x42cac9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000434aca : loope 0x434ac5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ac9 : loope 0x434ac6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043c07b : loope 0x43c085 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043e76e : loope 0x43e765 ; ret
0x000000000044443f : loope 0x44444a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046685e : loope 0x466873 ; je 0x466884 ; ret
0x000000000046ac8c : loope 0x46ac19 ; ret 0xf631
0x0000000000479047 : loope 0x479099 ; mov dword ptr [rdi], ecx ; ret
0x0000000000479078 : loope 0x4790cb ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000004790ed : loope 0x479140 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049ee36 : loope 0x49ee95 ; ret
0x000000000049f776 : loope 0x49f7bd ; add al, ch ; ret 0xfa25
0x00000000004a37f5 : loope 0x4a37f1 ; call rax
0x00000000004a3855 : loope 0x4a3851 ; jmp qword ptr [rax]
0x00000000004a3854 : loope 0x4a3852 ; jmp qword ptr [rax]
0x00000000004a3875 : loope 0x4a3871 ; call rax
0x00000000004ba591 : loope 0x4ba613 ; pop rdx ; leave ; retf
0x0000000000400a1c : loopne 0x400a27 ; add byte ptr [rax], bh ; leave ; ret
0x0000000000400d30 : loopne 0x400d47 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000412688 : loopne 0x4126af ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000412934 : loopne 0x41295b ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000412c19 : loopne 0x412c80 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412cc7 : loopne 0x412d2e ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041313e : loopne 0x413165 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004132fd : loopne 0x413324 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000414816 : loopne 0x41487a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416ee5 : loopne 0x416f49 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417298 : loopne 0x4172c7 ; add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000041a73a : loopne 0x41a768 ; add cl, bpl ; retf 0xfffe
0x0000000000420b5b : loopne 0x420bbd ; pop rbp ; pop r12 ; ret
0x0000000000425f6d : loopne 0x425f4e ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004267ad : loopne 0x426811 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426842 : loopne 0x4268a6 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cd2d : loopne 0x42cd85 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430331 : loopne 0x430348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430330 : loopne 0x430349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430481 : loopne 0x430498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430480 : loopne 0x430499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305d1 : loopne 0x4305e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004305d0 : loopne 0x4305e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430721 : loopne 0x430738 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430720 : loopne 0x430739 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430871 : loopne 0x430888 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430870 : loopne 0x430889 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309c1 : loopne 0x4309d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004309c0 : loopne 0x4309d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b11 : loopne 0x430b28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b10 : loopne 0x430b29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c5f : loopne 0x430c76 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c5e : loopne 0x430c77 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430db1 : loopne 0x430dc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430db0 : loopne 0x430dc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f01 : loopne 0x430f18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f00 : loopne 0x430f19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431051 : loopne 0x431068 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431050 : loopne 0x431069 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311a1 : loopne 0x4311b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311a0 : loopne 0x4311b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312f1 : loopne 0x431308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312f0 : loopne 0x431309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431441 : loopne 0x431458 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431440 : loopne 0x431459 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431591 : loopne 0x4315a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431590 : loopne 0x4315a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004329d2 : loopne 0x43299f ; jp 0x432a5b ; jp 0x4329ce ; ret
0x000000000043def5 : loopne 0x43df46 ; sub eax, edx ; vzeroupper ; ret
0x000000000043def4 : loopne 0x43df47 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f66c : loopne 0x43f6c0 ; add byte ptr [rax], al ; ret
0x00000000004427ca : loopne 0x44281d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442aa8 : loopne 0x442abd ; cmp eax, 4 ; je 0x442ab7 ; ret
0x0000000000444442 : loopne 0x4444a2 ; pop rbp ; ret
0x0000000000451fa0 : loopne 0x45201f ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x000000000045a9bd : loopne 0x45a94a ; ret 0xe680
0x0000000000461f8b : loopne 0x461fef ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462343 : loopne 0x4623a5 ; pop rbp ; pop r12 ; ret
0x000000000046236d : loopne 0x4623cf ; pop rbp ; pop r12 ; ret
0x0000000000462a2b : loopne 0x462a8d ; pop rbp ; pop r12 ; ret
0x0000000000462a9d : loopne 0x462aff ; pop rbp ; pop r12 ; ret
0x000000000046406e : loopne 0x464007 ; mov eax, 0xffffffff ; ret
0x0000000000478b8d : loopne 0x478b96 ; sub eax, 1 ; ret
0x000000000047b044 : loopne 0x47b014 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047edcc : loopne 0x47ed9e ; add r8b, bpl ; retf
0x00000000004a35a8 : loopne 0x4a357c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x00000000004a37c0 : loopne 0x4a37ac ; clc ; call rax
0x00000000004a37c0 : loopne 0x4a37b0 ; clc ; call rax
0x00000000004a37b1 : loopne 0x4a37b1 ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a37d1 : loopne 0x4a37cd ; jmp qword ptr [rax]
0x00000000004a37f1 : loopne 0x4a37f1 ; push rax ; loope 0x4a37f5 ; call rax
0x00000000004a392c : loopne 0x4a3911 ; clc ; dec dword ptr [rsi + 0x19] ; stc ; call rax
0x00000000004a3f1c : loopne 0x4a3fa1 ; stc ; inc dword ptr [rax] ; jge 0x4a3f23 ; jmp qword ptr [rax]
0x00000000004a3f40 : loopne 0x4a3fc6 ; stc ; inc dword ptr [rax] ; jle 0x4a3f47 ; jmp qword ptr [rax]
0x00000000004a3f60 : loopne 0x4a3fe7 ; stc ; inc dword ptr [rax] ; jg 0x4a3f67 ; jmp qword ptr [rax]
0x00000000004b8bb4 : loopne 0x4b8b94 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bdf0c : loopne 0x4bdeb6 ; std ; jmp qword ptr [rax]
0x00000000004bdf1c : loopne 0x4bdecf ; std ; jmp qword ptr [rax]
0x00000000004bdf2c : loopne 0x4bdee8 ; std ; jmp qword ptr [rax]
0x00000000004c19b0 : loopne 0x4c19f5 ; idiv bh ; ret
0x00000000004b85ca : mov ah, 0x13 ; ret
0x00000000004a3ae0 : mov ah, 0x1a ; stc ; inc dword ptr [rdx + rbx - 7] ; call rsp
0x00000000004c7514 : mov ah, 0x8f ; add byte ptr [rax], al ; mov byte ptr [rdx], ch ; sti ; call rsp
0x00000000004b8a70 : mov ah, 0xa5 ; ret
0x000000000046c098 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004b83c4 : mov ah, bl ; push rsi ; ret
0x00000000004bde3f : mov ah, byte ptr [rax + 0x66] ; std ; inc dword ptr [rax + 0x68] ; std ; jmp qword ptr [rax]
0x000000000049a28a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c583 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458808 : mov al, 0 ; add cl, ch ; ret
0x00000000004a3da0 : mov al, 0x10 ; stc ; jmp qword ptr [rax]
0x00000000004a3b44 : mov al, 0x1d ; stc ; inc dword ptr [rax + 0x1d] ; stc ; call rax
0x000000000041d519 : mov al, 0x27 ; add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004a3540 : mov al, 0x45 ; clc ; inc eax ; clc ; call rax
0x000000000049c3a1 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004a34ec : mov al, 0x5e ; clc ; call qword ptr [rax]
0x00000000004a3e84 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a3e8b ; call rax
0x00000000004a3ec0 : mov al, 0x77 ; stc ; call rax
0x00000000004a3ee0 : mov al, 0x78 ; stc ; call rax
0x00000000004a35f8 : mov al, 0x9f ; clc ; call rax
0x00000000004a3618 : mov al, 0xa8 ; clc ; call rax
0x00000000004a364c : mov al, 0xbf ; clc ; call rsi
0x00000000004a38f0 : mov al, 0xc7 ; clc ; inc dword ptr [rax - 0x2f000736] ; retf
0x000000000041f42b : mov al, 0xcc ; add r9b, bpl ; retf 0xfffd
0x00000000004ba876 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004474e5 : mov al, 0xf ; retf 0xd285
0x00000000004bfbed : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5cc5 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c2a20 : mov al, 1 ; clc ; call rsp
0x000000000043faca : mov al, 2 ; add bl, ch ; retf 0x4890
0x00000000004435f0 : mov al, byte ptr [rax] ; lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000439876 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439894 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043b000 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439850 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040f94f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439860 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435891 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000400eb8 : mov bh, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004ba900 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000044d18b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cd0e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043bf18 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x000000000046aa76 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004babd8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004b98a4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b7e86 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000004bdf2d : mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000004c2b10 : mov bh, 1 ; ret
0x00000000004bafb3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a3521 : mov bh, al ; jmp qword ptr [rax]
0x000000000043d80e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bac3b : mov bl, 0x29 ; retf 0xbf4b
0x000000000041f428 : mov bl, 0x2a ; add byte ptr [rax - 0x16ffbe34], dh ; retf 0xfffd
0x000000000046704c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e3c9 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba983 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004bac20 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c3e81 : mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004bdf25 : mov bl, 0xfd ; jmp qword ptr [rax - 0x1f00024b]
0x00000000004c6cf8 : mov bl, ah ; cli ; jmp qword ptr [rdx]
0x00000000004b85a1 : mov bx, 0xf32d ; retf
0x000000000049ae17 : mov byte ptr [r14 + 0x170], dl ; jmp 0x49adf3
0x000000000041cc80 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x0000000000411b1c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b1e2c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041cc81 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00000000004473d8 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000411b1d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004c6d9d : mov byte ptr [rax], al ; add al, al ; out dx, al ; cli ; jmp qword ptr [rdx]
0x000000000047bbe2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c9c3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c57e8 : mov byte ptr [rax], bl ; cli ; jmp qword ptr [rax]
0x0000000000451fa2 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x00000000004c1b70 : mov byte ptr [rcx], al ; ret
0x000000000043bc68 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043b5d8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bcde : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000043b62e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bd60 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000043b6b0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043bb16 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b4f6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043bb32 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043b512 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b553 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004bac35 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043195b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000432adc : mov byte ptr [rdi], cl ; ret
0x000000000043baf0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b4d0 : mov byte ptr [rdi], dh ; ret
0x0000000000435903 : mov byte ptr [rdi], dl ; ret
0x000000000043b029 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000439879 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043b057 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000439897 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004844a7 : mov byte ptr [rdx], 0x30 ; jmp 0x480f42
0x000000000043b002 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439852 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c7518 : mov byte ptr [rdx], ch ; sti ; call rsp
0x0000000000440ef4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049ac40 : mov byte ptr [rip + 0x231f19], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000454c58 : mov byte ptr [rip + 0x3fe8004b], ch ; retf
0x0000000000454cbc : mov byte ptr [rip - 0x2417ffb5], ch ; retf 0xfffa
0x0000000000454ca3 : mov byte ptr [rip - 0xb17ffb5], ch ; retf 0xfffa
0x000000000049ae18 : mov byte ptr [rsi + 0x170], dl ; jmp 0x49adf2
0x0000000000452373 : mov byte ptr [rsi], al ; jne 0x452357 ; mov rax, rsi ; ret
0x00000000004522ef : mov byte ptr [rsi], dl ; jne 0x4522df ; mov rax, rsi ; ret
0x000000000047aad7 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b83c2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9703 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba396 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004baa9f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb44a : mov ch, 0xab ; ret
0x00000000004bdf29 : mov ch, 0xfd ; jmp rax
0x000000000042143c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f696 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046e5a9 : mov ch, al ; or dword ptr [rax], eax ; add byte ptr [rbx + rdi + 0xd], cl ; sti ; retf
0x00000000004261fb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x00000000004689db : mov cl, 0x3e ; add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004baea1 : mov cl, 0x3f ; retf
0x0000000000470f44 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000463e9b : mov cl, 0x9f ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000044f60b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413569 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000429215 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004217c4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba872 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000432ada : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046685b : mov cl, dl ; and cl, 0xf ; je 0x466887 ; ret
0x00000000004bab2c : mov cs, edi ; ret 0x8b36
0x000000000042b64e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b4f0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411ffe : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415300 : mov dh, 0 ; pop rbx ; ret
0x000000000041327b : mov dh, 0 ; ret
0x0000000000435901 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004263d4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dbc0 : mov dh, 0x17 ; test dl, dl ; jne 0x40dba6 ; ret
0x00000000004a3974 : mov dh, 0x1f ; stc ; inc dword ptr [rsi + 0x1f] ; stc ; call rsi
0x00000000004620de : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040daf5 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462713 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d3e1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d3d1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d3a1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d3c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d3b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448d60 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000444227 : mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000049a364 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b9862 : mov dh, 0x4e ; ret 0x474c
0x000000000046dad5 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462cb9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d3e5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d3d5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d3a5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d3b5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d517 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d49a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000004481cc : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000046e5f7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044ef1f : mov dh, 0xb2 ; js 0x44ef8e ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044f8ad : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b1ad : mov dh, 0xc0 ; neg eax ; ret
0x000000000047af57 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ae86 : mov dh, 0xc0 ; ret
0x000000000043e5e8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e610 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000041413e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004baaa4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004263fa : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b65f : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422b71 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e774 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466a32 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049d0ea : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414f9e : mov dh, 2 ; pop rbx ; ret
0x0000000000412011 : mov dh, 2 ; ret
0x000000000042e771 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004263d1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422b74 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f914 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e76c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a3a18 : mov dl, 0x1b ; stc ; inc dword ptr [rdx + 0x1b] ; stc ; call rdx
0x000000000042fdef : mov dl, 0x29 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004319e0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000048df05 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004baebe : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047cac4 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b76c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418e03 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000046a1b3 : mov dword ptr [r12], 1 ; jmp 0x46a188
0x000000000044aaf8 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44aad4
0x0000000000400d32 : mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004669a7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435a86 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435a71 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446cc8 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446ccb : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004158ea : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442f76 : mov dword ptr [rax + 8], edx ; ret
0x00000000004269de : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049d0b3 : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000480712 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044dd48 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041c1f7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041cb08 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a6c8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6f45 : mov dword ptr [rax], eax ; add al, ch ; or bh, bl ; jmp rsi
0x0000000000400d33 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000464165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004872e8 : mov dword ptr [rax], edi ; jmp 0x4872b1
0x000000000047b105 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483ae3 : mov dword ptr [rax], edx ; jmp 0x483aac
0x00000000004640a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b0f9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461c2a : mov dword ptr [rbp - 0x10d0], edx ; call 0x41de58
0x00000000004424ba : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045dd52 : mov dword ptr [rbp - 0x470], eax ; call 0x45a818
0x00000000004424b6 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045677c : mov dword ptr [rbp - 0x4d8], edx ; call 0x442998
0x0000000000456dc3 : mov dword ptr [rbp - 0x4e0], ecx ; call 0x463828
0x0000000000455148 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000485743 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x48571c
0x0000000000402c8a : mov dword ptr [rbp - 0x68], eax ; call 0x44f735
0x0000000000472701 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x00000000004728ea : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459baf : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471eb0 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x00000000004918a1 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411d42 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d41 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d641 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478785 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411e17 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046aaa8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46aa7e
0x00000000004787be : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004747bf : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412619 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000478723 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004880c5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000416685 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x416671
0x0000000000414e33 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cb03 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f8af : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414eae : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416631 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413492 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411da7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415165 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d657 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004152fc : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e1a6 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041520c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004887e9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414e36 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004669a8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435a87 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435a72 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435a61 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044740d : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046b3ac : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000485609 : mov dword ptr [rcx], eax ; jmp 0x4855d2
0x00000000004c7dd2 : mov dword ptr [rcx], eax ; ret
0x000000000049c4ca : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x00000000004176c2 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043bc7d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000043bcbb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bd3d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b62b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b6ad : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b5ed : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b6f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b710 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b6d1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bda3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000043b6f3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414dc3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bd85 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000043bdc3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000043b6d5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046762d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470e95 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470e67 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042cca1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414df3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004189e0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c521 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043bcfd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b64d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043bc9b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bd1d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b60b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435745 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435588 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435828 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004356d5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435518 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bb67 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435665 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354a8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b537 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004189e3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043bb49 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435438 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b529 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043bbfb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000004353c8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b59b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043bc1b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435358 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b5ab : mov dword ptr [rdi + 6], edx ; ret
0x000000000043bbb9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043bc3b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004352e8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b579 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414dc7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479184 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043bbd9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043bb9b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000047a544 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b56b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000432ad3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004269e5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004269ee : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c4d9 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x00000000004316a5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004316e3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004790ef : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000431a2c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d98 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c0c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d18 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431dfc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c98 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431fcd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c09 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004321cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b79 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004323cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ae9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431dad : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431bc5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431da9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432189 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043185f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432186 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432386 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432586 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004316a9 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004316e7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043185c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431958 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004318a4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e18 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000479074 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047917e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c686 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043bb35 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043bb87 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000043bb14 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b4f4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043bb65 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000043b535 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043bbb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043b577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bbd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043b587 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004269e3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043de79 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b598 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b5a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b5b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004269eb : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b526 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b568 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043de86 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042ca77 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043bb04 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000043bb22 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000043bb74 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004355f4 : mov dword ptr [rdi], edx ; ret
0x0000000000435a6f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000432abb : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a6ed : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000435a5e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000432a9e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435a83 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000432ad0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a713 : mov dword ptr [rdi], esi ; ret
0x00000000004302c2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000040f913 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cd2f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b76d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043b087 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004398b7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043b069 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000004398a9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043b11b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000043b099 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004398c9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043b13b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000043b0b9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004398d9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043b0d9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000043b15b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000004398e9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043b0f9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000043afeb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000043983b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416786 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047ab14 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046af2f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000049a16c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041afec : mov dword ptr [rdx], eax ; jmp 0x41ae0b
0x000000000043b014 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000043b042 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000043af94 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000004125c1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc4a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a6ef : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412e20 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004397e4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047b0e5 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004166f2 : mov dword ptr [rdx], eax ; ret
0x0000000000463f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049ee2f : mov dword ptr [rip + 0x22d74b], ebx ; jne 0x49ee21 ; pop rbx ; ret
0x000000000044f6f5 : mov dword ptr [rip + 0x27c33d], edx ; je 0x44f709 ; ret
0x0000000000444376 : mov dword ptr [rip + 0x285c1c], edx ; pop rbx ; ret
0x000000000040156a : mov dword ptr [rip + 0x2c8b20], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x0000000000401417 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049e1f7 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043de89 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043de7b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e1e1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c50b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004741d2 : mov dword ptr [rsi], eax ; ret
0x0000000000401414 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049cc13 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b7cb : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418e04 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b7c6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047bec0 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047c0c3 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047c012 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x000000000040920f : mov dword ptr [rsp + 8], eax ; call 0x405c76
0x0000000000440636 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b882 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004783ce : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491ad6 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f825 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000046a1b4 : mov dword ptr [rsp], 1 ; jmp 0x46a187
0x0000000000409979 : mov dword ptr [rsp], eax ; call 0x405c75
0x000000000043f5e7 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046afc7 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043f647 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043f587 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000046ae37 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044aaf9 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44aad3
0x000000000044237b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041b887 : mov dword ptr [rsp], ecx ; call rdx
0x0000000000409183 : mov dword ptr [rsp], edx ; call 0x405c75
0x000000000047cac3 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044dd47 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041cb07 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a6c7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000004872e7 : mov dword ptr fs:[rax], edi ; jmp 0x4872b2
0x0000000000483ae2 : mov dword ptr fs:[rax], edx ; jmp 0x483aad
0x000000000046af7c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000485608 : mov dword ptr fs:[rcx], eax ; jmp 0x4855d3
0x000000000047ab13 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000004125c0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc49 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000432aba : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431bc0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b4e0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400a1f : mov eax, 0 ; leave ; ret
0x000000000043f5c9 : mov eax, 0 ; syscall
0x000000000043e6b9 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043f9f0 : mov eax, 0x101 ; syscall
0x000000000046ada3 : mov eax, 0x106 ; syscall
0x000000000046afa9 : mov eax, 0x14 ; syscall
0x000000000046adf0 : mov eax, 0x15 ; syscall
0x0000000000421204 : mov eax, 0x16 ; je 0x421217 ; ret
0x00000000004213a0 : mov eax, 0x16 ; ret
0x000000000043f470 : mov eax, 0x18 ; syscall
0x0000000000442953 : mov eax, 0x19 ; syscall
0x00000000004400f0 : mov eax, 0x1c ; syscall
0x000000000043e6b2 : mov eax, 0x20 ; pop rbx ; ret
0x000000000049a0f0 : mov eax, 0x26 ; syscall
0x000000000043e6ab : mov eax, 0x30 ; pop rbx ; ret
0x000000000046ace0 : mov eax, 0x3f ; syscall
0x000000000043e6a4 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426899 : mov eax, 0x435920 ; ret
0x0000000000425f6c : mov eax, 0x43d8e0 ; cmove rax, rdx ; ret
0x00000000004b89bb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043f6ac : mov eax, 0x48 ; syscall
0x000000000049a2b3 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426e4a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043f873 : mov eax, 0x4f ; syscall
0x000000000043e69d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043fed0 : mov eax, 0x61 ; syscall
0x0000000000442970 : mov eax, 0x63 ; syscall
0x000000000046ad00 : mov eax, 0x66 ; syscall
0x000000000046ad20 : mov eax, 0x68 ; syscall
0x000000000046ad10 : mov eax, 0x6b ; syscall
0x000000000046ad30 : mov eax, 0x6c ; syscall
0x0000000000417eb3 : mov eax, 0x6ca800 ; ret
0x000000000046fb27 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e696 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047eb07 : mov eax, 0x89459673 ; retf
0x0000000000411151 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d0df : mov eax, 0x9e ; syscall
0x00000000004400d0 : mov eax, 0xa ; syscall
0x00000000004400b0 : mov eax, 0xb ; syscall
0x000000000040dbf7 : mov eax, 0xba ; syscall
0x00000000004424b8 : mov eax, 0xc065894c ; syscall
0x00000000004673c0 : mov eax, 0xc9 ; syscall
0x00000000004429e5 : mov eax, 0xca ; syscall
0x000000000044fb49 : mov eax, 0xe ; syscall
0x000000000043ee57 : mov eax, 0xe5 ; syscall
0x0000000000454c3f : mov eax, 0xe8004b2d ; pop rax ; retf
0x0000000000454c71 : mov eax, 0xe8004b2d ; retf
0x000000000040dc0e : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044f8d1 : mov eax, 0xf ; syscall
0x0000000000420226 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000400541 : mov eax, 0xffffffff ; cmovle eax, ecx ; jmp 0x40051e
0x0000000000416ce0 : mov eax, 0xffffffff ; jmp 0x416cb7
0x00000000004112ef : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000451b9e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411139 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411db1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc4c : mov eax, 0xffffffff ; ret
0x000000000047a70d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415762 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ebeb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444336 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x000000000049cd50 : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004668c1 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049e8c3 : mov eax, 3 ; je 0x49e8d8 ; ret
0x000000000046a712 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004125a4 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000004668d1 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x000000000049cd40 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000004668e1 : mov eax, 4 ; ret
0x000000000043f4ce : mov eax, 4 ; syscall
0x00000000004668f1 : mov eax, 5 ; ret
0x000000000043f51d : mov eax, 5 ; syscall
0x0000000000466901 : mov eax, 6 ; ret
0x000000000046ad4e : mov eax, 6 ; syscall
0x0000000000466911 : mov eax, 7 ; ret
0x000000000049cd21 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e68f : mov eax, 8 ; pop rbx ; ret
0x000000000049e8d5 : mov eax, 8 ; ret
0x0000000000442930 : mov eax, 8 ; syscall
0x0000000000440063 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x0000000000440023 : mov eax, 9 ; syscall
0x0000000000463fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414eec : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410e63 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004150c8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004153e8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487d43 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041570c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000465024 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047ec3d : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x00000000004785a1 : mov eax, dword ptr [rax + 8] ; ret
0x00000000004741aa : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474189 ; ret
0x000000000044f73f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455522 : mov eax, dword ptr [rax*8 + 0x4b2f20] ; jmp rax
0x0000000000455573 : mov eax, dword ptr [rax*8 + 0x4b3020] ; jmp rax
0x0000000000457663 : mov eax, dword ptr [rax*8 + 0x4b3120] ; jmp rax
0x0000000000456196 : mov eax, dword ptr [rax*8 + 0x4b3420] ; jmp rax
0x0000000000460371 : mov eax, dword ptr [rax*8 + 0x4b38a0] ; jmp rax
0x0000000000461695 : mov eax, dword ptr [rax*8 + 0x4b39a0] ; jmp rax
0x0000000000461b79 : mov eax, dword ptr [rax*8 + 0x4b3aa0] ; jmp rax
0x0000000000460407 : mov eax, dword ptr [rax*8 + 0x4b3da0] ; jmp rax
0x000000000049c466 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049a169 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474ae9 : mov eax, dword ptr [rax] ; ret
0x0000000000440acc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445537 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475ff5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471ca1 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b101 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004398b4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004398c6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004398d6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004398e6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004398f6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004294ba : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ad92 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043b040 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000439880 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043af91 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004397e1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043b011 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439861 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000416700 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416728 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0898 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a08af ; call rax
0x0000000000465021 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416a31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a8e8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a900 ; ret
0x000000000049c471 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c4f1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c531 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c591 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c581 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c541 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044dd5c : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x0000000000478531 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x478547 ; ret
0x00000000004166ef : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e295 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e2a7 ; ret
0x000000000049e2b0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e2c7 ; ret
0x000000000049e4d0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e4e7 ; ret
0x000000000043e767 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e759 ; ret
0x0000000000429216 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000041742e : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410de0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000464167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410320 : mov eax, dword ptr [rdx] ; ret
0x00000000004166e1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4166e0 ; ret
0x00000000004887b0 : mov eax, dword ptr [rip + 0x244aaa] ; ret
0x00000000004741cb : mov eax, dword ptr [rip + 0x258b97] ; mov qword ptr [rsi], rax ; ret
0x000000000047416a : mov eax, dword ptr [rip + 0x258c00] ; ret
0x000000000044cc11 : mov eax, dword ptr [rip + 0x27fae1] ; ret
0x00000000004458a1 : mov eax, dword ptr [rip + 0x287a21] ; ret
0x0000000000416a11 : mov eax, dword ptr [rip + 0x2b36a9] ; ret
0x000000000049cd8c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000047405c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049cdc1 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x00000000004640a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c566 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c70 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044753a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447e9d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e0b7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x00000000004789bc : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x000000000047883d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e824 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474ae8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cdf5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a6a0 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041cc85 : mov eax, eax ; pop rbx ; ret
0x0000000000432bb5 : mov eax, eax ; ret
0x0000000000477ad2 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041ade1 : mov eax, eax ; syscall
0x0000000000412d8a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000452894 : mov eax, ebp ; jmp 0x452865
0x000000000046327b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004638c9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046389c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f643 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411156 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x000000000047a683 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004134fd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474db8 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004660f9 : mov eax, ebx ; jmp 0x465f53
0x000000000040f9a9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa8e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ff3e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411e1b : mov eax, ebx ; pop rbx ; ret
0x00000000004425b8 : mov eax, ebx ; syscall
0x000000000047a547 : mov eax, ecx ; adc eax, eax ; ret
0x00000000004a370c : mov eax, ecx ; clc ; dec dword ptr [rbx] ; ret 0xfff8
0x000000000046b2d5 : mov eax, ecx ; jne 0x46b32d ; ret
0x000000000046d953 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d929
0x000000000041c1fe : mov eax, ecx ; ret
0x000000000046a5d8 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x000000000040384b : mov eax, ecx ; syscall
0x00000000004a351d : mov eax, edi ; call rax
0x0000000000416a41 : mov eax, edi ; ret
0x000000000044ef84 : mov eax, edi ; syscall
0x000000000048806e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b273 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041df08 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004176c5 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004727ef : mov eax, edx ; call rax
0x00000000004a3714 : mov eax, edx ; clc ; lcall [rbx] ; ret
0x000000000047ca9b : mov eax, edx ; jle 0x47caad ; ret
0x000000000046303b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c48a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e892 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fdaf : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f830 : mov eax, edx ; pop rbx ; ret
0x0000000000426f69 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x0000000000478b47 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046aaf3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e98 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eba4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004522f4 : mov eax, esi ; ret
0x000000000043df0b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043ec33 : mov eax, esi ; syscall
0x0000000000414815 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420b5a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004422f4 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x0000000000414814 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004422f3 : mov eax, r12d ; syscall
0x0000000000412809 : mov eax, r13d ; syscall
0x000000000044ef83 : mov eax, r15d ; syscall
0x000000000045a69f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a5d9 : mov eax, r8d ; ret
0x0000000000477ad1 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041ade0 : mov eax, r8d ; syscall
0x0000000000411923 : mov eax, r9d ; syscall
0x00000000004a0ac7 : mov ebp, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bc701 : mov ebp, 0x4b ; add byte ptr [rax], al ; pop rax ; ret 0x4b
0x00000000004ba8b4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000467cd7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc51a
0x0000000000483b1e : mov ebp, 0x89000019 ; retf 0x348
0x00000000004a36b5 : mov ebp, 0xbe26fff8 ; clc ; jmp qword ptr [rsi]
0x00000000004ae624 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7e7d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465a48 : mov ebp, 0xf80148c0 ; ret
0x0000000000465ccc : mov ebp, 0xf80148c6 ; ret
0x00000000004b95e6 : mov ebp, 0xfb67d10d ; ret
0x00000000004556dc : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455c61 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d1af : mov ebp, 0xfffffb60 ; call rax
0x000000000047648f : mov ebp, 0xffffff78 ; call rax
0x000000000040156d : mov ebp, dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000443b36 : mov ebp, dword ptr [rax] ; add dh, dh ; ret 0x7420
0x000000000049c80a : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004206bf : mov ebp, eax ; call 0x41c954
0x0000000000440127 : mov ebp, eax ; call rax
0x0000000000473d76 : mov ebp, eax ; jmp 0x473d47
0x000000000041fa02 : mov ebp, ebp ; call 0x42c464
0x0000000000440ac9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000478b4d : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d747 : mov ebp, edi ; mov r15, rax ; jmp 0x47d763
0x0000000000440ecf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000487066 : mov ebp, esi ; jmp 0x487037
0x00000000004ba604 : mov ebx, 0x1b5c347e ; jmp 0x4ba5dc
0x0000000000434fd7 : mov ebx, 0x46f00ff2 ; retf
0x000000000047f5ab : mov ebx, 0x4bcd40 ; jmp 0x47f582
0x0000000000431fe4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000432002 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000004021cd : mov ebx, 0x80 ; call rax
0x0000000000442a44 : mov ebx, 0xafb8341 ; je 0x442a53 ; ret
0x000000000047eda9 : mov ebx, 0xbe000000 ; popfq ; retf
0x00000000004b7e7b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000445e76 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445e59 ; jmp 0x445e4b
0x00000000004bac24 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000440ed6 : mov ebx, eax ; call rax
0x0000000000448371 : mov ebx, eax ; jmp 0x448343
0x000000000044fc3f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044f136 : mov ebx, edi ; test rax, rax ; je 0x44f146 ; call rax
0x000000000046abc3 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047cab6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004bf424 : mov ecx, 0x41380e0a ; ret
0x00000000004b8ab9 : mov ecx, 0x5b92ac50 ; retf
0x00000000004ba58e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004b7e79 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046af40 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000403844 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000435a6c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fe15 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464ffb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429213 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004baa44 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4baa79 ; retf 0x32dd
0x0000000000432183 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432383 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432583 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b510 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b551 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435743 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004356d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435663 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435585 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435515 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435435 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435355 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435825 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b4f1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004736bd : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478697 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478625 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000467188 : mov ecx, edi ; call rbx
0x000000000046d956 : mov ecx, edi ; mov r15, rax ; jmp 0x46d926
0x0000000000432bd1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432bd4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000415707 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000444b6b : mov ecx, esi ; call rbx
0x0000000000474043 : mov ecx, esi ; cmp rcx, rdx ; jne 0x474028 ; ret
0x0000000000481355 : mov edi, 0x190 ; call 0x41de57
0x0000000000442222 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x00000000004427a0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441ddd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000465523 : mov edi, 0x4a1ff6 ; call 0x4017a7
0x000000000046553c : mov edi, 0x4a200c ; call 0x4017a7
0x000000000041b02c : mov edi, 0x4a24bc ; call 0x417267
0x000000000041b013 : mov edi, 0x4a24eb ; call 0x417267
0x00000000004425b3 : mov edi, 0x4a4ddd ; mov eax, ebx ; syscall
0x00000000004425e2 : mov edi, 0x4a4de8 ; mov eax, ebx ; syscall
0x000000000044cc50 : mov edi, 0x4a6228 ; mov eax, ecx ; syscall
0x000000000044f585 : mov edi, 0x4a6d20 ; mov eax, ecx ; syscall
0x0000000000454ca2 : mov edi, 0x4b2d88 ; call 0x4017a7
0x00000000004554a0 : mov edi, 0x4b2db8 ; call 0x4017a7
0x000000000040095c : mov edi, 0x4be560 ; call rax
0x0000000000470ed6 : mov edi, 0x6cb100 ; call rax
0x0000000000470f42 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x000000000047855f : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x0000000000444045 : mov edi, 0x6cb140 ; call rax
0x0000000000476a7f : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000402f45 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402c4f : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402cf6 : mov edi, 0x6cc060 ; call rax
0x000000000040359c : mov edi, 0x6cc0a0 ; call r15
0x0000000000403554 : mov edi, 0x6cc0a0 ; call rax
0x0000000000445941 : mov edi, 0x6cc6d0 ; call rax
0x000000000043e85a : mov edi, 0x6cc720 ; call rax
0x0000000000402c48 : mov edi, 0x6cc720 ; call rbx
0x000000000047acc2 : mov edi, 0x6cc9c0 ; call rax
0x000000000047aded : mov edi, 0x6cc9c4 ; call rdx
0x0000000000442206 : mov edi, 0x8b48fffd ; jge 0x442214 ; call rbx
0x00000000004421f8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004a363d : mov edi, 0xbd01fff8 ; clc ; call rax
0x00000000004a3635 : mov edi, 0xbecefff8 ; clc ; call rax
0x000000000049c1ba : mov edi, 1 ; call r14
0x0000000000401687 : mov edi, 1 ; call rax
0x000000000049caac : mov edi, 1 ; jmp rax
0x0000000000409975 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405c79
0x000000000040999c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405c79
0x0000000000409986 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405c79
0x0000000000440633 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d1ae : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047648e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c76e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466a35 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e03d : mov edi, dword ptr [rbp] ; call r14
0x000000000044028a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000440238 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044edd8 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464fb4
0x00000000004b98a6 : mov edi, dword ptr [rdx] ; ret
0x000000000047b008 : mov edi, dword ptr [rip + 0x2519b6] ; call rax
0x000000000047aecb : mov edi, dword ptr [rip + 0x251af3] ; jmp rax
0x00000000004401f7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000447241 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044071f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447535 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e98 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044ba8a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044827e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004479b5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x00000000004486e0 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000447042 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447a69 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b2ca : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004498e8 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449d28 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448c68 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000044900f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400c17 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c6b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000040176d : mov edi, dword ptr [rsp + 8] ; call 0x41e1f6
0x00000000004423c0 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000440680 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049e09a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000473998 : mov edi, eax ; call 0x400359
0x0000000000408652 : mov edi, eax ; call 0x41e1f8
0x00000000004213aa : mov edi, eax ; call rcx
0x000000000046d959 : mov edi, eax ; jmp 0x46d923
0x000000000047d74a : mov edi, eax ; jmp 0x47d760
0x00000000004522ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4522e1 ; mov rax, rsi ; ret
0x0000000000402c88 : mov edi, eax ; mov dword ptr [rbp - 0x68], eax ; call 0x44f737
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043edc1 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041f9ff : mov edi, eax ; mov rbp, r13 ; call 0x42c467
0x00000000004206bc : mov edi, eax ; mov rbp, rax ; call 0x41c957
0x0000000000420748 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004422ee : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ee9c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441fb0 : mov edi, ebp ; call 0x41e1f4
0x00000000004518b7 : mov edi, ebp ; call 0x41e3b4
0x00000000004101ed : mov edi, ebp ; call 0x42c464
0x000000000047e526 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e27c : mov edi, ebp ; call r14
0x000000000044fc87 : mov edi, ebp ; call r15
0x000000000041ecc6 : mov edi, ebp ; call rax
0x0000000000440f20 : mov edi, ebp ; call rbx
0x000000000043f871 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000044ef81 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044f092 : mov edi, ebp ; mov eax, r8d ; syscall
0x0000000000450204 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f627 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044f060 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000041c01f : mov edi, ebx ; call 0x418274
0x0000000000420ae4 : mov edi, ebx ; call 0x418d09
0x0000000000421419 : mov edi, ebx ; call 0x41de54
0x000000000044cbc7 : mov edi, ebx ; call r12
0x0000000000444e3d : mov edi, ebx ; call r14
0x00000000004629e9 : mov edi, ebx ; call r8
0x00000000004123d7 : mov edi, ebx ; call rax
0x0000000000445a01 : mov edi, ebx ; jmp 0x4459cb
0x000000000049ecc3 : mov edi, ebx ; jne 0x49ecb5 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000414f54 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004150c4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041ae0a : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041adde : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000441f0f : mov edi, edi ; call 0x41e1f4
0x00000000004107c5 : mov edi, edi ; call rax
0x0000000000440f64 : mov edi, edi ; call rbx
0x0000000000465344 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c6489 : mov edi, edx ; call rsi
0x0000000000452371 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452359 ; mov rax, rsi ; ret
0x000000000043ec31 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043ec41 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000441f1c : mov edi, esi ; call 0x41e1f4
0x000000000045ca96 : mov edi, esi ; call 0x426a09
0x000000000040febf : mov edi, esi ; call 0x49c904
0x000000000044548e : mov edi, esi ; call r15
0x0000000000440f44 : mov edi, esi ; call rbx
0x0000000000411ba7 : mov edi, esi ; mov eax, r9d ; syscall
0x0000000000441fbe : mov edi, esp ; call 0x41e1f4
0x0000000000402dcb : mov edi, esp ; call 0x43f814
0x000000000044fc42 : mov edi, esp ; call r15
0x0000000000440efb : mov edi, esp ; call rbx
0x00000000004038f8 : mov edi, esp ; mov eax, 3 ; syscall
0x0000000000440021 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403b1c : mov edi, esp ; mov eax, r10d ; syscall
0x0000000000411921 : mov edi, esp ; mov eax, r9d ; syscall
0x0000000000467185 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445534 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000473609 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000473608 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042688f : mov edx, 0x42fd90 ; cmove rax, rdx ; ret
0x0000000000434f57 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004321e4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000432202 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004428c6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b8d5e : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2bde
0x000000000049b0a3 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446d87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000040fdce : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000046bdaa : mov edx, 1 ; jmp 0x46bd82
0x0000000000444bb0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047b0e1 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004123d0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000416681 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416675
0x000000000042ad8f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004294bd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047b0f5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004107be : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049de99 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x00000000004727e8 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b532 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b523 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b573 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b583 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431bc1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431f80 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431811 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043bb20 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004357b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043bb71 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004355f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043bb01 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000043b4e1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e5d9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049c0f9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000417944 : mov edx, eax ; jmp 0x417961
0x0000000000421440 : mov edx, eax ; jmp 0x42140b
0x0000000000469b46 : mov edx, eax ; jmp 0x469b4f
0x000000000046b515 : mov edx, eax ; jmp 0x46b50a
0x000000000044237f : mov edx, eax ; mov eax, r12d ; syscall
0x0000000000450207 : mov edx, ebp ; call r15
0x00000000004101ea : mov edx, ebp ; mov rdi, r13 ; call 0x42c467
0x000000000047e521 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e4e1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fc81 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000046eb46 : mov edx, ebp ; mov rsi, r15 ; call 0x46b5a7
0x000000000044fc9c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473d6c : mov edx, ebp ; xor edi, edi ; call 0x43fff6
0x0000000000412804 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416689 : mov edx, ecx ; jmp 0x41666d
0x000000000049d6a3 : mov edx, ecx ; jmp 0x49d67b
0x000000000046ada1 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000442951 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044f05d : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000458804 : mov edx, esp ; call 0x4638e8
0x000000000046aea6 : mov edx, esp ; syscall
0x000000000046eb45 : mov edx, r13d ; mov rsi, r15 ; call 0x46b5a8
0x000000000046eb44 : mov edx, r13d ; mov rsi, r15 ; call 0x46b5a9
0x0000000000473d6b : mov edx, r13d ; xor edi, edi ; call 0x43fff7
0x000000000046b0c9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441446 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x0000000000446cc5 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ba866 : mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000446cb7 : mov esi, 0x4a5b9a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x00000000004bc749 : mov esi, 0x4b ; add byte ptr [rax], al ; clc ; ret 0x4b
0x00000000004ba903 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004b89ea : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000442ac8 : mov esi, 0x80 ; syscall
0x000000000047679f : mov esi, 0x89fffffe ; ret 0x758b
0x00000000004bdf39 : mov esi, 0x9d80fffd ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000048a4bf : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a36b9 : mov esi, 0xbf26fff8 ; clc ; jmp qword ptr [rsi]
0x00000000004a3649 : mov esi, 0xbfb0fff8 ; clc ; call rsi
0x00000000004b7e7e : mov esi, 0xc2c1c0bf ; ret
0x0000000000414a6b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e594 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440f86 : mov esi, 1 ; call rbx
0x0000000000487024 : mov esi, 1 ; jmp 0x486ffb
0x0000000000441173 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000044103f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440fb7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004413fd : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004629e3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004622f8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000440171 : mov esi, 2 ; jmp rax
0x00000000004413f1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000441164 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000441030 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440fa8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000044018b : mov esi, 3 ; jmp rax
0x000000000044196c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004419c3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441a43 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441b43 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c76a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cbc9 : mov esi, dword ptr [rbx] ; call r14
0x000000000049e09e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049cc18 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e03a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000046a718 : mov esi, dword ptr [rdx] ; syscall
0x000000000049de95 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x0000000000432ab9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400c13 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444b66 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450cd1 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ecc1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447a64 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004498e3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e2d1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000046a717 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x0000000000412807 : mov esi, ebp ; mov eax, r13d ; syscall
0x0000000000411ba4 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043edbe : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f8be : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046aaac : mov esi, ebp ; xor edx, edx ; jmp 0x46aa7a
0x000000000047b006 : mov esi, ebx ; mov edi, dword ptr [rip + 0x2519b6] ; call rax
0x000000000044fc9f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000041191e : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x00000000004213a7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414f99 : mov esi, ecx ; jbe 0x414f3d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000047fc48 : mov esi, ecx ; jmp 0x47f6f6
0x0000000000403b19 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000046eb49 : mov esi, edi ; call 0x46b5a4
0x000000000049caaa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d1ab : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e279 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452f2b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043f4cc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043f51b : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046ad4c : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044f08f : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x00000000004423bd : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049cb01 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000467182 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000450201 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e524 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e4e4 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fc53 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420745 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fc84 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042046a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fca5 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047486b : mov esi, esp ; syscall
0x0000000000426241 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426271 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426261 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004bf01c : mov esp, 0x9000000a ; cld ; hlt ; call qword ptr [rdx]
0x00000000004c121c : mov esp, 0x9000002c ; sal ebp, 1 ; call rdx
0x00000000004c2a1c : mov esp, 0xb0000044 ; add eax, edi ; call rsp
0x000000000047edc2 : mov esp, 0xbe000000 ; popfq ; retf
0x0000000000474dca : mov esp, 0xbe000000 ; retf 0x4b61
0x0000000000423c23 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042ce6b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426251 : mov esp, 0xf80148c0 ; ret
0x00000000004741ce : mov esp, dword ptr [rip + 0x6894800] ; ret
0x000000000040071f : mov esp, eax ; call 0x43e588
0x0000000000478b4a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c80e : mov esp, ecx ; ret
0x0000000000440124 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044aafd : mov esp, esi ; jmp 0x44aacf
0x000000000042cd2e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a16b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435a60 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004158e9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442f75 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000464164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047b104 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004640a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b0f8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461c29 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41de59
0x00000000004424b9 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045dd51 : mov qword ptr [rbp - 0x470], rax ; call 0x45a819
0x00000000004424b5 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045677b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x442999
0x0000000000455147 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000485742 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x48571d
0x0000000000472700 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x00000000004728e9 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471eaf : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d640 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478784 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411e16 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000004787bd : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004747be : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412618 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000478722 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004880c4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000416684 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416672
0x0000000000414e32 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cb02 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414ead : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411da6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415164 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004152fb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e1a5 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004887e8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c4c9 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004791fe : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bd3c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b6ac : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b68c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b6ef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b70f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b6d0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414dc2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470e94 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470e66 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cca0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414df2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004189df : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c520 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043bcfc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b64c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bd1c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b66c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435587 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435517 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354a7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435437 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043bbfa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000004353c7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b59a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bc1a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435357 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b5aa : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bc3a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004352e7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b5ba : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a543 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479183 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414dc6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004269ed : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c4d8 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x00000000004316a4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004316e2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004790ee : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000431a2b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d97 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c0b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d17 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431dfb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c97 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431fcc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c08 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004321cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b78 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004323cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ae8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000479079 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000004316a8 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004316e6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043185b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431957 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004318a3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e17 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c685 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042ca76 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000479048 : mov qword ptr [rdi], r9 ; ret
0x000000000043bb86 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043b576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b586 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b597 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b5a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b5b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004269ea : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b567 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043bb73 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004355f3 : mov qword ptr [rdi], rdx ; ret
0x0000000000435a5d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000432a9d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a712 : mov qword ptr [rdi], rsi ; ret
0x000000000040f912 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043b11a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000043990a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043b13a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000043992a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043b15a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000043994a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043afea : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000043983a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416785 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043af93 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004397e3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047b0e4 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004166f1 : mov qword ptr [rdx], rax ; ret
0x0000000000463f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401569 : mov qword ptr [rip + 0x2c8b20], rax ; xor eax, eax ; ret
0x0000000000401416 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049e1f6 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e1e0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x00000000004741d1 : mov qword ptr [rsi], rax ; ret
0x0000000000401413 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041b7ca : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049cc12 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047bebf : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047c0c2 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047c011 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b881 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040920e : mov qword ptr [rsp + 8], rax ; call 0x405c77
0x0000000000440635 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409978 : mov qword ptr [rsp], rax ; call 0x405c76
0x000000000043f5e6 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046afc6 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043f646 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043f586 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000046ae36 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041b886 : mov qword ptr [rsp], rcx ; call rdx
0x0000000000409182 : mov qword ptr [rsp], rdx ; call 0x405c76
0x000000000044f71d : mov qword ptr fs:[rdx], rax ; ret
0x0000000000432a9c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000401415 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000442950 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434f56 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000432201 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004b8d5d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2bdf
0x000000000041f427 : mov r11b, 0x2a ; add byte ptr [rax - 0x16ffbe34], dh ; retf 0xfffd
0x0000000000434fd6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000432001 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040071e : mov r12, rax ; call 0x43e589
0x000000000044aafc : mov r12, rsi ; jmp 0x44aad0
0x000000000046c097 : mov r12b, 0xe8 ; ret 0xfd34
0x0000000000440123 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d746 : mov r13, r15 ; mov r15, rax ; jmp 0x47d764
0x0000000000440ac8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000487065 : mov r13d, esi ; jmp 0x487038
0x000000000049c769 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c76d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d958 : mov r15, rax ; jmp 0x46d924
0x000000000047d749 : mov r15, rax ; jmp 0x47d761
0x000000000043fac9 : mov r8b, 2 ; add bl, ch ; retf 0x4890
0x00000000004736bc : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000444b6a : mov r9, r14 ; call rbx
0x0000000000467187 : mov r9, r15 ; call rbx
0x0000000000411db0 : mov rax, -1 ; pop rbx ; ret
0x0000000000412e22 : mov rax, -1 ; ret
0x000000000044f8d0 : mov rax, 0xf ; syscall
0x00000000004668b0 : mov rax, 1 ; ret
0x00000000004668c0 : mov rax, 2 ; ret
0x00000000004668d0 : mov rax, 3 ; ret
0x00000000004668e0 : mov rax, 4 ; ret
0x00000000004668f0 : mov rax, 5 ; ret
0x0000000000466900 : mov rax, 6 ; ret
0x0000000000466910 : mov rax, 7 ; ret
0x0000000000475ff4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414eeb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410e62 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004150c7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004153e7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487d42 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041570b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000465023 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047ec3c : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x00000000004785a0 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f73e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455521 : mov rax, qword ptr [rax*8 + 0x4b2f20] ; jmp rax
0x0000000000455572 : mov rax, qword ptr [rax*8 + 0x4b3020] ; jmp rax
0x0000000000457662 : mov rax, qword ptr [rax*8 + 0x4b3120] ; jmp rax
0x0000000000456195 : mov rax, qword ptr [rax*8 + 0x4b3420] ; jmp rax
0x0000000000460370 : mov rax, qword ptr [rax*8 + 0x4b38a0] ; jmp rax
0x0000000000461694 : mov rax, qword ptr [rax*8 + 0x4b39a0] ; jmp rax
0x0000000000461b78 : mov rax, qword ptr [rax*8 + 0x4b3aa0] ; jmp rax
0x0000000000460406 : mov rax, qword ptr [rax*8 + 0x4b3da0] ; jmp rax
0x000000000049c465 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000440acb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445536 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471ca0 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b100 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004397e0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0897 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a08b0 ; call rax
0x0000000000465020 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416a30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c470 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c4f0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c530 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c590 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c580 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c540 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044dd5b : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x0000000000478530 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478548 ; ret
0x00000000004166ee : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004166e0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4166e1 ; ret
0x0000000000474169 : mov rax, qword ptr [rip + 0x258c00] ; ret
0x000000000044cc10 : mov rax, qword ptr [rip + 0x27fae1] ; ret
0x00000000004458a0 : mov rax, qword ptr [rip + 0x287a21] ; ret
0x0000000000416a10 : mov rax, qword ptr [rip + 0x2b36a9] ; ret
0x000000000049cd8b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049cdc0 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c565 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c6f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447539 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e9c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e0b6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x00000000004789bb : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416ee3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420b59 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452893 : mov rax, r13 ; jmp 0x452866
0x000000000041cdf4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041cc84 : mov rax, r8 ; pop rbx ; ret
0x0000000000432bb4 : mov rax, r8 ; ret
0x000000000046b2d4 : mov rax, r9 ; jne 0x46b32e ; ret
0x000000000046b355 : mov rax, r9 ; ret
0x0000000000412d89 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004638c8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046389b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474941 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c699 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004134fc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474db7 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f9a8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa8d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ff3d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411e1a : mov rax, rbx ; pop rbx ; ret
0x000000000041c1fd : mov rax, rcx ; ret
0x0000000000416a40 : mov rax, rdi ; ret
0x000000000048806d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b272 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041df07 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004176c4 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004727ee : mov rax, rdx ; call rax
0x000000000041e891 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417aab : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e6d7 : mov rax, rdx ; pop rbx ; ret
0x0000000000426f68 : mov rax, rdx ; ret
0x000000000046aaf2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e97 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eba3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000004522f3 : mov rax, rsi ; ret
0x000000000043df0a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c809 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041fa01 : mov rbp, r13 ; call 0x42c465
0x0000000000478b4c : mov rbp, r9 ; nop ; jmp rdx
0x00000000004206be : mov rbp, rax ; call 0x41c955
0x0000000000440126 : mov rbp, rax ; call rax
0x0000000000473d75 : mov rbp, rax ; jmp 0x473d48
0x0000000000440ed5 : mov rbx, rax ; call rax
0x0000000000448370 : mov rbx, rax ; jmp 0x448344
0x000000000044fc3e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044f135 : mov rbx, rdi ; test rax, rax ; je 0x44f147 ; call rax
0x000000000046abc2 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043b550 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478696 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478624 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d955 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d927
0x0000000000432bd0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432bd3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000474042 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x474029 ; ret
0x000000000044067f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e03c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440289 : mov rdi, qword ptr [r13] ; call rbx
0x00000000004401f6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440237 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440632 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d1ad : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047648d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466a34 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004403be : mov rdi, qword ptr [rbp] ; call rbx
0x000000000044edd7 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464fb5
0x0000000000447240 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044ba89 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004479b4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004486df : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000447041 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447a68 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b2c9 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004498e7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448c67 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000040176c : mov rdi, qword ptr [rsp + 8] ; call 0x41e1f7
0x00000000004423bf : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049e099 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000441fbd : mov rdi, r12 ; call 0x41e1f5
0x0000000000402dca : mov rdi, r12 ; call 0x43f815
0x000000000044fc41 : mov rdi, r12 ; call r15
0x0000000000440efa : mov rdi, r12 ; call rbx
0x00000000004038f7 : mov rdi, r12 ; mov eax, 3 ; syscall
0x0000000000440020 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403b1b : mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000411920 : mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000467184 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445533 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000441faf : mov rdi, r13 ; call 0x41e1f5
0x00000000004518b6 : mov rdi, r13 ; call 0x41e3b5
0x00000000004101ec : mov rdi, r13 ; call 0x42c465
0x000000000040e27b : mov rdi, r13 ; call r14
0x0000000000440f1f : mov rdi, r13 ; call rbx
0x000000000044ef80 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044f091 : mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000450203 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044f05f : mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000441f1b : mov rdi, r14 ; call 0x41e1f5
0x000000000044548d : mov rdi, r14 ; call r15
0x0000000000440f43 : mov rdi, r14 ; call rbx
0x0000000000411ba6 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000441f0e : mov rdi, r15 ; call 0x41e1f5
0x00000000004107c4 : mov rdi, r15 ; call rax
0x0000000000440f63 : mov rdi, r15 ; call rbx
0x0000000000465343 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043edc0 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041ae09 : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041addd : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000408651 : mov rdi, rax ; call 0x41e1f9
0x00000000004213a9 : mov rdi, rax ; call rcx
0x000000000041f9fe : mov rdi, rax ; mov rbp, r13 ; call 0x42c468
0x00000000004206bb : mov rdi, rax ; mov rbp, rax ; call 0x41c958
0x0000000000420747 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004422ed : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ee9b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fc86 : mov rdi, rbp ; call r15
0x000000000041ecc5 : mov rdi, rbp ; call rax
0x0000000000441402 : mov rdi, rbp ; call rbx
0x000000000043f870 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000041f626 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041c01e : mov rdi, rbx ; call 0x418275
0x0000000000421418 : mov rdi, rbx ; call 0x41de55
0x000000000044cbc6 : mov rdi, rbx ; call r12
0x0000000000444e3c : mov rdi, rbx ; call r14
0x00000000004629e8 : mov rdi, rbx ; call r8
0x00000000004123d6 : mov rdi, rbx ; call rax
0x0000000000445a00 : mov rdi, rbx ; jmp 0x4459cc
0x000000000049ecc2 : mov rdi, rbx ; jne 0x49ecb6 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000414f53 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004150c3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000043ec30 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043ec40 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000040febe : mov rdi, rsi ; call 0x49c905
0x000000000049c0f8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049de98 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047b0e0 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047b0f4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431810 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004355f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e5d8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000458803 : mov rdx, r12 ; call 0x4638e9
0x000000000047e520 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e4e0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f05c : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000417943 : mov rdx, rax ; jmp 0x417962
0x000000000042143f : mov rdx, rax ; jmp 0x42140c
0x0000000000469b45 : mov rdx, rax ; jmp 0x469b50
0x000000000046b514 : mov rdx, rax ; jmp 0x46b50b
0x000000000044237e : mov rdx, rax ; mov eax, r12d ; syscall
0x0000000000450206 : mov rdx, rbp ; call r15
0x00000000004101e9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c468
0x0000000000412803 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416688 : mov rdx, rcx ; jmp 0x41666e
0x000000000049d6a2 : mov rdx, rcx ; jmp 0x49d67c
0x000000000046ada0 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046aea5 : mov rdx, rsp ; syscall
0x000000000049e09d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049cc17 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e039 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049cbc8 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444b65 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450cd0 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ecc0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e2d0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044f08e : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047e523 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e4e3 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fc52 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fc83 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420469 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fca4 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000411ba3 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041f8bd : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049cb00 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000467181 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000046eb48 : mov rsi, r15 ; call 0x46b5a5
0x000000000040e278 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452f2a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403b18 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x0000000000412806 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043edbd : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046aaab : mov rsi, rbp ; xor edx, edx ; jmp 0x46aa7b
0x000000000047b005 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x2519b6] ; call rax
0x000000000044fc9e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000041191d : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x00000000004213a6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414f98 : mov rsi, rcx ; jbe 0x414f3e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049caa9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043f4cb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043f51a : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046ad4b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000047486a : mov rsi, rsp ; syscall
0x0000000000478b49 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c80d : mov rsp, rcx ; ret
0x0000000000435a85 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442d99 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004269dd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c71cd : mov word ptr [rax], es ; add byte ptr [rax], al ; cdq ; std ; call rcx
0x00000000004674e0 : mov word ptr [rax], es ; dec al ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000043bc7c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000043b5ec : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bd84 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000043b6d4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435827 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043bb48 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000043b528 : mov word ptr [rdi + 4], dx ; ret
0x000000000043bb9a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000043b56a : mov word ptr [rdi + 8], dx ; ret
0x0000000000432ad2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431dac : mov word ptr [rdi - 2], cx ; ret
0x0000000000431bc4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431da8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b4f3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043de85 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043582b : mov word ptr [rdi], cx ; ret
0x000000000043bb03 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435893 : mov word ptr [rdi], dx ; ret
0x0000000000435a82 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000432acf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043b068 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000004398a8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043b013 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439863 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000417316 : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1c9a : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043de88 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7c48 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7cf8 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f824 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000432ace : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048acbd : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x000000000041804c : movabs al, byte ptr [0x3948fa0148002b27] ; retf 0x850f
0x00000000004c94b9 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0c61 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x000000000045d6f9 : movabs al, byte ptr [0x8348001f0f004b37] ; ret 0x481e
0x000000000045ee99 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x00000000004bdf38 : movabs al, byte ptr [0x8fffd9d80fffdbe] ; ret 0xfffd
0x00000000004bdf64 : movabs al, byte ptr [0x90fffdc238fffdc2] ; ret 0xfffd
0x000000000048f0b5 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x00000000004bc820 : movabs al, byte ptr [0xc800000000004bc3] ; ret
0x0000000000464fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000045f96b : movabs al, byte ptr [0xffef5485c7004b3d] ; jmp qword ptr [rax]
0x000000000040077b : movabs byte ptr [0x2d05c7347401e580], al ; retf 0x2c
0x00000000004bdfbc : movabs byte ptr [0x6ffffdca2bfffdc9], al ; retf 0xfffd
0x00000000004ba9a3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004ba601 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000415c5a : movabs dword ptr [0x5d5b28c48348ffbe], eax ; ret
0x00000000004b8a47 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000443170 : movabs eax, dword ptr [0x950f000000010028] ; ret 0xc985
0x00000000004b92fa : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000430332 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043032e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004303dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b5c0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043be3d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b78d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004354ff : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043548f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043541f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353af : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bddd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b72d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043533f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bdfd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b74d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004352cf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be1d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b76d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004358ef : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043587f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043580f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043579f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043572f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356bf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043564f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355df : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043556f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042693c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426959 ; ret
0x0000000000426955 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000434a5b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434acb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bc54 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b5d4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b617 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b607 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b688 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b648 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b668 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b5e8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b789 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b729 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b749 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b769 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043527a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004352d4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b5c1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043be3e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b78e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435500 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435490 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435420 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353b0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bdde : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b72e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435340 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bdfe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b74e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004352d0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043be1e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b76e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004358f0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435880 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435810 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357a0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435730 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356c0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435650 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355e0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435570 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042693d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426958 ; ret
0x0000000000426956 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000434a5c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434acc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435207 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435187 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350f7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435077 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ff7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f77 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ef7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e77 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434df7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d77 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cf7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c77 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434be7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b57 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ac7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bc55 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b5d5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b628 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b618 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b608 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b689 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b649 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b669 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b5e9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b78a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b72a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b74a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b76a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043527b : movq qword ptr [rdi], mm0 ; ret
0x00000000004352d5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b9722 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba97d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba9d6 ; jmp 0x4ba917
0x000000000041aeb8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8605 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047476c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417717 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c9549 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004bac1d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004bafb5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba871 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004790a2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004bdf0d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x00000000004b9301 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491a93 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491a4d : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000477b01 : movsx eax, dl ; neg eax ; ret
0x0000000000440068 : movsxd r10, r10d ; syscall
0x00000000004217c1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432e96 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fe12 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000049bbe9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b661 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x000000000049a139 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b662 : movsxd rax, dword ptr [rax + rbx*4] ; add rax, r8 ; jmp rax
0x000000000049a13a : movsxd rax, dword ptr [rax + rcx*4] ; add r8, rax ; jmp r8
0x0000000000442971 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b96a0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000049b309 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000049bbea : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000045ca99 : movsxd rbx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x00000000004ba4ca : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x000000000042e75d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b389 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a361 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000040eb45 : movsxd rcx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000046644c : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000432e97 : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042fe13 : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042e75e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b38a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004217c2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000044e276 : movsxd rcx, dword ptr [rdx] ; test rax, rax ; je 0x44e288 ; call rax
0x000000000049a362 : movsxd rcx, dword ptr [rsi + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000442565 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000442652 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x00000000004125aa : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000411dc1 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000412e07 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000043fbf9 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x101 ; syscall
0x000000000043fcb0 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 3 ; syscall
0x000000000041356b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043f7d2 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044ccca : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dc14 : movsxd rdi, ecx ; syscall
0x000000000043f6aa : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044fb47 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044f628 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044f9c7 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044eed1 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000403945 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000403944 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044eed0 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044f627 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042fedf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042fee0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004134b6 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x0000000000440069 : movsxd rdx, edx ; syscall
0x000000000043d36c : movsxd rsi, esi ; ret 0x7520
0x0000000000491a4e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491a94 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f8ac : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b1ac : movzx eax, al ; neg eax ; ret
0x000000000047af56 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ae85 : movzx eax, al ; ret
0x000000000041413c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415dd6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411ffd : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004152ff : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041327a : movzx eax, byte ptr [rax] ; ret
0x000000000049d0e9 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422b58 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e770 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004263d0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422b73 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414f9d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000412010 : movzx eax, byte ptr [rdx] ; ret
0x000000000041413d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e5e7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e60f : movzx eax, dl ; pop rbx ; ret
0x000000000043d9ca : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d9c9 ; ret
0x000000000043da7a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43da79 ; ret
0x000000000042f614 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422b70 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e773 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dbbf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dba7 ; ret
0x000000000042e641 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422c9f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e4d3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d394 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d3f4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d3e4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d3d4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d3c4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d3b4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d3a4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435220 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f3c7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d37b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435900 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004263d3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004263f9 : movzx edx, dl ; sub eax, edx ; ret
0x00000000004351a0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435890 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466a31 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046ae84 : movzx rax, al ; ret
0x000000000049d584 : mul byte ptr [rdx] ; add cl, ch ; ret
0x0000000000465b17 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000463237 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004a3984 : neg byte ptr [rip + 0x1d86fff9] ; stc ; call qword ptr [rsi]
0x0000000000416b8f : neg eax ; ret
0x000000000043f6e1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000410688 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041365c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043494b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bd6e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462f2b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042ea7c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000481356 : nop ; add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x000000000041b38a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004682f6 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x00000000004bf215 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf22d ; ret
0x00000000004bf223 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e82f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444d2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047409c : nop ; and eax, 0xd8b4c00 ; retf 0x258c
0x000000000042623f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000048890f : nop ; call rax
0x00000000004c88b0 : nop ; cld ; call qword ptr [rax]
0x00000000004bf020 : nop ; cld ; hlt ; call qword ptr [rdx]
0x00000000004119d2 : nop ; jmp 0x4118dc
0x0000000000478b4f : nop ; jmp rdx
0x00000000004319df : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431bbf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046adef : nop ; mov eax, 0x15 ; syscall
0x00000000004400ef : nop ; mov eax, 0x1c ; syscall
0x000000000046acff : nop ; mov eax, 0x66 ; syscall
0x00000000004400cf : nop ; mov eax, 0xa ; syscall
0x00000000004429e4 : nop ; mov eax, 0xca ; syscall
0x000000000041703f : nop ; mov eax, 0xffffffff ; ret
0x000000000041031f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046b0cf : nop ; mov eax, edi ; ret
0x0000000000431f7f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043bb1f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000044294f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000411daf : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415d5f : nop ; mov rax, -1 ; ret
0x0000000000417354 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044836f : nop ; mov rbx, rax ; jmp 0x448345
0x000000000044836e : nop ; mov rbx, rax ; jmp 0x448346
0x00000000004459ff : nop ; mov rdi, rbx ; jmp 0x4459cd
0x000000000041ecbf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b5bf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044eecf : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000046284f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46281e
0x000000000046284e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46281f
0x00000000004935fd : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043dd5f : nop ; ret
0x00000000004bdf6c : nop ; ret 0xfffd
0x00000000004099dc : nop ; ret 0xffff
0x000000000047dfab : nop ; retf 0x4b
0x00000000004c22c0 : nop ; retf 0xfff7
0x00000000004c1220 : nop ; sal ebp, 1 ; call rdx
0x00000000004a3964 : nop ; sbb bh, cl ; jmp qword ptr [rax]
0x000000000047ade9 : nop ; scasb al, byte ptr [rdi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x0000000000426890 : nop ; std ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000041672f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a3510 : nop ; test eax, edi ; jmp rax
0x00000000004263ff : nop ; xor eax, eax ; ret
0x00000000004262bf : nop ; xor rax, rax ; ret
0x000000000047856b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e3cb : nop dword ptr [rax + rax] ; call rbx
0x000000000043b4fb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047aed3 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412e2b : nop dword ptr [rax + rax] ; ret
0x00000000004135eb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046687c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042048d : nop dword ptr [rax] ; call 0x41f139
0x0000000000400b35 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e229 : nop dword ptr [rax] ; call rax
0x000000000049a0ed : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x00000000004673bd : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x0000000000416b6c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410dad : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c9f4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e5d4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e994 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e7cc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406325 : nop dword ptr [rax] ; ret
0x000000000049e72d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004115f4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000418ff1 : nop dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047e3ca : nop word ptr [rax + rax] ; call rbx
0x0000000000412e2a : nop word ptr [rax + rax] ; ret
0x00000000004135ea : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444bf1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004c8251 : or ah, bh ; call qword ptr [rax]
0x00000000004c8269 : or ah, bh ; call qword ptr [rdx]
0x000000000042a127 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b79f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046af92 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046af41 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041c1f9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041cb0a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496ee0 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496e39 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496e59
0x000000000046af0f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452b80 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422b56 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041cc82 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000046553d : or al, 0x20 ; add al, bpl ; pop rdx ; ret 0xfff9
0x0000000000469b43 : or al, 0x20 ; mov rdx, rax ; jmp 0x469b52
0x000000000041b888 : or al, 0x24 ; call rdx
0x0000000000444041 : or al, 0x24 ; je 0x444055 ; mov edi, 0x6cb140 ; call rax
0x0000000000462852 : or al, 0x40 ; jmp 0x46281b
0x0000000000462851 : or al, 0x40 ; jmp 0x46281c
0x0000000000400c1a : or al, 0x41 ; call rsp
0x000000000044595f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478840 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c6e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004746bb : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b293 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b76f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046259a : or al, 0x7e ; ret
0x0000000000462d8a : or al, 0x7e ; retf
0x0000000000462983 : or al, 0x7e ; retf 0xffb8
0x000000000045d519 : or al, 0x83 ; ret
0x0000000000458e1c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004217c3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000429214 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432e98 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fe14 : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000048a27b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046b0c8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e75f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b38b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004c9548 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000042fe18 : or al, 0xb ; jmp r9
0x000000000043b38f : or al, 0xb ; jmp rcx
0x000000000049a363 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000049c95b : or al, 0xe8 ; call qword ptr [rdx]
0x0000000000435423 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426943 : or al, 0xf3 ; ret
0x0000000000462cbb : or al, 0xf6 ; ret 0xf04
0x000000000045d49c : or al, 0xf6 ; ret 0xf08
0x00000000004c7d0c : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044fcb1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422ded : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a331 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e11 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c1de : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004400d1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004249f8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004083e6 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408ccc : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047d830 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489da7 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6e73 : or al, byte ptr [rcx] ; ret
0x00000000004970e7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477789 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000409212 : or al, ch ; pop rax ; retf 0xffff
0x0000000000408ea7 : or al, ch ; ret
0x000000000040c2a8 : or al, ch ; ret 0xff99
0x0000000000465608 : or al, ch ; ret 1
0x0000000000409128 : or al, ch ; retf
0x000000000040aba0 : or al, ch ; retf 0xffb0
0x0000000000409225 : or al, ch ; retf 0xffff
0x00000000004c6f49 : or bh, bl ; jmp rsi
0x0000000000442f78 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004404e2 : or bl, ch ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004355e3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044fb57 : or bl, dh ; ret
0x000000000040a455 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415166 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472681 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410837 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047425f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439838 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e676 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e952 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b542 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x0000000000440af7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004972c2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a2a3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049bbe7 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004398f7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046450f : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000043fbfc : or byte ptr [rax + 0x101], bh ; syscall
0x000000000047b643 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000410838 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416fbb : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472682 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041cc77 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000416b47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000004427a5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041c0f9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479485 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000470d46 : or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000047bb0f : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041d8ea : or byte ptr [rax + 0x440f4802], ch ; retf 0x8348
0x00000000004c5d8a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c2674 : or byte ptr [rax + 0xb], cl ; ret
0x0000000000469766 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000475bfb : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f2c : or byte ptr [rax + 1], cl ; ret
0x000000000041b427 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043fcb3 : or byte ptr [rax + 3], bh ; syscall
0x0000000000467ecc : or byte ptr [rax - 0x39], cl ; ret
0x00000000004262db : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004262ef : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418d43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000474168 : or byte ptr [rax - 0x75], cl ; add eax, 0x258c00 ; ret
0x0000000000440631 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409181 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405c77
0x0000000000409988 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c77
0x000000000040e01a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409233 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c78
0x000000000043983d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474260 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043ff3c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b885 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439839 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f625 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000464318 : or byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x0000000000417aaa : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047e0d7 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472fb0 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e953 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472f59 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e141 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x0000000000472faf : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000040b543 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b311 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000471ae6 : or byte ptr [rax - 0x7bf0ffc2], al ; retf 0xa
0x000000000041c0f5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b090c
0x000000000041c0f4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b090d
0x000000000041ccb8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fcd4 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440a27 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042ca86 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042cb0e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000046311e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000473218 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c642 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000411138 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004c9388 : or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x00000000004108ed : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000042304c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a2ac : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000417954 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000417915 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000042304d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4d1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423071 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a2ad : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004158ec : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041ddb6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049cd22 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444bb1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044f9c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043e690 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e8d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442931 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000424b78 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a456 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004898e0 : or byte ptr [rax], al ; jne 0x4898b1 ; jmp 0x4898b9
0x00000000004425b1 : or byte ptr [rax], al ; mov edi, 0x4a4ddd ; mov eax, ebx ; syscall
0x00000000004425e0 : or byte ptr [rax], al ; mov edi, 0x4a4de8 ; mov eax, ebx ; syscall
0x000000000044f583 : or byte ptr [rax], al ; mov edi, 0x4a6d20 ; mov eax, ecx ; syscall
0x000000000044ef7e : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000042bb8e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049dac0 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478e2c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e309 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000447f98 : or byte ptr [rbp - 0x161c8637], al ; retf
0x000000000048a103 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004741ac : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000475e7d : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000041dfb0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004059c3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401845 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412dba : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cca6 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462850 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46281d
0x00000000004c7393 : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x000000000041f139 : or byte ptr [rbx + rcx*4 + 0x25], cl ; call rsp
0x0000000000457b27 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f6b1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047d81f : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x0000000000442ac4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470e69 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a67b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a2a4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c489 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f61a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049bbe8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7d0e : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0b87 : or byte ptr [rcx + 0xb], al ; ret
0x00000000004620db : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048018b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000479720 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e277 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a682 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049cbc3 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000411b1a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004a351c : or byte ptr [rcx - 0x752f0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004398f8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000457478 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x0000000000464510 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489c62 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d849 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e16a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044ff53 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448bb9 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041d15f : or byte ptr [rcx], al ; call 0x419c04
0x000000000045b361 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d7c6 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cfef : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x0000000000442b3e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451ca0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000417aeb : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb23e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000471327 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470f41 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004783d1 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x000000000040359b : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bfbfb : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4f44 : or byte ptr [rdi + 0xb], al ; jae 0x4c4f58 ; ret
0x0000000000482328 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047197f : or byte ptr [rdi], 0x84 ; retf 3
0x0000000000449f43 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d189 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004152fe : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462711 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004880a9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000415167 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049cb76 : or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004303db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044de14 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455c66 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049cb75 : or byte ptr [rdi], r9b ; ret 0xfc3
0x0000000000487023 : or byte ptr [rsi + 1], bh ; jmp 0x486ffc
0x00000000004c62e8 : or byte ptr [rsi - 6], bh ; call rax
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c70b8 : or byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x0000000000476a96 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c3ec0 : or cl, 0xfd ; call qword ptr [rbx]
0x00000000004a3e2d : or cl, bh ; call rax
0x000000000047b3f7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cd10 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411fee : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412837 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464faf : or cl, byte ptr [rax - 0x77] ; ret
0x000000000040fbbc : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042559a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004527e7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000049d3dc : or cl, byte ptr [rbp + 0x39] ; retf 0xdb77
0x000000000048a243 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000048a109 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004080e8 : or cl, ch ; ret
0x0000000000462b22 : or cl, ch ; ret 0xfffc
0x0000000000407ee8 : or cl, ch ; retf
0x000000000045747c : or cl, ch ; retf 0xfffe
0x0000000000488335 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004bac22 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000435503 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e2b5 : or dh, bl ; ret
0x00000000004baa4a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047e3c7 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041bcd3 : or dh, dh ; ret 0x7404
0x000000000041bc4e : or dh, dh ; ret 0xf04
0x000000000040281e : or dh, dh ; ret 0xfdf
0x00000000004a38f4 : or dl, 0xf8 ; call rax
0x00000000004c1f88 : or dl, al ; idiv edi ; retf 2
0x000000000040daf7 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004021ca : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047648c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x0000000000423a2e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422f7d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ba3f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ed7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041044f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000440064 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x00000000004bef4d : or dword ptr [rax], eax ; add byte ptr [rax], al ; sti ; hlt ; call qword ptr [rbx]
0x0000000000440024 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000049384e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046e5ab : or dword ptr [rax], eax ; add byte ptr [rbx + rdi + 0xd], cl ; sti ; retf
0x0000000000497139 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497159
0x00000000004b2c57 : or dword ptr [rax], ecx ; retf
0x00000000004ba393 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000048a223 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042fb96 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412630 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478f7c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041ff76 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000042015c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401684 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x00000000004788b6 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048f82d : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000048dcf4 : or dword ptr [rdi], ecx ; xchg esp, ebx ; jmp 0x48dd01
0x000000000048aabc : or dword ptr [rdi], ecx ; xchg esp, esi ; jmp 0x48aac9
0x00000000004babee : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000474ac9 : or dword ptr [rip + 0x2566a0], 1 ; pop rbx ; ret
0x000000000041d15c : or dword ptr [rsi + rax + 8], 1 ; call 0x419c07
0x00000000004971df : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6e70 : or eax, 0x10a0303 ; ret
0x00000000004c6f20 : or eax, 0x1370303 ; ret
0x000000000043bde1 : or eax, 0x1c478d48 ; ret
0x0000000000415aa2 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6e60 : or eax, 0x34b0303 ; ret
0x00000000004c6ec0 : or eax, 0x35b0303 ; ret
0x000000000046210a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462812 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042d062 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000048a297 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429f87 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429ff1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a10ad : or eax, 0x834825eb ; ret 0x4810
0x00000000004246f8 : or eax, 0x894d0000 ; retf
0x0000000000474418 : or eax, 0xbe000002 ; retf 0x4b60
0x00000000004b8a41 : or eax, 0xcad7947e ; jmp 0x4b89ed
0x00000000004ae379 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ae385 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004babd3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba873 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440f5e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004353b3 : or eax, 0xf7f0ff3 ; ret
0x000000000044455c : or eax, 0xffffffff ; ret
0x00000000004c7d0f : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045e13f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422d1d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a191 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d41 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004400b1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000424878 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d604 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7d10 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c43f3 : or eax, dword ptr [rdx] ; retf
0x00000000004c7395 : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000004c91d9 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e13e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3708 : or eax, ecx ; clc ; dec dword ptr [rbx + 0xbfff8c1] ; ret 0xfff8
0x00000000004a3710 : or eax, edx ; clc ; dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x00000000004a372c : or eax, esi ; clc ; call qword ptr [rax + 0x20fff8c6]
0x000000000044297e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f47e : or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000416724 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c959f : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435573 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a8ee : or ebx, esi ; ret
0x000000000041d64a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418e94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fa8c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040fe07 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000447d55 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a25f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4f0e : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042ca74 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c4f46 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf220 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435493 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412631 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041d15b : or qword ptr [rsi + rax + 8], 1 ; call 0x419c08
0x00000000004355e2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435572 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435502 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4f45 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435492 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c91d8 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x00000000004c7394 : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042ca73 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cd0f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462b21 : or r9b, r13b ; ret 0xfffc
0x00000000004c4f0d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6f1f : or rax, 0x1370303 ; ret
0x00000000004c6e5f : or rax, 0x34b0303 ; ret
0x00000000004c6ebf : or rax, 0x35b0303 ; ret
0x0000000000462109 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462811 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044455b : or rax, 0xffffffffffffffff ; ret
0x0000000000496fc2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c43f2 : or rax, qword ptr [rdx] ; retf
0x0000000000411896 : out 0x1f, eax ; add byte ptr [rax + 2], dil ; syscall
0x000000000046ebbf : out 0x25, al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044fc43 : out 0x41, eax ; call rdi
0x0000000000411922 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403b1d : out 0x44, eax ; mov eax, edx ; syscall
0x0000000000475ba9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fc54 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420746 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fc85 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445535 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000467186 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fca6 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415df3 : out 0x5b, al ; ret
0x000000000047360a : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042046b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004ba460 : out 0x78, al ; jnp 0x4ba4c2 ; retf
0x000000000047e525 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e4e5 : out 0x89, al ; out dx, eax ; call rax
0x00000000004032ab : out 0x89, eax ; ret 0x8948
0x00000000004b89f1 : out 0xb3, al ; retf 0xe80
0x00000000004038f9 : out 0xb8, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000440022 : out 0xb8, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000442205 : out 0xbf, eax ; std ; dec dword ptr [rax - 0x75] ; jge 0x442215 ; call rbx
0x00000000004b9720 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000049e5a8 : out 0xe8, eax ; ret 0xffe7
0x000000000049d5ff : out 0xe8, eax ; retf
0x0000000000402dcc : out 0xe8, eax ; retf 3
0x0000000000434d7a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434dfa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bb448 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004a377d : out 0xf8, al ; call qword ptr [rax]
0x00000000004a38a1 : out 0xf8, al ; jmp qword ptr [rax]
0x00000000004a37bd : out 0xf8, al ; jmp rax
0x00000000004a37c1 : out 0xf8, eax ; call rax
0x000000000040fb94 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000405455 : out 1, al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049e8d1 : out 2, al ; jne 0x49e8e4 ; mov eax, 8 ; ret
0x000000000042c8e9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041d64d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004009a9 : out dx, al ; call rax
0x00000000004c6da1 : out dx, al ; cli ; jmp qword ptr [rdx]
0x00000000004ba877 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041df8e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000412808 : out dx, al ; mov eax, r13d ; syscall
0x0000000000431a2a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c464 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000044001f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000411ba5 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043edbf : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f8bf : out dx, al ; mov rdi, rbx ; call rax
0x000000000043518a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b8ee : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004babd2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba45f : out dx, al ; out 0x78, al ; jnp 0x4ba4c3 ; retf
0x000000000046aaad : out dx, al ; xor edx, edx ; jmp 0x46aa79
0x000000000041b9d3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e7a5 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418e97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ee9d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004302a4 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000000000441fb1 : out dx, eax ; call 0x41e1f3
0x00000000004518b8 : out dx, eax ; call 0x41e3b3
0x00000000004101ee : out dx, eax ; call 0x42c463
0x000000000047e527 : out dx, eax ; call qword ptr [rbx]
0x000000000040e27d : out dx, eax ; call r14
0x000000000044fc88 : out dx, eax ; call r15
0x000000000041ecc7 : out dx, eax ; call rax
0x0000000000440f21 : out dx, eax ; call rbx
0x00000000004bb4c5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000043f872 : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000044ef82 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044f093 : out dx, eax ; mov eax, r8d ; syscall
0x000000000043185a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431956 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004318a2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450205 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000043520a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b9ed : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f628 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415d9e : out dx, eax ; pop rbx ; ret
0x000000000042ebe3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ebbb
0x000000000042ec61 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ec39
0x000000000042f0f3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f0cb
0x000000000042f171 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f149
0x000000000042e7e3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e7f8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e80d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043db13 : out dx, eax ; ret 0xf66
0x000000000040997d : out dx, eax ; ret 0xffff
0x000000000043daf6 : out dx, eax ; retf 0x4466
0x00000000004bab9b : out dx, eax ; retf 0xab0d
0x000000000042176a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042fcfc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fce5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fcce : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e78a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044f061 : out dx, eax ; xor eax, eax ; syscall
0x00000000004298fe : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043bf3e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bb023 : outsb dx, byte ptr [rsi] ; ja 0x4bafac ; ret 0x48f
0x00000000004099fe : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b9a52 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b8d64 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004ba398 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000426daa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004c5475 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; js 0x4c5485 ; cli ; jmp rdx
0x0000000000421918 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004273ce : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000431fe2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004321e2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042fafd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042fb9d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042f6c2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042f742 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000465b1a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042fb02 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9726 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000432197 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042fba2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465b6a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000432062 : outsd dx, dword ptr [rsi] ; retf
0x00000000004292a9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000432262 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042f0ea : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042ebda : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004bdfc4 : outsd dx, dword ptr [rsi] ; retf 0xfffd
0x000000000044217d : outsd dx, dword ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b9725 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041afef : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422c12 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000466874 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046685f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422c11 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004bab25 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004bab26 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000423abf : pmovmskb edx, mm4 ; test edx, edx ; je 0x423ad3 ; bsf eax, edx ; ret
0x00000000004429f5 : pop r10 ; ret
0x00000000004bafaf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e99a : pop r12 ; jmp rax
0x000000000042074c : pop r12 ; jmp rcx
0x000000000044016f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440189 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000047360d : pop r12 ; pop r13 ; jmp rax
0x000000000048f05c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048efda : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044193b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402113 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014ef : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401612 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f4f5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004059c6 : pop r12 ; pop r13 ; ret
0x000000000047b69c : pop r12 ; pop r14 ; ret
0x000000000046b471 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x000000000047360f : pop r13 ; jmp rax
0x000000000048f05e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048efdc : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044193d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402115 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014f1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401614 : pop r13 ; pop r14 ; ret
0x000000000040f4f7 : pop r13 ; pop rbp ; ret
0x00000000004059c8 : pop r13 ; ret
0x000000000048f060 : pop r14 ; fmul st(0) ; ret
0x000000000048efde : pop r14 ; fmulp st(1) ; ret
0x000000000044193f : pop r14 ; pop r15 ; jmp rax
0x0000000000402117 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014f3 : pop r14 ; pop r15 ; ret
0x0000000000401616 : pop r14 ; ret
0x0000000000441941 : pop r15 ; jmp rax
0x0000000000402119 : pop r15 ; pop rbp ; ret
0x00000000004014f5 : pop r15 ; ret
0x00000000004189e1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000047513e : pop rax ; enter 0x4b, -0x7d ; ret
0x00000000004189e2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000478726 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000044f6cc : pop rax ; ret
0x00000000004bc708 : pop rax ; ret 0x4b
0x0000000000409a14 : pop rax ; ret 0xffff
0x0000000000454c44 : pop rax ; retf
0x000000000048836f : pop rax ; retf 0x6c
0x0000000000409214 : pop rax ; retf 0xffff
0x000000000047941a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000004ba9a5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000041dfb2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000418e02 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x00000000004b9300 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041e999 : pop rbp ; pop r12 ; jmp rax
0x000000000042074b : pop rbp ; pop r12 ; jmp rcx
0x000000000044016e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440188 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047360c : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048f05b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048efd9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044193a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004014ee : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401611 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059c5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b69b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048f05f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048efdd : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044193e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402116 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014f2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401615 : pop rbp ; pop r14 ; ret
0x000000000040f4f8 : pop rbp ; pop rbp ; ret
0x000000000047a688 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x0000000000479422 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412dbc : pop rbp ; sub rax, rdx ; ret
0x0000000000446cba : pop rbx ; add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x00000000004c7cfe : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b82f8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e63c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e66f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b82f6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487d4a : pop rbx ; jmp rax
0x00000000004112ee : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474ae7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e6d3 : pop rbx ; mov eax, eax ; ret
0x000000000046303a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a69e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000476a7e : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000414f56 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004150c6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004638c7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420468 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f4f4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b470 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dfb1 : pop rbx ; pop rbp ; jmp rax
0x000000000041e998 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042074a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044016d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440187 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000047360b : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401610 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059c4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b69a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412dbb : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d35 : pop rbx ; ret
0x00000000004bb5e0 : pop rbx ; ret 0x6f9
0x00000000004206f1 : pop rbx ; ret 0xffff
0x00000000004b8abd : pop rbx ; retf
0x0000000000466cd9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000440a3a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047aec8 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251af3] ; jmp rax
0x0000000000473566 : pop rcx ; add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c44c5
0x00000000004c3ebd : pop rcx ; add byte ptr [rax], al ; or cl, 0xfd ; call qword ptr [rbx]
0x000000000042689b : pop rcx ; add r11b, sil ; ret
0x0000000000491d34 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004748a9 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488f9f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004303d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042c07d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431df9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431c09 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba89e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441942 : pop rdi ; jmp rax
0x00000000004b9861 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e44e : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431a29 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431859 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431955 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004318a1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040211a : pop rdi ; pop rbp ; ret
0x00000000004014f6 : pop rdi ; ret
0x00000000004ba481 : pop rdx ; je 0x4ba44b ; ret 0xacfc
0x00000000004ba593 : pop rdx ; leave ; retf
0x00000000004bb447 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004429f4 : pop rdx ; pop r10 ; ret
0x0000000000478727 : pop rdx ; pop rbx ; ret
0x0000000000442a19 : pop rdx ; pop rsi ; ret
0x00000000004429f6 : pop rdx ; ret
0x0000000000465542 : pop rdx ; ret 0xfff9
0x0000000000414312 : pop rdx ; retf
0x00000000004bafb0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000416b18 : pop rdx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416ad1 : pop rdx ; sub eax, dword ptr [rax] ; jne 0x416ae9 ; jmp 0x416b03
0x000000000042ebe4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ebba
0x000000000042ec62 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42ec38
0x000000000042f0f4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f0ca
0x000000000042f172 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f148
0x000000000042bf7e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473ae3 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004262fc : pop rsi ; add dword ptr [rax], eax ; ret
0x00000000004a34ed : pop rsi ; clc ; call qword ptr [rax]
0x000000000048f061 : pop rsi ; fmul st(0) ; ret
0x000000000048efdf : pop rsi ; fmulp st(1) ; ret
0x000000000042ca85 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441940 : pop rsi ; pop r15 ; jmp rax
0x0000000000402118 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004014f4 : pop rsi ; pop r15 ; ret
0x0000000000401617 : pop rsi ; ret
0x0000000000429b10 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a810 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047c0c4 : pop rsp ; and al, 0x78 ; call r12
0x00000000004c59bc : pop rsp ; je 0x4c59c6 ; add al, al ; and edx, edi ; jmp rdi
0x000000000041e99b : pop rsp ; jmp rax
0x000000000042074d : pop rsp ; jmp rcx
0x00000000004c72bc : pop rsp ; lea eax, [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x0000000000440170 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000044018a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000423070 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047360e : pop rsp ; pop r13 ; jmp rax
0x000000000048f05d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048efdb : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044193c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402114 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004014f0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401613 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f4f6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004059c7 : pop rsp ; pop r13 ; ret
0x000000000047b69d : pop rsp ; pop r14 ; ret
0x000000000046b472 : pop rsp ; pop rbp ; ret
0x00000000004c3ebc : pop rsp ; pop rcx ; add byte ptr [rax], al ; or cl, 0xfd ; call qword ptr [rbx]
0x000000000040060b : pop rsp ; ret
0x000000000047a569 : pop rsp ; retf 0x4df0
0x00000000004ba607 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000444379 : pop rsp ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004c8265 : popfq ; add byte ptr [rax], al ; call 0x134c7e7b
0x00000000004c8295 : popfq ; add byte ptr [rax], al ; call 0x134c7eab
0x00000000004c82c5 : popfq ; add byte ptr [rax], al ; call 0x134c7edb
0x00000000004c82c4 : popfq ; add byte ptr [rax], al ; call 0x134c7edc
0x00000000004ba58c : popfq ; jrcxz 0x4ba551 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000049ba09 : popfq ; ret 0xf45
0x000000000047ed95 : popfq ; retf
0x00000000004bb342 : popfq ; retf 0xde4f
0x00000000004945c0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdf3d : popfq ; std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000045fa49 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004352d2 : psllq mm1, qword ptr [r15] ; jg 0x4352ed ; ret
0x00000000004352d3 : psllq mm1, qword ptr [rdi] ; jg 0x4352ec ; ret
0x000000000043b606 : psllq mm1, qword ptr [rdi] ; jg 0x43b61a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b605 : psllq mm1, qword ptr [rdi] ; jg 0x43b61b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b667 : psllq mm1, qword ptr [rdi] ; jg 0x43b67c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004c55a1 : psubd mm7, mm7 ; retf
0x00000000004b9364 : push -0x30 ; retf 0xe72e
0x00000000004b89ee : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004bab95 : push -0x57d3205 ; call 0xffffffffab597695
0x00000000004b8ba1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000452cef : push -0x76000005 ; ret 0x8941
0x000000000047bf7e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000487b56 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004811af : push -0x7c000006 ; ret 0x8908
0x0000000000485cca : push -0x9000007 ; ret 0xf02
0x000000000043bf24 : push -0x9ffffff ; ret 0x7501
0x00000000004ba395 : push 0x1b6e41b5 ; std ; retf
0x000000000049c358 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f8bc : push 0x48ee894c ; mov edi, ebx ; call rax
0x0000000000443330 : push 0x4b ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004bb022 : push 0x6e ; ja 0x4bafad ; ret 0x48f
0x0000000000415b66 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004769c2 : push 0x75400025 ; cmp bl, dh ; ret
0x00000000004ba902 : push 0xfd4cbe ; retf 0xf64
0x0000000000485b5c : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a5e1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004bded7 : push qword ptr [rax + 0x4d] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004a3bab : push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x00000000004a38ff : push qword ptr [rax - 0x32] ; clc ; inc eax ; iretd ; clc ; call qword ptr [rax]
0x00000000004a3753 : push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3e83 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3e8c ; call rax
0x00000000004a353f : push qword ptr [rax - 0x3f0007bb] ; clc ; call rax
0x00000000004a38ef : push qword ptr [rax - 0x7f000739] ; retf 0xfff8
0x00000000004a33cf : push qword ptr [rax - 1] ; idiv edi ; add al, dil ; call qword ptr [rax]
0x00000000004a3d63 : push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004bde63 : push qword ptr [rax] ; ja 0x4bde68 ; call qword ptr [rax]
0x00000000004a3627 : push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; clc ; call rax
0x00000000004a37ef : push qword ptr [rax] ; loopne 0x4a37f3 ; push rax ; loope 0x4a37f7 ; call rax
0x00000000004a377b : push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004bdebb : push qword ptr [rax] ; test ch, bh ; call qword ptr [rax - 0x1f0002c1]
0x000000000043d8a8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410e4b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000041574d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000464b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415df1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442bc2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415d99 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466e2a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000411321 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004749d9 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a5e2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dc1d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f6b8 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f75c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f4da : push qword ptr [rdi + 3] ; ret
0x000000000043f529 : push qword ptr [rdi + 4] ; ret
0x000000000046adaf : push qword ptr [rdi + 6] ; ret
0x000000000044fb55 : push qword ptr [rdi + 8] ; ret
0x000000000046a9cc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415276 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3a17 : push qword ptr [rdx + 0x42fff91b] ; sbb edi, ecx ; call rdx
0x00000000004a3adf : push qword ptr [rdx + rbx + 0x1a44fff9] ; stc ; call rsp
0x000000000046ac7d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a36d7 : push qword ptr [rsi] ; ret
0x0000000000414eaf : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b8a4c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000046431b : push rax ; adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x0000000000463c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416731 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b390 : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000418504 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004c2900 : push rax ; add al, bh ; call qword ptr [rdi]
0x0000000000493f3d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000414eb0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f480 : push rax ; add byte ptr [rax], al ; ret
0x000000000041a7cf : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425f15 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a4ec : push rax ; and al, 0x26 ; add byte ptr [rax + 0x39], cl ; retf
0x000000000045d47b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000444bf8 : push rax ; call rbx
0x00000000004a3555 : push rax ; clc ; call qword ptr [rax]
0x00000000004a354f : push rax ; clc ; inc dword ptr [rax] ; push rax ; clc ; call qword ptr [rax]
0x000000000040fb96 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a3778 : push rax ; in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004c4d60 : push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004a3ec7 : push rax ; ja 0x4a3ec8 ; call qword ptr [rax]
0x00000000004a3e93 : push rax ; jbe 0x4a3e98 ; inc dword ptr [rax] ; ja 0x4a3e9c ; call qword ptr [rax]
0x000000000047862c : push rax ; jmp qword ptr [rax]
0x000000000049cdb3 : push rax ; jne 0x49cdac ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049ce13 : push rax ; jne 0x49ce0c ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004bde60 : push rax ; jne 0x4bde67 ; push qword ptr [rax] ; ja 0x4bde6b ; call qword ptr [rax]
0x00000000004bde6b : push rax ; jp 0x4bde70 ; call rax
0x00000000004a3ee7 : push rax ; js 0x4a3ee8 ; call qword ptr [rax]
0x000000000047acbe : push rax ; lodsb al, byte ptr [rsi] ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x00000000004b8aba : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a37f3 : push rax ; loope 0x4a37f3 ; call rax
0x0000000000446cca : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000416683 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416673
0x00000000004881c6 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044ba88 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418d42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000457477 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x000000000041bcd2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041bc4d : push rax ; or dh, dh ; ret 0xf04
0x0000000000422f7c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a38a0 : push rax ; out 0xf8, al ; jmp qword ptr [rax]
0x0000000000466a3e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000443828 : push rax ; push rbx ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000446ccc : push rax ; push rsp ; ret
0x000000000041d0ac : push rax ; retf
0x0000000000488344 : push rax ; retf 0x6c
0x000000000046eb4c : push rax ; retf 0xffff
0x0000000000457c5b : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004a3954 : push rax ; sbb al, 0xf9 ; jmp rax
0x0000000000410612 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x0000000000416726 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c9389 : push rax ; std ; jmp qword ptr [rbx]
0x00000000004a361f : push rax ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rax]
0x0000000000415ded : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b8a4d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049eea7 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000479b7f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440881 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000474918 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046b45e : push rbp ; add r8b, bpl ; retf 0xf94e
0x0000000000474ab2 : push rbp ; and eax, 0x89485300 ; ret
0x000000000046c093 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x0000000000495708 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045747b : push rbp ; or cl, ch ; retf 0xfffe
0x000000000046abc0 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004c66ee : push rbp ; ret
0x0000000000465341 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042623a : push rbp ; xor rax, rax ; ret
0x0000000000400b39 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047af54 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004437e9 : push rbx ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046dad6 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423959 : push rbx ; add qword ptr [rax], rax ; ret
0x00000000004bac39 : push rbx ; call 0x4c15d5f6
0x000000000041665d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044d602 : push rbx ; je 0x44d619 ; cmp esi, 3 ; je 0x44d619 ; pop rbx ; ret
0x0000000000464ad9 : push rbx ; je 0x464b3d ; pop rbp ; pop r12 ; ret
0x0000000000464b7e : push rbx ; je 0x464be2 ; pop rbp ; pop r12 ; ret
0x000000000046abc1 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000462cba : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416fba : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004152fd : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000416682 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416674
0x000000000040d769 : push rbx ; ret
0x0000000000416661 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000416686 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000414254 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004123d1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba47c : push rbx ; xchg eax, edx ; jae 0x4ba45b ; push rsi ; pop rdx ; je 0x4ba450 ; ret 0xacfc
0x000000000047b56f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd81
0x00000000004b9705 : push rcx ; call qword ptr [rsi]
0x00000000004c6099 : push rcx ; cli ; jmp rsp
0x0000000000435bed : push rcx ; jl 0x435c3e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435d54 : push rcx ; jl 0x435da5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049dabf : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a3698 : push rcx ; ret
0x000000000048a105 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000041fe9d : push rdi ; adc byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2aa9
0x000000000043bb4a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435439 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475b75 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043bbfc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b60d : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004316e8 : push rdi ; clc ; ret
0x0000000000431860 : push rdi ; cld ; ret
0x0000000000432387 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434d19 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434c99 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004a33d1 : push rdi ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x0000000000434aea : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414df4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434b7a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d518 : push rdi ; or al, 0x83 ; ret
0x000000000045d49b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a67a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048018a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a681 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bde0 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000487b55 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042fafe : push rdi ; ret
0x0000000000401065 : push rdi ; ret 0
0x000000000042fb9e : push rdi ; ret 0xff3
0x000000000042f6c3 : push rdi ; retf
0x000000000041fa05 : push rdi ; retf 0
0x000000000042f743 : push rdi ; retf 0xcab2
0x0000000000432587 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431daa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432187 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c7ca : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x00000000004107bf : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465b1b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004c377d : push rdx ; add byte ptr [rax], al ; adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x000000000046b10a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a3559 : push rdx ; clc ; jmp qword ptr [rax]
0x00000000004c5d8d : push rdx ; ret
0x0000000000456dca : push rdx ; retf 0
0x0000000000446cc6 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042e7e4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e0e9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43e140 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004640a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004356d1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435741 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b595 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435661 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b533 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e7f9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431812 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431f81 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431bb5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d95 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f75 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004319d5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bb020 : push rsi ; cli ; push 0x6e ; ja 0x4bafaf ; ret 0x48f
0x000000000043d3e6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d3d6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d3a6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a36b4 : push rsi ; mov ebp, 0xbe26fff8 ; clc ; jmp qword ptr [rsi]
0x000000000042cb0d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba480 : push rsi ; pop rdx ; je 0x4ba44c ; ret 0xacfc
0x000000000041eea2 : push rsi ; ret
0x0000000000485ccd : push rsi ; ret 0xf02
0x000000000045efb8 : push rsi ; ret 0xf10
0x00000000004a3983 : push rsi ; sbb eax, 0x1d86fff9 ; stc ; call qword ptr [rsi]
0x00000000004a399c : push rsi ; sbb edi, ecx ; jmp rsi
0x000000000043d3b6 : push rsi ; sub eax, edx ; ret
0x00000000004b8a48 : push rsi ; xchg eax, ebp ; jge 0x4b8a2d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042e80e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3cc4 : push rsp ; adc al, 0xf9 ; call rsp
0x00000000004a3cd4 : push rsp ; adc bh, cl ; call rsp
0x00000000004a3cdc : push rsp ; adc ecx, edi ; call rsp
0x00000000004a3ccc : push rsp ; adc edi, ecx ; call rsp
0x000000000046b666 : push rsp ; add r8b, bpl ; ret 0xf94c
0x000000000041b7cc : push rsp ; and al, 0x10 ; call rax
0x0000000000465093 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466c9e : push rsp ; and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x00000000004479b1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044703e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467301 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044ba86 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e5da : push rsp ; and al, 0x68 ; call rax
0x000000000041f8ba : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004486dc : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b2c6 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491a90 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491a4a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041b0d5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004c0229 : push rsp ; cmc ; call qword ptr [rcx]
0x0000000000495409 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000041bf5a : push rsp ; ret
0x0000000000441f98 : push rsp ; ret 0xfffd
0x0000000000478ef2 : push rsp ; retf 0x45f8
0x000000000047a500 : push rsp ; retf 0x48f8
0x000000000047092f : push rsp ; retf 0xeb08
0x00000000004be058 : push rsp ; sar ebp, cl ; inc dword ptr [rbx + rdx*8 - 3] ; jmp rsp
0x00000000004bac4a : push rsp ; syscall
0x00000000004297d0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c28fc : pushfq ; add byte ptr [r8], al ; push rax ; add al, bh ; call qword ptr [rdi]
0x00000000004c66fc : pushfq ; add dword ptr [rax], 0xfaadd000 ; call rdx
0x00000000004471c0 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041438c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a4d0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473fc0 : pushfq ; ret
0x0000000000468763 : pushfq ; ret 0xb60f
0x000000000049b9d0 : pushfq ; ret 0xf45
0x0000000000492cbd : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bad91 : rcl byte ptr [rdi], cl ; retf
0x00000000004ba8ba : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004ba47f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba44d ; ret 0xacfc
0x00000000004ba8b9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004ba47b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba451 ; ret 0xacfc
0x00000000004421dc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a362c : rcr byte ptr [rax + rdi*8 - 0x742f001], 1 ; jmp rax
0x00000000004987ad : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046328a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000440a3c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046303c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a687 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000442b40 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000041780f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041edde : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b699 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec3e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c6a7 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c48b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e893 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040fdb0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004925cd : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3950 : rcr byte ptr [rcx + rdi*8], 0xff ; push rax ; sbb al, 0xf9 ; jmp rax
0x00000000004ba89d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004a38e4 : rcr cl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000478b89 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004babf1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000440319 : rcr esi, cl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000432bd6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae780 : ret 0x10
0x000000000044f7cb : ret 0x100
0x0000000000462c6f : ret 0x107
0x00000000004764b6 : ret 0x10eb
0x000000000041bf82 : ret 0x110
0x000000000047a65c : ret 0x114d
0x0000000000447478 : ret 0x1189
0x000000000044620b : ret 0x11e9
0x000000000048378a : ret 0x12
0x000000000047491c : ret 0x1272
0x000000000040ae2a : ret 0x133
0x000000000049d873 : ret 0x1374
0x000000000046ddcf : ret 0x1376
0x000000000046af51 : ret 0x1477
0x000000000041b671 : ret 0x148
0x0000000000415e02 : ret 0x149
0x0000000000419f83 : ret 0x14c
0x0000000000435fac : ret 0x14d
0x000000000040722a : ret 0x16f
0x0000000000423c8a : ret 0x17
0x0000000000435ee9 : ret 0x180f
0x000000000044f266 : ret 0x1874
0x00000000004262a5 : ret 0x1876
0x0000000000417945 : ret 0x18eb
0x00000000004682f5 : ret 0x190
0x0000000000488d12 : ret 0x1a75
0x00000000004badfa : ret 0x1ad4
0x00000000004b958d : ret 0x1b49
0x000000000041ddbf : ret 0x1be
0x00000000004b0450 : ret 0x1d4
0x00000000004b0be8 : ret 0x1d5
0x0000000000400ce5 : ret 0x1d89
0x0000000000447dc3 : ret 0x1e76
0x0000000000404eca : ret 0x1eb
0x0000000000449957 : ret 0x1f0f
0x000000000041ea1e : ret 0x1f76
0x000000000044f6e7 : ret 0x200
0x0000000000446fbc : ret 0x2176
0x00000000004a0f73 : ret 0x22
0x0000000000423a28 : ret 0x2288
0x00000000004a0ac6 : ret 0x22bd
0x000000000042fd02 : ret 0x2373
0x000000000043f657 : ret 0x23e8
0x00000000004af458 : ret 0x24
0x0000000000403336 : ret 0x24e8
0x000000000046dce7 : ret 0x25
0x0000000000414929 : ret 0x2501
0x000000000047679a : ret 0x2565
0x000000000041df6d : ret 0x2575
0x00000000004706c2 : ret 0x2598
0x0000000000468722 : ret 0x2641
0x000000000045a67e : ret 0x2721
0x0000000000401336 : ret 0x2773
0x0000000000465916 : ret 0x2774
0x0000000000451a7a : ret 0x27ad
0x000000000044d83a : ret 0x27ee
0x00000000004314b6 : ret 0x280f
0x0000000000426295 : ret 0x2876
0x000000000047f728 : ret 0x28f5
0x000000000048604d : ret 0x2941
0x000000000041082d : ret 0x2948
0x000000000049b95a : ret 0x2949
0x0000000000432c21 : ret 0x294c
0x000000000041293b : ret 0x294d
0x000000000041e4af : ret 0x2a
0x000000000041e92b : ret 0x2a75
0x000000000041fea2 : ret 0x2aa9
0x000000000043f97a : ret 0x2b3
0x00000000004104cf : ret 0x2b48
0x00000000004464ae : ret 0x2b49
0x0000000000417a6a : ret 0x2b4b
0x0000000000416ada : ret 0x2b5a
0x000000000043e5a2 : ret 0x2b77
0x000000000043e247 : ret 0x2c76
0x0000000000483714 : ret 0x2e
0x0000000000462855 : ret 0x2e66
0x000000000040e78a : ret 0x305
0x0000000000446395 : ret 0x3101
0x0000000000403746 : ret 0x3145
0x000000000046fed2 : ret 0x314c
0x00000000004af948 : ret 0x33
0x000000000046ae47 : ret 0x33e8
0x0000000000403ef1 : ret 0x348
0x000000000044c3eb : ret 0x349
0x0000000000488d68 : ret 0x357e
0x00000000004ba6da : ret 0x3827
0x000000000047be72 : ret 0x3840
0x000000000040feef : ret 0x3841
0x000000000044079f : ret 0x3845
0x0000000000426285 : ret 0x3876
0x0000000000443339 : ret 0x3880
0x000000000041520b : ret 0x389
0x00000000004b8d66 : ret 0x38ae
0x000000000047aab6 : ret 0x38b
0x000000000044fcc1 : ret 0x3948
0x000000000041d242 : ret 0x3949
0x000000000044d206 : ret 0x394c
0x0000000000452b88 : ret 0x394d
0x000000000043d9c2 : ret 0x3a01
0x000000000042fceb : ret 0x3a73
0x000000000044cd13 : ret 0x3a76
0x0000000000442b31 : ret 0x3b01
0x00000000004673da : ret 0x3bba
0x000000000040e60e : ret 0x3ce8
0x0000000000445bd5 : ret 0x3d83
0x000000000046a292 : ret 0x3e9
0x000000000049b6df : ret 0x3ee9
0x0000000000419322 : ret 0x4007
0x000000000040253a : ret 0x404
0x0000000000466ae6 : ret 0x408d
0x00000000004783ef : ret 0x40bf
0x0000000000445fc0 : ret 0x4101
0x00000000004551a0 : ret 0x4108
0x0000000000456c68 : ret 0x4110
0x000000000041c95c : ret 0x4117
0x000000000046f06c : ret 0x412f
0x000000000043faad : ret 0x4164
0x0000000000446d8e : ret 0x41c3
0x000000000042e67a : ret 0x4266
0x00000000004683f2 : ret 0x428d
0x000000000044cd0a : ret 0x4372
0x000000000044d79b : ret 0x4389
0x0000000000445e7f : ret 0x438b
0x0000000000411523 : ret 0x4401
0x0000000000455727 : ret 0x440f
0x0000000000464857 : ret 0x4410
0x000000000047b961 : ret 0x448d
0x0000000000489c65 : ret 0x44c6
0x00000000004625d2 : ret 0x4502
0x000000000046da68 : ret 0x4574
0x0000000000463118 : ret 0x45f6
0x00000000004b9864 : ret 0x474c
0x000000000049dac3 : ret 0x4776
0x000000000045a593 : ret 0x47e9
0x0000000000448845 : ret 0x4801
0x000000000042c8f1 : ret 0x4802
0x000000000042c9cd : ret 0x4803
0x00000000004042d0 : ret 0x4804
0x000000000042c99d : ret 0x4805
0x000000000042c985 : ret 0x4806
0x00000000004239b3 : ret 0x4808
0x000000000044f274 : ret 0x4809
0x0000000000458a54 : ret 0x480f
0x000000000041b1d9 : ret 0x4810
0x000000000044cbe0 : ret 0x4811
0x00000000004531d2 : ret 0x481e
0x000000000041b11b : ret 0x4820
0x000000000045bc9c : ret 0x482d
0x000000000044478f : ret 0x4830
0x0000000000401332 : ret 0x4838
0x000000000042e586 : ret 0x4840
0x0000000000423ac8 : ret 0x48c3
0x000000000046758d : ret 0x48d
0x0000000000473c54 : ret 0x48e9
0x00000000004bb026 : ret 0x48f
0x0000000000402fde : ret 0x4901
0x000000000044bfc3 : ret 0x4904
0x000000000042cc0e : ret 0x4906
0x00000000004572d8 : ret 0x4908
0x000000000046a329 : ret 0x4909
0x0000000000422d22 : ret 0x4910
0x0000000000420f96 : ret 0x4920
0x000000000041ff10 : ret 0x4930
0x000000000047e864 : ret 0x4976
0x000000000046907e : ret 0x49be
0x0000000000446b71 : ret 0x4a55
0x00000000004bc6c1 : ret 0x4b
0x000000000046cb92 : ret 0x4b30
0x0000000000478166 : ret 0x4b66
0x00000000004b7148 : ret 0x4b6a
0x0000000000405955 : ret 0x4c01
0x000000000042cb51 : ret 0x4c02
0x000000000044cacf : ret 0x4c04
0x0000000000485d95 : ret 0x4c08
0x00000000004528c6 : ret 0x4c40
0x0000000000448a90 : ret 0x4c88
0x0000000000446ea1 : ret 0x4d02
0x00000000004baa87 : ret 0x4e27
0x0000000000469b47 : ret 0x4eb
0x0000000000444c48 : ret 0x4ee9
0x0000000000445a9e : ret 0x4f74
0x000000000042fcd4 : ret 0x5173
0x000000000044f073 : ret 0x527e
0x0000000000462e98 : ret 0x5389
0x0000000000485de7 : ret 0x53e8
0x000000000045b18b : ret 0x53e9
0x000000000047bbfd : ret 0x5438
0x0000000000491ab6 : ret 0x5488
0x000000000044d08a : ret 0x5489
0x000000000045ade3 : ret 0x548b
0x00000000004b8cec : ret 0x5508
0x000000000040555f : ret 0x5525
0x0000000000421402 : ret 0x575
0x000000000046dddd : ret 0x576
0x00000000004bafb8 : ret 0x5803
0x000000000040e7cb : ret 0x589
0x00000000004b89c0 : ret 0x591c
0x00000000004b9727 : ret 0x5ae4
0x0000000000446cbf : ret 0x5b80
0x0000000000449d81 : ret 0x5c77
0x000000000045988b : ret 0x5fe8
0x00000000004bb452 : ret 0x62c1
0x000000000045c653 : ret 0x6348
0x0000000000411b42 : ret 0x6349
0x000000000047f317 : ret 0x63e8
0x000000000049a910 : ret 0x65e9
0x000000000048a037 : ret 0x6610
0x0000000000426212 : ret 0x6620
0x0000000000423b15 : ret 0x66c3
0x000000000047492e : ret 0x674
0x00000000004b89df : ret 0x67b2
0x000000000047d97d : ret 0x6876
0x000000000049dcc2 : ret 0x68e8
0x000000000043ef6d : ret 0x6b8
0x000000000049b9b7 : ret 0x6be9
0x00000000004bb5e1 : ret 0x6f9
0x0000000000432c6e : ret 0x7280
0x0000000000476309 : ret 0x728d
0x000000000043e40b : ret 0x72e9
0x0000000000415751 : ret 0x7401
0x000000000041eb1f : ret 0x7402
0x000000000041bcd5 : ret 0x7404
0x0000000000411043 : ret 0x7408
0x0000000000400ebc : ret 0x7420
0x0000000000458e22 : ret 0x7450
0x000000000043bf29 : ret 0x7501
0x000000000043bf36 : ret 0x7502
0x00000000004269c9 : ret 0x7504
0x000000000043d364 : ret 0x7508
0x000000000043befb : ret 0x7510
0x00000000004269c4 : ret 0x7518
0x000000000043bf08 : ret 0x7520
0x000000000043bf15 : ret 0x7540
0x00000000004732a1 : ret 0x758b
0x000000000042ebc2 : ret 0x7677
0x00000000004464a2 : ret 0x774
0x0000000000478e4a : ret 0x777
0x000000000049b7ab : ret 0x77e9
0x000000000046dd6a : ret 0x7874
0x000000000041b60a : ret 0x7ae9
0x0000000000446fea : ret 0x7b8
0x00000000004261a2 : ret 0x7e20
0x000000000042191c : ret 0x7f10
0x0000000000461ad6 : ret 0x7f3c
0x0000000000432f8e : ret 0x80
0x0000000000422af9 : ret 0x8000
0x0000000000469b4c : ret 0x8001
0x0000000000472a0f : ret 0x8005
0x000000000047d836 : ret 0x8008
0x000000000046a532 : ret 0x8010
0x0000000000473b4e : ret 0x8018
0x0000000000470418 : ret 0x804
0x000000000046c7d0 : ret 0x8116
0x00000000004872eb : ret 0x8148
0x000000000045ada4 : ret 0x8166
0x000000000041a0dc : ret 0x820f
0x00000000004040b0 : ret 0x8301
0x000000000047dd71 : ret 0x8308
0x000000000042e790 : ret 0x830f
0x000000000043e2d0 : ret 0x8341
0x00000000004214c5 : ret 0x8348
0x000000000041b6d3 : ret 0x8349
0x000000000047fed9 : ret 0x8364
0x000000000043f5f7 : ret 0x83e8
0x0000000000411490 : ret 0x840
0x000000000046b3b2 : ret 0x8401
0x0000000000417959 : ret 0x840f
0x000000000043e370 : ret 0x8444
0x000000000049b927 : ret 0x8445
0x000000000045c645 : ret 0x8504
0x0000000000462d26 : ret 0x8508
0x0000000000413052 : ret 0x850f
0x0000000000468655 : ret 0x8545
0x00000000004193f2 : ret 0x8548
0x000000000044f085 : ret 0x854d
0x0000000000459c1c : ret 0x858b
0x00000000004574bd : ret 0x85c6
0x000000000045550a : ret 0x85c7
0x000000000049aba8 : ret 0x85e9
0x0000000000400c7e : ret 0x860f
0x000000000044f9d5 : ret 0x870f
0x00000000004b82fe : ret 0x871e
0x0000000000461add : ret 0x875
0x00000000004262b5 : ret 0x876
0x0000000000489c60 : ret 0x87e
0x000000000044ea6a : ret 0x87e9
0x000000000047e624 : ret 0x87f6
0x0000000000447fd1 : ret 0x8804
0x000000000045e312 : ret 0x880f
0x000000000044ef27 : ret 0x8840
0x00000000004473d2 : ret 0x8901
0x0000000000470dde : ret 0x8908
0x0000000000400d26 : ret 0x890f
0x000000000044d18f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x000000000041150b : ret 0x8945
0x0000000000449e41 : ret 0x8948
0x00000000004102bd : ret 0x8949
0x0000000000403b17 : ret 0x894c
0x0000000000445f9f : ret 0x894d
0x000000000047971b : ret 0x894e
0x00000000004838ec : ret 0x89e9
0x000000000047847e : ret 0x8b
0x000000000046281a : ret 0x8b04
0x000000000046b0a3 : ret 0x8b05
0x00000000004bab2e : ret 0x8b36
0x000000000044f2fa : ret 0x8b41
0x00000000004014a4 : ret 0x8b48
0x0000000000410c86 : ret 0x8b49
0x000000000047969e : ret 0x8b4a
0x00000000004117e0 : ret 0x8b4c
0x0000000000480715 : ret 0x8d01
0x00000000004527ea : ret 0x8d04
0x0000000000459950 : ret 0x8d0f
0x000000000040d36f : ret 0x8d48
0x00000000004032c6 : ret 0x8d49
0x0000000000465e98 : ret 0x8d4a
0x0000000000411796 : ret 0x8d4c
0x000000000041c9bc : ret 0x8d4e
0x00000000004107d1 : ret 0x8e0f
0x00000000004014ce : ret 0x900
0x0000000000421545 : ret 0x90c3
0x000000000041276b : ret 0x938b
0x0000000000485ca0 : ret 0x940f
0x000000000048a8b6 : ret 0x941
0x0000000000465bb8 : ret 0x94c
0x000000000047af4f : ret 0x950f
0x0000000000455c69 : ret 0x9522
0x0000000000403958 : ret 0x953d
0x00000000004b9953 : ret 0x9576
0x0000000000481a50 : ret 0x9589
0x000000000041b621 : ret 0x976
0x0000000000488de9 : ret 0x9e74
0x00000000004106e8 : ret 0x9e9
0x000000000045996c : ret 0x9ee8
0x0000000000474059 : ret 0x9f75
0x00000000004adf80 : ret 0xa
0x0000000000491a20 : ret 0xa074
0x000000000046afd7 : ret 0xa3e8
0x00000000004b9643 : ret 0xa514
0x00000000004b9ac7 : ret 0xac65
0x000000000049df7e : ret 0xace8
0x00000000004ba484 : ret 0xacfc
0x000000000043e3f6 : ret 0xaf0f
0x000000000041bfbf : ret 0xb48b
0x0000000000402899 : ret 0xb60f
0x000000000049e33a : ret 0xb61c
0x000000000046840b : ret 0xb70f
0x000000000043eea0 : ret 0xb8
0x000000000045ffa9 : ret 0xb848
0x000000000044f0c5 : ret 0xb87f
0x0000000000426897 : ret 0xb8c3
0x0000000000467342 : ret 0xb8e9
0x0000000000484b32 : ret 0xb908
0x00000000004b998e : ret 0xb9b9
0x000000000045648d : ret 0xbb41
0x0000000000478f72 : ret 0xbc41
0x000000000049bd45 : ret 0xbc80
0x0000000000460a5e : ret 0xbd83
0x0000000000484d20 : ret 0xbe08
0x00000000004b96e4 : ret 0xbe57
0x000000000045ae78 : ret 0xbf07
0x0000000000484101 : ret 0xbf08
0x00000000004229b9 : ret 0xc000
0x000000000048f0be : ret 0xc001
0x000000000048f072 : ret 0xc002
0x0000000000412f93 : ret 0xc031
0x000000000046b910 : ret 0xc084
0x0000000000426060 : ret 0xc085
0x000000000040e956 : ret 0xc148
0x00000000004674ad : ret 0xc269
0x000000000045b346 : ret 0xc283
0x000000000042fba4 : ret 0xc2b2
0x000000000043e611 : ret 0xc35b
0x00000000004b7e82 : ret 0xc4c3
0x00000000004b9298 : ret 0xc4ff
0x0000000000432d08 : ret 0xc580
0x000000000049b95d : ret 0xc5e9
0x0000000000482920 : ret 0xc6e9
0x0000000000421441 : ret 0xc6eb
0x0000000000438400 : ret 0xc748
0x000000000041c26c : ret 0xc789
0x00000000004151fc : ret 0xc883
0x000000000047d483 : ret 0xc931
0x0000000000443179 : ret 0xc985
0x0000000000423981 : ret 0xc9ff
0x00000000004814ad : ret 0xcb73
0x00000000004b8d2a : ret 0xcca7
0x00000000004bae0d : ret 0xcd11
0x000000000041d651 : ret 0xce31
0x0000000000404d64 : ret 0xce80
0x0000000000480d85 : ret 0xce83
0x0000000000418e9b : ret 0xcf31
0x00000000004ae380 : ret 0xd
0x000000000047bd8a : ret 0xd021
0x000000000044262f : ret 0xd029
0x0000000000432b7c : ret 0xd073
0x000000000040556e : ret 0xd089
0x0000000000464495 : ret 0xd108
0x0000000000486cb9 : ret 0xd129
0x000000000049a576 : ret 0xd284
0x0000000000485bb7 : ret 0xd309
0x00000000004891cb : ret 0xd348
0x000000000045b363 : ret 0xd529
0x0000000000486d30 : ret 0xd629
0x00000000004671fd : ret 0xd721
0x0000000000486c42 : ret 0xd729
0x000000000043e3fb : ret 0xd889
0x00000000004ba8a5 : ret 0xd8f
0x0000000000477b03 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047bb50 : ret 0xda38
0x000000000040f825 : ret 0xdaf7
0x0000000000448501 : ret 0xdb85
0x00000000004ba986 : ret 0xdcd9
0x000000000046aa90 : ret 0xdd72
0x00000000004b9902 : ret 0xde5d
0x0000000000410dc5 : ret 0xde74
0x000000000049b522 : ret 0xde89
0x00000000004b8691 : ret 0xde9e
0x0000000000487108 : ret 0xdee9
0x0000000000422879 : ret 0xe000
0x000000000043beb9 : ret 0xe074
0x0000000000446fdd : ret 0xe077
0x0000000000443e19 : ret 0xe083
0x000000000044b563 : ret 0xe183
0x0000000000444392 : ret 0xe1eb
0x000000000044746b : ret 0xe277
0x000000000040dbac : ret 0xe281
0x0000000000400e2d : ret 0xe283
0x000000000043f597 : ret 0xe3e8
0x0000000000466560 : ret 0xe575
0x0000000000417937 : ret 0xe675
0x0000000000457e93 : ret 0xe680
0x00000000004baaa6 : ret 0xe71f
0x0000000000401328 : ret 0xe72
0x0000000000452d20 : ret 0xe783
0x000000000046e255 : ret 0xe874
0x0000000000459805 : ret 0xe87f
0x00000000004550a2 : ret 0xe883
0x000000000046e5fe : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x00000000004257b3 : ret 0xe901
0x0000000000402b62 : ret 0xe902
0x0000000000449f49 : ret 0xe904
0x000000000047b781 : ret 0xe907
0x0000000000423a16 : ret 0xe908
0x0000000000429636 : ret 0xe910
0x00000000004532c9 : ret 0xe920
0x000000000041ffb3 : ret 0xe96e
0x00000000004b8e07 : ret 0xe970
0x0000000000488d2c : ret 0xe974
0x000000000042015f : ret 0xe977
0x000000000043e59a : ret 0xea81
0x0000000000457e17 : ret 0xeac0
0x0000000000400d01 : ret 0xeac1
0x0000000000422d46 : ret 0xeb10
0x000000000041ff7f : ret 0xeb5b
0x000000000040e5ca : ret 0xeb72
0x00000000004021f8 : ret 0xebe8
0x00000000004bb5b8 : ret 0xec2
0x000000000047f6b9 : ret 0xec75
0x0000000000470948 : ret 0xed75
0x000000000044b0be : ret 0xed85
0x0000000000445f1f : ret 0xee75
0x00000000004bb25a : ret 0xef32
0x00000000004189c6 : ret 0xef75
0x0000000000443c91 : ret 0xefc1
0x0000000000422739 : ret 0xf000
0x000000000040d538 : ret 0xf001
0x000000000040284a : ret 0xf01
0x000000000041a3a6 : ret 0xf02
0x000000000041bc50 : ret 0xf04
0x000000000045d49e : ret 0xf08
0x000000000045a327 : ret 0xf0e9
0x000000000046b516 : ret 0xf0eb
0x000000000041b393 : ret 0xf0f
0x00000000004218d2 : ret 0xf10
0x0000000000462245 : ret 0xf229
0x000000000044ff56 : ret 0xf301
0x000000000045d4da : ret 0xf40
0x00000000004685dd : ret 0xf43
0x000000000049b9d1 : ret 0xf45
0x00000000004644ba : ret 0xf48
0x000000000045a8e4 : ret 0xf4c
0x0000000000402b6b : ret 0xf4e9
0x0000000000443dfc : ret 0xf631
0x00000000004216e9 : ret 0xf66
0x000000000043e1bc : ret 0xf685
0x000000000041bfa3 : ret 0xf710
0x000000000047a185 : ret 0xf74
0x0000000000426d3c : ret 0xf748
0x0000000000466000 : ret 0xf749
0x0000000000483dda : ret 0xf7d9
0x0000000000432c2e : ret 0xf80
0x00000000004225f9 : ret 0xf800
0x00000000004b8570 : ret 0xf869
0x00000000004a39fc : ret 0xf91e
0x00000000004044ea : ret 0xf929
0x000000000046b66a : ret 0xf94c
0x000000000049f77a : ret 0xfa25
0x0000000000459d29 : ret 0xfa80
0x000000000048acc6 : ret 0xfa81
0x0000000000405582 : ret 0xfac1
0x0000000000468a2a : ret 0xfb57
0x00000000004224b9 : ret 0xfc00
0x000000000048c206 : ret 0xfc01
0x000000000048c1ba : ret 0xfc02
0x000000000043f6ea : ret 0xfc3
0x000000000046c09a : ret 0xfd34
0x00000000004470b0 : ret 0xfd83
0x000000000044f55d : ret 0xfde8
0x0000000000402820 : ret 0xfdf
0x0000000000422379 : ret 0xfe00
0x000000000043e2f3 : ret 0xfe83
0x0000000000432b4e : ret 0xfec5
0x0000000000422239 : ret 0xff00
0x000000000049195e : ret 0xff2
0x000000000042e5aa : ret 0xff3
0x00000000004220f9 : ret 0xff80
0x0000000000489006 : ret 0xff81
0x0000000000488fba : ret 0xff82
0x000000000040c2aa : ret 0xff99
0x00000000004872a0 : ret 0xff9f
0x00000000004528b2 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048efa7 : ret 0xffbf
0x0000000000421fb9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042127e : ret 0xffdf
0x000000000044f718 : ret 0xffe0
0x000000000040865a : ret 0xffe2
0x000000000049e5aa : ret 0xffe7
0x000000000044184a : ret 0xffe8
0x000000000044174a : ret 0xffe9
0x0000000000459fcc : ret 0xffee
0x000000000040ee4c : ret 0xffef
0x000000000040dafe : ret 0xfff0
0x00000000004c1f89 : ret 0xfff7
0x0000000000421bf9 : ret 0xfff8
0x000000000041c7d1 : ret 0xfff9
0x00000000004554a7 : ret 0xfffa
0x000000000043f2a9 : ret 0xfffb
0x0000000000421ab9 : ret 0xfffc
0x0000000000441f13 : ret 0xfffd
0x0000000000405318 : ret 0xfffe
0x000000000041092a : ret 0xffff
0x00000000004101f1 : ret 1
0x0000000000419f6a : ret 2
0x000000000042f962 : ret 3
0x0000000000426369 : ret 4
0x000000000041a8b6 : ret 5
0x0000000000419010 : ret 6
0x00000000004b2424 : ret 7
0x000000000040a45e : ret 8
0x000000000043c96a : ret 9
0x000000000042c59a : retf
0x00000000004049e7 : retf 0
0x0000000000432bcd : retf 0x1073
0x0000000000447130 : retf 0x1089
0x00000000004ae8e0 : retf 0x11
0x000000000048009d : retf 0x114d
0x0000000000448ecb : retf 0x1308
0x000000000041d710 : retf 0x1373
0x0000000000449114 : retf 0x148
0x0000000000446f34 : retf 0x1489
0x0000000000448a57 : retf 0x149
0x0000000000432e67 : retf 0x14c
0x0000000000423d62 : retf 0x16
0x000000000044917e : retf 0x1608
0x0000000000406522 : retf 0x17c
0x000000000047a58d : retf 0x194d
0x0000000000442952 : retf 0x19b8
0x0000000000418f58 : retf 0x1b73
0x000000000047d828 : retf 0x1b8
0x00000000004813fb : retf 0x1ba
0x00000000004b0488 : retf 0x1d4
0x00000000004b0c28 : retf 0x1d5
0x0000000000429557 : retf 0x1f0f
0x0000000000442bb2 : retf 0x1f8
0x000000000041934a : retf 0x2173
0x0000000000404d32 : retf 0x21c
0x0000000000407386 : retf 0x22
0x000000000041d9c9 : retf 0x2273
0x000000000047f6b3 : retf 0x2348
0x000000000047ff35 : retf 0x24
0x00000000004766b2 : retf 0x256a
0x00000000004740a2 : retf 0x258c
0x00000000004740b2 : retf 0x2590
0x0000000000468aea : retf 0x262f
0x000000000048cc32 : retf 0x26a
0x000000000043fefd : retf 0x28
0x00000000004302c9 : retf 0x280f
0x0000000000490d7f : retf 0x2941
0x0000000000411017 : retf 0x2948
0x000000000041030a : retf 0x294c
0x000000000041dcc3 : retf 0x2a
0x00000000004b977c : retf 0x2a91
0x0000000000420aed : retf 0x2ac6
0x0000000000417c9a : retf 0x2b33
0x00000000004160d2 : retf 0x2b64
0x0000000000400784 : retf 0x2c
0x0000000000404f12 : retf 0x2c84
0x00000000004b8bfa : retf 0x2c90
0x000000000046a231 : retf 0x2d75
0x000000000040eb35 : retf 0x2e66
0x000000000044cd1e : retf 0x2f72
0x0000000000469dfb : retf 0x2f74
0x000000000045ad60 : retf 0x30be
0x000000000044005f : retf 0x3140
0x000000000043470a : retf 0x3148
0x00000000004ba9e5 : retf 0x3159
0x00000000004baa4d : retf 0x32dd
0x00000000004af988 : retf 0x33
0x00000000004b9303 : retf 0x33e6
0x00000000004435f7 : retf 0x348
0x0000000000459978 : retf 0x349
0x000000000044356a : retf 0x34c
0x00000000004b9831 : retf 0x3617
0x00000000004346e6 : retf 0x377
0x00000000004496e7 : retf 0x3948
0x00000000004705b3 : retf 0x3980
0x00000000004bdde9 : retf 0x3b9a
0x000000000045c055 : retf 0x3be9
0x00000000004bae46 : retf 0x3d8a
0x00000000004b86db : retf 0x3ec
0x0000000000470aa4 : retf 0x4108
0x000000000042e65c : retf 0x4266
0x000000000047f4aa : retf 0x42f6
0x00000000004292aa : retf 0x4466
0x0000000000488b10 : retf 0x4489
0x0000000000404dc5 : retf 0x44f6
0x0000000000478ef3 : retf 0x45f8
0x00000000004b3ce8 : retf 0x461b
0x000000000047d104 : retf 0x47
0x0000000000416665 : retf 0x476
0x000000000041c48f : retf 0x4801
0x000000000046d58f : retf 0x4802
0x000000000040d9db : retf 0x4803
0x000000000040d98b : retf 0x4804
0x000000000040d83f : retf 0x4805
0x000000000040d9b3 : retf 0x4806
0x000000000040da03 : retf 0x4807
0x000000000040d918 : retf 0x4808
0x000000000040d8a3 : retf 0x4809
0x000000000040daa3 : retf 0x480a
0x000000000040da77 : retf 0x480b
0x000000000040d8e5 : retf 0x480c
0x000000000040d873 : retf 0x480d
0x000000000049dfc3 : retf 0x4810
0x000000000042610e : retf 0x4890
0x000000000047a501 : retf 0x48f8
0x000000000040579e : retf 0x4a15
0x000000000041f337 : retf 0x4a25
0x000000000047dc27 : retf 0x4b
0x00000000004a6ec8 : retf 0x4b29
0x00000000004519bb : retf 0x4b4d
0x00000000004740ef : retf 0x4b60
0x0000000000474dcf : retf 0x4b61
0x000000000041c5d0 : retf 0x4b83
0x000000000047bedb : retf 0x4c01
0x000000000041b7e7 : retf 0x4c04
0x000000000048636f : retf 0x4c8b
0x0000000000418372 : retf 0x4d01
0x0000000000413ead : retf 0x4d80
0x000000000047a558 : retf 0x4de8
0x0000000000478df1 : retf 0x4df0
0x000000000047a57c : retf 0x4df8
0x0000000000463a1d : retf 0x5077
0x0000000000447b3e : retf 0x5355
0x0000000000491a1a : retf 0x5489
0x000000000044ccf8 : retf 0x5576
0x000000000040e9e3 : retf 0x6411
0x00000000004303b3 : retf 0x6601
0x0000000000430503 : retf 0x6602
0x0000000000430653 : retf 0x6603
0x00000000004307a3 : retf 0x6604
0x00000000004308f3 : retf 0x6605
0x0000000000430a43 : retf 0x6606
0x0000000000430b93 : retf 0x6607
0x0000000000430ce3 : retf 0x6608
0x0000000000430e33 : retf 0x6609
0x0000000000430f83 : retf 0x660a
0x00000000004310d3 : retf 0x660b
0x0000000000431223 : retf 0x660c
0x0000000000431373 : retf 0x660d
0x00000000004314c3 : retf 0x660e
0x0000000000431613 : retf 0x660f
0x0000000000434705 : retf 0x676
0x00000000004bad65 : retf 0x67ca
0x00000000004674e8 : retf 0x694d
0x0000000000432d03 : retf 0x6a77
0x000000000046ada2 : retf 0x6b8
0x0000000000488345 : retf 0x6c
0x00000000004b8d62 : retf 0x6ee8
0x000000000045f3b2 : retf 0x72
0x00000000004bac26 : retf 0x7272
0x00000000004786d2 : retf 0x76
0x00000000004ba3ff : retf 0x76a5
0x000000000047a4c6 : retf 0x77f
0x00000000004b9282 : retf 0x79f5
0x000000000046a256 : retf 0x7a80
0x0000000000462bc9 : retf 0x7a8b
0x00000000004346ee : retf 0x8148
0x00000000004325bd : retf 0x820f
0x000000000041980c : retf 0x8304
0x0000000000432e81 : retf 0x830f
0x000000000048b6a1 : retf 0x8341
0x000000000041cc49 : retf 0x8348
0x0000000000422e95 : retf 0x8349
0x00000000004663a2 : retf 0x840f
0x00000000004481d1 : retf 0x8440
0x000000000048a6f5 : retf 0x8445
0x00000000004b9b70 : retf 0x8481
0x000000000040f232 : retf 0x850f
0x000000000040208a : retf 0x8545
0x000000000040e131 : retf 0x8548
0x0000000000432ebc : retf 0x870f
0x0000000000478d11 : retf 0x877
0x000000000047b470 : retf 0x880f
0x000000000047cb38 : retf 0x8820
0x0000000000448e83 : retf 0x8880
0x0000000000420bc2 : retf 0x8902
0x000000000041104f : retf 0x8920
0x000000000046a31d : retf 0x8941
0x000000000048702a : retf 0x8945
0x0000000000402a62 : retf 0x8948
0x0000000000405235 : retf 0x8949
0x000000000040eea4 : retf 0x894c
0x0000000000446da9 : retf 0x894d
0x000000000040446a : retf 0x8b48
0x000000000040e305 : retf 0x8b49
0x0000000000409bb5 : retf 0x8b4c
0x000000000045aa52 : retf 0x8d
0x000000000046844d : retf 0x8d0f
0x000000000046754c : retf 0x8d41
0x0000000000400499 : retf 0x8d48
0x000000000041b67a : retf 0x8d49
0x00000000004238d4 : retf 0x8d4a
0x000000000043b43d : retf 0x8d4c
0x0000000000487069 : retf 0x8d4f
0x0000000000481688 : retf 0x8d89
0x00000000004494ae : retf 0x8e0f
0x0000000000422c53 : retf 0x9066
0x00000000004ba4ce : retf 0x93a2
0x0000000000491a8a : retf 0x948
0x000000000048af8a : retf 0x950f
0x000000000045c660 : retf 0x97e
0x00000000004ba86b : retf 0x99e0
0x00000000004babda : retf 0x9d7d
0x000000000047bdb2 : retf 0x9e0f
0x0000000000471aec : retf 0xa
0x00000000004bb4e5 : retf 0xa020
0x00000000004b8a45 : retf 0xa1eb
0x00000000004baacb : retf 0xa2fe
0x000000000040f2ea : retf 0xa375
0x00000000004bab9c : retf 0xab0d
0x00000000004bb0ee : retf 0xae32
0x000000000042d872 : retf 0xb
0x0000000000449ce5 : retf 0xb0e9
0x00000000004b98e9 : retf 0xb51a
0x0000000000426592 : retf 0xb60f
0x000000000046759f : retf 0xb70f
0x000000000049dc02 : retf 0xb9e9
0x000000000047846e : retf 0xba
0x00000000004babf3 : retf 0xbb9a
0x000000000041061a : retf 0xbd75
0x00000000004bac3d : retf 0xbf4b
0x000000000046260e : retf 0xc001
0x0000000000413521 : retf 0xc031
0x00000000004ba8bd : retf 0xc0fe
0x000000000040e147 : retf 0xc148
0x0000000000465b7e : retf 0xc149
0x0000000000432d3f : retf 0xc1c4
0x000000000045a572 : retf 0xc3
0x00000000004632a4 : retf 0xc748
0x000000000048b4c1 : retf 0xc77
0x0000000000403cf1 : retf 0xc80f
0x000000000040054a : retf 0xc883
0x00000000004039fd : retf 0xc90f
0x000000000042f744 : retf 0xcab2
0x00000000004b7e8a : retf 0xcccb
0x0000000000409c21 : retf 0xd
0x0000000000456b3f : retf 0xd039
0x00000000004898e3 : retf 0xd0eb
0x0000000000458df2 : retf 0xd189
0x00000000004b96a6 : retf 0xd1cb
0x000000000043e6e0 : retf 0xd231
0x00000000004474e7 : retf 0xd285
0x00000000004badb7 : retf 0xd39
0x000000000049d6a4 : retf 0xd3eb
0x000000000047bd97 : retf 0xd989
0x000000000040dc2d : retf 0xdaf7
0x000000000049d3df : retf 0xdb77
0x00000000004bb343 : retf 0xde4f
0x000000000041cff6 : retf 0xde9
0x000000000040599e : retf 0xdf75
0x00000000004b9973 : retf 0xdf7f
0x000000000041668a : retf 0xdfeb
0x00000000004ae4e0 : retf 0xe
0x0000000000448e63 : retf 0xe083
0x00000000004c148b : retf 0xe0a
0x0000000000456a96 : retf 0xe0c1
0x00000000004b941e : retf 0xe152
0x000000000044952c : retf 0xe281
0x000000000049b4bb : retf 0xe283
0x0000000000472a07 : retf 0xe2c1
0x00000000004269b9 : retf 0xe475
0x00000000004b99fc : retf 0xe496
0x00000000004537c7 : retf 0xe677
0x00000000004b9366 : retf 0xe72e
0x00000000004b89f3 : retf 0xe80
0x0000000000480d6b : retf 0xe873
0x0000000000470685 : retf 0xe875
0x00000000004432a4 : retf 0xe901
0x0000000000443274 : retf 0xe902
0x0000000000443264 : retf 0xe904
0x0000000000443254 : retf 0xe908
0x0000000000413ef8 : retf 0xe980
0x00000000004ba9ac : retf 0xea91
0x000000000044422b : retf 0xeac0
0x000000000043e649 : retf 0xeac1
0x0000000000421891 : retf 0xead3
0x00000000004682d1 : retf 0xeaf7
0x0000000000470930 : retf 0xeb08
0x00000000004b8acd : retf 0xeb83
0x00000000004bb2c1 : retf 0xebbf
0x000000000045c77c : retf 0xebff
0x000000000040b2ba : retf 0xf
0x00000000004330fc : retf 0xf01
0x000000000043327c : retf 0xf02
0x000000000047bd92 : retf 0xf029
0x00000000004333fc : retf 0xf03
0x000000000043357c : retf 0xf04
0x00000000004336fc : retf 0xf05
0x000000000043387c : retf 0xf06
0x00000000004339fc : retf 0xf07
0x0000000000433b7c : retf 0xf08
0x0000000000433cfc : retf 0xf09
0x0000000000433e7c : retf 0xf0a
0x0000000000433ffc : retf 0xf0b
0x000000000043417c : retf 0xf0c
0x00000000004342fc : retf 0xf0d
0x000000000043447c : retf 0xf0e
0x00000000004345fc : retf 0xf0f
0x000000000048070b : retf 0xf189
0x000000000042ae7d : retf 0xf1c5
0x000000000047bb12 : retf 0xf40
0x00000000004259d8 : retf 0xf41
0x000000000041ee13 : retf 0xf44
0x0000000000423c20 : retf 0xf48
0x000000000041d2b9 : retf 0xf4c
0x00000000004ba908 : retf 0xf64
0x0000000000416ce6 : retf 0xf66
0x000000000048b36d : retf 0xf741
0x000000000042e7aa : retf 0xf748
0x00000000004a3d20 : retf 0xf910
0x00000000004a3d18 : retf 0xf911
0x00000000004a3d10 : retf 0xf912
0x00000000004a3d08 : retf 0xf913
0x00000000004a3d00 : retf 0xf914
0x00000000004a3b28 : retf 0xf919
0x000000000046d6d2 : retf 0xf940
0x000000000046b462 : retf 0xf94e
0x000000000042af4f : retf 0xf9c5
0x000000000045803d : retf 0xfac1
0x0000000000434f61 : retf 0xff2
0x000000000042ebdb : retf 0xff3
0x000000000041729f : retf 0xff31
0x0000000000400e70 : retf 0xff83
0x000000000040cfa2 : retf 0xff8c
0x0000000000418232 : retf 0xff97
0x000000000041d522 : retf 0xffa1
0x000000000040aba2 : retf 0xffb0
0x0000000000462985 : retf 0xffb8
0x00000000004091a2 : retf 0xffca
0x0000000000461722 : retf 0xffe5
0x0000000000451581 : retf 0xffe6
0x000000000040b549 : retf 0xffed
0x0000000000404c5c : retf 0xfff0
0x000000000048bacc : retf 0xfff2
0x000000000040b317 : retf 0xfff7
0x00000000004a38b5 : retf 0xfff8
0x000000000048135c : retf 0xfff9
0x0000000000453a12 : retf 0xfffa
0x00000000004739a1 : retf 0xfffb
0x000000000043f1a1 : retf 0xfffc
0x000000000041f430 : retf 0xfffd
0x0000000000410853 : retf 0xfffe
0x0000000000409188 : retf 0xffff
0x0000000000401773 : retf 1
0x0000000000415f6c : retf 2
0x0000000000402dcf : retf 3
0x0000000000402c8f : retf 4
0x0000000000419c4a : retf 5
0x000000000044148a : retf 6
0x00000000004b2434 : retf 7
0x000000000040fec3 : retf 8
0x000000000042e8fb : retf 9
0x000000000043da85 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e6d5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000046705b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416737 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000477b0e : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004263fd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e582 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465912 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041f19f : rol byte ptr [rax + 0x755f067b], 1 ; retf 0x8948
0x00000000004b1e20 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447d58 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a106 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000457c5c : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x0000000000460765 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042eacd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c406 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044fabb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047aab1 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042cf92 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000482301 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b2e1 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b2d8 ; ret
0x0000000000478b8b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442ee6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416b88 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004668d2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000472a04 : rol byte ptr [rbx], 0x89 ; retf 0xe2c1
0x00000000004033da : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e591 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c6bb : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000440ac7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e4c5 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004668b2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e3a6 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e1d2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e407 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e3f2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000432b7e : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000004a3544 : rol byte ptr [rdi - 8], 0xff ; ror byte ptr [rcx - 8], 1 ; jmp rax
0x0000000000466912 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004668c2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444bf6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047cac7 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466902 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004999ad : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a38b0 : rol ch, 1 ; clc ; call qword ptr [rax]
0x000000000042b035 : rol ch, 1 ; jns 0x42b014 ; retf 0xead3
0x000000000042b185 : rol ch, 1 ; jns 0x42b164 ; retf 0xead3
0x000000000042b2d5 : rol ch, 1 ; jns 0x42b2b4 ; retf 0xead3
0x000000000042b425 : rol ch, 1 ; jns 0x42b404 ; retf 0xead3
0x000000000042b575 : rol ch, 1 ; jns 0x42b554 ; retf 0xead3
0x000000000042b6c5 : rol ch, 1 ; jns 0x42b6a4 ; retf 0xead3
0x000000000042b815 : rol ch, 1 ; jns 0x42b7f4 ; retf 0xead3
0x000000000042b965 : rol ch, 1 ; jns 0x42b944 ; retf 0xead3
0x000000000042bab5 : rol ch, 1 ; jns 0x42ba94 ; retf 0xead3
0x000000000042bc05 : rol ch, 1 ; jns 0x42bbe4 ; retf 0xead3
0x000000000042bd55 : rol ch, 1 ; jns 0x42bd34 ; retf 0xead3
0x000000000042bea5 : rol ch, 1 ; jns 0x42be84 ; retf 0xead3
0x000000000042bff5 : rol ch, 1 ; jns 0x42bfd4 ; retf 0xead3
0x000000000042c145 : rol ch, 1 ; jns 0x42c124 ; retf 0xead3
0x000000000042c295 : rol ch, 1 ; jns 0x42c274 ; retf 0xead3
0x0000000000496435 : rol ch, 1 ; jns 0x496414 ; retf 0xead3
0x00000000004965b5 : rol ch, 1 ; jns 0x496594 ; retf 0xead3
0x0000000000496735 : rol ch, 1 ; jns 0x496714 ; retf 0xead3
0x00000000004968b5 : rol ch, 1 ; jns 0x496894 ; retf 0xead3
0x0000000000496a35 : rol ch, 1 ; jns 0x496a14 ; retf 0xead3
0x0000000000496bb5 : rol ch, 1 ; jns 0x496b94 ; retf 0xead3
0x0000000000496d35 : rol ch, 1 ; jns 0x496d14 ; retf 0xead3
0x0000000000496eb5 : rol ch, 1 ; jns 0x496e94 ; retf 0xead3
0x0000000000497035 : rol ch, 1 ; jns 0x497014 ; retf 0xead3
0x00000000004971b5 : rol ch, 1 ; jns 0x497194 ; retf 0xead3
0x0000000000497335 : rol ch, 1 ; jns 0x497314 ; retf 0xead3
0x00000000004974b5 : rol ch, 1 ; jns 0x497494 ; retf 0xead3
0x0000000000497635 : rol ch, 1 ; jns 0x497614 ; retf 0xead3
0x00000000004977b5 : rol ch, 1 ; jns 0x497794 ; retf 0xead3
0x0000000000497935 : rol ch, 1 ; jns 0x497914 ; retf 0xead3
0x00000000004b7e80 : rol cl, 0xc2 ; ret
0x00000000004683df : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046685c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000004269b5 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000403d58 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x00000000004346e0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000467598 : rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x0000000000400593 : rol dword ptr [rbx + rbp*8], 0xcc ; mov qword ptr [rdi], rcx ; ret
0x00000000004c295e : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000046b353 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044443d : rol ecx, 0xe1 ; add edx, ebx ; loopne 0x4444a7 ; pop rbp ; ret
0x00000000004a368c : rol ecx, 0xf8 ; inc dword ptr [rcx - 0x3e] ; clc ; inc ecx ; ret 0xfff8
0x00000000004a3694 : rol edx, 0xf8 ; call qword ptr [rcx - 0x3d]
0x00000000004a3904 : ror bh, 0xf8 ; call qword ptr [rax]
0x00000000004a35b0 : ror bl, 0x42 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x00000000004a38f8 : ror bl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000426282 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4262c9 ; add rax, rdi ; ret
0x0000000000423c27 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000410bda : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473b99 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446faa : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000460614 : ror byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000049d7c8 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cff1 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049cb72 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046af5c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46af8f ; ret
0x00000000004429c8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479586 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401325 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b307 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047bd8c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf 0xf029
0x0000000000443335 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467d60 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f61d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dd0c : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f60e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000047a10e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042ce6c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426252 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488de6 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488d29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423c24 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae228 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004263f5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488586 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004693aa : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdcbd
0x000000000045de4a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b728 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426242 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426272 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426262 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041bf57 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c276 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x000000000041570a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000479423 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000049d6a1 : ror byte ptr [rax - 0x77], 0xca ; jmp 0x49d67d
0x0000000000412bc5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a1c5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000459969 : ror byte ptr [rax - 0x77], 1 ; ret 0x9ee8
0x000000000040dba9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046ad9f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000410c49 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420e92 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000417aed : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413611 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413626 ; ret
0x000000000047af49 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040ff1f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ae80 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cdf6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004788b8 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049d03e : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c9b5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb11d4
0x00000000004721d2 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472f5c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456fd2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a98a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000490e4e : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x00000000004760dd : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449543 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469e1e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448a84 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004bded0 : ror byte ptr [rax - 3], 1 ; jmp qword ptr [rax]
0x000000000047ac3a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000488334 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dd6f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049dabc : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004c1b40 : ror byte ptr [rbp - 0xa], 1 ; jmp rbx
0x000000000041b677 : ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x0000000000447dc0 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446fb9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447440 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048d32f : ror byte ptr [rcx + 0x39], cl ; retf
0x0000000000403b44 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046b2d3 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465342 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f8ae : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472685 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e244 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004117da : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x00000000004a3548 : ror byte ptr [rcx - 8], 1 ; jmp rax
0x0000000000426b79 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044f8d2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004990ad : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004428cc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468408 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041dfed : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b107 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f146 : ror byte ptr [rdi], 0x84 ; ret
0x00000000004114be : ror byte ptr [rdi], 0x84 ; retf
0x000000000046f617 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b546 : ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b314 : ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000463ea1 : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000479b1f : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045ee9f : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000044680c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043838a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004383c6 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459fc9 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x000000000044bac0 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044f9e6 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000457fd7 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490d08 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044262c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c4bc : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047bbfa : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b607 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461ad3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047af4c : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485bb4 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047bb4d : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000040fe0a : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000046733f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x00000000004671fa : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f822 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466e2e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040feec : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dbbe : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dba8 ; ret
0x0000000000419419 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a3c28 : ror byte ptr [rdi], cl ; stc ; inc dword ptr [rdx + 0xf] ; stc ; call rdx
0x000000000046d9e5 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484457 : ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x000000000047be6f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bf83 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467dfa : ror byte ptr [rdx + 0x26], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000457fd6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004346eb : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000041b674 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x00000000004108f3 : ror dword ptr [rax + 0x29], cl ; ret
0x0000000000410c4c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041cc7a : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047bdaf : ror dword ptr [rax + 0x39], 1 ; retf 0x9e0f
0x0000000000467f50 : ror dword ptr [rax + 0xf], 0xaf ; retf
0x000000000040e12d : ror dword ptr [rax + 0xf], 1 ; retf 0x8548
0x000000000047d2a6 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047bd8f : ror dword ptr [rax + 1], cl ; retf 0xf029
0x0000000000423af4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423c19 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046597a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000472fac : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a413 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a590 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432bd2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045bcfc : ror dword ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000047e3d1 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414d8d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x414d87 ; ret
0x0000000000463bfd : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x463bf7 ; ret
0x000000000040eb48 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405352 : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000487022 : ror dword ptr [rax], 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486ffd
0x000000000044f082 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042ca75 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441fae : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e1f6
0x0000000000441fbc : ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41e1f6
0x0000000000441f0d : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41e1f6
0x0000000000441f1a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41e1f6
0x000000000043beb7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000480af5 : ror dword ptr [rdi], 0x83 ; retf
0x000000000042f338 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fa44 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f816 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042f796 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042fad4 : ror dword ptr [rdi], 0x85 ; je 0x42fae4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f5cb : ror dword ptr [rdi], 0x85 ; jno 0x42f5e0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f693 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f310 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004682fb : ror dword ptr [rdi], 0x94 ; ret
0x00000000004891c8 : ror dword ptr [rdi], 0x95 ; ret 0xd348
0x0000000000414d8c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x414d88 ; ret
0x0000000000463bfc : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x463bf8 ; ret
0x0000000000446fb4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000047133f : sahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004015cc : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042ba3e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479a61 : sahf ; ret 0x148
0x00000000004b8d65 : sahf ; ret 0x38ae
0x00000000004511d0 : sahf ; ret 0x8348
0x000000000047bdb4 : sahf ; ret 0xe8c1
0x000000000049b9e3 : sahf ; ret 0xf45
0x00000000004b989c : sahf ; retf
0x000000000041dcc2 : sahf ; retf 0x2a
0x0000000000402c8e : sahf ; retf 4
0x00000000004a3424 : sal ah, 0xf7 ; inc dword ptr [rax] ; div bh ; jmp rax
0x0000000000416b8e : sal bh, 0xd8 ; ret
0x000000000043e6e9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000422af7 : sal bh, 1 ; ret 0x8000
0x00000000004229b7 : sal bh, 1 ; ret 0xc000
0x0000000000422877 : sal bh, 1 ; ret 0xe000
0x0000000000422737 : sal bh, 1 ; ret 0xf000
0x00000000004225f7 : sal bh, 1 ; ret 0xf800
0x00000000004224b7 : sal bh, 1 ; ret 0xfc00
0x0000000000422377 : sal bh, 1 ; ret 0xfe00
0x0000000000422237 : sal bh, 1 ; ret 0xff00
0x00000000004220f7 : sal bh, 1 ; ret 0xff80
0x0000000000421fb7 : sal bh, 1 ; ret 0xffc0
0x0000000000421e77 : sal bh, 1 ; ret 0xffe0
0x0000000000421d37 : sal bh, 1 ; ret 0xfff0
0x0000000000421bf7 : sal bh, 1 ; ret 0xfff8
0x0000000000421ab7 : sal bh, 1 ; ret 0xfffc
0x0000000000421977 : sal bh, 1 ; ret 0xfffe
0x000000000045a5e4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004c1690 : sal bl, 1 ; cmc ; call qword ptr [rdx]
0x000000000046704f : sal bl, 1 ; ret
0x00000000004a3e48 : sal byte ptr [rax], 1 ; stc ; call rax
0x00000000004736b2 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426238 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e2b3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e298 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458e1e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000451da7 : sal byte ptr [rbp + 6], 0xe9 ; xchg eax, ecx ; retf 0xfffb
0x00000000004429e1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000413614 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004429f1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004166e5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043dbf0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000414d90 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e72b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dbc3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000004741af : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000046708b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047e50d : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041d707 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x00000000004a3e50 : sal byte ptr [rcx + rdi*8], 1 ; call rax
0x0000000000423b6c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004731f7 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf 0x894c
0x00000000004429c6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440ed2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004a3ec4 : sal byte ptr [rdi - 7], 1 ; push rax ; ja 0x4a3ecb ; call qword ptr [rax]
0x00000000004658db : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004764ad : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4764d2
0x0000000000423a23 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a3e4c : sal byte ptr [rdx], 1 ; stc ; call rax
0x00000000004a3e88 : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3e8c : sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3e54 : sal byte ptr [rsi], 1 ; stc ; call rax
0x000000000046d7e1 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040daf9 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b291 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000478e2f : sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x0000000000474047 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x0000000000415708 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c1221 : sal ebp, 1 ; call rdx
0x0000000000432bd5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000474571 : sar al, 0xff ; xor eax, eax ; ret
0x0000000000485c9a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000048405c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000004846a3 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d793 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000004714a1 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a8ec : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449f41 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3ee4 : sar byte ptr [rax - 7], 1 ; push rax ; js 0x4a3eeb ; call qword ptr [rax]
0x00000000004a3e58 : sar byte ptr [rax], 1 ; stc ; call rax
0x00000000004a3e60 : sar byte ptr [rcx + rdi*8], 1 ; call rax
0x000000000044dcb9 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44dccd ; call rax
0x000000000044438d : sar byte ptr [rcx], cl ; ret
0x00000000004750b2 : sar byte ptr [rdi + 0x4b61fc], 0xe8 ; ret
0x000000000047513c : sar byte ptr [rdi + 0x4bc858], 0x83 ; ret
0x00000000004a363c : sar byte ptr [rdi - 0x42fe0008], 1 ; clc ; call rax
0x00000000004c4860 : sar byte ptr [rdi - 7], 1 ; call rdx
0x000000000046bda9 : sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000478ac0 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x00000000004a3e5c : sar byte ptr [rdx], 1 ; stc ; call rax
0x00000000004413fc : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047ca9c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b96ff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a3648 : sar byte ptr [rsi - 0x404f0008], 0xf8 ; call rsi
0x00000000004a3e64 : sar byte ptr [rsi], 1 ; stc ; call rax
0x00000000004421ea : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044217e : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be061 : sar ch, cl ; jmp rsp
0x00000000004134b7 : sar dword ptr [rax + 2], 1 ; syscall
0x00000000004359b3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4359be ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c4e : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a36c9 : sar eax, 0xff ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sar eax, 0xff ; ret 0xfff8
0x00000000004a3751 : sar eax, 0xff ; jo 0x4a3720 ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3709 : sar eax, 0xff ; mov eax, ecx ; clc ; dec dword ptr [rbx] ; ret 0xfff8
0x00000000004a368d : sar eax, 0xff ; ret 0xfff8
0x0000000000464d6c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000047cecb : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a38d1 : sar eax, cl ; call qword ptr [rax - 0x1f00072c]
0x00000000004420e9 : sar ebp, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000442056 : sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be059 : sar ebp, cl ; inc dword ptr [rbx + rdx*8 - 3] ; jmp rsp
0x00000000004be05d : sar ebp, cl ; jmp rsp
0x00000000004b9463 : sar ecx, 1 ; jnp 0x4b9424 ; ret
0x00000000004263f7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464d6b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004263f6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004c4a98 : sbb ah, ah ; stc ; jmp rax
0x00000000004c0225 : sbb al, 0 ; add al, bl ; push rsp ; cmc ; call qword ptr [rcx]
0x00000000004400f1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c10f0 : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; sub eax, dword ptr [rax] ; add al, cl ; retf
0x000000000049451a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494473 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c377c : sbb al, 0x52 ; add byte ptr [rax], al ; adc byte ptr [rax - 8], bh ; call qword ptr [rcx]
0x0000000000444378 : sbb al, 0x5c ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000418dd3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467d5e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000463373 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004ba762 : sbb al, 0x8c ; retf
0x0000000000470c89 : sbb al, 0xb8 ; retf 0
0x000000000049cbc6 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a38e0 : sbb al, 0xf8 ; call rax
0x00000000004a3a11 : sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004a3955 : sbb al, 0xf9 ; jmp rax
0x000000000047c0c0 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004c2c99 : sbb al, bh ; call qword ptr [rax]
0x00000000004c0055 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x4e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000004946fa : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460d15 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004946f9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a570 : sbb al, ch ; retf 0xc3
0x00000000004a3850 : sbb bh, 0xf8 ; inc dword ptr [rax - 0x1f] ; clc ; jmp qword ptr [rax]
0x00000000004a3ae5 : sbb bh, cl ; call rsp
0x00000000004a3ae1 : sbb bh, cl ; inc dword ptr [rdx + rbx - 7] ; call rsp
0x00000000004a3965 : sbb bh, cl ; jmp qword ptr [rax]
0x00000000004c72c1 : sbb bl, bh ; call qword ptr [rax]
0x00000000004b94f2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b81e5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000478724 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049eeab : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041098a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047af46 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004718eb : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000478725 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417353 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048de08 : sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000410c46 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043ebea : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448281 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000410613 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000041836b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x000000000040999e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c77
0x000000000040920d : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c78
0x000000000040d81a : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf 0xfffb
0x0000000000414df1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490b56 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416662 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000049125e : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000416687 : sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x00000000004106e1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041e087 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412763 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049eeac : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c8ee : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449624 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c8ed : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000047887b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004156af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043f471 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004948da : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000465095 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444b69 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416f03 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cd31 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410da9 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416727 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004a3b58 : sbb byte ptr [rbx], 0xf9 ; call qword ptr [rax]
0x0000000000418ff2 : sbb byte ptr [rbx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044ff11 : sbb byte ptr [rcx + 0x29], cl ; retf
0x0000000000464bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000471809 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b7c9 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000465173 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041cc83 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410c83 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041098b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000041aeb3 : sbb byte ptr [rcx], ch ; add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004651c7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047af47 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004980ed : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000404104 : sbb byte ptr [rdi], cl ; retf
0x000000000041e7a2 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004a3940 : sbb byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x0000000000412e15 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004236ed : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a18d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004232dd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422de9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004235f9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bdda : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b5fa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b9ea : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b20a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aced : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a4cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042306d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429cad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004233ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004236c9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b3a9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423799 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a80d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429fed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004297cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a9ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042354d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042313d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b89a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c1ca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042361d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422e0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429b0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422eaf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042320d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429c43 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a943 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a463 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b79b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c0cb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042347d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ac83 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f83 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429aa3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7a3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b8eb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b10b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ed3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041892f : sbb cl, ch ; retf
0x00000000004c57e9 : sbb dl, bh ; jmp qword ptr [rax]
0x0000000000476c7f : sbb dl, dh ; jmp r11
0x0000000000494818 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cd9c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x00000000004947a1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494819 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442954 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000049281e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000453568 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004baa9d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004551c6 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d8c7 : sbb eax, -1 ; ret
0x0000000000442bb5 : sbb eax, 0 ; leave ; ret
0x00000000004a3a0d : sbb eax, 0x1c92fff9 ; stc ; jmp qword ptr [rdx]
0x00000000004a3b45 : sbb eax, 0x1d40fff9 ; stc ; call rax
0x00000000004a3ac5 : sbb eax, 0x1d54fff9 ; stc ; jmp rsp
0x00000000004a3985 : sbb eax, 0x1d86fff9 ; stc ; call qword ptr [rsi]
0x000000000049ee30 : sbb eax, 0x22d74b ; jne 0x49ee20 ; pop rbx ; ret
0x00000000004b94f3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000049437d : sbb eax, 0x894d0000 ; retf
0x00000000004945c1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494639 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004925ce : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000478b8a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049cb71 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d8c5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004ba608 : sbb ebp, ebx ; retf
0x000000000047b8f9 : sbb ebx, 0x89000001 ; ret
0x000000000045c650 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000047ffe2 : sbb ecx, dword ptr [rbx + rcx*4 + 5] ; retf 0x24
0x0000000000446cc7 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3931 : sbb ecx, edi ; call rax
0x00000000004ba399 : sbb edi, ebp ; retf
0x00000000004a3961 : sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x00000000004a3b59 : sbb edi, ecx ; call qword ptr [rax]
0x00000000004a3a1d : sbb edi, ecx ; call rdx
0x00000000004a3a19 : sbb edi, ecx ; inc dword ptr [rdx + 0x1b] ; stc ; call rdx
0x00000000004a399d : sbb edi, ecx ; jmp rsi
0x00000000004a3ae4 : sbb r15b, cl ; call rsp
0x00000000004a3930 : sbb rcx, r15 ; call rax
0x0000000000496a5f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049675f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049765f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047adea : scasb al, byte ptr [rdi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x00000000004c9385 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; or byte ptr [rax - 3], dl ; jmp qword ptr [rbx]
0x0000000000425d0d : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049795f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042be2e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000049705f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004baa49 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000496d5f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000004bdf1d : scasb al, byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x000000000042bf2d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004257ad : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000401384 : scasd eax, dword ptr [rdi] ; ret
0x000000000041082c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e40a : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420e98 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004014a3 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e3f5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044fbd0 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048858d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467f53 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488591 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x00000000004b9774 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b89ef : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004429cc : setae al ; ret
0x0000000000416b8c : setne al ; neg eax ; ret
0x0000000000444390 : setne dl ; jmp 0x444378
0x0000000000465fb5 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a35fc : shl byte ptr [rax - 0x5e0f0008], 1 ; clc ; call qword ptr [rax]
0x00000000004a3e30 : shl byte ptr [rcx + rdi*8], 1 ; call rax
0x0000000000497ead : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c59c0 : shl byte ptr [rcx], 0xfa ; jmp rdi
0x00000000004a0074 : shl byte ptr [rdx], cl ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x000000000043db0f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042176b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043beb3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004216e5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fccb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fce2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465b56 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465b67 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fbc1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3e34 : shl byte ptr [rsi], 1 ; stc ; call rax
0x00000000004af450 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b92fd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b95e8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000043daf2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042176f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000465b52 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043d96b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042fc46 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fcfd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fce6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fccf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e78b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fc61 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042605c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042fb21 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444441 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044443e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004790ec : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479077 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000479046 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042ca71 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004764b1 : shl edx, 5 ; add rdx, rax ; jmp 0x4764ce
0x00000000004790eb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479076 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000479045 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004764b0 : shl rdx, 5 ; add rdx, rax ; jmp 0x4764cf
0x00000000004764af : shl rdx, 5 ; add rdx, rax ; jmp 0x4764d0
0x00000000004b8ba4 : shr al, cl ; add al, 0x3d ; retf
0x00000000004a37c8 : shr bl, 1 ; clc ; call rax
0x000000000046aaaf : shr bl, cl ; ret
0x0000000000445e7d : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x000000000043e016 : shr byte ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004a3e38 : shr byte ptr [rax], 1 ; stc ; call rax
0x00000000004a3e40 : shr byte ptr [rcx + rdi*8], 1 ; call rax
0x00000000004a361c : shr byte ptr [rcx - 0x550f0008], 1 ; clc ; call qword ptr [rax]
0x000000000041adb5 : shr byte ptr [rcx], 0x4a ; add byte ptr [rax + 2], bh ; syscall
0x000000000042e72f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000467596 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x000000000044ca38 : shr byte ptr [rcx], cl ; ret
0x00000000004683f0 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004263fb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004ba9a7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004a3e3c : shr byte ptr [rdx], 1 ; stc ; call rax
0x00000000004a3e44 : shr byte ptr [rsi], 1 ; stc ; call rax
0x00000000004a37c4 : shr cl, 1 ; clc ; call rax
0x000000000045ee47 : shr cl, cl ; ret
0x00000000004c6da0 : shr dh, 0xfa ; jmp qword ptr [rdx]
0x000000000049e27a : shr dl, cl ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000426e89 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e61a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e5f9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004791fc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479181 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000479150 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e73 : shr edx, 2 ; sub eax, edx ; ret
0x00000000004791fb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479180 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000047914f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e72 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae629 : sldt word ptr [rax] ; ret
0x0000000000445f0c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a932 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a3962 : stc ; call qword ptr [rax + 0x20fff91a]
0x00000000004a3b3a : stc ; call qword ptr [rax + 0x20fff91e]
0x00000000004a3942 : stc ; call qword ptr [rax]
0x00000000004a3a0e : stc ; call qword ptr [rdx + 0x22fff91c]
0x00000000004a398a : stc ; call qword ptr [rsi]
0x00000000004a3932 : stc ; call rax
0x0000000000467189 : stc ; call rbx
0x00000000004c4762 : stc ; call rdi
0x00000000004a3a1e : stc ; call rdx
0x00000000004a397a : stc ; call rsi
0x00000000004a3ae6 : stc ; call rsp
0x000000000047ac32 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487b57 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485e0a : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3b46 : stc ; inc dword ptr [rax + 0x1d] ; stc ; call rax
0x00000000004a3e26 : stc ; inc dword ptr [rax + 0xfff906] ; or cl, bh ; call rax
0x00000000004a3ba6 : stc ; inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x00000000004a3e96 : stc ; inc dword ptr [rax] ; ja 0x4a3e99 ; call qword ptr [rax]
0x00000000004a3f62 : stc ; inc dword ptr [rax] ; jg 0x4a3f65 ; jmp qword ptr [rax]
0x00000000004a3f1e : stc ; inc dword ptr [rax] ; jge 0x4a3f21 ; jmp qword ptr [rax]
0x00000000004a3eee : stc ; inc dword ptr [rax] ; jl 0x4a3ef1 ; call qword ptr [rax]
0x00000000004a3f42 : stc ; inc dword ptr [rax] ; jle 0x4a3f45 ; jmp qword ptr [rax]
0x00000000004a3e2a : stc ; inc dword ptr [rax] ; or cl, bh ; call rax
0x00000000004a395e : stc ; inc dword ptr [rax] ; sbb edi, ecx ; call qword ptr [rax + 0x20fff91a]
0x00000000004a3a1a : stc ; inc dword ptr [rdx + 0x1b] ; stc ; call rdx
0x00000000004a3c2a : stc ; inc dword ptr [rdx + 0xf] ; stc ; call rdx
0x00000000004a3ae2 : stc ; inc dword ptr [rdx + rbx - 7] ; call rsp
0x00000000004a3a0a : stc ; inc dword ptr [rdx] ; sbb eax, 0x1c92fff9 ; stc ; jmp qword ptr [rdx]
0x00000000004a3976 : stc ; inc dword ptr [rsi + 0x1f] ; stc ; call rsi
0x00000000004a3e86 : stc ; inc eax ; jbe 0x4a3e89 ; call rax
0x00000000004a3f3a : stc ; inc eax ; jge 0x4a3f3d ; jmp rax
0x00000000004a3f16 : stc ; inc eax ; jl 0x4a3f19 ; jmp rax
0x00000000004a3f5a : stc ; inc eax ; jle 0x4a3f5d ; jmp rax
0x00000000004a3ac2 : stc ; inc esp ; sbb eax, 0x1d54fff9 ; stc ; jmp rsp
0x000000000042aee2 : stc ; je 0x42aeae ; lea r10, [r10 + r9] ; jmp r10
0x00000000004962a2 : stc ; je 0x49626e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a3d66 : stc ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3b9a : stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3b92 : stc ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3b8a : stc ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3b82 : stc ; jmp qword ptr [rax + 0x20fff914]
0x00000000004a3b7a : stc ; jmp qword ptr [rax + 0x20fff915]
0x00000000004a3966 : stc ; jmp qword ptr [rax]
0x00000000004a3a12 : stc ; jmp qword ptr [rdx]
0x00000000004a3956 : stc ; jmp rax
0x00000000004a3a02 : stc ; jmp rdx
0x00000000004a399e : stc ; jmp rsi
0x00000000004a3aca : stc ; jmp rsp
0x00000000004b9464 : stc ; jnp 0x4b9423 ; ret
0x0000000000432588 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d957 : stc ; mov r15, rax ; jmp 0x46d925
0x000000000047409b : stc ; nop ; and eax, 0xd8b4c00 ; retf 0x258c
0x00000000004a3baa : stc ; push qword ptr [rax + 0xf] ; stc ; jmp rsi
0x00000000004a3e82 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3e8d ; call rax
0x00000000004a3d62 : stc ; push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3a16 : stc ; push qword ptr [rdx + 0x42fff91b] ; sbb edi, ecx ; call rdx
0x00000000004a3ade : stc ; push qword ptr [rdx + rbx + 0x1a44fff9] ; stc ; call rsp
0x00000000004a3ec6 : stc ; push rax ; ja 0x4a3ec9 ; call qword ptr [rax]
0x00000000004a3e92 : stc ; push rax ; jbe 0x4a3e99 ; inc dword ptr [rax] ; ja 0x4a3e9d ; call qword ptr [rax]
0x00000000004a3ee6 : stc ; push rax ; js 0x4a3ee9 ; call qword ptr [rax]
0x00000000004a3982 : stc ; push rsi ; sbb eax, 0x1d86fff9 ; stc ; call qword ptr [rsi]
0x000000000046b665 : stc ; push rsp ; add r8b, bpl ; ret 0xf94c
0x000000000040dc15 : stc ; syscall
0x0000000000435eb4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000426891 : std ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000041d2b2 : std ; add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x00000000004bdebe : std ; call qword ptr [rax - 0x1f0002c1]
0x00000000004be02e : std ; call qword ptr [rax - 0x35]
0x00000000004bde66 : std ; call qword ptr [rax]
0x00000000004c3ec2 : std ; call qword ptr [rbx]
0x00000000004be42e : std ; call qword ptr [rcx]
0x00000000004bde4e : std ; call rax
0x00000000004c71d2 : std ; call rcx
0x00000000004c8bba : std ; call rsp
0x00000000004be44e : std ; dec dword ptr [rax + rbx*8 - 3] ; jmp rsp
0x00000000004403bc : std ; dec dword ptr [rax - 0x75] ; jge 0x4403c8 ; call rbx
0x000000000044066f : std ; dec dword ptr [rax - 0x75] ; jge 0x44067b ; call rbx
0x0000000000442207 : std ; dec dword ptr [rax - 0x75] ; jge 0x442213 ; call rbx
0x000000000043f8d1 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bdf3e : std ; dec dword ptr [rax] ; ret 0xfffd
0x000000000044027a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044067d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440287 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440293 ; call rbx
0x00000000004403ae : std ; dec dword ptr [rcx - 0x75] ; jge 0x4403ba ; call rbx
0x00000000004404f1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4404fd ; call rbx
0x0000000000440661 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44066d ; call rbx
0x0000000000441e7f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441e8b ; call rbx
0x0000000000441fa7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441fb3 ; call rbx
0x00000000004420ea : std ; dec dword ptr [rcx - 0x75] ; jge 0x4420f6 ; call rbx
0x00000000004421eb : std ; dec dword ptr [rcx - 0x75] ; jge 0x4421f7 ; call rbx
0x00000000004bdfc6 : std ; dec ebx ; retf
0x00000000004404ef : std ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4404ff ; call rbx
0x00000000004bde42 : std ; inc dword ptr [rax + 0x68] ; std ; jmp qword ptr [rax]
0x00000000004bdf3a : std ; inc dword ptr [rax + 0x8fffd9d] ; ret 0xfffd
0x00000000004bdf4a : std ; inc dword ptr [rax + 0x8fffdc2] ; ret 0xfffd
0x00000000004bdeca : std ; inc dword ptr [rax - 0x2f0002ba] ; std ; jmp qword ptr [rax]
0x00000000004736af : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004be05a : std ; inc dword ptr [rbx + rdx*8 - 3] ; jmp rsp
0x00000000004bdeda : std ; inc eax ; std ; call qword ptr [rax]
0x000000000047835e : std ; jbe 0x47836b ; ret
0x00000000004bdf26 : std ; jmp qword ptr [rax - 0x1f00024b]
0x00000000004bdf16 : std ; jmp qword ptr [rax - 0x1f000254]
0x00000000004bdf06 : std ; jmp qword ptr [rax - 0x1f00025d]
0x00000000004bde46 : std ; jmp qword ptr [rax]
0x00000000004c938a : std ; jmp qword ptr [rbx]
0x00000000004c30aa : std ; jmp qword ptr [rdx]
0x00000000004bdec2 : std ; jmp rax
0x00000000004be032 : std ; jmp rsp
0x00000000004bdfbe : std ; ljmp [rbx] ; retf 0xfffd
0x00000000004bdfc2 : std ; ljmp [rdi - 0x36] ; std ; dec ebx ; retf
0x000000000046a996 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000041356c : std ; mov eax, 3 ; syscall
0x000000000047d748 : std ; mov r15, rax ; jmp 0x47d762
0x000000000043f86f : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x0000000000431dab : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bded6 : std ; push qword ptr [rax + 0x4d] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bde62 : std ; push qword ptr [rax] ; ja 0x4bde69 ; call qword ptr [rax]
0x00000000004bdeba : std ; push qword ptr [rax] ; test ch, bh ; call qword ptr [rax - 0x1f0002c1]
0x00000000004bde6a : std ; push rax ; jp 0x4bde71 ; call rax
0x00000000004ba39a : std ; retf
0x0000000000458c01 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440ed0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000048926b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c72c2 : sti ; call qword ptr [rax]
0x00000000004c751a : sti ; call rsp
0x000000000046bef7 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474914 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000466605 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000463e9d : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004bef51 : sti ; hlt ; call qword ptr [rbx]
0x000000000044e596 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004587ce : sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x00000000004c70ba : sti ; jmp qword ptr [rdx]
0x00000000004c6f4a : sti ; jmp rsi
0x0000000000432188 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043f7d3 : sti ; mov eax, 0x48 ; syscall
0x000000000046a711 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044cccb : sti ; mov eax, 3 ; syscall
0x00000000004b95ea : sti ; ret
0x000000000048efa6 : sti ; ret 0xffbf
0x000000000046e5b1 : sti ; retf
0x000000000044f137 : sti ; test rax, rax ; je 0x44f145 ; call rax
0x0000000000440120 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000443563 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004887b2 : stosb byte ptr [rdi], al ; and al, 0 ; ret
0x00000000004a3621 : stosb byte ptr [rdi], al ; clc ; call qword ptr [rax]
0x00000000004b9ac4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004119b2 : stosb byte ptr [rdi], al ; ret 0xffff
0x00000000004091c2 : stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004bdf15 : stosb byte ptr [rdi], al ; std ; jmp qword ptr [rax - 0x1f000254]
0x00000000004685d8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x000000000046a08a : stosb byte ptr [rdi], al ; sub byte ptr [rsi], ah ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004685d9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004a371c : stosd dword ptr [rdi], eax ; ret
0x00000000004baaca : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x000000000046bef6 : stosd dword ptr [rdi], eax ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004685d7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bafb1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040156e : sub al, 0 ; xor eax, eax ; ret
0x00000000004c168c : sub al, 0x31 ; add byte ptr [rax], al ; sal bl, 1 ; cmc ; call qword ptr [rdx]
0x0000000000442d9a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042f313 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3e41 : sub al, 0xf9 ; call rax
0x00000000004c6a68 : sub al, bl ; cli ; jmp rdi
0x000000000041dddd : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f429 : sub al, byte ptr [rax] ; mov al, 0xcc ; add r9b, bpl ; retf 0xfffd
0x000000000041f203 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f213 ; call rax
0x0000000000480fd1 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045ffa3 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045fa4a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000046406c : sub bh, bh ; loopne 0x464009 ; mov eax, 0xffffffff ; ret
0x00000000004c7519 : sub bh, bl ; call rsp
0x00000000004a3e3d : sub bh, cl ; call rax
0x000000000049e281 : sub bl, dh ; ret
0x000000000049e280 : sub bl, r14b ; ret
0x000000000049e336 : sub byte ptr [r11 - 0x17], bl ; ret 0xb61c
0x000000000041098e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046ddcc : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046cbb6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045d480 : sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000483db7 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041098f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466ca0 : sub byte ptr [rax - 0x73], cl ; je 0x466ccf ; call rbx
0x000000000041c7cb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041ecc4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040562f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004106e5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462f3c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042583d : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d499 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048232c : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044291d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478811 : sub byte ptr [rax], al ; jne 0x478828 ; add rsp, 0x38 ; ret
0x000000000044437a : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004458a5 : sub byte ptr [rax], al ; ret
0x0000000000444354 : sub byte ptr [rax], al ; test eax, eax ; je 0x444366 ; ret
0x000000000043ff95 : sub byte ptr [rax], al ; test rax, rax ; je 0x43ffa6 ; ret
0x000000000040db7a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414a70 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000049e337 : sub byte ptr [rbx - 0x17], bl ; ret 0xb61c
0x0000000000444333 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444332 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bf72a : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x000000000044d1ea : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000049b071 : sub byte ptr [rcx - 0x77], cl ; xchg dword ptr [rax - 0x17000000], esp ; retf
0x0000000000488144 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041eddc : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b1ab : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000046a08b : sub byte ptr [rsi], ah ; add byte ptr [rax + 0x39], cl ; retf
0x000000000046a080 : sub byte ptr [rsi], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047bc6d : sub cl, al ; call 0xffffffff8a09e598
0x000000000047c5c4 : sub cl, al ; call 0xffffffff8a09eeef
0x00000000004a3e39 : sub cl, bh ; call rax
0x0000000000471d8e : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000004685da : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414255 : sub cl, ch ; ret 0xfffe
0x000000000047701a : sub dl, dh ; call r11
0x00000000004b996d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000415b6b : sub dword ptr [rax + 0x39], ecx ; retf
0x000000000046ddd9 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x00000000004c0edd : sub dword ptr [rax], eax ; add byte ptr [rax - 0x46], dh ; cmc ; call qword ptr [rax]
0x00000000004ba602 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004303d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4303ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43053d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430677 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43068d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004307c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4307dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430917 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43092d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430bcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430e6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430fbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43110d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43125d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4313ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4314fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43164d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430333 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043032f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004303dd : sub dword ptr [rdi], esp ; jmp r9
0x000000000041adb6 : sub dword ptr [rdx], ecx ; mov eax, 2 ; syscall
0x000000000042faf6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004baeba : sub dword ptr [rsi], 0x76 ; retf
0x000000000046a00f : sub dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x000000000046a00e : sub dword ptr es:[rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041edb9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000454c72 : sub eax, 0x26e8004b ; retf
0x000000000041160e : sub eax, 0x29480005 ; ret
0x0000000000454c59 : sub eax, 0x3fe8004b ; retf
0x000000000041cc52 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000454c40 : sub eax, 0x58e8004b ; retf
0x0000000000454c27 : sub eax, 0x71e8004b ; retf
0x000000000045d551 : sub eax, 0x83000000 ; ret
0x0000000000469b3e : sub eax, 0x8d4a0026 ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b57
0x0000000000469b9c : sub eax, 0x950f0026 ; ret 0xf748
0x00000000004554cc : sub eax, 0xcce8004b ; ret 0xfffa
0x0000000000454cbd : sub eax, 0xdbe8004b ; retf 0xfffa
0x0000000000454c8b : sub eax, 0xde8004b ; retf
0x00000000004b8606 : sub eax, 0xea4ca798 ; retf
0x0000000000454ca4 : sub eax, 0xf4e8004b ; retf 0xfffa
0x00000000004554a2 : sub eax, 0xf6e8004b ; ret 0xfffa
0x000000000043ee6c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d654 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043dd44 : sub eax, 1 ; ret
0x00000000004785b6 : sub eax, dword ptr [0] ; ret
0x00000000004c10f5 : sub eax, dword ptr [rax] ; add al, cl ; retf
0x0000000000416b19 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c10d5 : sub eax, dword ptr [rax] ; add byte ptr [rax], bh ; retf
0x0000000000416aa6 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5af5], 1 ; ret
0x0000000000416ad2 : sub eax, dword ptr [rax] ; jne 0x416ae8 ; jmp 0x416b02
0x0000000000416a15 : sub eax, dword ptr [rax] ; ret
0x0000000000417fe2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ff2 ; call rax
0x000000000040183f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049a0d1 : sub eax, dword ptr [rcx + r8*4] ; je 0x49a0b7 ; ret
0x000000000049a0d2 : sub eax, dword ptr [rcx + rax*4] ; je 0x49a0b6 ; ret
0x000000000041724e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e76a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e756 ; ret
0x0000000000416703 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416a14 : sub eax, dword ptr ss:[rax] ; ret
0x00000000004153bd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466cdb : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415e39 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000047a7ad : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000422b5c : sub eax, ecx ; ret
0x0000000000423c29 : sub eax, edi ; ret
0x0000000000412dbe : sub eax, edx ; ret
0x000000000043def7 : sub eax, edx ; vzeroupper ; ret
0x000000000041551e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412c18 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b985e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b82f5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479795 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044443c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004bdfc0 : sub ecx, edx ; std ; ljmp [rdi - 0x36] ; std ; dec ebx ; retf
0x0000000000442961 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416730 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416725 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426284 : sub edx, eax ; jbe 0x4262c7 ; add rax, rdi ; ret
0x0000000000426294 : sub edx, eax ; jbe 0x4262c9 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000004262a4 : sub edx, eax ; jbe 0x4262c9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004262b4 : sub edx, eax ; jbe 0x4262c9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000004422f1 : sub edx, esi ; mov eax, r12d ; syscall
0x00000000004107c2 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004123d4 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000474864 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046aea2 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415f64 : sub esp, 0x80 ; call 0x4429d8
0x000000000046a5db : sub esp, 0x98 ; syscall
0x00000000004a1231 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046abc6 : sub esp, 8 ; syscall
0x0000000000407bc1 : sub esp, dword ptr [rsi + 1] ; add cl, ch ; retf
0x0000000000415e38 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000417fe1 : sub r8d, dword ptr [r8] ; test rax, rax ; je 0x417ff3 ; call rax
0x000000000043dd43 : sub rax, 1 ; ret
0x00000000004785b5 : sub rax, qword ptr [0] ; ret
0x000000000041724d : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004785b4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466cda : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423c28 : sub rax, rdi ; ret
0x0000000000412dbd : sub rax, rdx ; ret
0x000000000043def6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426283 : sub rdx, rax ; jbe 0x4262c8 ; add rax, rdi ; ret
0x00000000004422f0 : sub rdx, rsi ; mov eax, r12d ; syscall
0x00000000004107c1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004123d3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046aea1 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415f63 : sub rsp, 0x80 ; call 0x4429d9
0x000000000046a5da : sub rsp, 0x98 ; syscall
0x00000000004a1230 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046abc5 : sub rsp, 8 ; syscall
0x00000000004003da : syscall
0x0000000000443a2f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046d9e7 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494e68 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495d68 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494c88 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495b88 : test ah, dl ; add eax, 0x894d0000 ; retf
0x00000000004c8dd5 : test al, 0 ; add byte ptr [rax + 0x3a], cl ; std ; call rcx
0x0000000000415839 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a2c3 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c593 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000041d856 : test al, 0x6c ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x000000000041d2b4 : test al, 0x6c ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x000000000041dcad : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x00000000004b8bb7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b859e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047ddbd : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000442567 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004bc730 : test al, 0xc2 ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x0000000000442629 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a3619 : test al, 0xf8 ; call rax
0x000000000043f6e6 : test al, 2 ; cmove eax, edx ; ret
0x0000000000410903 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004933ac : test al, ah ; or eax, 0x894d0000 ; retf
0x0000000000497eac : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e72a : test al, al ; jne 0x42e718 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004987ac : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004925cc : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a350d : test al, bh ; call qword ptr [rax - 0x1f00077b]
0x000000000041a860 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a350c : test al, dil ; call qword ptr [rax - 0x1f00077b]
0x0000000000492cbc : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004214e6 : test ax, 1 ; ret
0x0000000000484459 : test bh, bl ; retf 0xffff
0x00000000004bb4c4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044680e : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000419304 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x00000000004b9971 : test bh, dl ; retf 0xdf7f
0x000000000046b2e3 : test bl, bl ; je 0x46b2d6 ; ret
0x000000000045be83 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004752d5 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043f6a8 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000451fa6 : test byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000047c6d3 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004be9e4 : test byte ptr [rax + rax], al ; add byte ptr [rax], bh ; add edi, esi ; call rdi
0x00000000004948d8 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000047bca9 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004672fe : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004423be : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000440791 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440ed4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004752d6 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fdd1 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498e6c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043c08a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043b4ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000416a3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041200a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442f18 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004169fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e5ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043beca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049976c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049856c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046638c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000444e38 : test byte ptr [rax], bh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000049315c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041941b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004663a4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047aad6 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000495408 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449526 : test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x0000000000417716 : test byte ptr [rbp - 0xa000000], ah ; ret
0x00000000004c62e4 : test byte ptr [rbp], bh ; add byte ptr [rax], cl ; jle 0x4c62ec ; call rax
0x000000000047aeca : test byte ptr [rbx + 0x251af33d], 0 ; jmp rax
0x00000000004955e8 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e2f7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x000000000044960c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041793e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000004957c8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x0000000000450202 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049cb02 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000467183 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000457c6a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000440122 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047eabd : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x000000000047e75d : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000422ed6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7c4d : test byte ptr [rcx], al ; ret
0x00000000004959a8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000004181a7 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fcbe : test byte ptr [rdi], 0x84 ; ret
0x000000000044059a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047186e : test byte ptr [rdi], 0x85 ; ret
0x000000000045e21d : test byte ptr [rdi], 0x88 ; retf
0x000000000047bd87 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486d2d : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465fcc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465fb4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000411704 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004946f8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004685e1 : test byte ptr [rdx], dl ; dec al ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004739ce : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046586d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048b319 : test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x0000000000494aa8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405a75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000423b0d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004968de : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004965de : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x00000000004977de : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496ede : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004971de : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044e77d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494518 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e5e2 : test ch, 0xf0 ; je 0x43e5db ; movzx eax, cl ; pop rbx ; ret
0x000000000044f296 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x00000000004bdebd : test ch, bh ; call qword ptr [rax - 0x1f0002c1]
0x000000000041dfef : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049437b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000445f0b : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a931 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000423f76 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424276 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425176 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424e76 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000424b76 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424876 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d9cf : test cl, cl ; jne 0x43d9c4 ; ret
0x000000000043da7f : test cl, cl ; jne 0x43da74 ; ret
0x000000000043dd3f : test cl, cl ; jne 0x43dd38 ; sub rax, 1 ; ret
0x0000000000420966 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043e60a : test dh, 0xf0 ; je 0x43e5d9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e60a : test dh, 0xf0 ; je 0x43e5db ; movzx eax, dl ; pop rbx ; ret
0x00000000004689bd : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446d85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044de16 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043bf14 : test dl, 0x40 ; jne 0x43bed9 ; lea rax, [rdi + 7] ; ret
0x000000000043bf42 : test dl, 4 ; jne 0x43bed9 ; lea rax, [rdi + 3] ; ret
0x000000000041a8b5 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041d319 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040dbc2 : test dl, dl ; jne 0x40dba4 ; ret
0x000000000043dbef : test dl, dl ; jne 0x43dbe8 ; lea rax, [rcx - 1] ; ret
0x0000000000426e49 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460d3b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047de84 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045c8c9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c6a65 : test dword ptr [rax], eax ; add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x00000000004c6b5d : test dword ptr [rax], eax ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x000000000049b30b : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b30a : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c7bf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f5f7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fa46 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ecf9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418540 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451edb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004261fa : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426b60 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000004102b6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f5cd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f4dd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3ed : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004504ce : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041b61a : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dd6a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426d4a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f970 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cf73 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044a0ee : test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000045b4bc : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c5d5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041fa94 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f312 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044680f : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440f3d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d752 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c8be : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f818 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b9a4d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba8a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432f86 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004a361d : test eax, 0xaaf0fff8 ; clc ; call qword ptr [rax]
0x00000000004428cb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be560 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402cf2 : test eax, eax ; je 0x402d06 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f41 : test eax, eax ; je 0x402f5f ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403135 : test eax, eax ; je 0x403153 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403550 : test eax, eax ; je 0x403564 ; mov edi, 0x6cc0a0 ; call rax
0x0000000000403698 : test eax, eax ; je 0x4036ac ; mov edi, 0x6cc0a0 ; call rax
0x0000000000417f08 : test eax, eax ; je 0x417f13 ; pop rbx ; ret
0x0000000000417fe5 : test eax, eax ; je 0x417fef ; call rax
0x000000000041f206 : test eax, eax ; je 0x41f210 ; call rax
0x00000000004238e3 : test eax, eax ; je 0x4238ef ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e856 : test eax, eax ; je 0x43e86a ; mov edi, 0x6cc720 ; call rax
0x000000000043e86e : test eax, eax ; je 0x43e882 ; mov edi, 0x6cc720 ; call rax
0x000000000043ff98 : test eax, eax ; je 0x43ffa3 ; ret
0x00000000004441cf : test eax, eax ; je 0x4441e3 ; mov edi, 0x6cb140 ; call rax
0x0000000000444356 : test eax, eax ; je 0x444364 ; ret
0x000000000044db8e : test eax, eax ; je 0x44dba2 ; mov edi, 0x6cc720 ; call rax
0x000000000044dbbd : test eax, eax ; je 0x44dbd9 ; mov edi, 0x6cc720 ; call rax
0x000000000044dcbe : test eax, eax ; je 0x44dcc8 ; call rax
0x000000000044dd1d : test eax, eax ; je 0x44dd31 ; mov edi, 0x6cc720 ; call rax
0x000000000044de96 : test eax, eax ; je 0x44deb1 ; mov edi, 0x6cc720 ; call rax
0x000000000044e176 : test eax, eax ; je 0x44e18a ; mov edi, 0x6cc720 ; call rax
0x000000000044e27a : test eax, eax ; je 0x44e284 ; call rax
0x000000000044f139 : test eax, eax ; je 0x44f143 ; call rax
0x0000000000470ed2 : test eax, eax ; je 0x470ee6 ; mov edi, 0x6cb100 ; call rax
0x0000000000474ec6 : test eax, eax ; je 0x474eda ; mov edi, 0x6cb140 ; call rax
0x0000000000474eee : test eax, eax ; je 0x474f02 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f64 : test eax, eax ; je 0x474f78 ; mov edi, 0x6cb140 ; call rax
0x0000000000476a31 : test eax, eax ; je 0x476aa9 ; mov edi, 0x6cb140 ; call rax
0x00000000004783ec : test eax, eax ; je 0x4783bb ; mov edi, 0x6cb140 ; call rax
0x000000000047854a : test eax, eax ; je 0x47855e ; mov edi, 0x6cb140 ; call rax
0x000000000047b290 : test eax, eax ; je 0x47b2a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e966 : test eax, eax ; je 0x47e97a ; mov edi, 0x6cb140 ; call rax
0x000000000047e992 : test eax, eax ; je 0x47e9a6 ; mov edi, 0x6cb140 ; call rax
0x0000000000488110 : test eax, eax ; je 0x488124 ; mov edi, 0x6cb140 ; call rax
0x00000000004881b8 : test eax, eax ; je 0x4881cc ; mov edi, 0x6cb140 ; call rax
0x000000000049eb38 : test eax, eax ; je 0x49eb4c ; mov edi, 0x6cb100 ; call rax
0x000000000049ebf9 : test eax, eax ; je 0x49ec0d ; mov edi, 0x6cb100 ; call rax
0x00000000004a089c : test eax, eax ; je 0x4a08ab ; call rax
0x00000000004166e4 : test eax, eax ; jne 0x4166dd ; ret
0x0000000000426237 : test eax, eax ; jne 0x426297 ; xor rax, rax ; ret
0x00000000004429f0 : test eax, eax ; jne 0x4429eb ; pop rdx ; pop r10 ; ret
0x0000000000451da6 : test eax, eax ; jne 0x451db6 ; jmp 0x40e846
0x00000000004741ae : test eax, eax ; jne 0x474185 ; ret
0x000000000049e297 : test eax, eax ; jne 0x49e2a5 ; ret
0x000000000049e2b2 : test eax, eax ; jne 0x49e2c5 ; ret
0x000000000049e4d2 : test eax, eax ; jne 0x49e4e5 ; ret
0x00000000004714a0 : test eax, eax ; js 0x4714ad ; pop rbx ; ret
0x000000000047a8eb : test eax, eax ; js 0x47a8fd ; ret
0x000000000046b2d2 : test eax, eax ; mov rax, r9 ; jne 0x46b330 ; ret
0x00000000004a3511 : test eax, edi ; jmp rax
0x0000000000426160 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000473922 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000445e7a : test ebx, ebx ; jne 0x445e55 ; jmp 0x445e47
0x000000000047ac0e : test ebx, ebx ; jne 0x47ac28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ecc0 : test ebx, ebx ; mov rdi, rbx ; jne 0x49ecb8 ; pop rbx ; ret
0x000000000041a8bf : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bf02 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000467049 : test ecx, ecx ; jne 0x467008 ; mov rax, rdx ; ret
0x000000000046b321 : test ecx, ecx ; jne 0x46b2d7 ; xor eax, eax ; ret
0x000000000044740c : test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041e7a4 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421490 : test edi, edi ; je 0x4214a9 ; mov eax, 0x16 ; ret
0x000000000042027c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000423ac2 : test edx, edx ; je 0x423ad0 ; bsf eax, edx ; ret
0x0000000000423ac2 : test edx, edx ; je 0x423ad1 ; bsf eax, edx ; ret
0x0000000000423b6b : test edx, edx ; je 0x423b87 ; bsf rax, rdx ; ret
0x0000000000423b6b : test edx, edx ; je 0x423b88 ; bsf rax, rdx ; ret
0x00000000004658da : test edx, edx ; je 0x465907 ; bsf rax, rdx ; ret
0x00000000004658da : test edx, edx ; je 0x465908 ; bsf rax, rdx ; ret
0x0000000000413613 : test edx, edx ; jne 0x413624 ; ret
0x0000000000414d8f : test edx, edx ; jne 0x414d85 ; ret
0x0000000000463bff : test edx, edx ; jne 0x463bf5 ; ret
0x000000000046708a : test edx, edx ; jne 0x467085 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000040edbb : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d323 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bef5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040dbf3 : test esi, esi ; jne 0x40dc31 ; mov eax, 0xba ; syscall
0x00000000004657d1 : test esi, esi ; jne 0x4657e0 ; xor rax, rax ; ret
0x000000000043bf0f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b2e2 : test r11b, r11b ; je 0x46b2d7 ; ret
0x00000000004741ad : test r8, r8 ; jne 0x474186 ; ret
0x00000000004238e2 : test r8d, r8d ; je 0x4238f0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b2d1 : test r8d, r8d ; mov rax, r9 ; jne 0x46b331 ; ret
0x0000000000467048 : test r9d, r9d ; jne 0x467009 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417f07 : test rax, rax ; je 0x417f14 ; pop rbx ; ret
0x0000000000417fe4 : test rax, rax ; je 0x417ff0 ; call rax
0x000000000041f205 : test rax, rax ; je 0x41f211 ; call rax
0x000000000043ff97 : test rax, rax ; je 0x43ffa4 ; ret
0x000000000044dcbd : test rax, rax ; je 0x44dcc9 ; call rax
0x000000000044e279 : test rax, rax ; je 0x44e285 ; call rax
0x000000000044f138 : test rax, rax ; je 0x44f144 ; call rax
0x000000000047b28f : test rax, rax ; je 0x47b2a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a089b : test rax, rax ; je 0x4a08ac ; call rax
0x00000000004166e3 : test rax, rax ; jne 0x4166de ; ret
0x0000000000445e79 : test rbx, rbx ; jne 0x445e56 ; jmp 0x445e48
0x000000000047ac0d : test rbx, rbx ; jne 0x47ac29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ecbf : test rbx, rbx ; mov rdi, rbx ; jne 0x49ecb9 ; pop rbx ; ret
0x0000000000423b6a : test rdx, rdx ; je 0x423b88 ; bsf rax, rdx ; ret
0x0000000000423b6a : test rdx, rdx ; je 0x423b89 ; bsf rax, rdx ; ret
0x00000000004658d9 : test rdx, rdx ; je 0x465908 ; bsf rax, rdx ; ret
0x00000000004658d9 : test rdx, rdx ; je 0x465909 ; bsf rax, rdx ; ret
0x0000000000413612 : test rdx, rdx ; jne 0x413625 ; ret
0x0000000000414d8e : test rdx, rdx ; jne 0x414d86 ; ret
0x0000000000463bfe : test rdx, rdx ; jne 0x463bf6 ; ret
0x00000000004657d0 : test rsi, rsi ; jne 0x4657e1 ; xor rax, rax ; ret
0x0000000000413825 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000435a4a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432d6a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432ca0 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432a69 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043de50 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000432baf : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004329d3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432a36 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043ddfa : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435a36 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435a1d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043dfcb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dfcf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043de65 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043de69 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435d53 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435bec : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004359ee : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004359b2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435eb5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043e188 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043e0eb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043df8a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042aee1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004055d5 : vpsubsb xmm14, xmm15, xmmword ptr [rsp + 0x29480001] ; ret
0x000000000040563d : vpsubsb xmm9, xmm15, xmmword ptr [rsp + 1] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043def9 : vzeroupper ; ret
0x00000000004a38f1 : xbegin 0xfffffffff914b9fc ; call rax
0x00000000004236ef : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a18f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004232df : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422deb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460af9 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004235fb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bddc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b5fc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b9ec : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b20c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497a3d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004425c7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000496541 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000497741 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496e41 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000497141 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496839 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a2b2 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a2c2 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a289 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042acef : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a4cf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042306f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429caf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000004233af : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004236cb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b3ab : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042379b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a80f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429fef : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004297cf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a9af : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042354f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422d3f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049bbec : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042313f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b9775 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000042b89c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0bc : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c1cc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446f32 : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000049b002 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000042361f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422e0f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429b0f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422eb1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004897b0 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x000000000042320f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496ae6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429c45 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a945 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004979e6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004970e6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496de6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a465 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b79d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967de : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0cd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042347f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a36e8 : xchg ch, al ; clc ; jmp qword ptr [rsi]
0x000000000049586f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049568f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496067 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f87 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e87 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004346df : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042ac85 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f85 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429aa5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7a5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b8ed : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b10d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ed5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466df6 : xchg dword ptr [rax + rbp*8], eax ; ret
0x000000000049b074 : xchg dword ptr [rax - 0x17000000], esp ; retf
0x00000000004457ec : xchg dword ptr [rax - 0x39], ecx ; ret
0x0000000000470e96 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000443f8d : xchg dword ptr [rax], ebp ; add cl, ch ; ret
0x00000000004b9778 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000048f82f : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000445386 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b92ff : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000483b1d : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476a91 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e13d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484b05 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e885 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b856c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000482b3b : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449992 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000404f0a : xchg dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], cl ; retf 0x2c84
0x0000000000482bb7 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487a73 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004429ee : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4429ed ; pop rdx ; pop r10 ; ret
0x000000000046e5f8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485889 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b870b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494bc8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447dbb : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004116b2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004532c2 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b8a49 : xchg eax, ebp ; jge 0x4b8a2c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000041b0da : xchg eax, ebp ; ret
0x000000000047be71 : xchg eax, ebp ; ret 0x3840
0x0000000000462e97 : xchg eax, ebp ; ret 0x5389
0x000000000041c479 : xchg eax, ebp ; ret 0x8348
0x000000000046719e : xchg eax, ebp ; ret 0x8b4c
0x000000000048a8b5 : xchg eax, ebp ; ret 0x941
0x0000000000403957 : xchg eax, ebp ; ret 0x953d
0x0000000000467e8b : xchg eax, ebp ; ret 0xb60f
0x0000000000467341 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b90f : xchg eax, ebp ; ret 0xc084
0x000000000045b345 : xchg eax, ebp ; ret 0xc283
0x0000000000443178 : xchg eax, ebp ; ret 0xc985
0x00000000004891ca : xchg eax, ebp ; ret 0xd348
0x00000000004671fc : xchg eax, ebp ; ret 0xd721
0x000000000040f824 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444391 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466e30 : xchg eax, ebp ; ret 0xe883
0x000000000049ba7d : xchg eax, ebp ; ret 0xf45
0x0000000000467dff : xchg eax, ebp ; ret 0xf748
0x00000000004b9302 : xchg eax, ebp ; retf 0x33e6
0x0000000000416b8d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485c99 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004ba75c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004153e2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a330 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e760 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004bb0ec : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000043b38c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042fee2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ba603 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4ba5dd
0x000000000044fcc0 : xchg eax, ebx ; ret 0x3948
0x000000000045081e : xchg eax, ebx ; ret 0x3949
0x000000000041148f : xchg eax, ebx ; ret 0x840
0x0000000000450cf3 : xchg eax, ebx ; ret 0x8548
0x0000000000464494 : xchg eax, ebx ; ret 0xd108
0x0000000000421277 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ad91 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004a0edb : xchg eax, ecx ; ret
0x0000000000451dab : xchg eax, ecx ; retf 0xfffb
0x00000000004294bf : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8ab5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a83 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004741cd : xchg eax, edi ; mov esp, dword ptr [rip + 0x6894800] ; ret
0x00000000004098d5 : xchg eax, edi ; ret
0x00000000004b941d : xchg eax, edi ; retf 0xe152
0x000000000044262b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000442055 : xchg eax, edi ; sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x000000000043e015 : xchg eax, edi ; shr byte ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004ba75b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8bb8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485caf : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004c780d : xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c7850 ; sti ; jmp qword ptr [rdx]
0x0000000000417a3a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004c8881 : xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004ba47d : xchg eax, edx ; jae 0x4ba45a ; push rsi ; pop rdx ; je 0x4ba44f ; ret 0xacfc
0x00000000004b8abc : xchg eax, edx ; pop rbx ; retf
0x000000000046e4cb : xchg eax, edx ; ret 0x8348
0x00000000004753a6 : xchg eax, edx ; ret 0xb60f
0x000000000044262e : xchg eax, edx ; ret 0xd029
0x00000000004b856f : xchg eax, edx ; ret 0xf869
0x00000000004a3a10 : xchg eax, edx ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004238e7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042ea60 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004699f6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434797 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000045c712 : xchg eax, esi ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x000000000048c9d8 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x00000000004ba868 : xchg eax, esi ; jnp 0x4ba8b7 ; retf 0x99e0
0x000000000049ae19 : xchg eax, esi ; jo 0x49ae23 ; add byte ptr [rax], al ; jmp 0x49adf1
0x000000000042eb1d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ea7b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bae0c : xchg eax, esi ; ret 0xcd11
0x000000000042eacc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c1bf4 : xchg eax, esp ; add byte ptr ss:[rax], al ; jbe 0x4c1bf8 ; call qword ptr [rax]
0x00000000004c06f4 : xchg eax, esp ; and dword ptr [rax], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rax]
0x0000000000444388 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004957c9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bb01f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb0 ; ret 0x48f
0x0000000000420e23 : xchg eax, esp ; ret
0x000000000046d9d7 : xchg eax, esp ; ret 0x1f0f
0x000000000047c4be : xchg eax, esp ; ret 0x3840
0x000000000047bbfc : xchg eax, esp ; ret 0x5438
0x000000000041b609 : xchg eax, esp ; ret 0x7ae9
0x0000000000461ad5 : xchg eax, esp ; ret 0x7f3c
0x000000000043e2cf : xchg eax, esp ; ret 0x8341
0x0000000000449f45 : xchg eax, esp ; ret 0x8348
0x000000000043e36f : xchg eax, esp ; ret 0x8444
0x000000000046f5c1 : xchg eax, esp ; ret 0x8545
0x000000000047af4e : xchg eax, esp ; ret 0x950f
0x0000000000455c68 : xchg eax, esp ; ret 0x9522
0x0000000000402898 : xchg eax, esp ; ret 0xb60f
0x000000000046bd6c : xchg eax, esp ; ret 0xc283
0x000000000047bd89 : xchg eax, esp ; ret 0xd021
0x0000000000485bb6 : xchg eax, esp ; ret 0xd309
0x000000000047bb4f : xchg eax, esp ; ret 0xda38
0x000000000040fe0c : xchg eax, esp ; ret 0xdaf7
0x000000000049ba1c : xchg eax, esp ; ret 0xf45
0x0000000000459d28 : xchg eax, esp ; ret 0xfa80
0x000000000043e2f2 : xchg eax, esp ; ret 0xfe83
0x000000000046ae7f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004c10f4 : xchg eax, esp ; sub eax, dword ptr [rax] ; add al, cl ; retf
0x00000000004b8a43 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x00000000004119d1 : xchg eax, r8d ; jmp 0x4118dd
0x0000000000418fb4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000476187 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004bac36 : xchg esp, eax ; jb 0x4bac94 ; call 0x4c15d5f9
0x000000000048dcf6 : xchg esp, ebx ; jmp 0x48dcff
0x000000000043edcf : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048aabe : xchg esp, esi ; jmp 0x48aac7
0x00000000004116b1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000419305 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469fb5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b1479 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fdbc : xlatb ; add r9, r11 ; jmp r9
0x000000000043ebd1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049ee32 : xlatb ; and al, byte ptr [rax] ; jne 0x49ee1e ; pop rbx ; ret
0x000000000049ee31 : xlatb ; and al, byte ptr [rax] ; jne 0x49ee1f ; pop rbx ; ret
0x00000000004a0a87 : xlatb ; idiv edi ; ret
0x000000000046af5f : xlatb ; ja 0x46af8c ; ret
0x00000000004b95e3 : xlatb ; jo 0x4b965f ; mov ebp, 0xfb67d10d ; ret
0x0000000000452372 : xlatb ; mov byte ptr [rsi], al ; jne 0x452358 ; mov rax, rsi ; ret
0x000000000040dc0d : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043ec32 : xlatb ; mov eax, esi ; syscall
0x000000000043ec42 : xlatb ; mov eax, r8d ; syscall
0x00000000004b89f0 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000421639 : xlatb ; ret
0x00000000004baa86 : xlatb ; ret 0x4e27
0x0000000000465bb7 : xlatb ; ret 0x94c
0x000000000042605f : xlatb ; ret 0xc085
0x0000000000421630 : xlatb ; ret 0xc148
0x0000000000423ae4 : xlatb ; ret 0xf66
0x00000000004216cd : xlatb ; retf
0x00000000004b8a44 : xlatb ; retf 0xa1eb
0x0000000000465c94 : xlatb ; retf 0xc148
0x00000000004b9972 : xlatb ; retf 0xdf7f
0x0000000000421890 : xlatb ; retf 0xead3
0x000000000042cf91 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043beb6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000422af6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004229b6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422876 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422736 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004225f6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004224b6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422376 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422236 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004220f6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421fb6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421e76 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421d36 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421bf6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000421ab6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421976 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043beb2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465b55 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465b66 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004696f6 : xor ah, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000004b856a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004694c6 : xor al, 0x26 ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091e20
0x00000000004437e8 : xor al, 0x53 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004ba606 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004c4a94 : xor al, 0x65 ; add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004c6094 : xor al, 0x7b ; add byte ptr [rax], al ; call 0xffffffffe54c5af5
0x000000000040555d : xor al, 0x89 ; ret 0x5525
0x00000000004c8294 : xor al, 0x9d ; add byte ptr [rax], al ; call 0x134c7eac
0x00000000004622f7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b974a : xor al, 0xd8 ; ret
0x00000000004a3e51 : xor al, 0xf9 ; call rax
0x00000000004a37f0 : xor al, ah ; clc ; push rax ; loope 0x4a37f6 ; call rax
0x00000000004c3151 : xor al, bh ; jmp rsp
0x000000000044548a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004a3e4d : xor bh, cl ; call rax
0x00000000004262bc : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000004403ba : xor bl, dh ; std ; dec dword ptr [rax - 0x75] ; jge 0x4403ca ; call rbx
0x000000000042617d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004269b1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000049ea74 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421541 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467cdd : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449d2b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004a3518 : xor byte ptr [rax - 0x767f0008], cl ; clc ; call rax
0x00000000004239ef : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004269b2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000410e5d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ea32 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e9ea : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e6ac : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c5340 : xor byte ptr [rax], al ; cli ; call rsi
0x0000000000464aaa : xor byte ptr [rax], al ; je 0x464ab4 ; ret
0x00000000004c72c0 : xor byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004a3d64 : xor byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x10fff90f]
0x0000000000415aa0 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004bdebc : xor byte ptr [rbp + rdi*8 - 0x2c06f01], al ; jmp rax
0x0000000000403593 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fcbb : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004c1a30 : xor byte ptr [rbp - 0xa], al ; call qword ptr [rsi]
0x000000000049e5ce : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0eff : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426dab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415dee : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000455577 : xor byte ptr [rbx], cl ; jmp rax
0x0000000000443f89 : xor byte ptr [rcx + 0x28873005], cl ; add cl, ch ; ret
0x000000000041ff11 : xor byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000420b58 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041addc : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458c37 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b8a4e : xor byte ptr [rcx], ah ; retf
0x0000000000410e5e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f915 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004705af : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004bde64 : xor byte ptr [rdi - 3], dh ; call qword ptr [rax]
0x000000000046aa74 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000463cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458c02 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c1fa7 : xor byte ptr [rdx], al ; int 0xa
0x00000000004c17e7 : xor byte ptr [rdx], al ; ret
0x000000000044593d : xor byte ptr [rsi + 0x44], ah ; add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x000000000042e80f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465b1c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042617e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e0ba : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004ba75e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8a3f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4b89ef
0x00000000004a3b78 : xor byte ptr [rsi], dl ; stc ; jmp qword ptr [rax + 0x20fff915]
0x00000000004769c1 : xor ch, byte ptr [rax + 0x25] ; add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x0000000000417509 : xor ch, byte ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a3e49 : xor cl, bh ; call rax
0x000000000046619b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000412e05 : xor cl, byte ptr [rax + 0x63] ; jg 0x412e81 ; xor eax, eax ; syscall
0x00000000004732c6 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d70f : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000441062 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a377c : xor dh, ah ; clc ; call qword ptr [rax]
0x0000000000476fee : xor dl, dh ; jmp r11
0x0000000000477100 : xor dl, dh ; ret
0x000000000040dbf6 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420e95 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a58d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004b99f6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000041e08a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004c168d : xor dword ptr [rax], eax ; add al, dl ; cmc ; call qword ptr [rdx]
0x0000000000457667 : xor dword ptr [rbx], ecx ; jmp rax
0x000000000043f5d7 : xor dword ptr [rdi + rcx*2], 0 ; ret
0x0000000000441503 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000469e3a : xor eax, 0x1480026 ; retf
0x000000000049e349 : xor eax, 0x22ea02 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e1f1 : xor eax, 0x22eb5a ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000048e6f9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040ea2f : xor eax, dword ptr [0x30] ; call rax
0x000000000049d03d : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004788b7 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047898f : xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004749da : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451d99 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047816a : xor eax, eax ; call 0x473d88
0x0000000000465347 : xor eax, eax ; call rbx
0x000000000046af5b : xor eax, eax ; cmp rdi, rdx ; ja 0x46af90 ; ret
0x00000000004429c7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442bc5 : xor eax, eax ; leave ; ret
0x000000000046bda8 : xor eax, eax ; mov edx, 1 ; jmp 0x46bd84
0x0000000000463289 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000440a3b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442b3f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041eddd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b698 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec3d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423a7c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041261c : xor eax, eax ; pop rbx ; ret
0x0000000000401570 : xor eax, eax ; ret
0x000000000042e72e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000412e0a : xor eax, eax ; syscall
0x000000000043e608 : xor eax, eax ; test dh, 0xf0 ; je 0x43e5db ; movzx eax, dl ; pop rbx ; ret
0x000000000046b2e0 : xor eax, eax ; test r11b, r11b ; je 0x46b2d9 ; ret
0x0000000000413610 : xor eax, eax ; test rdx, rdx ; jne 0x413627 ; ret
0x0000000000467c13 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474278 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e144 : xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x000000000046aa8d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x00000000004481b1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000425b39 : xor ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000466625 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000044f272 : xor ecx, eax ; ret 0x4809
0x0000000000473d6e : xor edi, edi ; call 0x43fff4
0x0000000000400cb0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040e9e7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000444bf3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044438c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44437c
0x000000000045a5e3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047ac39 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aaae : xor edx, edx ; jmp 0x46aa78
0x0000000000473fe4 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000415709 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000417aec : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000488333 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440ed1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000445489 : xor esi, dword ptr [rdx] ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x000000000043ed8c : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403849 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044cc4e : xor esi, esi ; mov edi, 0x4a6228 ; mov eax, ecx ; syscall
0x0000000000401685 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047aec9 : xor esi, esi ; mov edi, dword ptr [rip + 0x251af3] ; jmp rax
0x0000000000440121 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440ed3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440ef8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440f1d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440f41 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440f61 : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000465346 : xor r8d, r8d ; call rbx
0x000000000040ea2e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea2d : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004261ff : xor rax, rax ; ret
0x000000000040e9e6 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e9e5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11379
