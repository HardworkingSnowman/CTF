! function(e) {
    e.su = e.su || {}, e.su.Widget = function(t, n) {
        var a = e.fn[t],
            s = {
                defaults: {
                    separator: ":",
                    cls: "",
                    labelCls: "m",
                    inputCls: "l",
                    fieldLabel: "",
                    tips: null,
                    tipsCls: "m",
                    errorTipsCls: ""
                },
                create: null,
                validate: function() {
                    return !0
                },
                setValue: function(t, n) {
                    t = t || this;
                    var a = n[1];
                    return e(t).attr("snapshot", a), e(t).val(a), t
                },
                enable: function() {
                    var e = e || this;
                    return e[t]("getContainer").removeClass("disabled"), e.prop("disabled", !1), e
                },
                disable: function() {
                    var e = e || this;
                    return e[t]("getContainer").addClass("disabled"), e.prop("disabled", !0), e
                },
                setFieldLabel: function(e, n) {
                    var a = (e = e || this)[t]("getContainer"),
                        s = n[1] || e.get(0).fieldLabel || "";
                    return a.find("label.widget-fieldlabel").html(s), e
                },
                setNormal: function(e) {
                    var n = (e = e || this).get(0),
                        a = e[t]("getContainer");
                    e[t]("setTips", n.tips), a.removeClass("focus error disable dirty"), a.find("span.widget-validate-icon").css({
                        display: "none"
                    }), a.find("div.widget-error-tips-wrap").css({
                        display: "none"
                    }), a.find("div.widget-error-tips").height(""), a.find("div.widget-error-tips").removeClass("show")
                },
                setFocus: function(e) {
                    var n = (e = e || this)[t]("getContainer");
                    return e[t]("setNormal"), n.addClass("focus"), e
                },
                removeFocus: function(e) {
                    return (e = e || this)[t]("getContainer").removeClass("focus"), e
                },
                setValid: function(e) {
                    var n = (e = e || this)[t]("getContainer");
                    return n.removeClass("error"), n.addClass("valid"), n.find("span.widget-validate-icon").css({
                        display: "inline-block"
                    }), n.find("div.widget-error-tips-wrap").css({
                        display: "none"
                    }), n.find("div.widget-error-tips").height(""), n.find("div.widget-error-tips").removeClass("show"), e
                },
                setError: function(e, n) {
                    e = e || this, n = n[1] || null;
                    var a = e[t]("getContainer");
                    return n && e[t]("setErrorTips", n), a.removeClass("valid"), a.addClass("error"), a.find("span.widget-validate-icon").css({
                        display: "inline-block"
                    }), n && (a.find("div.widget-error-tips").height(a.find("div.error-tips-content").outerHeight()), a.find("div.widget-error-tips").addClass("show")), e
                },
                reset: function(e) {
                    var t = (e = e || this).get(0),
                        n = t.defaultValue || "";
                    return "password" === t.xtype && e.closest("div.password-container").find("input.password-hidden").val(n), e.val(n), e
                },
                setDirty: function(e) {
                    var n = (e = e || this)[t]("getContainer");
                    return e[t]("setNormal"), n.addClass("dirty"), e
                },
                setTips: function(n, a) {
                    var s = (n = n || this)[t]("getContainer").find("div.widget-tips div.tips-content"),
                        i = a[1] || "";
                    return n.get(0) && (n.get(0).tips = i), "string" === e.type(i) && s.html(i), "" == i ? (s.hide(), s.css("display", "none")) : (s.show(), s.fadeIn(150)), n
                },
                setErrorTips: function(n, a) {
                    var s = (n = n || this)[t]("getContainer"),
                        i = a[1] || "",
                        r = s.find("div.widget-error-tips-wrap").removeClass("show").css({
                            left: "-9999px",
                            top: "-9999px",
                            display: "block"
                        }),
                        d = r.find("div.error-tips-content");
                    if ("" == i) r.css("display", "none");
                    else {
                        r.width();
                        "string" === e.type(i) && d.html(i), r.css({
                            display: "block",
                            left: 0,
                            top: 0
                        }), setTimeout(function() {
                            r.addClass("show")
                        }, 200)
                    }
                    return n
                },
                hideErrorTips: function() {
                    var e = e || this,
                        n = e[t]("getContainer");
                    n.find("div.widget-error-tips-wrap").removeClass("show").css({
                        display: "none"
                    }).find("div.error-tips-content").css({
                        width: "inherit",
                        "white-space": "normal"
                    });
                    n.find("div.widget-error-tips").height(""), n.find("div.widget-error-tips").removeClass("show")
                },
                setPosition: function(n, a) {
                    var s = (n = n || this)[t]("getContainer"),
                        i = "center" === a[1] ? parseInt((e(window).width() - s.width()) / 2, 10) : a[1] || 0,
                        r = "center" === a[2] ? parseInt((e(window).height() - s.height()) / 2, 10) : a[2] || 0;
                    return i = i < 0 ? 0 : i, r = r - 60 < 0 ? 0 : r - 60, s.css({
                        left: i,
                        top: r
                    }), {
                        x: i,
                        y: r
                    }
                },
                getContainer: function(t) {
                    if ((t = t || this).hasClass("widget-container")) return t;
                    var n = t.closest("div.widget-container");
                    return n.get(0) ? e(n.get(0)) : null
                },
                getWidth: function(e) {
                    return (e = e || this)[t]("getContainer").width()
                },
                getHeight: function(e) {
                    return (e = e || this)[t]("getContainer").height()
                },
                getSize: function(e) {
                    var n = (e = e || this)[t]("getContainer");
                    return {
                        width: n.width(),
                        height: n.height()
                    }
                },
                getValue: function(e) {
                    return (e = e || this).val()
                },
                show: function(e) {
                    return (e = e || this)[t]("getContainer").fadeIn(150), e
                },
                hide: function(e) {
                    return (e = e || this)[t]("getContainer").css({
                        display: "none"
                    }), e
                }
            };
        return a = a || function(n) {
            var i = a.defaults || {};
            n = n || {};
            return i = e.extend(s.defaults, i), i.xtype = t, i.isWidget = !0, n.title && (n._title = n.title, delete n.title), n.minLength && (n._minLength = n.minLength, delete n.minLength), n.maxLength && (n._maxLength = n.maxLength, delete n.maxLength), "string" === e.type(n) ? a[n].call(this, this, arguments) : a.create ? a.create.call(this, i, n) : void 0
        }, e.fn[t] = e.extend(a, s, n), a
    }, e("html").delegate("input", "focus", function(e) {
        e.stopPropagation(), e.preventDefault()
    }).on("click", function(t) {
        t.stopPropagation(), e("div.region-select-wrap, div.region-search-wrap").hide(), e("div.combobox-list-wrap").hide().attr("toggleflag", "hidden"), e("div.combobox-container").removeClass("selected focus"), e("div.widget-error-tips-wrap.show").css("display", "none"), e("div.timepicker-msg-container").removeAttr("dragFlag")
    }).on("mouseup", function(t) {
        t.stopPropagation(), e("div.button-container").removeClass("clicked"), e("div.btn-help-container a.btn-help").removeClass("clicked"), e("div.timepicker-msg-container-wrap").trigger("mouseup")
    }).on("mousedown", function(t) {
        e("div.widget-error-tips-wrap.show").css("display", "none"), e("div.widget-error-tips").height(""), e("div.widget-error-tips").removeClass("show")
    }).on("keyup", function(t) {
        9 != t.keyCode && (e("div.widget-error-tips-wrap.show").css("display", "none"), e("div.widget-error-tips").height(""), e("div.widget-error-tips").removeClass("show"))
    }), e(window).on("resize", function(t) {
        e("div.msg-container").each(function(t, n) {
            var a = e(n);
            (n.shown || a.attr("shown")) && a.msg("setPosition", "center", "center")
        })
    })
}(jQuery),
function(e) {
    e.su.Widget("panel", {
        defaults: {
            _title: "",
            titleTip: "",
            icon: "",
            iconCls: "",
            panelType: "form",
            collapsible: !1,
            collapsed: !1,
            help: !1,
            helpHandler: null
        },
        create: function(t, n) {
            return this.each(function(a, s) {
                var i = e(this);
                e.extend(this, t, n);
                var r = !1 === this.collapsed ? "block" : "none",
                    d = '<div class="panel-wrap">',
                    o = this.collapsed ? "collapsed" : "";
                "" != this._title && (d += '<div class="panel-header">', d += '<h3 class="panel-title">', d += '<span class="panel-title-icon"></span>', d += '<span class="panel-title-text">' + this._title + "</span>", "" != this.titleTip && (d += '<p class="panel-title-tip-text">' + this.titleTip + "</p>"), d += '<div class="panel-header-btn-container">', this.collapsible && (d += '<button class="panel-header-btn-collapse ' + o + '" type="button"></button>'), d += "</div>", d += "</h3>", d += "</div>"), d += '<div class="panel-content" style="display: ' + r + '">', d += '<div class="panel-tbar-container"></div>', d += '<div class="panel-content-container"></div>', d += '<div class="panel-fbar-container"></div>', d += "</div>";
                var l = e(d += "</div>");
                l.find("div.panel-content-container").append(i.children().detach()), i.append(l).addClass("container widget-container panel-container " + this.cls), this.isPanel = !0
            }), this.delegate("button.panel-header-btn-collapse", "click", function(t) {
                var n = e(this),
                    a = n.closest("div.panel-container"),
                    s = a.find("div.panel-content");
                a.get(0).collapsed ? (s.slideDown(200, function() {
                    e(this).css("display", "block"), n.removeClass("collapsed")
                }), a.get(0).collapsed = !1) : (s.slideUp(200, function() {
                    e(this).css("display", "none"), n.addClass("collapsed")
                }), a.get(0).collapsed = !0)
            }), "function" === e.type(n.helpHandler) && container.delegate("button.panel-header-btn-help", "click", {
                panel: e(this)
            }, n.helpHandler), this
        },
        setTitle: function(e, t) {
            var n = (e = e || this).closest("div.panel-container");
            return (t = t[1]) ? (n.find("h3.panel-title span.panel-title-text").html(t), e) : e
        },
        getContainer: function(e) {
            return e = e || this
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("page", {
        defaults: {
            _title: "",
            help: "...",
            showTitle: !1
        },
        create: function(t, n) {
            this.each(function(a, s) {
                var i = e(s);
                e.extend(s, t, n), i.find("h2.func-title").remove();
                var r = "";
                s.showTitle && (r += '<h2 class="func-title">', r += "<span>" + s._title + "</span>", r += "</h2>"), i.prepend(e(r)).addClass("container widget-container page-container")
            }), this.delegate("div.btn-help-container a.btn-help", "mousedown", function(t) {
                e(this).addClass("clicked")
            }).delegate("div.btn-help-container a.btn-help", "click", function(t) {
                t.preventDefault();
                var n = e.su.help.width,
                    a = e(this),
                    s = a.closest("div.btn-help-container");
                if (a.hasClass("closed")) {
                    e("div.help-content-container").css("display", "block"), a.closest("div.help-container").animate({
                        width: "+=" + n + "px"
                    }, 200);
                    i = (i = s.css("right")).slice(0, i.length - 2), s.animate({
                        right: Math.abs(i) + n - a.width()
                    }, 200, function(e) {
                        a.removeClass("closed")
                    }), e.su.CHAR.HELP ? e.su.help.load(a.attr("name")) : e.getScript("./locale/en_US/help.js", function(t) {
                        e.su.help.load(a.attr("name"))
                    })
                } else {
                    e("div.help-content-container").empty(), a.closest("div.help-container").animate({
                        width: "-=0"
                    }, 200);
                    var i;
                    i = (i = s.css("right")).slice(0, i.length - 2), s.animate({
                        right: Math.abs(i) - n + a.width()
                    }, 200, function() {
                        a.addClass("closed")
                    })
                }
            })
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("wizard", {
        defaults: {
            autoStart: !0,
            items: [{
                name: "",
                label: "",
                content: "",
                prevButton: !0,
                prevHandler: null,
                nextButton: !0,
                nextHandler: null
            }],
            currentIndex: 0,
            finishHandler: null
        },
        create: function(t, n) {
            var a = this;
            return a.each(function(s, i) {
                var r = e(i);
                e.extend(i, t, n);
                var d = '<div class="process-flow">';
                d += '<div class="process-flow-wrap">';
                for (var o = '<div class="form-container">', l = i.items, c = l.length, p = "up", u = 0; u < c; u++) {
                    var g = l[u],
                        f = u == c - 1 ? "lst" : "",
                        v = (p = "up" === p ? "down" : "up", g.labelCls || "");
                    d += '<div name="' + g.name + '" class="process-flow-step step' + u + " " + f + '">', d += '<span class="icon"></span>', g.label && (d += '<span class="text ' + p + " " + v + '">' + g.label + "</span>"), d += "</div>", "lst" != f && (d += '<span class="bar">', d += '<span class="bar-inner">', d += "</span>", d += "</span>"), o += '<div class="form-step" data-step="' + u + '" name="' + g.name + '">', o += '<div class="form-content" data-step="' + u + '" name="' + g.name + '"></div>', o += '<div class="form-buttons-container">', !1 !== g.prevButton && (o += '<button type="button" class="button-prev wizard-buttons" data-name="' + g.name + '" data-step="' + u + '"></button>'), !1 !== g.nextButton && (o += '<button type="button" class="button-next wizard-buttons" data-name="' + g.name + '" data-step="' + u + '"></button>'), o += "</div>", o += "</div>"
                }
                d += "</div>", d += "</div>", o += "</div>", r.append(e(d)).append(e(o)).addClass("container widget-container wizard-container");
                for (u = 0; u < c; u++) {
                    g = l[u];
                    var h = e(g.content).attr("name", g.name),
                        m = r.find("div.form-step[name=" + g.name + "]").css("display", "none");
                    m.find("div.form-content").append(h), !1 !== g.prevButton && m.find("button.button-prev").button({
                        text: g.prevButtonText || e.su.CHAR.OPERATION.BACK,
                        cls: "wizard-btn btn-prev",
                        handler: function(e) {
                            a.wizard("goPrev")
                        }
                    }), !1 !== g.nextButton && m.find("button.button-next").button({
                        text: g.nextButtonText || e.su.CHAR.OPERATION.NEXT,
                        cls: "wizard-btn btn-next",
                        handler: function(e) {
                            a.wizard("goNext")
                        }
                    })
                }
            }), a.wizard("geToIndex", 0), a
        },
        setCurrent: function(e, t) {
            e = e || this;
            var n = t[1],
                a = e.find("div.process-flow-step[name='" + n + "']");
            a.addClass("current");
            a.prev("span.bar").addClass("processed").find("span.bar-inner").css("width", "0").animate({
                width: "+=100%"
            }, 200), e.find("div.form-container div.form-step").css("display", "none"), e.find("div.form-container div.form-step[name='" + n + "']").fadeIn(200)
        },
        setProcessed: function(e, t) {
            e = e || this;
            var n = t[1],
                a = e.find("div.process-flow-step[name='" + n + "']");
            a.addClass("processed");
            a.prev("span.bar").addClass("processed").find("span.bar-inner").css("width", "0").animate({
                width: "+=100%"
            }, 200)
        },
        setNormal: function(e, t) {
            e = e || this;
            var n = t[1],
                a = e.find("div.process-flow-step[name='" + n + "']");
            a.removeClass("current, processed");
            a.prev("span.bar").removeClass("current, processed").find("span.bar-inner").css("width", "100%").animate({
                width: "-=0"
            }, 200)
        },
        setNormalAll: function(e, t) {
            e.find("div.process-flow-step, span.bar").removeClass("current processed")
        },
        goNext: function() {
            var t, n = n || this,
                a = n.get(0),
                s = a.items,
                i = s.length,
                r = a.currentIndex,
                d = r + 1,
                o = s[r];
            if (o.nextHandler && (t = o.nextHandler.call(n)), !1 !== t) {
                if (r >= i) return !1;
                r === i - 1 && (d = r);
                var l = o.name,
                    c = s[d]["name"],
                    p = n.find("div.process-flow-step[name='" + l + "']").removeClass("current").addClass("processed").next("span.bar"),
                    u = p.find("span.bar-inner"),
                    g = n.find("div.process-flow-step[name='" + c + "']");
                return u.width(0), p.addClass("processed"), u.animate({
                    width: "+=100%"
                }, 200, function() {
                    u.css("width", "100%"), g.addClass("current"), n.find("div.form-container div.form-step").css("display", "none"), n.find("div.form-container div.form-step[name='" + c + "']").fadeIn(150, function() {
                        e.su.layout.doLayout && e.su.layout.doLayout()
                    })
                }), a.currentIndex = d, n
            }
        },
        goPrev: function() {
            var t, n = n || this,
                a = n.get(0),
                s = a.items,
                i = (s.length, a.currentIndex),
                r = i - 1,
                d = s[i];
            if (d.prevHandler && (t = d.prevHandler.call(n)), !1 === t) return n;
            if (i < 0) return !1;
            0 === i && (r = 0);
            var o = d.name,
                l = s[r]["name"],
                c = n.find("div.process-flow-step[name='" + o + "']").removeClass("current processed"),
                p = c.prev("span.bar"),
                u = p.find("span.bar-inner"),
                g = n.find("div.process-flow-step[name='" + l + "']");
            return u.css("width", "100%"), p.addClass("processed"), u.animate({
                width: "-=0px"
            }, 200, function() {
                p.removeClass("processed"), u.css("width", "0"), g.removeClass("processed").addClass("current"), c.removeClass("current processed"), n.find("div.form-container div.form-step").css("display", "none"), n.find("div.form-container div.form-step[name='" + l + "']").fadeIn(150, function() {
                    e.su.layout.doLayout && e.su.layout.doLayout()
                })
            }), a.currentIndex = r, n
        },
        goTo: function(t, n) {
            t = t || this;
            var a = n[1],
                s = t.get(0),
                i = s.items,
                r = s.currentIndex;
            t.wizard("setNormalAll");
            for (var d = !1, o = 0; o < i.length; o++) {
                var l = i[o].name;
                if (0 != d) t.wizard("setNormal", l);
                else {
                    if (l == a) {
                        t.wizard("setCurrent", l), r = o, d = !0;
                        continue
                    }
                    t.wizard("setProcessed", l)
                }
            }
            return !!d && (r >= 0 && r <= i.length - 1 && t.find("div.form-step[data-step=" + r + "]"), s.currentIndex = r, e.su.layout.doLayout && e.su.layout.doLayout(), !0)
        },
        geToIndex: function(e, t) {
            e = e || this;
            var n = t[1],
                a = e.get(0).items[n].name;
            return !!a && e.wizard("goTo", a)
        },
        getContainer: function(e) {
            return e = e || this
        },
        showButtons: function(t) {
            return (t = t || this).find("button.wizard-buttons").each(function(t, n) {
                e(n).button("show")
            }), t
        },
        hideButtons: function(t) {
            return (t = t || this).find("button.wizard-buttons").each(function(t, n) {
                e(n).button("hide")
            }), t
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("msg", {
        defaults: {
            type: "prompt",
            cls: "xl",
            _title: "",
            autoshow: !1,
            mask: !0,
            msg: "",
            callback: null,
            okHandler: null,
            noHandler: null,
            cancelHandler: null,
            closeHandler: null,
            closeBtn: !0,
            global: !1,
            okText: e.su.CHAR.OPERATION.OK,
            yesText: e.su.CHAR.OPERATION.YES,
            noText: e.su.CHAR.OPERATION.NO,
            cancelText: e.su.CHAR.OPERATION.CANCEL
        },
        create: function(t, n) {
            var a = this;
            return a.each(function(a, s) {
                if (!this.isMsg) {
                    var i = e(this);
                    if (e.extend(this, t, n), this.global && !this.id) return null;
                    this.id = this.id || e.su.randomId("msg");
                    var r = "";
                    r += '<div class="msg-wrap">', this.closeBtn && (r += '<a class="widget-close msg-close" href="javascript:void(0);"></a>'), r += '<div class="msg-content-wrap">';
                    r += '<h3 class="widget-title msg-title">', r += '<span class="msg-title-container">' + (this._title || "") + "</span>", r += "</h3>";
                    var d = this.msg || this.innerHTML;
                    i.empty(), r += '<div class="widget-content msg-content-container">' + d + "</div>", r += "</div>";
                    switch (this.type) {
                        case "alert":
                            r += '<div class="msg-btn-container">', r += '<div class="msg-btn-wrap">', r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-ok btn-alert">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.okText + "</span>", r += "</button>", r += "</div>", r += "</div>", r += "</div>";
                            break;
                        case "confirm":
                            r += '<div class="msg-btn-container">', r += '<div class="msg-btn-wrap">', r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-no btn-confirm">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.noText + "</span>", r += "</button>", r += "</div>", r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-ok btn-confirm">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.yesText + "</span>", r += "</button>", r += "</div>", r += "</div>", r += "</div>";
                            break;
                        case "prompt":
                            r += '<div class="button-container msg-btn-container">', r += '<div class="msg-btn-wrap">', r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-cancel btn-prompt">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.cancelText + "</span>", r += "</button>", r += "</div>", r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-ok btn-prompt">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.okText + "</span>", r += "</button>", r += "</div>", r += "</div>", r += "</div>";
                            break;
                        case "show":
                            r += '<div class="button-container msg-btn-container">', r += '<div class="msg-btn-wrap">', r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-cancel btn-show">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.cancelText + "</span>", r += "</button>", r += "</div>", r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-no btn-show">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.noText + "</span>", r += "</button>", r += "</div>", r += '<div class="button-container inline-block">', r += '<button type="button" class="button-button btn-msg btn-msg-ok btn-show">', r += '<span class="button-button-before"></span>', r += '<span class="text button-text">' + this.yesText + "</span>", r += "</button>", r += "</div>", r += "</div>", r += "</div>";
                            break;
                        default:
                            this.buttons
                    }
                    r = '<div class="position-top-left"></div>' + (r = '<div class="position-top-center"></div>' + (r = '<div class="position-top-right"></div>' + (r = '<div class="position-center-left">' + (r = '<div class="position-center-right">' + (r += "</div>") + "</div>") + "</div>"))), r += '<div class="position-bottom-left"></div>', r += '<div class="position-bottom-center"></div>', r += '<div class="position-bottom-right"></div>';
                    var o = e("div#msg-boxs-container");
                    0 == o.length && (o = e('<div id="msg-boxs-container" class="msg-boxs-container"></div>'), e("body").append(o)), o.find("#" + s.id).remove(), o.append(i.detach()), i.append(e(r)).addClass("container widget-container msg-container " + this.cls).css({
                        "z-index": "999",
                        display: "none"
                    }), this.isMsg = !0, e.su.msgManager.add(this)
                }
            }), a.delegate("a.msg-close", "click", function(t) {
                t.preventDefault();
                var n = e(this).closest("div.msg-container");
                e(this).closest("div.msg-container").msg("close", n.get(0).closeHandler)
            }).delegate("button.btn-msg-ok", "click", function(t) {
                t.preventDefault();
                var n = e(this).closest("div.msg-container");
                n.get(0).okHandler ? !1 !== n.get(0).okHandler.call(a) && n.msg("close") : n.msg("close")
            }).delegate("button.btn-msg-no", "click", function(t) {
                t.preventDefault();
                var n = e(this).closest("div.msg-container");
                n.msg("close", n.get(0).noHandler)
            }).delegate("button.btn-msg-cancel", "click", function(t) {
                t.preventDefault();
                var n = e(this).closest("div.msg-container");
                n.msg("close", n.get(0).cancelHandler)
            }), a.get(0).autoshow && a.msg("show"), a
        },
        show: function(t, arguments) {
            t = t || this, arguments[1];
            t.msg("setPosition", "center", "center");
            var n = e(this).closest("div.msg-container").find("div.msg-wrap"),
                a = e(window).height();
            e(window).width();
            return n.css({
                "max-height": a,
                "overflow-y": "auto",
                "overflow-x": "hidden"
            }), e(window).resize(function() {
                var t = e(window).height();
                e(window).width();
                n.css({
                    "max-height": t,
                    "overflow-y": "auto",
                    "overflow-x": "hidden"
                })
            }), t.each(function() {
                if (!0 !== this.isMsg) return !1;
                this.mask && !this.shown && e.su.mask.show("msg"), this.shown = !0, e(this).fadeInSU(200, function() {
                    t.css("display", "block")
                })
            }), t.trigger("ev_show", t), t
        },
        close: function(t, arguments) {
            var n = (t = t || this).get(0),
                a = "function" === e.type(arguments[1]) ? arguments[1] : null,
                s = "boolean" === e.type(arguments[1]) ? arguments[1] : "boolean" === e.type(arguments[2]) && arguments[2];
            return n.shown ? (n.mask && e.su.mask.hide("msg"), s ? t.fadeOutSU(200, function() {
                this.shown = !1, t.remove()
            }) : t.fadeOutSU(200, function() {
                this.shown = !1, t.css("display", "none")
            }), t.trigger("ev_close", t), a ? a.call(t, t) : t) : t
        },
        setTitle: function(e, arguments) {
            var t = (e = e || this).get(0),
                n = arguments[1];
            return n && (t._title = n, e.find("span.msg-title-container").html(n)), e
        },
        setContent: function(e, arguments) {
            e = e || this;
            var t = arguments[1];
            return t && e.find("div.msg-content-container").html(t), e
        },
        showButtons: function(e) {
            return (e = e || this).find("div.msg-btn-container").fadeInSU(150), e
        },
        hideButtons: function(e) {
            return (e = e || this).find("div.msg-btn-container").css("display", "none"), e
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("foldertree", {
        defaults: {
            store: null,
            routerName: "My Router",
            selectLeaves: !1,
            extension: "*",
            multiple: !1,
            multipleValue: []
        },
        create: function(t, n) {
            var a = this;
            a.each(function(a, s) {
                var i = e(s);
                e.extend(s, t, n);
                var r = '<div class="container widget-container foldertree-container">';
                r += '<div class="router">', r += '<span class="icon"></span>', r += '<span class="text">' + s.routerName + "</span>", r += "</div>";
                var d = e(r += "</div>");
                i.replaceWith(d), d.append(i.addClass("hidden"))
            });
            var s = a.closest("div.foldertree-container");
            s.delegate("a.foldertree-text", "click", function(t) {
                t.preventDefault(), t.stopPropagation();
                var n = e(this),
                    i = n.attr("data-path");
                if (a.get(0).selectLeaves) {
                    if ("leaf" != n.attr("data-type")) return;
                    return s.find("li.foldertree-branch, a.foldertree-text").removeClass("selected"), n.closest("li.foldertree-branch").addClass("selected"), n.addClass("selected"), void a.foldertree("setValue", i)
                }
                if (a.get(0).multiple) {
                    var r = function(t, n) {
                        for (var s = t, r = s.attr("data-path"), d = !1; !s.parent().hasClass("foldertree-root");) {
                            if (n ? s.closest("ul").children("li").each(function(t, n) {
                                    if (!e(n).hasClass("selected")) {
                                        if (-1 == e.inArray(r, a.get(0).multipleValue)) {
                                            var o = [];
                                            e.each(a.get(0).multipleValue, function(e, t) {
                                                new RegExp(i + "/").test(t) || o.push(t)
                                            }), a.get(0).multipleValue = o, a.get(0).multipleValue.push(r)
                                        }
                                        return d = !0, !1
                                    }
                                    if (t == s.closest("ul").children("li").length - 1) {
                                        s.closest("ul").parent().addClass("selected"), s.closest("ul").parent().children("a").addClass("selected"), s.closest("ul").children("li").children("a").each(function(t, n) {
                                            e.inArray(e(n).attr("data-path"), a.get(0).multipleValue) > -1 && a.get(0).multipleValue.splice(e.inArray(e(n).attr("data-path"), a.get(0).multipleValue), 1)
                                        }), -1 == e.inArray(e(n).closest("ul").parent().children("a").attr("data-path"), a.get(0).multipleValue) && a.get(0).multipleValue.push(s.closest("ul").parent().children("a").attr("data-path"));
                                        o = [];
                                        e.each(a.get(0).multipleValue, function(e, t) {
                                            new RegExp(i + "/").test(t) || o.push(t)
                                        }), a.get(0).multipleValue = o
                                    }
                                }) : s.closest("ul").children("li").each(function(t, n) {
                                    if (!e(n).hasClass("selected") && e(n).children("a").attr("data-path") != s.attr("data-path")) return e.inArray(r, a.get(0).multipleValue) > -1 && a.get(0).multipleValue.splice(e.inArray(r, a.get(0).multipleValue), 1), d = !0, !1;
                                    t == s.closest("ul").children("li").length - 1 && (s.closest("ul").parent().removeClass("selected"), s.closest("ul").parent().children("a").removeClass("selected"), s.closest("ul").children("li").children("a").each(function(t, n) {
                                        -1 == e.inArray(e(n).attr("data-path"), a.get(0).multipleValue) && e(n).attr("data-path") != s.attr("data-path") && a.get(0).multipleValue.push(e(n).attr("data-path"))
                                    }), e.inArray(s.closest("ul").parent().children("a").attr("data-path"), a.get(0).multipleValue) > -1 && a.get(0).multipleValue.splice(e.inArray(s.closest("ul").parent().children("a").attr("data-path"), a.get(0).multipleValue), 1))
                                }), d) return;
                            s = s.parent().closest("ul").prev(), r = s.attr("data-path")
                        }
                    };
                    n.closest("li.foldertree-branch").hasClass("selected") || n.hasClass("selected") ? (n.parent().removeClass("selected"), n.removeClass("selected"), n.parent().find("li").removeClass("selected"), n.parent().find("a").removeClass("selected"), n.parent().hasClass("foldertree-root") ? a.get(0).multipleValue = [] : r(n, !1)) : (n.closest("li.foldertree-branch").addClass("selected"), n.addClass("selected"), n.parent().find("li").addClass("selected"), n.parent().find("a").addClass("selected"), n.parent().hasClass("foldertree-root") ? a.get(0).multipleValue = [i] : r(n, !0))
                } else s.find("li.foldertree-branch, a.foldertree-text").removeClass("selected"), n.closest("li.foldertree-branch").addClass("selected"), n.addClass("selected"), a.foldertree("setValue", i)
            }).delegate("span.foldertree-icon", "click", function(t) {
                t.preventDefault(), t.stopPropagation();
                var n = e(this),
                    s = n.attr("data-path"),
                    i = a.get(0).store,
                    r = n.next("a.foldertree-text").next("ul.foldertree-wrap"),
                    d = r.next("ul.foldertree-wrap"),
                    o = a.get(0).uuid;
                n.hasClass("foldertree-root") || (n.hasClass("foldertree-has-branch") && (n.hasClass("opened") ? (r.slideUp(200, function() {
                    n.removeClass("opened")
                }), d && d.slideUp(200, function() {
                    n.removeClass("opened")
                })) : i.loadNode(s, {
                    path: s,
                    uuid: o
                }, function() {
                    n.addClass("opened"), r.slideDown(200), d && d.slideDown(200)
                })), a.get(0).multiple && a.val(a.get(0).multipleValue))
            });
            return e(a.get(0).store).on("ev_loaddata", function(e, t) {
                a.foldertree("load", t)
            }).on("ev_loadnode", function(t, n, i, r) {
                var d = null;
                if (s.find("ul.foldertree-wrap").each(function(t, n) {
                        if (e(n).attr("data-path") == i) return d = e(n), !1
                    }), e.isArray(r.branches) && a.foldertree("initBranch", r.branches, d), a.get(0).selectLeaves) {
                    var o;
                    d.siblings(".foldertree-leaf-wrap").length ? o = d.siblings(".foldertree-leaf-wrap") : (o = e('<ul class="foldertree-wrap foldertree-leaf-wrap" data-path="' + i + '" ></ul>'), d.after(o)), a.foldertree("initLeaf", r.leaves, o)
                }
            }), a
        },
        load: function(e, t) {
            var n = (e = e || this).closest("div.foldertree-container"),
                a = (e.get(0), t[1][0]);
            return e.foldertree("initRoot", a, n), e.trigger("ev_treeloaded", [e, a]), e
        },
        initRoot: function(t, n) {
            var a = (t = t || this).get(0),
                s = t.closest("div.foldertree-container"),
                i = n[1] || {},
                r = n[2],
                d = i.uuid || "0000000000";
            if (a.uuid = d, !i) return t;
            s.find("div.foldertree-root").remove();
            var o = '<div class="foldertree-root">';
            o += '<span class="foldertree-icon foldertree-root ' + (i.hasBranch ? "foldertree-has-branch" : "") + ' opened" data-path="' + i.path + '"></span>', t.get(0).multiple ? o += '<a href="javascript:void(0);" class="foldertree-text" data-path="' + i.path + '">' : o += '<a href="javascript:void(0);" class="foldertree-text foldertree-root" data-path="' + i.path + '">', o += '<span class="icon"></span>', o += '<span class="text">' + i.name + "</span>", o += "</a>", o += '<ul class="foldertree-wrap foldertree-root-wrap" data-path="' + i.path + '"></ul>', o += '<ul class="foldertree-wrap foldertree-leaf-wrap" data-path="' + i.path + '"></ul>';
            var l = e(o += "</div>");
            if (r.append(l), i.hasBranch) {
                var c = l.find("ul.foldertree-root-wrap");
                t.foldertree("initBranch", i.branches, c)
            }
            if (i.leavesInfo && t.get(0).selectLeaves) {
                c = l.find("ul.foldertree-leaf-wrap");
                t.foldertree("initLeaf", i.leaves, c)
            }
            return t
        },
        initBranch: function(t, n) {
            t = t || this;
            var a = n[1],
                s = n[2].empty(),
                i = s.prev("a.foldertree-text").prev("span.foldertree-icon");
            e.isArray(a) || (a = [a]);
            var r = "";
            if (0 == a.length) i.removeClass("foldertree-has-branch");
            else {
                for (var d = 0, o = a.length; d < o; d++) {
                    var l = a[d],
                        c = l.hasBranch || l.hasLeaves ? "foldertree-has-branch" : "foldertree-has-branch opened",
                        p = d == o - 1 ? "lst" : "";
                    s.parent().hasClass("selected") || e.inArray(l.path, t.get(0).multipleValue) > -1 ? r += '<li class="foldertree-branch selected' + p + '">' : r += '<li class="foldertree-branch ' + p + '">', r += '<span class="foldertree-icon foldertree-branch ' + c + '" data-path="' + l.path + '"></span>', s.parent().hasClass("selected") || e.inArray(l.path, t.get(0).multipleValue) > -1 ? r += '<a href="javascript:void(0);" class="foldertree-text foldertree-branch selected" data-path="' + l.path + '">' : r += '<a href="javascript:void(0);" class="foldertree-text foldertree-branch " data-path="' + l.path + '">', r += '<span class="icon"></span>', r += '<span class="text">' + l.name + "</span>", r += "</a>", r += '<ul class="foldertree-wrap foldertree-branch-wrap" data-path="' + l.path + '"></ul>', r += "</li>"
                }
                var u = e(r);
                s.append(u), i.addClass("foldertree-has-branch")
            }
            return t
        },
        initLeaf: function(t, n) {
            var a = (t = t || this).get(0).extension,
                s = n[1],
                i = n[2].empty();
            i.prev("a.foldertree-text").prev("span.foldertree-icon");
            e.isArray(s) || (s = [s]);
            for (var r = "", d = 0, o = s.length; d < o; d++) {
                var l = s[d];
                if ("*" == a || a == l.character) {
                    r += '<li class="foldertree-branch ' + (d == o - 1 ? "lst" : "") + '">', r += '<span class="foldertree-icon foldertree-branch " data-path="' + l.path + '"></span>', r += '<a href="javascript:void(0);" class="foldertree-text foldertree-leaf" data-type="leaf" data-path="' + l.path + '">', r += '<span class="icon"></span>', r += '<span class="text">' + l.name + "</span>", r += "</a>", r += '<ul class="foldertree-wrap foldertree-branch-wrap" data-path="' + l.path + '"></ul>', r += "</li>"
                }
            }
            var c = e(r);
            return i.append(c), t
        },
        setValue: function(e, t) {
            e = e || this;
            if (t = t[1], e.get(0).multiple) {
                e.get(0).multipleValue = t, e.closest(".foldertree-container").find("a.foldertree-text").removeClass("selected"), e.closest(".foldertree-container").find("a.foldertree-text").parent().removeClass("selected");
                for (var n = 0; n < e.get(0).multipleValue.length; n++) e.closest(".foldertree-container").find("a.foldertree-text[data-path='" + e.get(0).multipleValue[n] + "']").click();
                return e
            }
            return e.val(t), e
        },
        getValue: function(e) {
            return (e = e || this).val()
        },
        reset: function(e) {
            return (e = e || this).val("")
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("keyword", {
        defaults: {
            fieldLabel: null,
            addBtnText: e.su.CHAR.OPERATION.ADD_A_NEW_KEYWORD,
            removeBtnText: e.su.CHAR.OPERATION.REMOVE,
            keywordType: "textbox",
            keywordProperty: {
                fieldLabel: null,
                cls: "inline-block"
            },
            columns: 3,
            maxHeight: 160,
            maxKeys: 99999,
            maxKeysText: e.su.CHAR.OPERATION.KEYWORD_MAX_OVERFLOW,
            keyNumbers: 0,
            keyTag: 0
        },
        create: function(t, n) {
            var a = this;
            a.each(function(a, s) {
                var i = e(s);
                e.extend(s, t, n);
                var r = '<div class="container widget-container keyword-container empty' + this.cls + '">';
                null !== this.fieldLabel && (r += '<div class="widget-fieldlabel-wrap ' + this.labelCls + '">', r += '<label class="widget-fieldlabel keyword-fieldlabel">' + this.fieldLabel + "</label>", "" !== this.fieldLabel && (r += '<span class="widget-separator">' + this.separator + "</span>"), r += "</div>"), r += '<div class="widget-wrap keyword-container-wrap">', r += '<div class="keyword-btn-container">', r += '<a class="keyword-btn keyword-add-btn" href="javascript:void(0);">', r += '<span class="keyword-add-btn-wrap">', r += '<span class="keyword-icon add-icon icon"></span>', r += '<span class="keyword-text add-text text">' + s.addBtnText + "</span>", r += "</span>", r += '<div class="keyword-border-left-top"></div>', r += '<div class="keyword-border-left-bottom"></div>', r += '<div class="keyword-border-right-top"></div>', r += '<div class="keyword-border-right-bottom"></div>', r += "</a>", r += '<span class="keyword-overflow-warning hidden">' + this.maxKeysText + "</span>", r += "</div>", r += '<div class="keyword-container-div">', r += "<table>", r += '<tbody class="keyword-container-body">', r += "</tbody>", r += "</table>", r += "</div>", r += "</div>";
                var d = e(r += "</div>");
                i.replaceWith(d), d.append(i.addClass("hidden"))
            });
            return a.closest("div.keyword-container").delegate("a.keyword-remove-btn", "click", function(t) {
                t.stopPropagation(), t.preventDefault(), a.keyword("removeKey", e(this).attr("data-index"))
            }).delegate("a.keyword-add-btn", "click", function(t) {
                t.stopPropagation(), t.preventDefault(), e(this).hasClass("disabled") || a.keyword("addKey", "")
            }), a
        },
        addKey: function(t, n) {
            if ((t = t || this).keyword("hasEmpty")) return t;
            var a = t.get(0),
                s = (n = n[1] || "", a.keywordType),
                i = a.keywordProperty,
                r = a.columns || 1,
                d = t.closest("div.keyword-container"),
                o = d.find("div.keyword-container-div tbody.keyword-container-body");
            if (a.maxKeys <= a.keyNumbers) return t;
            d.removeClass("empty");
            var l = o.find("tr:last");
            (l.find("td.keyword-td").length >= r || 0 == l.length) && o.append(e("<tr></tr>")), l = o.find("tr:last");
            var c = e('<td class="keyword-td" style="display: none; width: ' + a.tdWidth + 'px;"></td>');
            l.append(c), a.keyTag++, a.keyNumbers++;
            var p = e('<input class="keyword-content" data-index="' + a.keyTag + '" />');
            c.append(p), p[s](i)[s]("setValue", n);
            var u = '<a class="keyword-btn keyword-remove-btn" href="javascript:void(0);" data-index="' + a.keyTag + '">';
            return u += '<span class="keyword-icon remove-icon icon"></span>', u += '<span class="keyword-text remove-text text">' + a.removeBtnText + "</span>", u += "</a>", c.append(e(u)).fadeIn(250), a.maxKeys <= a.keyNumbers && (d.find("a.keyword-add-btn").addClass("disabled"), d.find("span.keyword-overflow-warning").css("display", "inline-block")), t
        },
        getKeyByIndex: function(e, t) {
            e = e || this, t = t[1];
            return e.closest("div.keyword-container").find("input.keyword-content").get(t)
        },
        removeKey: function(t, n) {
            var a = (t = t || this).get(0),
                s = t.closest("div.keyword-container");
            n = n[1];
            a.keyNumbers--;
            var i = s.find("a.keyword-remove-btn[data-index=" + n + "]").closest("td.keyword-td"),
                r = i.closest("form.form-panel");
            return 0 != i.find("div.error input.text-text").length && (r.find(".form-error-tips").css("display", "none"), r.find("div.error").removeClass("error")), i.fadeOut(350, function() {
                e(this).remove(), t.keyword("refreshLayout")
            }), a.maxKeys <= a.keyNumbers || (s.find("a.keyword-add-btn").removeClass("disabled"), s.find("span.keyword-overflow-warning").css("display", "none")), t
        },
        refreshLayout: function(t, n) {
            var a = (t = t || this).get(0).columns,
                s = t.closest("div.keyword-container"),
                i = s.find("div.keyword-container-div tbody.keyword-container-body"),
                r = s.find("td.keyword-td");
            r.detach(), i.empty();
            for (var d = 0, o = (n = 0, r.length); n < o; n++) {
                var l = e(r[n]);
                d >= a || 0 == d ? (i.append(e("<tr></tr>")), d = 1) : d++, i.find("tr:last").append(l), l.find("a.keyword-remove-btn").attr("data-index", n)
            }
            return 0 == r.length && s.addClass("empty"), t
        },
        getValue: function(t) {
            for (var n = [], a = (t = t || this).closest("div.keyword-container").find("div.keyword-container-div tbody.keyword-container-body").find("input.keyword-content"), s = 0, i = a.length; s < i; s++) {
                var r = a.eq(s).val();
                "" != r && n.push(r)
            }
            return e.su.json.toJSONString(n)
        },
        setValue: function(t, n) {
            t = t || this, n = n[1] || "";
            var a = t.closest("div.keyword-container");
            a.find("div.keyword-container-div tbody.keyword-container-body");
            n = e.su.json.parseJSON(n), t.keyword("removeAll");
            for (var s = 0, i = n.length; s < i; s++) t.keyword("addKey", n[s]);
            return 0 == i && a.addClass("empty"), t
        },
        removeAll: function(e) {
            var t = (e = e || this).get(0),
                n = e.closest("div.keyword-container");
            return n.find("div.keyword-container-div tbody.keyword-container-body").empty(), t.keyTag = 0, t.keyNumbers = 0, n.addClass("empty"), n.find("a.keyword-add-btn").removeClass("disabled"), n.find("span.keyword-overflow-warning").css("display", "none"), e
        },
        removeEmpty: function(e) {
            for (var t = (e = e || this).get(0), n = e.closest("div.keyword-container").find("div.keyword-container-div tbody.keyword-container-body"), a = (t.keywordType, n.find("input.keyword-content")), s = 0, i = a.length; s < i; s++) {
                var r = a.eq(s);
                "" == r.val() && e.keyword("removeKey", r.attr("data-index"))
            }
            return e
        },
        hasEmpty: function(e) {
            for (var t = (e = e || this).get(0), n = e.closest("div.keyword-container").find("div.keyword-container-div tbody.keyword-container-body"), a = t.keywordType, s = n.find("input.keyword-content"), i = 0, r = s.length; i < r; i++) {
                var d = s.eq(i);
                if ("" == d.val()) return d[a]("setError"), !0
            }
            return !1
        },
        setMaxKeys: function(e, t) {
            var n = (e = e || this).get(0),
                a = t[1],
                s = e.closest("div.keyword-container");
            return a && (n.maxKeys = a), n.maxKeys <= n.keyNumbers && (s.find("a.keyword-add-btn").addClass("disabled"), s.find("span.keyword-overflow-warning").css("display", "inline-block")), e
        },
        validate: function(e) {
            for (var t = (e = e || this).get(0), n = e.closest("div.keyword-container").find("div.keyword-container-div tbody.keyword-container-body"), a = t.keywordType, s = !0, i = n.find("input.keyword-content"), r = i.length, d = 0; d < r - 1; d++) {
                var o = i.eq(d);
                if ("" == o.val()) {
                    if (!t.allowBlank) return o[a]("setError"), !1
                } else if (!o[a]("validate")) return !1
            }
            if (r)
                if ("" == (o = i.eq(r - 1)).val()) e.keyword("removeKey", r - 1);
                else if (!o[a]("validate")) return !1;
            if (t.validator && (s = t.validator.call(e)), s) {
                var l = e.keyword("getValue");
                return e.val(l), !0
            }
            return !1
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("charts", {
        defaults: {
            store: null,
            axis: [{
                position: "bottom",
                fields: "name",
                title: "Name"
            }, {
                position: "left",
                fields: "data",
                title: "Data"
            }, {
                position: "right",
                fields: "data"
            }],
            series: [{
                type: "bar",
                xField: "name",
                yField: ["data"]
            }]
        },
        create: function(t, n) {
            return this.each(function(a, s) {
                var i = e(s);
                e.extend(s, t, n);
                var r = '<div class="container widget-container charts-container">';
                r += '<div class="charts-bg">', r += '<div class="bg-container">', r += "<table>", r += "</table>", r += "</div>", r += '<div class="axis-container">', r += "</div>", r += "</div>", r += '<div class="canvas-container">', r += "</div>";
                var d = e(r += "</div>");
                i.replaceWith(d)
            }), this
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("grid", {
        defaults: {
            columns: [],
            store: null,
            operation: null,
            sortable: !1,
            paging: null,
            editor: null,
            update: "operation",
            autoRefresh: !1,
            refreshDuration: 500,
            statusValidate: null,
            minLines: 0,
            maxLines: 0,
            rows: [],
            promptTextSuccessed: e.su.CHAR.OPERATION.GRID_SAVED,
            promptTextFailed: e.su.CHAR.OPERATION.GRID_FAILED,
            noneSelectedMsgText: e.su.CHAR.OPERATION.GRID_NONE_SELECT,
            deleteConfirmMsgText: e.su.CHAR.OPERATION.GRID_DELETE_COMFIRM,
            maxRulesMsgText: e.su.CHAR.OPERATION.GRID_MAX_RULES,
            deleteAllConfirmMsgText: e.su.CHAR.OPERATION.GRID_DELETE_ALL_COMFIRM,
            statusValidMsgText: "",
            maxRulesProperty: "max_rules",
            showPrompt: !0
        },
        create: function(t, n) {
            var a = this;
            a.each(function(s, i) {
                var r = e(i);
                e.extend(this, t, n), i.id = i.id || e.su.randomId("gird"), i.isPanel || e(i).panel(n).addClass("grid-panel");
                var d = this.columns;
                if (0 === d.length) return !1;
                var o = "";
                i.sortable && (o = '<button class="grid-header-btn btn-sort"></button>');
                var l = '<style type="text/css">',
                    c = '<div class="container grid-container">';
                c += '<div class="container grid-header-container">', c += '<table border="0" cellspacing="0" cellpadding="0">', c += '<tr class="grid-header-tr">';
                for (var p = 0; p < d.length; p++) {
                    var u = d[p];
                    u.cls = u.cls || "", u.dataIndex = u.dataIndex || u.name || "", u.renderer = u.renderer || function(t) {
                        return e.su.func.escapeHtml(t)
                    }, u.width && (l += "div#" + i.id + " th.grid-header-" + p + ",", l += "div#" + i.id + " td.grid-content-td-" + p, l += "{width:" + u.width + "px;}");
                    var g = "";
                    switch (u.xtype) {
                        case "checkcolumn":
                            g += '<div class="checkbox-group-container grid-header-checkbox checkcolumn inline">', g += '<div class="widget-wrap">', g += '<label class="checkbox-label">', g += '<input class="checkbox-checkbox" type="checkbox" value=""/>', g += '<span class="icon"></span>', g += "</label>", g += "</div>", g += "</div>", u.text = u.text || "", u.name = u.name || "select";
                            break;
                        case "rownumberer":
                            u.text = u.text || e.su.CHAR.GRID.ID, u.name = u.name || "seq";
                            break;
                        case "settings":
                            u.text = u.text || e.su.CHAR.GRID.MODIFY, u.name = u.name || "settings", u.type = u.type || "all";
                            break;
                        case "statuscolumn":
                            u.text = u.text || e.su.CHAR.GRID.STATUS, u.dataIndex = u.dataIndex || "status", u.name = u.name || u.dataIndex;
                            break;
                        default:
                            u.text = u.text || "", u.name = u.name || u.dataIndex
                    }
                    c += '<th class="grid-header grid-header-' + p + " " + u.dataIndex + (p == d.length - 1 ? " lst" : "") + '" name="' + u.dataIndex + '">', c += g, c += '<span class="content ' + u.xtype + '">' + u.text + "</span>", c += o, c += "</th>"
                }
                c += "</tr>", c += "</table>", c += "</div>", c += '<div class="grid-content-container-outer">', c += '<div class="grid-content-container">', c += '<table border="0" cellspacing="0" cellpadding="0">', c += '<tbody class="grid-content-data">', c += "</tbody>", c += "</table>", c += "</div>", c += "</div>";
                var f = e(c += "</div>");
                e(i).find("div.panel-content-container").append(f), f.find("tbody.grid-content-data").append(a.grid("initEmptyRow")), l += "div#" + i.id + " div.grid-content-container{";
                var v = f.find("tr.grid-content-tr").outerHeight();
                if (i.minLines && (l += "min-height:" + i.minLines * v + "px;"), i.maxLines && (l += "max-height:" + i.maxLines * v + "px;", f.addClass("allow-scroll")), l += "}", l += "</style>", f.prepend(e(l)), !i.store) return null;
                i.store.isStore || (i.store = new e.su.Store(i.store)), this.isGrid = !0, i.operation && r.grid("initTBar"), i.editor && r.grid("initEditor"), i.paging && r.grid("initPaging")
            });
            var s = a.get(0),
                i = s.store;
            s.rows = [], e(i).on("ev_loaddata", function(t, n, i) {
                if (a.grid("isEditing") && e(s.editor).editor("cancelEdit"), a.grid("load", n), i) {
                    var r = i[s.maxRulesProperty];
                    s.maxRules = r || 0
                }
            }), "operation" == i.insertMode && e(i).on("ev_insertdata", function(e, t, n) {
                a.grid("insert", t, n), a.find("tr.grid-content-tr.add").remove(), a.find("tr.grid-content-tr.empty").remove()
            }), "operation" == i.updateMode && e(i).on("ev_updatedata", function(e, t, n, s) {
                a.grid("update", t, n, s)
            }), "operation" == i.updateMode && e(i).on("ev_updatecolumns", function(e, t, n) {
                a.grid("updateColumns", t, n)
            }), "operation" == i.removeMode && e(i).on("ev_removedata", function(e, t, n) {
                a.grid("remove", t)
            }), a.delegate("tr.grid-content-tr", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = e(this).attr("data-key"),
                    s = a.grid("getStore");
                if (s && n !== undefined && "undefined" !== n) {
                    var i = s.getData(n);
                    a.trigger("ev_lineclicked", [n, i])
                }
                return !1
            }), a.delegate("td.grid-content-td-check-column label.checkbox-label", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = (i = e(this)).closest("tr.grid-content-tr"),
                    s = i.find("input[type=checkbox]");
                n.toggleClass("selected"), n.hasClass("selected") ? (s.prop("checked", !0), i.addClass("checked")) : (s.prop("checked", !1), i.removeClass("checked"));
                var i, r = r = a.find("tr.grid-content-tr"),
                    d = (i = a.find("tr.grid-header-tr label.checkbox-label")).closest("div.checkbox-group-container");
                if (r.length > 0) {
                    for (var o = 0; o < r.length && (e(r[o]).hasClass("disabled") || e(r[o]).hasClass("selected")); ++o);
                    o != r.length && (d.removeClass("selected"), i.removeClass("checked"));
                    for (o = 0; o < r.length && (e(r[o]).hasClass("disabled") || e(r[o]).hasClass("selected")); ++o);
                    o == r.length && (d.addClass("selected"), i.addClass("checked"))
                }
                return !1
            }).delegate("th.grid-header div.checkcolumn label.checkbox-label", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = e(this),
                    s = e(this).closest("div.checkbox-group-container"),
                    i = a.find("tr.grid-content-tr");
                return !i.hasClass("empty") && (s.hasClass("selected") ? (s.removeClass("selected"), i.removeClass("selected"), i.find("label.checkbox-label").removeClass("checked"), i.find("input[type=checkbox]").prop("checked", !1), n.find("input[type=checkbox]").prop("checked", !1), n.removeClass("checked")) : (s.addClass("selected"), i.addClass("selected"), i.find("input[type=checkbox]").prop("checked", !0), i.find("label.checkbox-label").addClass("checked"), n.find("input[type=checkbox]").prop("checked", !0), n.addClass("checked")), !1)
            });
            var r = !1,
                d = !1;
            a.delegate("a.grid-content-btn.grid-content-btn-status", "click", function(t) {
                t.preventDefault(), t.stopPropagation();
                var n = e(this);
                if (!e(this).closest("tr.grid-content-tr").hasClass("disabled")) {
                    var s = a.grid("getEditor");
                    if (s && s.isEditor && s.editing) e(s).editor("shake");
                    else {
                        var i = a.get(0),
                            d = n.attr("data-key"),
                            o = n.attr("data-value"),
                            l = n.attr("data-on"),
                            c = n.attr("data-off"),
                            p = n.attr("data-name"),
                            u = a.grid("getStore"),
                            g = u.keyProperty,
                            f = u.getData(d);
                        if (i.statusValidate) {
                            if (!(i.statusValidate(f, u.data) || !1)) return void i.statusValidMsg.msg("show")
                        }
                        var v = {};
                        v[p] = o === l ? c : l;
                        var h = e.extend({}, f, v);
                        delete h[g], r && (clearTimeout(r), r = !1), r = setTimeout(function() {
                            a.grid("runProgress"), u.update(d, {
                                old: e.su.json.toJSONString(f),
                                "new": e.su.json.toJSONString(h)
                            }, function() {
                                a.grid("prompt", !0)
                            }, function() {
                                a.grid("prompt", !1)
                            })
                        }, 500)
                    }
                }
            }).delegate("a.grid-content-btn.grid-content-btn-delete", "click", function(t) {
                t.preventDefault(), t.stopPropagation();
                var n = e(this);
                if (!n.closest("tr.grid-content-tr").hasClass("disabled")) {
                    var s = n.attr("data-key"),
                        r = a.grid("getEditor");
                    r == undefined ? (i = a.get(0).store, d && (clearTimeout(d), d = !1), d = setTimeout(function() {
                        a.grid("runProgress"), i.remove([s], {}, function() {
                            a.grid("prompt", !0)
                        }, function() {
                            a.grid("prompt", !1)
                        }, function() {
                            a.grid("prompt", !1)
                        })
                    }, 500)) : r && r.isEditor && (!1 === r.editing ? (i = a.get(0).store, d && (clearTimeout(d), d = !1), d = setTimeout(function() {
                        a.grid("runProgress"), i.remove([s], {}, function() {
                            a.grid("prompt", !0)
                        }, function() {
                            a.grid("prompt", !1)
                        }, function() {
                            a.grid("prompt", !1)
                        })
                    }, 500)) : e(r).editor("shake"))
                }
            });
            var o = a.get(0);
            return o.autoRefreshTime = 0, o.autoRefresh && (o.autoRefreshTime = setTimeout(function(e) {
                a.grid("getStore").load()
            }, o.refreshDuration)), a
        },
        initRow: function(t, n) {
            for (var a = (t = t || this).get(0), s = n[1] || 0, i = n[2], r = i[a.store.keyProperty], d = t.grid("getColumns"), o = '<tr class="grid-content-tr grid-content-tr-' + r + '" data-key="' + r + '" >', l = d.length, c = [], p = 0; p < l; p++) {
                var u = d[p],
                    g = i[u.dataIndex] == undefined || "" === i[u.dataIndex] ? "---" : i[u.dataIndex],
                    f = 0 === p ? "fst" : "",
                    v = p === l - 1 ? "lst" : "";
                switch (u.xtype) {
                    case "rownumberer":
                        o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-row-numberer " + f + " " + v + " " + u.cls + '" name="row-numberer">', o += '<span class="grid-row-numberer content">' + (s + 1) + "</span>", o += "</td>";
                        break;
                    case "checkcolumn":
                        o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-check-column " + f + " " + v + '" name="check-column">', o += '<div class="checkbox-group-container">', o += '<div class="widget-wrap">', o += '<label class="checkbox-label">', o += '<input class="checkbox-checkbox" type="checkbox" value="' + r + '"/>', o += '<span class="icon"></span>', o += "</label>", o += "</div>", o += "</div>", o += '<span class="content">--</span>', o += "</td>";
                        break;
                    case "statuscolumn":
                        var h = "",
                            m = "",
                            b = "",
                            w = u.trueValue || "on",
                            y = u.falseValue || "off";
                        i[u.dataIndex] === w ? (h = e.su.CHAR.GRID.ENABLED, m = "enabled", b = w) : (h = e.su.CHAR.GRID.DISABLED, m = "disabled", b = y), o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-status-column " + f + " " + v + '" name="check-column">', o += '<a href="javascript:void(0);" data-index="' + s + '" data-name="' + u.dataIndex + '" data-value="' + b + '" data-key="' + r + '" data-on="' + w + '" data-off="' + y + '" class="grid-content-btn grid-content-btn-status btn-status ' + m + '">', o += '<span class="icon"></span>', o += '<span class="text">' + h + "</span>", o += "</a>", o += "</td>";
                        var x = '<div class="grid-warning-msg warning">';
                        x += '<h4 class="title">', x += '<span class="icon"></span>', x += '<span class="text">' + a.statusValidMsgText + "</span>", x += "</h4>", x += "</div>";
                        var k = e('<div class="grid-max-rules-msg"></div>').msg({
                            type: "alert",
                            cls: "grid-popup-msg",
                            innerHTML: x
                        });
                        a.statusValidMsg = k;
                        break;
                    case "settings":
                        o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-settings-column " + f + " " + v + '" name="settings-column">', "edit" != u.type && "all" != u.type || (o += '<a href="javascript:void(0);" data-index="' + s + '" data-key="' + r + '" class="grid-content-btn grid-content-btn-edit btn-edit">', o += '<span class="icon"></span>', o += '<span class="text">' + e.su.CHAR.OPERATION.EDIT + "</span>", o += "</a>"), "delete" != u.type && "all" != u.type || (o += '<a href="javascript:void(0);" data-index="' + s + '" data-key="' + r + '" class="grid-content-btn grid-content-btn-delete btn-delete">', o += '<span class="icon"></span>', o += '<span class="text">' + e.su.CHAR.OPERATION.DELETE + "</span>", o += "</a>"), o += "</td>";
                        break;
                    case "actioncolumn":
                        var C = u.items;
                        o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-action-column " + f + " " + v + '" name="action-column">', o += '<div class="grid-content-td-wrap">';
                        for (var T = 0; T < C.length; T++) {
                            o += '<input class="actioncolumn-input" data-index="' + s + '" data-type="' + (S = C[0]).xtype + '" data-property="' + u.dataIndex + '" data="' + u.renderer.call(t, g, s) + '" />'
                        }
                        o += "</div>", o += "</td>", c.push(p);
                        break;
                    default:
                        o += '<td class="grid-content-td grid-content-td-' + p + " grid-content-td-" + u.name + " " + f + " " + v + " " + u.cls + '" name="' + u.name + '">', o += '<div class="content">' + u.renderer.call(t, g, s, i) + "</div>", o += "</td>"
                }
            }
            var R = e(o += "</tr>");
            if (c.length > 0)
                for (T = 0; T < c.length; T++)
                    for (var E = c[T], I = (C = d[E].items, R.find("td.grid-content-td-" + E).find("input.actioncolumn-input")), A = I.attr("data-index"), P = I.attr("data-property"), N = (g = t.grid("getStore").data[A] || {}, 0); N < C.length; N++) {
                        var O = {};
                        A = (S = C[N]).dIndex;
                        if (S.properties)
                            for (var D = S.properties, H = 0; H < D.length; H++) {
                                var L = D[H];
                                L.value === undefined || null === L.value ? O[L.property] = L.index : O[L.property] = i[L.index] === L.value
                            }
                        var S, V = I.eq(N),
                            _ = (S = C[N]).xtype,
                            M = (A = S.dIndex, S.dataIndex || P),
                            j = V.attr("data-index");
                        if ("html" == _) {
                            var B = S.renderer || function(e, t) {
                                return "<span>" + e + "</span>"
                            };
                            o = "";
                            if (A && "" != A) {
                                var W = "";
                                g[P] && (W = g[P][A] || ""), o = B(W, g)
                            } else o = B(g[M], g, j);
                            V.replaceWith(e(o))
                        } else if (V[_](e.extend({}, S, O)), A && "" != A) {
                            if (g[P]) {
                                W = "";
                                g[P] && (W = g[P][A] || ""), V[_]("setValue", W)
                            }
                        } else V[_]("setValue", g[M])
                    }
            return R
        },
        initEmptyRow: function(t) {
            for (var n = '<tr class="grid-content-tr empty">', a = 0, s = (t = t || this).grid("getColumns").length; a < s; a++) {
                n += '<td class="grid-content-td grid-content-td-' + a + " " + (a == s - 1 ? "lst" : "") + '">--</td>'
            }
            return e(n += "</tr>")
        },
        initTBar: function(t, n) {
            var a = (t = t || this).get(0);
            if (!a) return null;
            var s = e.type(a.operation),
                i = null;
            if ("string" === s) i = a.operation.split("|");
            else {
                if ("array" !== s) return null;
                i = a.operation
            }
            a.operation = i;
            for (var r = '<div class="operation-container">', d = 0, o = i.length; d < o; d++) {
                var l = 0 === d ? "fst" : "",
                    c = d === o - 1 ? "lst" : "";
                switch (i[d]) {
                    case "add":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-add ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.ADD + "</span>", r += "</a>";
                        var p = '<div class="grid-warning-msg warning">';
                        p += '<h4 class="title">', p += '<span class="icon"></span>', p += '<span class="text">' + a.maxRulesMsgText + "</span>", p += "</h4>", p += "</div>";
                        var u = e('<div class="grid-max-rules-msg"></div>').msg({
                            type: "alert",
                            cls: "grid-popup-msg",
                            innerHTML: p
                        });
                        a.maxRulesMsg = u;
                        break;
                    case "edit":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-edit ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.EDIT + "</span>", r += "</a>";
                        break;
                    case "prompt":
                        r += '<div class="grid-prompt hidden widget-container successed inline-block left">', r += '<div class="content">', r += '<span class="icon"></span>', r += '<span class="text text-successed">' + a.promptTextSuccessed + "</span>", r += '<span class="text text-failed">' + a.promptTextFailed + "</span>", r += "</div>", r += "</div>", a.showPrompt = !0;
                        break;
                    case "delete":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-delete ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.DELETE + "</span>", r += "</a>";
                        p = '<div class="grid-warning-msg warning">';
                        p += '<h4 class="title">', p += '<span class="icon"></span>', p += '<span class="text">' + a.noneSelectedMsgText + "</span>", p += "</h4>", p += "</div>";
                        var g = e('<div class="grid-none-selected-msg"></div>').msg({
                            type: "alert",
                            cls: "grid-popup-msg",
                            innerHTML: p
                        });
                        p = '<div class="grid-warning-msg warning">', p += '<h4 class="title">', p += '<span class="icon"></span>', p += '<span class="text">' + a.deleteConfirmMsgText + "</span>", p += "</h4>", p += "</div>";
                        var f = e('<div class="grid-delete-comfirm-msg"></div>').msg({
                            type: "prompt",
                            cls: "grid-popup-msg",
                            innerHTML: p,
                            okHandler: function(e) {
                                var n = t.grid("getSelected"),
                                    a = t.grid("getStore");
                                n.length > 0 && (t.grid("runProgress"), a.remove(n, {}, function() {
                                    t.grid("prompt", !0)
                                }, function() {
                                    t.grid("prompt", !1)
                                }, function() {
                                    t.grid("prompt", !1)
                                }))
                            }
                        });
                        a.noneSelectMsg = g, a.deleteConfirmMsg = f;
                        break;
                    case "deleteAll":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-delete-all ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.DELETE_ALL + "</span>", r += "</a>";
                        p = '<div class="grid-warning-msg warning">';
                        p += '<h4 class="title">', p += '<span class="icon"></span>', p += '<span class="text">' + a.noneSelectedMsgText + "</span>", p += "</h4>", p += "</div>";
                        g = e('<div class="grid-none-selected-msg"></div>').msg({
                            type: "alert",
                            cls: "grid-popup-msg",
                            innerHTML: p
                        }), p = '<div class="grid-warning-msg warning">';
                        p += '<h4 class="title">', p += '<span class="icon"></span>', p += '<span class="text">' + a.deleteAllConfirmMsgText + "</span>", p += "</h4>", p += "</div>";
                        f = e('<div class="grid-delete-comfirm-msg"></div>').msg({
                            type: "prompt",
                            cls: "grid-popup-msg",
                            innerHTML: p,
                            okHandler: function(e) {
                                for (var n = t.grid("getStore"), a = n.keyProperty, s = [], i = n.data, r = 0, d = i.length; r < d; r++) s.push(i[r][a]);
                                s.length > 0 && n.remove(s, {}, null, function() {
                                    t.grid("prompt", !1)
                                }, function() {
                                    t.grid("prompt", !1)
                                })
                            }
                        });
                        a.noneSelectMsg = g, a.deleteConfirmMsg = f;
                        break;
                    case "enable":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-enable ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.ENABLE + "</span>", r += "</a>";
                        break;
                    case "disable":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-disable ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.DISABLE + "</span>", r += "</a>";
                        break;
                    case "search":
                        r += '<div class="container widget-container text-container search-container inline">', r += '<span class="widget-wrap text-wrap search-wrap">', r += '<input type="text" class="text-text search-text" value="' + e.su.CHAR.OPERATION.SEARCH + '" />', r += '<span class="pos"></span>', r += '<a href="javascript:void(0);" class="search-switch"></a>', r += "</span>", r += "</div>";
                        break;
                    case "refresh":
                        r += '<a href="javascript:void(0);" class="operation-btn btn-refresh ' + l + " " + c + '">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.REFRESH + "</span>", r += "</a>";
                        break;
                    case "autoRefresh":
                        r += '<input class="operation-auto-refresh ' + l + " " + c + '"/>';
                        break;
                    default:
                        var v = i[d].xtype;
                        v && (r += '<input operation-index="' + d + '" class="operation-user-defined operation-' + d + " " + l + " " + c + " " + v + '"/>')
                }
            }
            var h = e(r += "</div>");
            if (a.isPanel) {
                t.panel("getContainer").find("div.panel-tbar-container").append(h), h.find("input.operation-auto-refresh").checkbox({
                    fieldLabel: null,
                    items: [{
                        boxlabel: e.su.CHAR.GRID.AUTO_REFRESH,
                        inputValue: !0,
                        name: "auto-refesh"
                    }],
                    cls: "inline"
                }).on("ev_change", function(e, n, s) {
                    clearTimeout(a.autoRefreshTime), s.length > 0 && "auto-refesh" === s[0] && (a.autoRefreshTime = setTimeout(function() {
                        t.grid("getStore").load()
                    }, a.refreshDuration))
                }), h.find("input.operation-auto-refresh").checkbox("setValue", a.autoRefresh), a.autoRefresh && (a.autoRefreshTime = setInterval(function() {
                    t.grid("isEditing") || t.grid("getStore").load()
                }, a.refreshDuration)), h.find("input.operation-user-defined").each(function(t) {
                    var n = e(this),
                        a = n.attr("operation-index"),
                        s = i[a],
                        r = s.xtype;
                    switch (r) {
                        case "totalCount":
                            s = e.extend({
                                fieldLabel: "",
                                labelCls: "s",
                                readOnly: !0,
                                inputCls: "xs",
                                value: 0,
                                cls: "inline-block"
                            }, s), n.textbox(s);
                            break;
                        case "display":
                            s = e.extend({
                                cls: "grid-display",
                                fieldLabel: null,
                                labelCls: "s",
                                readOnly: !0,
                                inputCls: "xl grid-display",
                                cls: "inline-block"
                            }, s), n.textbox(s);
                            break;
                        default:
                            s = e.extend(s, {
                                cls: "inline-block"
                            }), n[r](s)
                    }
                }), h.delegate("a.btn-add", "click", function(n) {
                    if (n.stopPropagation(), n.preventDefault(), !e(this).hasClass("disabled")) {
                        var a = t.get(0),
                            s = t.grid("getEditor"),
                            i = t.grid("isEditing");
                        if ("function" != e.type(a.beforeStartAdd) || a.beforeStartAdd())
                            if (!0 === i) e(s).editor("shake");
                            else if (!1 === i) {
                            var r = a.paging,
                                d = t.grid("getStore");
                            if (a.maxRules && a.maxRules <= d.data.length) return void a.maxRulesMsg.msg("show");
                            r && r.isPaging && e(r).paging("goToPage", 0), e(s).editor("startEdit", "add")
                        }
                    }
                }).delegate("a.btn-delete", "click", function(n) {
                    n.stopPropagation(), n.preventDefault();
                    var a = t.grid("getEditor"),
                        s = t.get(0);
                    if (!0 === t.grid("isEditing")) e(a).editor("shake");
                    else {
                        0 == t.grid("getSelected").length ? s.noneSelectMsg.msg("show") : s.deleteConfirmMsg.msg("show")
                    }
                }).delegate("a.btn-delete-all", "click", function(n) {
                    n.stopPropagation(), n.preventDefault();
                    var a = t.grid("getEditor"),
                        s = t.get(0);
                    if (!0 === t.grid("isEditing")) e(a).editor("shake");
                    else {
                        0 == t.grid("getStore").data.length ? s.noneSelectMsg.msg("show") : s.deleteConfirmMsg.msg("show")
                    }
                }).delegate("a.btn-refresh", "click", function(e) {
                    e.stopPropagation(), e.preventDefault(), t.grid("runProgress"), t.grid("getStore").load({}, function() {
                        t.grid("prompt", !0)
                    }, function() {
                        t.grid("prompt", !1)
                    }, function() {
                        t.grid("prompt", !1)
                    })
                }), h.delegate("input.search-text", "focus", function(t) {
                    t.stopPropagation(), e(this).closest("div.search-container").addClass("focus")
                }).delegate("input.search-text", "blur", function(t) {
                    t.stopPropagation(), e("div.search-container").removeClass("focus")
                }).delegate("button.operation-btn", "mousedown", function(t) {
                    t.stopPropagation(), e(this).closest("div.button-container").addClass("clicked")
                }).delegate("a.search-switch", "click", function(t) {
                    t.stopPropagation();
                    var n = e(this).closest("div.grid-container"),
                        a = e(this).prevAll("input.search-text").val();
                    n.grid("search", a)
                });
                var m = a.store;
                e(m).on("ev_datachanged", function(e, t, n) {
                    h.find("input.totalCount").textbox("setValue", n.length)
                })
            }
            a.showPrompt && (r = '<div class="container widget-container progressbar-container progressbar-horizontal gird-prompt-progressbar ">', r += '<div class="widget-wrap progressbar-wrap">', r += '<div class="widget-wrap progressbar-content">', r += '<div class="progressbar-value">', r += "</div>", r += "</div>", r += "</div>", h.append(e(r))), a.operation = h.get(0)
        },
        initPaging: function(t, n) {
            var a = (t = t || this).get(0),
                s = {};
            if (!a || !a.paging) return null;
            s = e.extend({
                grid: t
            }, a.paging);
            var i = t.panel("getContainer").find("div.panel-fbar-container"),
                r = e('<input type="hidden" class="hidden paging-input">').paging(s);
            return i.append(r.paging("getContainer")), a.paging = r.get(0), t
        },
        initEditor: function(t, n) {
            var a = (t = t || this).get(0);
            if (!a) return null;
            var s = a.editor;
            if (!s || !s.isEditor) {
                var i = e.type(s),
                    r = {
                        columns: a.columns,
                        grid: t
                    };
                r = "string" == i && "default" !== s ? e.extend(r, {
                    content: s
                }) : e.extend(r, s);
                var d = e('<tr class="editor-container"></tr>').editor(r)
            }
            return a.editor = d.get(0), t
        },
        load: function(e, t) {
            var n = (e = e || this).get(0),
                a = t[1] || n.store.data,
                s = e.grid("getContainer").find("tbody.grid-content-data");
            n.rows = [], s.empty();
            for (var i = 0, r = a.length; i < r && a[i]; i++) {
                var d = e.grid("initRow", i, a[i]);
                n.rows.push(d), s.append(d)
            }
            return e.grid("updateRowNumber"), e.trigger("ev_load", [a]), e
        },
        insert: function(t, n) {
            var a = (t = t || this).get(0),
                s = parseInt(n[1], 10) || 0,
                i = n[2] || [{}],
                r = t.find("tbody.grid-content-data");
            e.isArray(i) || (i = [i]), i.reverse();
            for (var d = 0, o = i.length; d < o; d++) {
                var l = t.grid("initRow", s + d, i[d]);
                0 == s ? r.prepend(l) : l.insertBefore(a.rows[s]), a.rows.splice(s, 0, l)
            }
            return t.grid("updateRowNumber"), t.trigger("ev_insert", [s, i]), t
        },
        update: function(t, n) {
            var a = (t = t || this).get(0).rows,
                s = (t.find("tbody.grid-content-data"), n[1]),
                i = n[2] || 0,
                r = n[3];
            e.isArray(r) && (r = r[0]);
            var d = t.grid("initRow", i, r),
                o = a[i];
            return s == o.attr("data-key") && (o.replaceWith(d), a[i] = d), t.grid("updateRowNumber"), t.trigger("ev_update", [s, i, r]), t
        },
        updateColumns: function(e, t) {
            for (var n = (e = e || this).get(0).rows, a = t[1], s = t[2], i = e.grid("getColumns"), r = "", d = 0; d < n.length; d++)
                for (var o = 0; o < s.length; o++)
                    if (n[d].attr("data-key") == s[o].key) {
                        for (var l = 0; l < a.length; l++)
                            for (var c = 0; c < i.length; c++)
                                if (a[l] == i[c].name) {
                                    r = i[c].renderer(s[o][a[l]], 0, s[o]), e.find("tr.grid-content-tr-" + n[d].attr("data-key") + " td.grid-content-td-" + a[l] + " div.content").html(r);
                                    break
                                } break
                    } return e
        },
        remove: function(t, n) {
            var a = (t = t || this).get(0),
                s = a.rows,
                i = n[1],
                r = {};
            if (i !== undefined && null !== i) {
                "number" === e.type(i) && (i = [i]);
                for (var d = 0, o = i.length; d < o; d++) r[i[d]] = !0
            }
            for (d = s.length - 1; d >= 0; d--) {
                var l = a.rows[d];
                l.attr("data-key") in r && (l.remove(), a.rows.splice(d, 1))
            }
            return t.grid("updateRowNumber"), t.trigger("ev_remove", [i]), t
        },
        removeAllData: function(e, t) {
            return (e = e || this).get(0).rows = [], e.grid("updateRowNumber"), e.trigger("ev_remove", ["all"]), e
        },
        updateRowNumber: function(t, n) {
            var a = (t = t || this).get(0),
                s = a.rows,
                i = s.length,
                r = t.find("tbody.grid-content-data"),
                d = e(a).find("th.grid-header div.checkcolumn label.checkbox-label"),
                o = d.closest("div.checkbox-group-container");
            if (0 == i) {
                var l = t.grid("initEmptyRow");
                return r.empty(), r.append(l), l.css("display", "table-row"), o.removeClass("selected"), d.removeClass("checked"), t
            }
            for (var c = 0; c < i; c++) {
                var p = s[c];
                p && e(p).find("span.grid-row-numberer").html(c + 1)
            }
            var u = t.find("tr.grid-content-tr");
            if (u.length > 0) {
                for (c = 0; c < u.length && (e(u[c]).hasClass("disabled") || e(u[c]).hasClass("selected")); ++c);
                c != u.length && (o.removeClass("selected"), d.removeClass("checked"));
                for (c = 0; c < u.length && (e(u[c]).hasClass("disabled") || e(u[c]).hasClass("selected")); ++c);
                c == u.length && (o.addClass("selected"), d.addClass("checked"))
            }
            return t
        },
        getColumns: function(e) {
            return (e = e || this).get(0).columns
        },
        getSelected: function(t, n) {
            t = t || this, n = n[1];
            var a = [];
            return t.find("tr.grid-content-tr.selected").each(function(t, n) {
                var s = e(n);
                if (!s.hasClass("empty") && !s.hasClass("disabled")) {
                    var i = s.attr("data-key");
                    a.push(i)
                }
            }), a
        },
        getStore: function(e) {
            return (e = e || this).get(0).store || null
        },
        getEditor: function(t) {
            var n = (t = t || this).get(0).editor;
            return n && "object" === e.type(n) && !0 === n.isEditor ? n : undefined
        },
        getDisplay: function(e) {
            (e = e || this).closest("div.grid-panel");
            var t = e.find("input.grid-display");
            return t.length > 0 ? t : null
        },
        search: function(e, t) {
            e = e || this;
            return (t = t[1]) ? e : null
        },
        isEditing: function(e) {
            var t = (e = e || this).grid("getEditor");
            e.get(0).store;
            return t && t.isEditor ? !0 === t.editing : null
        },
        runProgress: function(t) {
            var n = (t = t || this).get(0),
                a = e(n.operation).find("div.gird-prompt-progressbar"),
                s = a.find("div.progressbar-value");
            return s.stop(), s.css("width", "0px"), a.clearQueue().fadeIn(100, function() {
                s.animate({
                    width: "50%"
                }, 5e3)
            }), t
        },
        prompt: function(t, n) {
            var a = (t = t || this).get(0),
                s = n[1],
                i = n[2],
                r = e(a.operation),
                d = r.find("div.gird-prompt-progressbar"),
                o = t.find("tr.grid-content-tr.editing"),
                l = e(t.grid("getEditor")),
                c = r.find("div.grid-prompt"),
                p = t.find("div.editor-buttons-container");
            if (p.length) {
                var u = p.find("button.btn-submit");
                u.length && u.attr("disabled", !1)
            }
            return d.find("div.progressbar-value").clearQueue().animate({
                width: "100%"
            }, 150, function() {
                d.fadeOut(100, function() {
                    s ? (c.find("span.text-successed").html(i || a.promptTextSuccessed), c.removeClass("failed").addClass("successed")) : (c.find("span.text-failed").html(i || a.promptTextFailed), c.removeClass("successed").addClass("failed"), o.addClass("error"), l.addClass("error")), c.fadeIn(50, function() {
                        setTimeout(function() {
                            c.css("display", "none"), l.removeClass("error"), o.removeClass("error")
                        }, 3e3)
                    })
                })
            }), t
        },
        disableRow: function(t, n) {
            var a = (t = t || this).get(0),
                s = a.columns,
                i = (n = n[1], null);
            if (isNaN(n) || (i = a.rows[n]), i) {
                (i = e(i)).addClass("disabled");
                n = 0;
                for (var r = s.length; n < r; n++) {
                    var d = s[n],
                        o = d.items;
                    if ("actioncolumn" === d.xtype)
                        for (var l = 0, c = o.length; l < c; l++) {
                            var p = o[l].xtype,
                                u = d.dataIndex,
                                g = i.find("input[data-property=" + u + "][data-type=" + p + "]");
                            g && "function" == e.type(g[p]) && g[p]("disable")
                        }
                }
            }
            return t
        },
        enableRow: function(t, n) {
            t = t || this;
            if (obj = t.get(0), columns = obj.columns, n = n[1], row = null, isNaN(n) || (row = obj.rows[n]), row) {
                row = e(row), row.removeClass("disabled");
                n = 0;
                for (var a = columns.length; n < a; n++) {
                    var s = columns[n],
                        i = s.items;
                    if ("actioncolumn" === s.xtype)
                        for (var r = 0, d = i.length; r < d; r++) {
                            var o = i[r].xtype,
                                l = s.dataIndex,
                                c = row.find("input[data-property=" + l + "][data-type=" + o + "]");
                            c && "function" == e.type(c[o]) && c[o]("enable")
                        }
                }
            }
            return t
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("editor", {
        defaults: {
            columns: null,
            grid: null,
            editing: !1,
            pluginId: "",
            editingId: null,
            form: null,
            successCallback: null,
            errorCallback: null,
            failCallback: null,
            beforeSubmit: null,
            items: null,
            content: null,
            fields: null
        },
        create: function(t, n) {
            var a = this;
            a.each(function(a, s) {
                e.extend(this, t, n);
                var i = e(s),
                    r = s.columns,
                    d = '<td class="editor-container" colspan="' + r.length + '">';
                d += '<div class="container editor-content-container"></div>', d += '<div class="container editor-buttons-container">', d += '<span class="form-error-tips"></span>', d += '<div class="button-container submit">', d += '<button type="button" class="editor-btn btn-cancel button-button">', d += '<span class="button-button-before"></span>', d += '<span class="button-text text">' + e.su.CHAR.OPERATION.CANCEL + "</span>", d += "</button>", d += "</div>", d += '<div class="button-container submit">', d += '<button type="button" class="editor-btn btn-submit button-button">', d += '<span class="button-button-before"></span>', d += '<span class="button-text text">' + e.su.CHAR.OPERATION.SAVE + "</span>", d += "</button>", d += "</div>", d += "</div>";
                var o = e(d += "</td>");
                i.append(o).addClass("container widget-container editor-container");
                for (var l = i.find("div.editor-content-container"), c = [], p = 0; p < r.length; p++) {
                    var u = r[p],
                        g = r[p]["editor"];
                    if (g) {
                        var f = e("<input />");
                        if (l.append(f), "string" === e.type(g)) f[g]({
                            fieldLabel: u.text || "",
                            name: u.name || u.dataIndex || ""
                        });
                        else {
                            if (!g.xtype) return null;
                            var v = e.extend({}, g, {
                                fieldLabel: u.text || "",
                                name: u.name || u.dataIndex || ""
                            });
                            f[g.xtype](v)
                        }
                        c.push({
                            name: u.name || u.dataIndex || ""
                        })
                    }
                }
                if (s.items) {
                    p = 0;
                    for (var h = s.items.length; p < h; p++) {
                        var m = s.items[p];
                        f = e("<input />");
                        l.append(f), f[m.xtype](e.extend({}, m)), c.push({
                            name: m.name
                        })
                    }
                }
                if (s.content && "default" != s.content) {
                    if (!s.fields) return;
                    l.append(e(s.content).detach())
                }
                e.extend(c, s.fields), e.extend(n, {
                    fields: c
                }), o.form(n), s.pluginId = e.su.randomId("editor"), s.isEditor = !0
            }), a.delegate("button.btn-submit", "click", function(t) {
                t.stopPropagation(), e("button.btn-submit").attr("disabled", !0);
                var n = a.get(0);
                if (n.beforeSubmit) {
                    if (!n.beforeSubmit()) return void e("button.btn-submit").attr("disabled", !1)
                }
                a.editor("completeEdit")
            }), a.delegate("button.btn-cancel", "click", function(e) {
                e.stopPropagation(), a.editor("cancelEdit")
            });
            var s = a.get(0).grid;
            return s && 0 != s.length && s.get(0).isGrid ? (s.delegate("a.grid-content-btn.grid-content-btn-edit", "click", function(t) {
                t.preventDefault(), t.stopPropagation();
                var n = e(this);
                if (!n.closest("tr.grid-content-tr").hasClass("disabled")) {
                    var s = n.attr("data-key"),
                        i = (n.attr("data-index"), a);
                    if (i) {
                        var r = i.get(0);
                        r && r.isEditor && (!1 === r.editing ? i.editor("startEdit", s) : i.editor("shake"))
                    }
                }
            }), a.css("display", "none"), a) : null
        },
        hide: function(e) {
            return (e = e || this).detach().css("display", "none"), e
        },
        shake: function(t) {
            return (t = t || this).queue(function() {
                e(this).addClass("shaking"), e(this).dequeue()
            }), t.delay(80), t.queue(function() {
                e(this).removeClass("shaking"), e(this).dequeue()
            }), t.delay(80), t.queue(function() {
                e(this).addClass("shaking"), e(this).dequeue()
            }), t.delay(80), t.queue(function() {
                e(this).removeClass("shaking"), e(this).dequeue()
            }), t
        },
        startEdit: function(e, t) {
            var n = (e = e || this).get(0),
                a = t[1] || "add",
                s = e.get(0).grid,
                i = s.get(0),
                r = s.get(0).store,
                d = null,
                o = e.find("td.editor-container");
            if (e.editor("hide"), o.form("setNormal"), n.editing = !0, n.editingId = a, n.editingIndex = "add", "add" != a) {
                var l = r.getData(a),
                    c = r.getIndex(a);
                n.editingIndex = c, n.adding = !1, l ? o.form("loadData", l) : o.form("reset"), (d = i.rows[c]) && (d.addClass("editing"), s.grid("disableRow", c))
            } else {
                e.get(0).adding = !0, o.form("reset");
                var p = s.find("tbody.grid-content-data"),
                    u = p.find("tr.grid-content-tr").eq(0);
                u.hasClass("empty") ? d = u : (d = e.grid("initEmptyRow"), p.prepend(d)), d.addClass("editing add disabled")
            }
            return e.insertAfter(d), e.slideDown(300), e.trigger("ev_startEdit", [n.editingIndex, n.editingId]), e
        },
        completeEdit: function(t) {
            var n = (t = t || this).find("td.editor-container"),
                a = t.get(0),
                s = a.grid,
                i = (a.editingIndex, s.get(0).store),
                r = a.editingId;
            if (n.form("validate")) {
                var d = n.form("serialize"),
                    o = null;
                s.grid("runProgress"), "add" != r ? (o = i.getData(r), i.update(r, {
                    old: e.su.json.toJSONString(o),
                    "new": e.su.json.toJSONString(d)
                }, function() {
                    s.grid("prompt", !0), a.successCallback && a.successCallback(arguments), t.editor("cancelEdit")
                }, function() {
                    s.grid("prompt", !1), a.errorCallback && a.errorCallback(arguments)
                }, function() {
                    s.grid("prompt", !1), a.failCallback && a.failCallback(arguments)
                })) : i.insert(0, {
                    old: "add",
                    "new": e.su.json.toJSONString(d)
                }, function() {
                    s.grid("prompt", !0), a.successCallback && a.successCallback(arguments), t.editor("cancelEdit")
                }, function() {
                    s.grid("prompt", !1), a.errorCallback && a.errorCallback(arguments)
                }, function() {
                    s.grid("prompt", !1), a.failCallback && a.failCallback(arguments)
                }), t.get(0).adding = !1
            } else setTimeout(function() {
                e("button.btn-submit").attr("disabled", !1)
            }, 500);
            return t
        },
        cancelEdit: function(e) {
            var t = (e = e || this).get(0),
                n = e.get(0).grid,
                a = n.get(0),
                s = t.editingIndex;
            return "add" !== s ? (a.rows[s].removeClass("editing"), n.grid("enableRow", s)) : n.find("tr.grid-content-tr.add").remove(), e.editor("hide"), t.editing = !1, t.editingIndex = "", n.grid("updateRowNumber"), e
        },
        isEditing: function(e) {
            return !!(e = e || this).get(0).editing
        },
        getEditingId: function(e) {
            return (e = e || this).get(0).editing ? e.get(0).editingId : undefined
        }
    })
}(jQuery),
function(e) {
    e.su.Widget("paging", {
        defaults: {
            numPerPage: 8
        },
        create: function(t, n) {
            var a = this;
            a.each(function(a, s) {
                var i = e(s);
                e.extend(s, t, n);
                var r = '<div class="container widget-container paging-container disabled">';
                r += '<div class="paging-wrap">', r += '<a href="javascript:void(0);" class="paging-btn pageing-btn-prev" data-index="prev">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.PREV + "</span>", r += "</a>", r += '<div class="num-buttons-container">', r += "</div>", r += '<a href="javascript:void(0);" class="paging-btn pageing-btn-next" data-index="next">', r += '<span class="icon"></span>', r += '<span class="text">' + e.su.CHAR.OPERATION.NEXT + "</span>", r += "</a>", r += "</div>";
                e(r += "</div>").append(i.addClass("hidden")), s.isPaging = !0
            });
            var s = a.get(0).grid,
                i = s.get(0).editor;
            s.on("ev_load ev_insert ev_remove", function(e) {
                var t = a.get(0).currentPage;
                a.paging("updateBtns"), a.paging("goToPage", t)
            });
            return a.closest("div.paging-container").delegate("a.paging-btn-num", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = e(this),
                    s = parseInt(n.attr("data-index"), 10);
                n.hasClass("disabled") || (i && i.editing && e(i).editor("cancelEdit"), a.paging("goToPage", s))
            }).delegate("a.pageing-btn-prev", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = e(this);
                n.hasClass("disabled") || (i && i.editing && e(i).editor("cancelEdit"), n.addClass("disabled"), a.paging("goPrev"))
            }).delegate("a.pageing-btn-next", "click", function(t) {
                t.stopPropagation(), t.preventDefault();
                var n = e(this);
                e(this).hasClass("disabled") || (i && i.editing && e(i).editor("cancelEdit"), n.addClass("disabled"), a.paging("goNext"))
            }), a
        },
        updateBtns: function(t) {
            var n = (t = t || this).closest("div.paging-container"),
                a = n.find("div.num-buttons-container"),
                s = t.get(0),
                i = s.numPerPage,
                r = (s.currentPage, s.grid.get(0).rows.length),
                d = Math.ceil(r / i);
            if (s.totalPage = d, 0 == d || 1 == d) n.addClass("disabled");
            else {
                n.removeClass("disabled");
                for (var o = "", l = 0; l < d; l++) o += '<a href="javascript:void(0);" class="paging-btn paging-btn-num pageing-btn-' + l + '" data-index="' + l + '">', o += '<span class="icon"></span>', o += '<span class="text">' + (l + 1) + "</span>", o += "</a>", o += '<span class="dots">...</span>';
                a.empty().append(e(o))
            }
            return t
        },
        goToPage: function(t, n) {
            var a = (t = t || this).closest("div.paging-container"),
                s = t.get(0),
                i = s.grid,
                r = i.get(0).rows,
                d = isNaN(n[1]) ? 0 : n[1],
                o = s.numPerPage,
                l = s.totalPage;
            d >= l && (d = 0);
            var c = a.find("a.paging-btn.pageing-btn-prev"),
                p = a.find("a.paging-btn.pageing-btn-next"),
                u = a.find("a.paging-btn-num"),
                g = a.find("span.dots");
            if (u.removeClass("current"), g.removeClass("more"), u.filter("[data-index=" + d + "]").addClass("current"), l > 7) {
                var f = 0 + d - 2,
                    v = 0 + d + 3 - (l - 1),
                    h = 0,
                    m = 0;
                f > 0 ? v > 0 ? (h = 0 + d - 2 - v, m = 0 + l) : (h = 0 + d - 2, m = 0 + d + 3) : v > 0 ? (h = 0, m = 0 + l) : (h = 0, m = 0 + d + 3 - f), u.addClass("hidden");
                for (var b = h; b < m; b++) u.eq(b).removeClass("hidden");
                f > 1 && u.eq(h).prev("span.dots").addClass("more"), v < 0 && u.eq(m).next("span.dots").addClass("more"), u.filter(":first").removeClass("hidden"), u.filter(":last").removeClass("hidden")
            }
            m = (h = o * d) + o;
            i.find("tr.grid-content-tr").css("display", "none"), i.find("tr.grid-content-tr.empty").css("display", "table-row");
            for (b = h; b < m; b++) {
                var w = r[b];
                w && w.fadeIn(150, function() {
                    e(this).css("display", "table-row")
                })
            }
            return setTimeout(function() {
                0 == d ? (c.addClass("disabled"), p.removeClass("disabled")) : d >= l - 1 ? (c.removeClass("disabled"), p.addClass("disabled")) : (c.removeClass("disabled"), p.removeClass("disabled"))
            }, 180), s.currentPage = d, t
        },
        goPrev: function(e) {
            var t = (e = e || this).get(0).currentPage;
            return --t < 0 ? e : (e.paging("goToPage", t), e)
        },
        goNext: function(e) {
            var t = (e = e || this).get(0),
                n = t.currentPage;
            return ++n >= t.totalPage ? e : (e.paging("goToPage", n), e)
        }
    })
}(jQuery);