Gadgets information
============================================================
0x00000000004297ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429859 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c2f5 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000046ae9a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004bf8a5 : adc al, 0 ; add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x0000000000423e68 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042fdd5 : adc al, 0x13 ; jmp rdx
0x000000000042e3c5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043feca : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004091a4 : adc al, 0x24 ; call 0x405c94
0x000000000049bfea : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ea08 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004c1534 : adc al, 0x31 ; add byte ptr [rax], al ; sbb ah, dh ; cmc ; call qword ptr [rdx]
0x0000000000418cf7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043bbd0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000043f528 : adc al, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004c4134 : adc al, 0x5d ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rdx]
0x000000000041fe6a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f676 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464dde : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ac80 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fdd1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004216b7 : adc al, 0xa ; jmp r10
0x000000000042e533 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046ae98 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f458 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f4b8 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f518 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ad08 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004be314 : adc al, 0xd8 ; std ; jmp rsp
0x00000000004015e9 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422b91 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c3ca : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3a49 : adc al, 0xf9 ; call rax
0x00000000004a3ac9 : adc al, 0xf9 ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3ac5 : adc al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004a3c45 : adc al, 0xf9 ; jmp rax
0x00000000004c5589 : adc al, 0xfa ; jmp rdx
0x0000000000476982 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000049190e : adc al, 9 ; ret 0xa074
0x0000000000429997 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a01 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492dfe : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004967cf : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040d787 : adc al, ch ; push rbx ; ret
0x000000000046420f : adc al, ch ; retf
0x00000000004c2f50 : adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004a3720 : adc bh, ah ; clc ; jmp rax
0x000000000047fdae : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a3a59 : adc bh, cl ; call rax
0x00000000004a3ad9 : adc bh, cl ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3ad5 : adc bh, cl ; jmp qword ptr [rdx]
0x00000000004a3c55 : adc bh, cl ; jmp rax
0x0000000000426e55 : adc bl, ch ; call 0xffffffffc412f7aa
0x0000000000423925 : adc bl, ch ; call 0xffffffffc43ac27a
0x0000000000478f32 : adc bl, ch ; jno 0x478f88 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004839d4 : adc bl, ch ; ret 0x8348
0x00000000004a3488 : adc bl, cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000426844 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b506 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b577 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b4d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b505 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004746b0 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413166 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044fbad : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045070b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fba6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004786af : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a999 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a96d
0x0000000000416b6c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004716f4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041825e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000004409a2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410723 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478b2c : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a44e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043b32a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000044fba7 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004188b3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041d5fd : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000418e45 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000419237 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8b6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000042678a : adc byte ptr [rax + 0x43], bl ; add bl, dh ; ret
0x00000000004786b0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412687 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048847a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004795ce : adc byte ptr [rax + 1], cl ; ret
0x000000000046a968 : adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046a967 : adc byte ptr [rax + 1], r9b ; retf 0x8348
0x0000000000478971 : adc byte ptr [rax - 0x39], cl ; and al, 0x28 ; ret
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474a24 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x0000000000470c31 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000042c3c4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c3e1 ; jne 0x42c3b8 ; ret
0x000000000046afb5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000047081c : adc byte ptr [rax - 0x73], cl ; push rsp ; retf 0xeb08
0x000000000046afb4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440612 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447428 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447d8b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c7da : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000046420c : adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x0000000000409997 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x0000000000409240 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x0000000000463b67 : adc byte ptr [rax - 0x77], cl ; jo 0x463b85 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464e9c : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a99a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a96c
0x0000000000463b27 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e3a3 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416b6d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485cff : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a3a4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c8a9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048ab4d : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047d5f9 : adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000432abf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438277 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b5a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420d73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fd4b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479b09 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041825f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000046cfcc : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x0000000000429442 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000422be0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000422d80 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000042af58 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000042b24c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429ba1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e5aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004242e8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004363c8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048ca00 : adc byte ptr [rax], al ; jne 0x48c9d1 ; jmp 0x48c9d9
0x0000000000418c8a : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000004503fc : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000478ad5 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426968 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c3c8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440487 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400c36 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049ceec : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041ecab : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fe13 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0a2a : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413167 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416622 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a7d7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a7f1 ; ret
0x000000000043e25a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004071ce : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x000000000043ee8d : adc byte ptr [rbx], al ; add cl, ch ; retf 0xfffe
0x0000000000410724 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c654 : adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000479b0d : adc byte ptr [rcx + 0x39], cl ; retf
0x00000000004505a7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fb93 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462230 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ed98 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d38c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418c37 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422c13 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004944b7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043e9d4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416625 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420579 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043eabf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a3d50 : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x00000000004a33a8 : adc byte ptr [rdi - 8], dh ; jmp rax
0x000000000043bde3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000049792b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049642f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000049762f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496d2f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049702f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496727 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004969d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004975d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004978d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496fd4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496cd4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000004966cc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049575d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049557d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495f55 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494e75 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495d75 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044fbae : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045070c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045012c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000443718 : adc byte ptr [rdx + 0x4a], dl ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c7238 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x00000000004302c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000485fda : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000492dfd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a329c : adc byte ptr [rdx], al ; clc ; jmp rax
0x000000000042f22b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f0da : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e6d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ead5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaa9
0x000000000042eb53 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb27
0x000000000042efe5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42efb9
0x000000000042f063 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f037
0x000000000042ead0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaae
0x000000000042eb4e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb2c
0x000000000042efe0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbe
0x000000000042f05e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f03c
0x0000000000421805 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004c19d0 : adc byte ptr [rsi - 0xa], cl ; call qword ptr [rsi]
0x00000000004988dd : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c8a60 : adc byte ptr [rsi], dh ; std ; call rsp
0x000000000049193f : adc byte ptr [rsp - 4], al ; ret
0x0000000000491985 : adc byte ptr [rsp - 8], al ; ret
0x00000000004969d7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049e23a : adc ch, bl ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3c25 : adc cl, bh ; call rax
0x00000000004a3a69 : adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a3ba5 : adc cl, bh ; jmp rsp
0x00000000004527af : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000423915 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004527b2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000047500a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b5cc : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479b01 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464744 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004011ad : adc cl, byte ptr [rdx] ; mov eax, 2 ; syscall
0x00000000004a37d8 : adc dh, 0xf8 ; call rax
0x00000000004a369c : adc dh, ah ; clc ; push rax ; out 0xf8, eax ; call rax
0x00000000004268d0 : adc dh, bh ; ret
0x000000000041b281 : adc dh, dh ; ret 0xf0f
0x000000000048d0f3 : adc dword ptr [rax + 0x39], ecx ; retf 0x840f
0x0000000000479473 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411cc2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f605 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410715 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479b4c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f6dc : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417e3e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004165cc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000463265 : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004760ba : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b24b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429b37 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b14f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424168 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042132b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x0000000000435c47 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004358e2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004358a6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046992f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402f64 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x0000000000435da9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043deac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043dfdf : adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043de7e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429b36 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3ac1 : adc eax, 0x14a2fff9 ; stc ; jmp qword ptr [rdx]
0x00000000004a3a3d : adc eax, 0x1550fff9 ; stc ; call rax
0x00000000004a3c39 : adc eax, 0x1560fff9 ; stc ; jmp rax
0x000000000044f5e6 : adc eax, 0x27c44d ; je 0x44f5f8 ; ret
0x0000000000444267 : adc eax, 0x285d2c ; pop rbx ; ret
0x00000000004b97a4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x00000000004712dd : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000471219 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004296c1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000496429 : adc eax, 0x83490000 ; jmp 0x496449
0x000000000046e4e9 : adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004964d0 : adc eax, 0x894d0000 ; retf
0x000000000046674a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042afae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494c99 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423fe8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041782f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417856
0x00000000004966cf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a439 : adc eax, eax ; ret
0x000000000047a576 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b9445 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046afbc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049bc32 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004421ef : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041563a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004473c1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c924 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452a71 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x0000000000441fcb : adc ecx, eax ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a3add : adc ecx, edi ; jmp qword ptr [rdx]
0x00000000004a3c5d : adc ecx, edi ; jmp rax
0x00000000004a3ba1 : adc ecx, edi ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3a51 : adc edi, ecx ; call rax
0x00000000004a3ad1 : adc edi, ecx ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a3acd : adc edi, ecx ; jmp qword ptr [rdx]
0x00000000004a3c4d : adc edi, ecx ; jmp rax
0x00000000004011ac : adc edx, dword ptr [rdx] ; add byte ptr [rax + 2], dil ; syscall
0x00000000004ba95e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cf2c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f467 : adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004968b2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435c46 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004358e1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004358a5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435da8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043dfde : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043e07b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043de7d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426843 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494e00 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a575 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004268cf : adc sil, r15b ; ret
0x00000000004be903 : add ah, ah ; add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x00000000004c4c03 : add ah, ah ; add byte ptr [eax], al ; cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004a36b8 : add ah, ah ; clc ; jmp rax
0x00000000004c3e03 : add ah, ah ; pop rcx ; add byte ptr [rax], al ; js 0x4c3dca ; clc ; call qword ptr [rcx]
0x00000000004c4103 : add ah, ah ; pop rsp ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c6a03 : add ah, ah ; test dword ptr [rax], eax ; add byte ptr [rax - 0x24], bl ; cli ; call rsi
0x00000000004c51e3 : add ah, al ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; js 0x4c51f2 ; cli ; call rsi
0x00000000004beee3 : add ah, al ; or al, byte ptr [rax] ; add al, bl ; std ; hlt ; call qword ptr [rax]
0x000000000043e50e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e5bd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ed : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004beefb : add ah, bl ; or al, byte ptr [rax] ; add al, dl ; std ; hlt ; call qword ptr [rdx]
0x00000000004bfefb : add ah, bl ; sbb al, byte ptr [rax] ; add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000004ba987 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004bfa97 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bfb70 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043dfda : add ah, byte ptr [rdx - 0xf] ; jl 0x43e02f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c810b : add ah, ch ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c690b : add ah, ch ; test byte ptr [rax], al ; add byte ptr [rax - 0x28], dh ; cli ; jmp rdi
0x000000000047f49c : add ah, cl ; add r11b, bpl ; retf 0x1f0f
0x00000000004c6deb : add ah, cl ; mov dword ptr [rax], eax ; add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x00000000004c3deb : add ah, cl ; pop rcx ; add byte ptr [rax], al ; jo 0x4c3db2 ; clc ; call qword ptr [rcx]
0x00000000004c1b13 : add ah, dh ; add byte ptr ss:[rax], al ; call 0x274c1178
0x00000000004c3a13 : add ah, dh ; push rbp ; add byte ptr [rax], al ; test al, 0x9a ; clc ; call qword ptr [rdx]
0x00000000004c2ff3 : add ah, dl ; add byte ptr [r8], al ; cmp byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004c80f3 : add ah, dl ; pushfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x0000000000449a61 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449a99 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041bf0b : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x0000000000471759 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042334d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be6f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423371 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cc31 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440e72 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426ee8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043f3bf : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004be905 : add al, 0 ; add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x000000000048f721 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000424ee8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449dc1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041837d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402c65 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x0000000000418ea6 : add al, 0 ; add dh, dh ; ret
0x000000000040f414 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046afbb : add al, 0x11 ; ret
0x00000000004a3ba0 : add al, 0x11 ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x000000000043e55d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474659 : add al, 0x16 ; jae 0x474607 ; xor eax, eax ; ret
0x000000000042e3c1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000422a4a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000046a0a5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a076
0x000000000043f39d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000040999a : add al, 0x24 ; call 0x405c94
0x00000000004716fc : add al, 0x24 ; call rax
0x000000000046fa13 : add al, 0x24 ; lea rdi, [rax + 0x6cb1e0] ; call rdx
0x000000000043f4d8 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046aeb8 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043f538 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043f478 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000046ad28 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044a9ea : add al, 0x24 ; mov r12, rsi ; jmp 0x44a9c2
0x000000000044226c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f64a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c9b5 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea50 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d07d : add al, 0x29 ; ret 0x8941
0x0000000000465ace : add al, 0x31 ; ret
0x00000000004659ca : add al, 0x37 ; ret
0x00000000004c1d24 : add al, 0x39 ; add byte ptr [rax], al ; sub byte ptr [rdx - 9], al ; call qword ptr [rax]
0x0000000000415d1f : add al, 0x3a ; ret
0x00000000004b8a66 : add al, 0x3d ; retf
0x0000000000480c6c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480c41
0x0000000000466896 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004712e1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043ba3b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000043af49 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000043af5b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000464053 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463f93 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043532a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463e74 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439789 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004656c4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474656 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x47460a ; xor eax, eax ; ret
0x0000000000473f46 : add al, 0x4c ; cmp edx, eax ; jne 0x473ef4 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004c3624 : add al, 0x52 ; add byte ptr [rax], al ; pop rax ; js 0x4c362a ; call qword ptr [rcx]
0x00000000004c3d24 : add al, 0x59 ; add byte ptr [rax], al ; pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x000000000043af57 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439797 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c922 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bec4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000466894 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000042004a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bfb2f : add al, 0x79 ; ret
0x0000000000475291 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499fc3 : add al, 0x81 ; je 0x499fa5 ; ret
0x00000000004293ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000499fbf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499fa9 ; ret
0x000000000042ac83 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e658 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e648 ; ret
0x0000000000429107 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044942d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b210 : add al, 0x85 ; leave ; jne 0x46b1c8 ; xor eax, eax ; ret
0x0000000000466f79 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049badb : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043af46 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000439786 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000049a02b : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e27a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000444119 : add al, 0x89 ; retf 0xeac0
0x000000000043e65b : add al, 0x8a ; je 0x43e645 ; ret
0x000000000045c530 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b8c4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000048a073 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1ef8 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c53e6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b553 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004c8124 : add al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x0000000000441fd8 : add al, 0xc1 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441fe8 ; call rbx
0x000000000047a4cd : add al, 0xde ; lea r9, [rdx] ; jmp 0x47a529
0x000000000047ffdd : add al, 0xde ; lea r9, [rdx] ; jmp 0x480039
0x0000000000466ce7 : add al, 0xe8 ; ret
0x000000000047ae45 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422b8d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435693 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f41b : add al, 0xf3 ; ret
0x0000000000426929 : add al, 0xf6 ; ret 0x7408
0x00000000004be371 : add al, 0xfe ; jmp rax
0x0000000000481368 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000047460c : add al, 1 ; cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004bfba7 : add al, 2 ; hlt ; ret
0x00000000004be724 : add al, 3 ; add byte ptr [rax], al ; test al, 0x38 ; hlt ; call qword ptr [rdx]
0x000000000042f937 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7c78 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042142d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042cf58 : add al, 7 ; ret
0x000000000042e52f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000441cda : add al, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004bfeff : add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000004ae4e7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c28c7 : add al, bh ; add eax, edi ; call rsp
0x00000000004c2749 : add al, bh ; call qword ptr [rcx]
0x00000000004c27a9 : add al, bh ; call qword ptr [rdi]
0x00000000004a3295 : add al, bh ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004c8757 : add al, bl ; cld ; call qword ptr [rax]
0x00000000004c2167 : add al, bl ; retf 0xfff7
0x00000000004c10c7 : add al, bl ; sal ebp, 1 ; call rdx
0x00000000004beee7 : add al, bl ; std ; hlt ; call qword ptr [rax]
0x000000000041ada5 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004489f7 : add al, bpl ; ret 0xfb8d
0x000000000041af06 : add al, bpl ; ret 0xffff
0x00000000004479ef : add al, bpl ; retf 0xfb9d
0x000000000040f5ef : add al, bpl ; retf 0xff21
0x00000000004977b2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423911 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000041930d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425f03 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004107f5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469ea6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417830 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f986 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445dfd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451dcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004234ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dc5c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042aa41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423511 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cc41 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440062 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004412e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441055 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440f21 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440e99 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004667b3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046a5ba : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000403865 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000478358 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000425068 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d3e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004751fd : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x00000000004830be : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418958 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d167 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a75c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447cac : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044732c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044cab4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c943c : add al, byte ptr [rax] ; ret
0x000000000044427a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44426e
0x0000000000467437 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000044291e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf6c8 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c5005 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4ddd : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c0415 : add al, byte ptr [rdx] ; ret
0x00000000004bf5d8 : add al, byte ptr [rdx] ; retf
0x000000000047aa05 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c1efc : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004553be : add al, ch ; cld ; ret
0x00000000004c3087 : add al, ch ; cmp edi, eax ; call qword ptr [rax]
0x0000000000481249 : add al, ch ; int1 ; retf 0xfff9
0x00000000004c4607 : add al, ch ; jge 0x4c4608 ; call rdi
0x000000000041ada6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041cf9a : add al, ch ; push rax ; retf
0x0000000000420a57 : add al, ch ; ret
0x000000000048eaf8 : add al, ch ; ret 0xf72c
0x000000000048bbf8 : add al, ch ; ret 0xf75b
0x000000000045fdf8 : add al, ch ; ret 0xfa19
0x000000000049f668 : add al, ch ; ret 0xfa25
0x0000000000468918 : add al, ch ; ret 0xfb57
0x00000000004489f8 : add al, ch ; ret 0xfb8d
0x00000000004655ae : add al, ch ; ret 0xfff9
0x000000000041af07 : add al, ch ; ret 0xffff
0x00000000004023ef : add al, ch ; retf
0x000000000045a940 : add al, ch ; retf 0x8d
0x00000000004479f0 : add al, ch ; retf 0xfb9d
0x000000000040f5f0 : add al, ch ; retf 0xff21
0x0000000000474cc7 : add al, ch ; retf 0xfff8
0x000000000040502c : add al, ch ; scasb al, byte ptr [rdi] ; retf
0x00000000004c3d67 : add al, cl ; leave ; std ; call qword ptr [rbx]
0x00000000004a347f : add al, dh ; retf 0x42
0x00000000004c6b9f : add al, dl ; jrcxz 0x4c6ba1 ; jmp qword ptr [rdx]
0x00000000004a3477 : add al, dl ; retf 0x42
0x00000000004c568f : add al, dl ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004beeff : add al, dl ; std ; hlt ; call qword ptr [rdx]
0x00000000004c73bf : add al, dl ; sub bh, bl ; call rsp
0x00000000004c6d7a : add bh, ah ; ret
0x0000000000444aff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a329d : add bh, al ; jmp rax
0x00000000004586bc : add bh, al ; sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x000000000045f85e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000041354a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b57 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e2bf : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000441e9c : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e0e8
0x0000000000402c6c : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a5e0 : add bh, byte ptr [rax + 1] ; ret
0x00000000004124b2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc6b : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf2cb : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d7b2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000470306 : add bh, dh ; ret 0x804
0x00000000004c420f : add bh, dh ; ret 0xfff3
0x00000000004a3738 : add bl, ah ; clc ; jmp rax
0x00000000004261e6 : add bl, al ; lea rax, [rip + 0x15e71] ; ret
0x0000000000466f51 : add bl, al ; mov eax, 2 ; ret
0x0000000000421294 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044422a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c5b6f : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004a38e0 : add bl, byte ptr [rbx] ; stc ; call qword ptr [rdx + 0x22fff91a]
0x00000000004c4daf : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c5c2d : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046a0aa : add bl, ch ; ret 0x1f0f
0x000000000046bc9e : add bl, ch ; retf
0x000000000047f49f : add bl, ch ; retf 0x1f0f
0x000000000043f9bc : add bl, ch ; retf 0x4890
0x0000000000486f18 : add bl, ch ; retf 0x8945
0x0000000000406347 : add bl, dh ; ret
0x00000000004c493b : add byte ptr [0xffffffffe4600000], bl ; stc ; jmp rax
0x00000000004c4c05 : add byte ptr [eax], al ; cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x000000000047049a : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004673d4 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004655a8 : add byte ptr [r15 + 0x4b28dc], dil ; call 0x401809
0x0000000000474cc1 : add byte ptr [r15 + 0x4b6094], dil ; call 0x4017c9
0x000000000047abb0 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047acdb : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045b7e3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a7cf : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474691 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425e5f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468f5e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488ca1 : add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000049d5ff : add byte ptr [r8 + 1], r9b ; ret
0x0000000000478826 : add byte ptr [r8 - 0x39], r9b ; and al, 0x48 ; ret
0x00000000004684d5 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000443221 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459838 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ee04a
0x0000000000446ec5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c2f4d : add byte ptr [r8], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004bc622 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc61a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004c2ff5 : add byte ptr [r8], al ; cmp byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004c27a5 : add byte ptr [r8], al ; cwde ; add al, bh ; call qword ptr [rdi]
0x00000000004c2b3d : add byte ptr [r8], r8b ; add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x000000000043f469 : add byte ptr [r8], r8b ; ret
0x0000000000473457 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c43b4
0x000000000042128f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004c6f5f : add byte ptr [rax + 0x16], dl ; sti ; jmp qword ptr [rdx]
0x00000000004c7167 : add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000043f35f : add byte ptr [rax + 0x18], bh ; syscall
0x0000000000499fdf : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043dd7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405477 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c2d8 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418e65 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b450 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000420410 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041e185 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000041d80f : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004173fb : add byte ptr [rax + 0x39], cl ; ret
0x000000000046dc57 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483cab : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000417846 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044eabb : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000417807 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046de35 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000447300 : add byte ptr [rax + 0x39], cl ; retf
0x00000000004301b6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d3 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432d6e : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000043df08 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042fce1 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000046abcf : add byte ptr [rax + 0x3f], bh ; syscall
0x0000000000425e5b : add byte ptr [rax + 0x43d7d0], bh ; cmove rax, rdx ; ret
0x000000000047a886 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c922f : add byte ptr [rax + 0x50], dl ; std ; jmp qword ptr [rbx]
0x0000000000462f27 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043fdbf : add byte ptr [rax + 0x61], bh ; syscall
0x000000000044285f : add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412498 : add byte ptr [rax + 0x63], cl ; jnp 0x412512 ; syscall
0x000000000045cfde : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464c1f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000048b134 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000045c605 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000040eec1 : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000040dc32 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043f6c0 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044cbb8 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x00000000004c059f : add byte ptr [rax + 0x64], dl ; cmc ; jmp qword ptr [rax]
0x000000000046ac0f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000004c07d7 : add byte ptr [rax + 0x69], bl ; cmc ; call qword ptr [rdx]
0x000000000046abff : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ac1f : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417da2 : add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000042390f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004768b4 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x00000000004c3627 : add byte ptr [rax + 0x78], bl ; clc ; call qword ptr [rcx]
0x000000000043b9df : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004c618f : add byte ptr [rax + 0x7e], dl ; cli ; call rax
0x000000000040f8ea : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046cfce : add byte ptr [rax + 0x9e], bh ; syscall
0x000000000043ff9f : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004672af : add byte ptr [rax + 0xc9], bh ; syscall
0x0000000000442901 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ed46 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041d745 : add byte ptr [rax + 0xf48006c], ch ; retf 0x894c
0x0000000000465935 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004436db : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412827 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425e60 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040fa89 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468f5f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426783 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448b9a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004483ed : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044afaa : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cb35 : add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000004695e8 : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d748 : add byte ptr [rax + 0xf], cl ; retf 0x894c
0x00000000004014c0 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004749c7 : add byte ptr [rax + 1], bh ; ret
0x0000000000425f05 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004107f7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488bff : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b61c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f287 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000469d2c : add byte ptr [rax + 1], cl ; retf
0x000000000047f397 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000434691 : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000425f0f : add byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000402a7f : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000488ca2 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000479a70 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044ed74 : add byte ptr [rax + 3], bh ; syscall
0x000000000049ad4f : add byte ptr [rax + 5], bh ; ret
0x000000000043e57e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000044281f : add byte ptr [rax + 8], bh ; syscall
0x000000000043e57d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ad48b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041c0e8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c9f9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004712e0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c6c43 : add byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; or bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004ae637 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049c28f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462737 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000041f31a : add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x00000000004032c6 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c493f : add byte ptr [rax - 0x1c], ah ; stc ; jmp rax
0x00000000004c6a07 : add byte ptr [rax - 0x24], bl ; cli ; call rsi
0x00000000004c690f : add byte ptr [rax - 0x28], dh ; cli ; jmp rdi
0x0000000000420090 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aa6ec ; push rax ; retf 0x41
0x000000000041f2f2 : add byte ptr [rax - 0x39], cl ; add eax, 0x2ab48a ; push rax ; retf 0x41
0x000000000041dcf3 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aca89 ; push rax ; retf 0x41
0x0000000000478827 : add byte ptr [rax - 0x39], cl ; and al, 0x48 ; ret
0x000000000047f414 : add byte ptr [rax - 0x39], cl ; mov r8b, 0xfe ; retf 0x4b
0x000000000043fe21 : add byte ptr [rax - 0x39], cl ; ret
0x000000000045279f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc5f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042116b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f6df : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045878f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000410817 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004667bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000046679f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004667ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004667af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004667ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044f7bf : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004c1e2f : add byte ptr [rax - 0x3e], dl ; idiv edi ; retf 2
0x00000000004a34af : add byte ptr [rax - 0x3f000763], ah ; sahf ; clc ; jmp rax
0x0000000000459188 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044cacd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478a15 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000041db9c : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004c3dbf : add byte ptr [rax - 0x48], ah ; clc ; call qword ptr [rdi]
0x00000000004c3e07 : add byte ptr [rax - 0x48], bh ; clc ; call qword ptr [rcx]
0x00000000004c3dd7 : add byte ptr [rax - 0x48], ch ; clc ; call qword ptr [rcx]
0x0000000000489612 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048d747 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000004c3def : add byte ptr [rax - 0x48], dh ; clc ; call qword ptr [rcx]
0x00000000004c3d27 : add byte ptr [rax - 0x4d], bl ; clc ; call qword ptr [rdi]
0x00000000004c7077 : add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004c766f : add byte ptr [rax - 0x71], dl ; jmp qword ptr [rsi]
0x000000000044fba3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000418e41 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000449a7f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449a63 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449a9b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b91a : add byte ptr [rax - 0x73], cl ; jl 0x47b94a ; js 0x47b969 ; call rsp
0x000000000047bc2f : add byte ptr [rax - 0x73], cl ; jl 0x47bc5f ; js 0x47bc7e ; call rsp
0x000000000047bff6 : add byte ptr [rax - 0x73], cl ; jl 0x47c026 ; js 0x47c045 ; call rsp
0x000000000049acaf : add byte ptr [rax - 0x73], cl ; jl 0x49ace0 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b27d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000475007 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bc2f : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044caff : add byte ptr [rax - 0x75], cl ; add eax, 0x27fbf1 ; ret
0x000000000044578f : add byte ptr [rax - 0x75], cl ; add eax, 0x287c71 ; ret
0x00000000004168ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2b37b9 ; ret
0x0000000000419ccb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fbbf : add byte ptr [rax - 0x75], cl ; jl 0x44fbf0 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045ac48 : add byte ptr [rax - 0x75], cl ; jl 0x45ac79 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x00000000004152d6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464ed6 : add byte ptr [rax - 0x75], cl ; jp 0x464f21 ; jmp 0x464ea6
0x0000000000464f0f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d71d : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416ea7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004316ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e4c7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000478ddf : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x00000000004452b2 : add byte ptr [rax - 0x75], cl ; ret
0x00000000004c632f : add byte ptr [rax - 0x75], dh ; cli ; call rsi
0x000000000041d1a3 : add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x000000000049c3c7 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000041692f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fb82 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041e0d3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000414e42 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000454077 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455dc2 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004698e9 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441735 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441635 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044122d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000041bf0d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x000000000047a91c : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004693b8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091d0e
0x000000000040f9d1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000401432 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004412f1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e780 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004033fc : add byte ptr [rax - 0x77], cl ; ret
0x0000000000417832 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041dcac : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047a9a3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a17f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485cd4 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000043ee5a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a6e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c74f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419bbf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459b09 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044ee14 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004555d1 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ecc3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f1e7 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470de7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000425e0b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045aaaf : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045a214 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413550 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000473816 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000429444 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041cb47 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000004101f7 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000046a11e : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x0000000000422be2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000004434e4 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404de2 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x0000000000422d82 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x00000000004535af : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b680 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422b40 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000041d1a6 : add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004292c6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042ae3c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000004720bf : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e16d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470d83 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043eb1f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049e3 : add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x00000000004656bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004680ff : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x00000000004649fa : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000443222 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004116c7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045ed8c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000047175b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459839 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ee049
0x000000000041e698 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004213ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401758 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004550b8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004566df : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000004897cb : add byte ptr [rax - 0x7d], cl ; jl 0x4897fc ; or byte ptr [rax], al ; jne 0x4897a6 ; jmp 0x4897ae
0x000000000048c9fb : add byte ptr [rax - 0x7d], cl ; jl 0x48ca2c ; adc byte ptr [rax], al ; jne 0x48c9d6 ; jmp 0x48c9de
0x000000000041e7c2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004015ee : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041be6f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d8af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c849 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469cdf : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040eddf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475f9f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a9f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004530bf : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040134f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446ec6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044beb0 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422c0f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464917 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004260ff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dc5e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004472bf : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462707 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000484a1f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004256a0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429523 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c33 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046762f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a19f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040d9f8 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9a8 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d85c : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9d0 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da20 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d935 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8c0 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dac0 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da94 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d902 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d890 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042e46f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004657ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c634 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e0bf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004a33c0 : add byte ptr [rax - 0x7e2f0008], 0xf8 ; jmp qword ptr [rax]
0x000000000049ec23 : add byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x0000000000446bac : add byte ptr [rax - 0x7f], cl ; ret 0x5a40
0x0000000000432e7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000416bcf : add byte ptr [rax - 1], bh ; jmp 0x416ba8
0x0000000000463f82 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410342 : add byte ptr [rax - 1], bh ; ret
0x0000000000416a5e : add byte ptr [rax - 1], dil ; ret
0x00000000004bee2f : add byte ptr [rax - 4], al ; hlt ; call qword ptr [rbx]
0x00000000004a3d84 : add byte ptr [rax - 7], bh ; jmp qword ptr [rax]
0x0000000000414519 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417d9f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043468e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000410579 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047a919 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000048b740 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041354d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e11b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043569b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047848b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046626b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ea53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041cb93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417dab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c5c5 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e951 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004470b2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f8eb : add byte ptr [rax], 0 ; je 0x40f900 ; mov eax, edx ; pop rbx ; ret
0x000000000047a887 : add byte ptr [rax], 0 ; je 0x47a898 ; mov eax, edx ; pop rbx ; ret
0x00000000004c00cf : add byte ptr [rax], ah ; push rbp ; cmc ; call qword ptr [rcx]
0x00000000004a37f4 : add byte ptr [rax], ah ; stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004c1532 : add byte ptr [rax], al ; adc al, 0x31 ; add byte ptr [rax], al ; sbb ah, dh ; cmc ; call qword ptr [rdx]
0x00000000004c4132 : add byte ptr [rax], al ; adc al, 0x5d ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rdx]
0x00000000004c2f4e : add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c19ce : add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], cl ; call qword ptr [rsi]
0x00000000004c8a5e : add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004c1d22 : add byte ptr [rax], al ; add al, 0x39 ; add byte ptr [rax], al ; sub byte ptr [rdx - 9], al ; call qword ptr [rax]
0x00000000004712df : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c3622 : add byte ptr [rax], al ; add al, 0x52 ; add byte ptr [rax], al ; pop rax ; js 0x4c362c ; call qword ptr [rcx]
0x00000000004c3d22 : add byte ptr [rax], al ; add al, 0x59 ; add byte ptr [rax], al ; pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c8122 : add byte ptr [rax], al ; add al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004be722 : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; test al, 0x38 ; hlt ; call qword ptr [rdx]
0x000000000041cf98 : add byte ptr [rax], al ; add al, ch ; push rax ; retf
0x0000000000420a55 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000468916 : add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000420c4d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000004a347d : add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004a3475 : add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004604d6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466f4f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000046a0a8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046bc9c : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000486f16 : add byte ptr [rax], al ; add bl, ch ; retf 0x8945
0x000000000041451a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042128d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043f35d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045c7bb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046dc55 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483ca9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044eab9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004301b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043fdbd : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x000000000044285d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412496 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x412514 ; syscall
0x0000000000464c1d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dc30 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046ac0d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046abfd : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ac1d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417da0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043b9dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000043ff9d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000004428ff : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ed44 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448b98 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004483eb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044afa8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cb33 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000004014be : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a613 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488d24 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488bfd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000043468f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044ed72 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049ad4d : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000044281d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000049c28d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462735 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047f412 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; mov r8b, 0xfe ; retf 0x4b
0x000000000043fe1f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004133fd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045878d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041057a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044cacb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478a13 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047b918 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b94c ; js 0x47b96b ; call rsp
0x000000000047bc2d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bc61 ; js 0x47bc80 ; call rsp
0x000000000047bff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47c028 ; js 0x47c047 ; call rsp
0x0000000000419cc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004152d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464ed4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464f23 ; jmp 0x464ea8
0x000000000041692d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454075 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455dc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004698e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441733 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441633 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044122b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000047a91a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004412ef : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040fa11 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041dcaa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485cd2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000046c74d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046de62 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ecc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425e09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045aaad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041354e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000473814 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004101f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004535ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b67e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422b3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004292c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042ae3a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000004720bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043eb1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045ed8a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000442c8c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444b03 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475f9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004530bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044beae : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042ab77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004260fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004472bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484afd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042abe1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046762d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e46d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000049ec21 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x0000000000434688 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410340 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000468914 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000420c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004a347b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004a3473 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004168eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047467b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004133fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045878b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049adbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041692b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041dca8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485cd0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000045e9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045817b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000475f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004530bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004260fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004472bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041572b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af312 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af802 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004ae9c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af352 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af842 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004ae9ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004bc623 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004a348b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a349b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3483 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000041710b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043daeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b40b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422beb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442e09 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000049e3ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000046677c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047826f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e11c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b133c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b04ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000045f8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043c00c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c01c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c02c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c03c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c04c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043bf8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043bf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043bfac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043bfbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043bfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043bfdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043bfec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043bffc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043bf7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400a42 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000043b9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042128c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f35c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000043fdbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044285c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ac0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046abfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ac1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000043ff9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004151bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a612 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049ad4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044281c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000043569c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047848c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041691c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041692c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ecc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x000000000043eb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x0000000000411efc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004357ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004155a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414da1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a3494 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000041572d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b030c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0aa4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af314 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af804 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a3f44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e4
0x00000000004a4934 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43f0
0x00000000004b6f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b68
0x00000000004ae9c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0344 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ae4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004af354 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af844 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bdca5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004bd224 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4811
0x00000000004ae9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043f4ba : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041cb94 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042cefc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bc625 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc61d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004a348d : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a349d : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3485 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000476079 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045c58c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000432ddc : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x00000000004c2161 : add byte ptr [rax], al ; add byte ptr [rbp + rdi], al ; add al, bl ; retf 0xfff7
0x00000000004427b8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046212d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448052 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e1da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e529 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bc5f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442a4c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000047f498 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4bcc00], bh ; jmp 0x47f475
0x0000000000434f7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004116b3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004155a1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413060 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046318c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000046a604 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000446563 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; sti ; ret
0x0000000000460656 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045ddfc : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443c0d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462f86 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000041672c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045d402 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d385 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d43 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043daed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b40d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420858 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440f31 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000441065 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440e9a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440ea9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000425a01 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458aec : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422bed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ecf7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041d215 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000426210 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426236 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c5c6 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004c2b3e : add byte ptr [rax], al ; add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x000000000045b88a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ec5a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c0a7 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c0cf : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448c4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462ba5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411efd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042613d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004672c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d686 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000443064 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bc57 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004c1e29 : add byte ptr [rax], al ; add byte ptr [rdx + rdi], cl ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x000000000042e952 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426052 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440e73 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e7b5 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c9186 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442e0b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c3082 : add byte ptr [rax], al ; add byte ptr fs:[rax], r8b ; call 0x114c28d1
0x00000000004587dd : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449ae5 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004724a2 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000049af66 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048b9b8 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff2
0x00000000004538fe : add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000043f08d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000400a43 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004655d0 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x0000000000417608 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004470b3 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d241 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485ba0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049aef5 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004789e7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046677e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425f04 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004be8c6 : add byte ptr [rax], al ; add rdi, rsi ; call rdi
0x000000000043e6fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043ea47 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c2f8 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040118c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f9a6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f4a5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000004457f7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478271 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c6c42 : add byte ptr [rax], al ; and al, 0x88 ; add byte ptr [rax], al ; or bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004c00ce : add byte ptr [rax], al ; and byte ptr [rbp - 0xb], dl ; call qword ptr [rcx]
0x000000000042613e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000423a00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465934 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c3086 : add byte ptr [rax], al ; call 0x114c28cd
0x00000000004c86c6 : add byte ptr [rax], al ; call 0x114c838b
0x00000000004c1b16 : add byte ptr [rax], al ; call 0x274c1175
0x000000000041189a : add byte ptr [rax], al ; call 0x400399
0x0000000000481248 : add byte ptr [rax], al ; call 0x41dd44
0x0000000000415e58 : add byte ptr [rax], al ; call 0x4428c4
0x00000000004c4606 : add byte ptr [rax], al ; call 0xffffffffd84c3f8f
0x000000000044c7db : add byte ptr [rax], al ; call r12
0x000000000047bad4 : add byte ptr [rax], al ; call r14
0x000000000044c8b5 : add byte ptr [rax], al ; call r15
0x00000000004016aa : add byte ptr [rax], al ; call rax
0x0000000000440e79 : add byte ptr [rax], al ; call rbx
0x00000000004b133e : add byte ptr [rax], al ; call rdi
0x000000000040ea0c : add byte ptr [rax], al ; call rdx
0x00000000004b04ee : add byte ptr [rax], al ; call rsp
0x00000000004c28c6 : add byte ptr [rax], al ; clc ; add eax, edi ; call rsp
0x00000000004bee2e : add byte ptr [rax], al ; cld ; hlt ; call qword ptr [rbx]
0x00000000004c8a5a : add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004c80f6 : add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c2ff6 : add byte ptr [rax], al ; cmp byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000410d37 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x410d48 ; pop rbx ; ret
0x0000000000464995 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x4649a9 ; ret
0x000000000048c9fa : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x48c9d7 ; jmp 0x48c9df
0x00000000004897ca : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x4897a7 ; jmp 0x4897af
0x00000000004c7076 : add byte ptr [rax], al ; cqo ; std ; call rcx
0x00000000004c27a6 : add byte ptr [rax], al ; cwde ; add al, bh ; call qword ptr [rdi]
0x00000000004c4c06 : add byte ptr [rax], al ; cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004ad49a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b14ee : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004ae646 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004ade46 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ae246 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b16ee : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b18ee : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b1aee : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b1cee : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b1eee : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b20ee : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b22ee : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b24ee : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b26ee : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c10c6 : add byte ptr [rax], al ; fcom st(1) ; cmc ; call rdx
0x00000000004c6886 : add byte ptr [rax], al ; fcom st(6) ; cli ; jmp rsi
0x00000000004c8756 : add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004beee6 : add byte ptr [rax], al ; fdivr st(5) ; hlt ; call qword ptr [rax]
0x00000000004beefa : add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rax], al ; sar ch, 1 ; hlt ; call qword ptr [rdx]
0x00000000004c1b12 : add byte ptr [rax], al ; hlt ; add byte ptr ss:[rax], al ; call 0x274c1179
0x00000000004c3a12 : add byte ptr [rax], al ; hlt ; push rbp ; add byte ptr [rax], al ; test al, 0x9a ; clc ; call qword ptr [rdx]
0x00000000004bf702 : add byte ptr [rax], al ; in al, 0x12 ; add byte ptr [rax], al ; test al, 0x25 ; cmc ; jmp qword ptr [rsi]
0x00000000004c3e02 : add byte ptr [rax], al ; in al, 0x59 ; add byte ptr [rax], al ; js 0x4c3dcb ; clc ; call qword ptr [rcx]
0x00000000004c4102 : add byte ptr [rax], al ; in al, 0x5c ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c4602 : add byte ptr [rax], al ; in al, 0x61 ; add byte ptr [rax], al ; call 0xffffffffd84c3f93
0x00000000004c4c02 : add byte ptr [rax], al ; in al, 0x67 ; add byte ptr [rax], al ; cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c6a02 : add byte ptr [rax], al ; in al, 0x85 ; add byte ptr [rax], al ; pop rax ; fdiv st(2), st(0) ; call rsi
0x00000000004c810a : add byte ptr [rax], al ; in al, dx ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c690a : add byte ptr [rax], al ; in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x28], dh ; cli ; jmp rdi
0x00000000004c568a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jb 0x4c5698 ; add al, dl ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c618a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jge 0x4c6198 ; add byte ptr [rax + 0x7e], dl ; cli ; call rax
0x000000000040f8ec : add byte ptr [rax], al ; je 0x40f8ff ; mov eax, edx ; pop rbx ; ret
0x00000000004210f7 : add byte ptr [rax], al ; je 0x421104 ; ret
0x000000000047a888 : add byte ptr [rax], al ; je 0x47a897 ; mov eax, edx ; pop rbx ; ret
0x000000000049c28e : add byte ptr [rax], al ; je 0x49c24a ; add rsp, 0x18 ; ret
0x000000000049e7b6 : add byte ptr [rax], al ; je 0x49e7c5 ; ret
0x00000000004c5862 : add byte ptr [rax], al ; je 0x4c5870 ; add byte ptr [rax], cl ; and bh, dl ; jmp rdi
0x00000000004c059a : add byte ptr [rax], al ; jl 0x4c05c8 ; add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004c1a9a : add byte ptr [rax], al ; jl 0x4c1add ; add byte ptr [rax], al ; nop ; jbe 0x4c1aa2 ; call qword ptr [rax]
0x00000000004c6b9a : add byte ptr [rax], al ; jl 0x4c6b2e ; add byte ptr [rax], al ; shl bl, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004586f9 : add byte ptr [rax], al ; jmp 0x4584cb
0x000000000046a0a9 : add byte ptr [rax], al ; jmp 0x46a072
0x000000000046bc9d : add byte ptr [rax], al ; jmp 0x46bc6f
0x00000000004796af : add byte ptr [rax], al ; jmp 0x479681
0x0000000000479d8f : add byte ptr [rax], al ; jmp 0x479d61
0x0000000000486f17 : add byte ptr [rax], al ; jmp 0x486ee8
0x000000000049ad0c : add byte ptr [rax], al ; jmp 0x49acde
0x0000000000440064 : add byte ptr [rax], al ; jmp rax
0x000000000043f455 : add byte ptr [rax], al ; jne 0x43f476 ; mov eax, 2 ; syscall
0x000000000043f4b5 : add byte ptr [rax], al ; jne 0x43f4d6 ; mov eax, 0 ; syscall
0x000000000043f515 : add byte ptr [rax], al ; jne 0x43f536 ; mov eax, 1 ; syscall
0x000000000046ad05 : add byte ptr [rax], al ; jne 0x46ad26 ; mov eax, 3 ; syscall
0x000000000046ae95 : add byte ptr [rax], al ; jne 0x46aeb6 ; mov eax, 0x14 ; syscall
0x00000000004c3dee : add byte ptr [rax], al ; jo 0x4c3daf ; clc ; call qword ptr [rcx]
0x00000000004c632e : add byte ptr [rax], al ; jo 0x4c62c2 ; cli ; call rsi
0x00000000004c690e : add byte ptr [rax], al ; jo 0x4c68ef ; cli ; jmp rdi
0x00000000004c3e06 : add byte ptr [rax], al ; js 0x4c3dc7 ; clc ; call qword ptr [rcx]
0x00000000004c51e6 : add byte ptr [rax], al ; js 0x4c51ef ; cli ; call rsi
0x00000000004c7166 : add byte ptr [rax], al ; js 0x4c7187 ; sti ; call qword ptr [rax]
0x00000000004c7162 : add byte ptr [rax], al ; lea r8d, [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000043c00e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c01e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c02e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c03e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c04e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043bf6d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043bf8e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043bf9e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043bfae : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043bfbe : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043bfce : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043bfde : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043bf1a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000043bfee : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043bffe : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043bf7e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000047b919 : add byte ptr [rax], al ; lea rdi, [rsp + 0x78] ; call r12
0x0000000000400a44 : add byte ptr [rax], al ; leave ; ret
0x00000000004c00ca : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax], ah ; push rbp ; cmc ; call qword ptr [rcx]
0x000000000043aeee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000043973e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c4106 : add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c4136 : add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rdx]
0x000000000043b9de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c86f6 : add byte ptr [rax], al ; mov cl, bl ; cld ; call qword ptr [rax]
0x0000000000464a6b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b3ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042128e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f35e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000046abce : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000043fdbe : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044285e : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ac0e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046abfe : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ac1e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x0000000000417da1 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x000000000046cfcd : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000043ff9e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000442900 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ed45 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000416bce : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x416ba9
0x0000000000463f81 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410341 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004749c6 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ed73 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049ad4e : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044281e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004165ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e19e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e1b9 ; ret
0x000000000049e3be : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e3d9 ; ret
0x000000000048869e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244cfa] ; ret
0x000000000040f701 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473606 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046ae33 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040f935 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444aa3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000047f499 : add byte ptr [rax], al ; mov ebx, 0x4bcc00 ; jmp 0x47f474
0x000000000046ae2e : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043b3fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000481243 : add byte ptr [rax], al ; mov edi, 0x190 ; call 0x41dd49
0x000000000046557b : add byte ptr [rax], al ; mov edi, 0x4b28dc ; call 0x401809
0x0000000000402c66 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x000000000049c0a8 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c0d0 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434f7e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043569e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473c59 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43fee9
0x00000000004429b6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440e74 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000046a605 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000047b048 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000455035 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487fb2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488036 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470d54 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c40e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a600 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f6ef : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041689e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044f7be : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000046679e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004667ae : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004667be : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004667ce : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004667de : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004667ee : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004667fe : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414dd9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410d50 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004152d5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047848e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471b8e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464f0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041691e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c3de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c41e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c47e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c46e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c42e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044578e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287c71] ; ret
0x00000000004168fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b37b9] ; ret
0x000000000047482f : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c587 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fb81 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e0d2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041c0eb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041692e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e77f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a9c9 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000044ecc5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464ed5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464ea7
0x0000000000441066 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440f32 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440eaa : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440e9b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004412f0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041bf0c : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418167
0x00000000004628d6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004621eb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043eb1e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000040fdac : add byte ptr [rax], al ; mov rdi, rsi ; call 0x49c7f7
0x00000000004354de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000417831 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417854
0x000000000049c9ee : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000474758 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c28c2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; clc ; add eax, edi ; call rsp
0x00000000004c10c2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; add al, bl ; sal ebp, 1 ; call rdx
0x000000000043ff56 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000049a24f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000412497 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dc31 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044f8b4 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000411efe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043510e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004357ee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043577e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c8c7e : add byte ptr [rax], al ; nop ; cmp bh, ch ; call rcx
0x00000000004c1a9e : add byte ptr [rax], al ; nop ; jbe 0x4c1a9e ; call qword ptr [rax]
0x00000000004009e1 : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000046acdc : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000043ffdc : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046abec : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x000000000043ffbc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x0000000000442e0c : add byte ptr [rax], al ; nop ; ret
0x00000000004c1e2a : add byte ptr [rax], al ; or al, 0x3a ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004c632a : add byte ptr [rax], al ; or al, 0x7f ; add byte ptr [rax], al ; jo 0x4c62c6 ; cli ; call rsi
0x00000000004bee2a : add byte ptr [rax], al ; or al, 0xa ; add byte ptr [rax], al ; cld ; hlt ; call qword ptr [rbx]
0x00000000004c922a : add byte ptr [rax], al ; or al, 0xae ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c6c46 : add byte ptr [rax], al ; or bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004c5866 : add byte ptr [rax], al ; or byte ptr [rdx], ah ; cli ; jmp rdi
0x00000000004bf8a6 : add byte ptr [rax], al ; or byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x0000000000476984 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c6a06 : add byte ptr [rax], al ; pop rax ; fdiv st(2), st(0) ; call rsi
0x00000000004c3626 : add byte ptr [rax], al ; pop rax ; js 0x4c3628 ; call qword ptr [rcx]
0x00000000004c3d26 : add byte ptr [rax], al ; pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x000000000045c4bd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c58d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e52a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462f87 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a58c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000442a4d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004116b4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411c9b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c816a : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c059e : add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004c618e : add byte ptr [rax], al ; push rax ; jle 0x4c6192 ; call rax
0x00000000004c922e : add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c1e2e : add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004a3496 : add byte ptr [rax], al ; push rax ; retf
0x00000000004c7072 : add byte ptr [rax], al ; push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004c73ba : add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x00000000004c568e : add byte ptr [rax], al ; rcr byte ptr [rax], 1 ; cli ; jmp qword ptr [rax]
0x0000000000401193 : add byte ptr [rax], al ; ret
0x00000000004a76c6 : add byte ptr [rax], al ; ret 0
0x00000000004ae63e : add byte ptr [rax], al ; ret 0x10
0x00000000004b030e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0aa6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af316 : add byte ptr [rax], al ; ret 0x24
0x00000000004af806 : add byte ptr [rax], al ; ret 0x33
0x00000000004a3f46 : add byte ptr [rax], al ; ret 0x43e4
0x00000000004a4936 : add byte ptr [rax], al ; ret 0x43f0
0x00000000004b6f0e : add byte ptr [rax], al ; ret 0x4b68
0x00000000004ade3e : add byte ptr [rax], al ; ret 0xa
0x00000000004ae23e : add byte ptr [rax], al ; ret 0xd
0x00000000004b16e2 : add byte ptr [rax], al ; ret 1
0x00000000004b18e2 : add byte ptr [rax], al ; ret 2
0x00000000004b1ae2 : add byte ptr [rax], al ; ret 3
0x00000000004b1ce2 : add byte ptr [rax], al ; ret 4
0x00000000004b1ee2 : add byte ptr [rax], al ; ret 5
0x00000000004ad9e6 : add byte ptr [rax], al ; ret 6
0x00000000004b22e2 : add byte ptr [rax], al ; ret 7
0x00000000004b24e2 : add byte ptr [rax], al ; ret 8
0x00000000004b26e2 : add byte ptr [rax], al ; ret 9
0x00000000004a76ea : add byte ptr [rax], al ; retf
0x00000000004a76e6 : add byte ptr [rax], al ; retf 0
0x00000000004ae79e : add byte ptr [rax], al ; retf 0x11
0x00000000004b0346 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ae6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004af356 : add byte ptr [rax], al ; retf 0x24
0x00000000004af846 : add byte ptr [rax], al ; retf 0x33
0x00000000004bdca7 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004bd226 : add byte ptr [rax], al ; retf 0x4811
0x00000000004adf9e : add byte ptr [rax], al ; retf 0xb
0x00000000004ae39e : add byte ptr [rax], al ; retf 0xe
0x00000000004ae9be : add byte ptr [rax], al ; retf 1
0x00000000004b18f2 : add byte ptr [rax], al ; retf 2
0x00000000004b1af2 : add byte ptr [rax], al ; retf 3
0x00000000004ad846 : add byte ptr [rax], al ; retf 4
0x00000000004b1ef2 : add byte ptr [rax], al ; retf 5
0x00000000004b20f2 : add byte ptr [rax], al ; retf 6
0x00000000004b22f2 : add byte ptr [rax], al ; retf 7
0x00000000004b24f2 : add byte ptr [rax], al ; retf 8
0x00000000004b26f2 : add byte ptr [rax], al ; retf 9
0x00000000004b1cde : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ae0e6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004beefe : add byte ptr [rax], al ; sar ch, 1 ; hlt ; call qword ptr [rdx]
0x00000000004c1536 : add byte ptr [rax], al ; sbb ah, dh ; cmc ; call qword ptr [rdx]
0x00000000004c2b3a : add byte ptr [rax], al ; sbb al, 0x47 ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x00000000004c5f3a : add byte ptr [rax], al ; sbb al, 0x7b ; add byte ptr [rax], al ; xor byte ptr [rdx - 6], dl ; jmp rsp
0x00000000004c813a : add byte ptr [rax], al ; sbb al, 0x9d ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c19e6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], cl ; jmp rbx
0x00000000004c2b3f : add byte ptr [rax], al ; sbb eax, edi ; call qword ptr [rax]
0x00000000004c6b9e : add byte ptr [rax], al ; shl bl, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004c73be : add byte ptr [rax], al ; shr byte ptr [rdx], 1 ; sti ; call rsp
0x00000000004c2f4a : add byte ptr [rax], al ; sub al, 0x4b ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c7e4a : add byte ptr [rax], al ; sub al, 0x9a ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c1d26 : add byte ptr [rax], al ; sub byte ptr [rdx - 9], al ; call qword ptr [rax]
0x000000000042f39c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415d26 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000046ad8f : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004c5586 : add byte ptr [rax], al ; test al, 0x14 ; cli ; jmp rdx
0x00000000004bf706 : add byte ptr [rax], al ; test al, 0x25 ; cmc ; jmp qword ptr [rsi]
0x00000000004be726 : add byte ptr [rax], al ; test al, 0x38 ; hlt ; call qword ptr [rdx]
0x00000000004c3a16 : add byte ptr [rax], al ; test al, 0x9a ; clc ; call qword ptr [rdx]
0x00000000004bf8a2 : add byte ptr [rax], al ; test byte ptr [rax + rax], dl ; add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004c65a2 : add byte ptr [rax], al ; test byte ptr [rcx - 0x51e80000], al ; cli ; call rdx
0x00000000004427b9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c8152 : add byte ptr [rax], al ; xor al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c8752 : add byte ptr [rax], al ; xor al, 0xa3 ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004c06ee : add byte ptr [rax], al ; xor byte ptr [rax - 0xb], ch ; call qword ptr [rsi]
0x00000000004c6dee : add byte ptr [rax], al ; xor byte ptr [rbx], cl ; sti ; jmp rsi
0x00000000004c7e4e : add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c810e : add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004c5f3e : add byte ptr [rax], al ; xor byte ptr [rdx - 6], dl ; jmp rsp
0x0000000000451c87 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec5b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a5a5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041cb96 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004134fe : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413519 ; ret
0x0000000000400cce : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000488221 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000043ec7a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403867 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000440de6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440e0b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440e2f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440e4f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004260ed : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c51e7 : add byte ptr [rax], bh ; cli ; call rsi
0x00000000004c80f7 : add byte ptr [rax], bh ; or esp, edi ; call qword ptr [rax]
0x00000000004bc627 : add byte ptr [rax], bh ; ret 0x4b
0x00000000004c8727 : add byte ptr [rax], bh ; xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000004c2ff7 : add byte ptr [rax], bh ; xor eax, edi ; jmp rsp
0x00000000004c1537 : add byte ptr [rax], bl ; hlt ; cmc ; call qword ptr [rdx]
0x00000000004c65a7 : add byte ptr [rax], bl ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x00000000004c2747 : add byte ptr [rax], ch ; clc ; call qword ptr [rcx]
0x00000000004c1857 : add byte ptr [rax], ch ; idiv dil ; ret
0x00000000004c2137 : add byte ptr [rax], ch ; retf 0xfff7
0x000000000044ee6d : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x00000000004c5867 : add byte ptr [rax], cl ; and bh, dl ; jmp rdi
0x00000000004bf8a7 : add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004be907 : add byte ptr [rax], cl ; hlt ; call qword ptr [rax]
0x0000000000476985 : add byte ptr [rax], cl ; je 0x4769f2 ; pop rbx ; ret
0x000000000049ab2e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x232029], 8 ; ret
0x00000000004c6c47 : add byte ptr [rax], cl ; out dx, eax ; cli ; jmp qword ptr [rdx]
0x000000000049ab35 : add byte ptr [rax], cl ; ret
0x00000000004bc61f : add byte ptr [rax], cl ; ret 0x4b
0x00000000004c7e4f : add byte ptr [rax], dh ; add esp, edi ; jmp qword ptr [rax]
0x00000000004c6def : add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x00000000004c810f : add byte ptr [rax], dh ; or esp, edi ; call qword ptr [rdx]
0x00000000004c5f3f : add byte ptr [rax], dh ; push rdx ; cli ; jmp rsp
0x00000000004a348f : add byte ptr [rax], dh ; retf
0x00000000004a349f : add byte ptr [rax], dh ; retf 0x42
0x0000000000474756 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x000000000040107f : add byte ptr [rax], dl ; jmp 0x400fe3
0x00000000004a3487 : add byte ptr [rax], dl ; retf
0x00000000004c2f4f : add byte ptr [rax], dl ; sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004c8a5f : add byte ptr [rax], dl ; std ; call rsp
0x0000000000470e3d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047845d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000004c3085 : add byte ptr [rax], r8b ; call 0x114c28ce
0x000000000047e2bd : add byte ptr [rax], r8b ; call rbx
0x00000000004c28c5 : add byte ptr [rax], r8b ; clc ; add eax, edi ; call rsp
0x000000000046abcd : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x0000000000416bcd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x416baa
0x00000000004749c5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b3ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042cb8d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b42d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047adc5 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412d1d : add byte ptr [rax], r8b ; ret
0x000000000049a185 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004134dd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f4b6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046ae96 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043f516 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043f456 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000046ad06 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x00000000004674d7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x0000000000468337 : add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x000000000041b391 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b50e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047607b : add byte ptr [rbp + 0x39], cl ; retf
0x000000000047887c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c4be : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c58e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474797 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x000000000045a677 : add byte ptr [rbp + 0xa], dh ; jmp 0x45a6a5
0x0000000000478702 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000047909f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000478f8f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004787a4 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c816b : add byte ptr [rbp + rbx*4], cl ; add byte ptr [rax], dh ; or esp, edi ; call qword ptr [rdx]
0x00000000004ae237 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000432dde : add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x000000000046505e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047835a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000049e67e : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x00000000004c7163 : add byte ptr [rbp + rcx*4], al ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x00000000004c618b : add byte ptr [rbp + rdi*2], ch ; add byte ptr [rax + 0x7e], dl ; cli ; call rax
0x00000000004c2163 : add byte ptr [rbp + rdi], al ; add al, bl ; retf 0xfff7
0x000000000049ed24 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004897d1 : add byte ptr [rbp - 0x36], dh ; jmp 0x4897a8
0x000000000048ca01 : add byte ptr [rbp - 0x36], dh ; jmp 0x48c9d8
0x00000000004427ba : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae4e3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041db9f : add byte ptr [rbp - 0x42], dh ; ret
0x00000000004a34ec : add byte ptr [rbp - 0x42c00008], bl ; clc ; call qword ptr [rax]
0x0000000000475d6a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004528c9 : add byte ptr [rbp - 0x75], cl ; jl 0x4528fa ; and byte ptr [rax + 1], cl ; ret
0x000000000045cb49 : add byte ptr [rbp - 0x75], cl ; jl 0x45cb7a ; and byte ptr [rax + 1], cl ; ret
0x000000000040dc47 : add byte ptr [rbp - 0x76208037], al ; retf 0xdaf7
0x000000000046212f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448054 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x0000000000423c0d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000004673d5 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043e1dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000048072f : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004bdd30 : add byte ptr [rbp - 3], bh ; jmp rax
0x00000000004293a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004749b8 : add byte ptr [rbx + 0x2567b00d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e52b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000470300 : add byte ptr [rbx + 0x25d03115], cl ; add bh, dh ; ret 0x804
0x0000000000410d38 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416997 : add byte ptr [rbx + 0x2b5c0505], al ; add byte ptr [rcx], al ; ret
0x000000000047bc61 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442a4e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a58d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b3ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043af2f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000047f49a : add byte ptr [rbx + 0x4bcc00], bh ; jmp 0x47f473
0x0000000000420357 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434f7f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470e36 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e887 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412731 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004116b5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c07d3 : add byte ptr [rbx + 0x69580000], dh ; cmc ; call qword ptr [rdx]
0x000000000046318e : add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000049e19f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483ca5 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f5ea : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c27a3 : add byte ptr [rbx + rax*2 + 0x980000], al ; clc ; call qword ptr [rdi]
0x00000000004be723 : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; test al, 0x38 ; hlt ; call qword ptr [rdx]
0x00000000004c2f4b : add byte ptr [rbx + rcx*2], ch ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x0000000000419039 : add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x000000000046a606 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000446565 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; sti ; ret
0x000000000047049b : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004751c2 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a567 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480077 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004c5f3b : add byte ptr [rbx + rdi*2], bl ; add byte ptr [rax], al ; xor byte ptr [rdx - 6], dl ; jmp rsp
0x0000000000460658 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047c987 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c9a1 ; ret
0x0000000000467bca : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410ccf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e5a6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e59f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e598 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e591 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e58a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e583 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000040158c : add byte ptr [rbx - 0x3fceffd4], cl ; ret
0x000000000045ddfe : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e2f5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e2e0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474a21 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047528e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000419f97 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000443c0f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462f88 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410534 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d3e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406803 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462bb4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004073a0 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b2d4 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a478 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000442aaf : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041672e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c4133 : add byte ptr [rbx*2 - 0x24780000], dl ; clc ; call qword ptr [rdx]
0x00000000004c813b : add byte ptr [rbx*4 + 0x9300000], bl ; cld ; call qword ptr [rdx]
0x00000000004c8123 : add byte ptr [rbx*4 + 0x9380000], al ; cld ; call qword ptr [rax]
0x00000000004c8153 : add byte ptr [rbx*4 + 0x9380000], dh ; cld ; call qword ptr [rax]
0x0000000000470d87 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c8753 : add byte ptr [rbx], dh ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x0000000000494365 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044ef6f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046582f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b2cf : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489b4d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426a66 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e50e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040f702 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004751ff : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004155f6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470e33 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464a6c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fdce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403963 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042e64c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b278 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a250 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000046ae2f : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x0000000000440685 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d404 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d387 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041afc7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f4ae : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d45 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000041718b : add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000043daef : add byte ptr [rcx + 1], cl ; ret
0x000000000049b40f : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042085a : add byte ptr [rcx + 9], al ; ret
0x0000000000412682 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d40b : add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004c65a3 : add byte ptr [rcx + rax*4 - 0x51e80000], al ; cli ; call rdx
0x00000000004c3dd3 : add byte ptr [rcx + rbx*2 - 0x47980000], dh ; clc ; call qword ptr [rcx]
0x00000000004c3dbb : add byte ptr [rcx + rbx*2 - 0x47a00000], bl ; clc ; call qword ptr [rdi]
0x00000000004c3d63 : add byte ptr [rcx + rbx*2], al ; add al, cl ; leave ; std ; call qword ptr [rbx]
0x00000000004c3d23 : add byte ptr [rcx + rbx*2], al ; add byte ptr [rax], al ; pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004780ce : add byte ptr [rcx + rcx*4 + 0x25], cl ; retf 0x2548
0x000000000042cb8f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412683 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d40c : add byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004517a5 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e2a6
0x0000000000440f33 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044ee6f : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x0000000000473c5a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43fee8
0x000000000047e40f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000441067 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445422 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000041acf8 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049c9ef : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440e9c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044537c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440eab : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c1d23 : add byte ptr [rcx + rdi], al ; add byte ptr [rax], al ; sub byte ptr [rdx - 9], al ; call qword ptr [rax]
0x00000000004c1533 : add byte ptr [rcx + rsi], dl ; add byte ptr [rax], al ; sbb ah, dh ; cmc ; call qword ptr [rdx]
0x000000000048efab : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c0f3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488ef3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b104 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000405584 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449dc3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449de0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449dfd : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000419f30 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004830c0 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000046325f : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047fdab : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000044099f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e96f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000448d4d : add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000044a9e7 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44a9c5
0x0000000000442917 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044f18a : add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000473458 : add byte ptr [rcx - 0x77], cl ; call 0xffffffffca8c43b3
0x0000000000425a03 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000044342a : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443457 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004115a3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458aee : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000491cab : add byte ptr [rcx - 0x7d], cl ; jmp 0x491cc7
0x000000000049642b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496447
0x0000000000496a2b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496a47
0x0000000000496d2b : add byte ptr [rcx - 0x7d], cl ; jmp 0x496d47
0x000000000049702b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497047
0x000000000049732b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497347
0x000000000049762b : add byte ptr [rcx - 0x7d], cl ; jmp 0x497647
0x0000000000444107 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445e77 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046ca7f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422bef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fea0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004217bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ecf9 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041837f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a289 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a293 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047ce61 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c98a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a3da4 : add byte ptr [rcx - 7], bh ; jmp qword ptr [rax]
0x0000000000426212 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426238 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000443062 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004749be : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x00000000004c059b : add byte ptr [rcx], bh ; add byte ptr [rax + 0x64], dl ; cmc ; jmp qword ptr [rax]
0x000000000044425c : add byte ptr [rcx], bh ; ret
0x0000000000400c9c : add byte ptr [rcx], bh ; ret 0x860f
0x00000000004681e9 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x00000000004c2b40 : add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x000000000049ca60 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b88c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041398a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000043ec7b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047b587 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec5c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b1cf : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b1ca ; ret
0x000000000046ae4a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ae81 ; ret
0x0000000000488c17 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004134ff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413518 ; ret
0x000000000047a878 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000488222 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447cae : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446ea7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044732e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044427b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bc97 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000481244 : add byte ptr [rdi + 0x190], bh ; call 0x41dd48
0x000000000041af1b : add byte ptr [rdi + 0x4a237c], bh ; call 0x417158
0x000000000041af1a : add byte ptr [rdi + 0x4a237c], dil ; call 0x417159
0x000000000041af02 : add byte ptr [rdi + 0x4a23ab], bh ; call 0x417158
0x000000000041af01 : add byte ptr [rdi + 0x4a23ab], dil ; call 0x417159
0x00000000004424a2 : add byte ptr [rdi + 0x4a4c9d], bh ; mov eax, ebx ; syscall
0x00000000004424d1 : add byte ptr [rdi + 0x4a4ca8], bh ; mov eax, ebx ; syscall
0x000000000044f474 : add byte ptr [rdi + 0x4a6be0], bh ; mov eax, ecx ; syscall
0x000000000046557c : add byte ptr [rdi + 0x4b28dc], bh ; call 0x401808
0x0000000000474cc2 : add byte ptr [rdi + 0x4b6094], bh ; call 0x4017c8
0x0000000000432d85 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445830 : add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x000000000044582f : add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000402c67 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047abb1 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047acdc : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x000000000049c0a9 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c0d1 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c2b3b : add byte ptr [rdi + rax*2], bl ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x00000000004c6b9b : add byte ptr [rdi + rax*4], bh ; add al, dl ; jrcxz 0x4c6ba5 ; jmp qword ptr [rdx]
0x000000000045b7e4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a7d0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c73bb : add byte ptr [rdi + rcx*4 + 0x2ad00000], bl ; sti ; call rsp
0x00000000004c632b : add byte ptr [rdi + rdi*2], cl ; add byte ptr [rax], al ; jo 0x4c62c5 ; cli ; call rsi
0x0000000000443427 : add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x0000000000443454 : add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004434e1 : add byte ptr [rdi - 0x76b7ff94], bl ; retf 0x348
0x00000000004a3d4c : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x000000000043471a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e487 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448c4e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462ba7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000004480ba : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000422a5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466920 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411eff : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e65f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cebf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042615f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042614f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042613f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004672c7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d688 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004032e3 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004494fa : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420854 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460c29 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451dc9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dc58 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000449fdc : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000042016a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040edd9 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e02b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467d79 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000443066 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467ced : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bc5a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000476075 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000042677e : add byte ptr [rdx + 0x42fc80], bh ; cmove rax, rdx ; ret
0x000000000043aeef : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000043973f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004436f8 : add byte ptr [rdx + 0x4a], dl ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000444a9f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c246 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c7e4b : add byte ptr [rdx + rbx*4], ch ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004ade37 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bee2b : add byte ptr [rdx + rcx], cl ; add byte ptr [rax], al ; cld ; hlt ; call qword ptr [rbx]
0x00000000004c1e2b : add byte ptr [rdx + rdi], cl ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004c3623 : add byte ptr [rdx + rdx*2], al ; add byte ptr [rax], al ; pop rax ; js 0x4c362b ; call qword ptr [rcx]
0x00000000004c76b3 : add byte ptr [rdx + rdx*4 + 0x38b80000], dl ; sti ; jmp qword ptr [rdx]
0x00000000004c766b : add byte ptr [rdx + rdx*4], cl ; add byte ptr [rax - 0x71], dl ; jmp qword ptr [rsi]
0x00000000004c568b : add byte ptr [rdx + rsi*2], ch ; add al, dl ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c86c3 : add byte ptr [rdx - 0x46180000], ah ; cld ; call qword ptr [rax]
0x0000000000469a30 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469a45
0x00000000004a3408 : add byte ptr [rdx - 8], cl ; call qword ptr [rax]
0x0000000000488fa5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f6ed : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004a3a0c : add byte ptr [rip + 0x1c90fff9], bl ; stc ; jmp qword ptr [rax]
0x00000000004429b7 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042e954 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457ec3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000426054 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440e75 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000441062 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440f2e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440ea6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004412e0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000441053 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440f1f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440e97 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e7b7 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c922b : add byte ptr [rsi + rbp*4], cl ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x00000000004c9188 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c3aa3 : add byte ptr [rsi + rdx*2 - 0x65380000], al ; clc ; jmp rbx
0x00000000004a3504 : add byte ptr [rsi - 0x410f0008], bh ; clc ; jmp rax
0x000000000046acdd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000043ffdd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046abed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x000000000043ffbd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x0000000000442e0d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004bdd10 : add byte ptr [rsi - 3], ch ; jmp rax
0x00000000004c8a5b : add byte ptr [rsi], bh ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x00000000004c28c3 : add byte ptr [rsp + rax*2 + 0x1f80000], ah ; clc ; call rsp
0x00000000004c10c3 : add byte ptr [rsp + rbp - 0x2e280000], ah ; cmc ; call rdx
0x00000000004c00cb : add byte ptr [rsp + rbx + 0x55200000], ch ; cmc ; call qword ptr [rcx]
0x00000000004c3083 : add byte ptr [rsp + rcx*2], ah ; add al, ch ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c7073 : add byte ptr [rsp + rcx*4], dl ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004bf8a3 : add byte ptr [rsp + rdx + 0x2e080000], al ; cmc ; call qword ptr [rax]
0x00000000004c5863 : add byte ptr [rsp + rsi*2], al ; add byte ptr [rax], cl ; and bh, dl ; jmp rdi
0x000000000045c916 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000469f00 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045c604 : add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x00000000004695e7 : add byte ptr es:[rax + 0xf], cl ; retf 0x8948
0x0000000000469d2b : add byte ptr es:[rax + 1], cl ; retf
0x00000000004693b7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091d0f
0x0000000000467fa3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000468913 : add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000041d40a : add byte ptr es:[rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x0000000000467d78 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467cec : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469a2f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469a46
0x0000000000469a2e : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469a47
0x0000000000425e08 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004427b7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004c3084 : add byte ptr fs:[rax], r8b ; call 0x114c28cf
0x00000000004134d0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411c33 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044582e : add byte ptr gs:[rdi + 0x6cc6d0], r15b ; call rax
0x00000000004c1b15 : add byte ptr ss:[rax], al ; call 0x274c1176
0x00000000004c1a9d : add byte ptr ss:[rax], al ; nop ; jbe 0x4c1a9f ; call qword ptr [rax]
0x00000000004a3628 : add ch, 0xf8 ; jmp qword ptr [rax]
0x00000000004ae243 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000414200 : add ch, al ; pop rdx ; retf
0x00000000004587df : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb49c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb49d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046747b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458ce0 : add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000464d7a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d440 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041aedd : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472578 : add ch, cl ; ret 0xfffd
0x000000000045a8a9 : add cl, bl ; in eax, 0xdf ; loopne 0x45a83e ; ret 0xe680
0x00000000004ba86a : add cl, bl ; retf 0xea91
0x000000000041a62c : add cl, bpl ; retf 0xfffe
0x0000000000439767 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045dd3e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000489644 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048966d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044b7cc : add cl, byte ptr [rax + 0x39] ; int 0xf
0x0000000000449a83 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046f96b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004324aa : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000045c54d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041d7dc : add cl, byte ptr [rax + 0xf] ; retf 0x8348
0x0000000000410719 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483f05 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d0f3 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439768 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004396d5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047bfb1 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004165d2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041b0c2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047b460 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fc70
0x000000000046b299 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004799bc : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004238a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000448694 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000423903 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004643a1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bfca0 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000048a033 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004355c2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c164 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x0000000000403d7b : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047d5f4 : add cl, byte ptr [rcx - 0x73] ; jl 0x47d5c6 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000043f67f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f5d7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000404488 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000041b508 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462d85 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e3b9 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e25d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7ba7 : add cl, byte ptr [rdx] ; ret
0x000000000047668d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443e7f : add cl, ch ; ret
0x0000000000408678 : add cl, ch ; ret 0xffe2
0x00000000004724a4 : add cl, ch ; ret 0xfffd
0x0000000000407be4 : add cl, ch ; retf
0x000000000048b9ba : add cl, ch ; retf 0xfff2
0x0000000000453900 : add cl, ch ; retf 0xfffa
0x000000000043f08f : add cl, ch ; retf 0xfffc
0x000000000041f31e : add cl, ch ; retf 0xfffd
0x000000000041a62d : add cl, ch ; retf 0xfffe
0x0000000000400a45 : add cl, cl ; ret
0x00000000004ba723 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004ba722 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004bfba8 : add dh, ah ; ret
0x00000000004b1eeb : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004655d2 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b955e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004b1337 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435773 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fe8b : add dh, bl ; ret
0x0000000000484398 : add dh, byte ptr [rax] ; jmp 0x480e31
0x00000000004bfaa6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e7c2 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470990 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x0000000000412cf3 : add dh, byte ptr [rdx + rsi + 0x48] ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041760a : add dh, dh ; ret
0x00000000004470b5 : add dh, dh ; ret 0x4801
0x0000000000426918 : add dh, dh ; ret 0x7404
0x0000000000400eda : add dh, dh ; ret 0x7420
0x000000000043be17 : add dh, dh ; ret 0x7501
0x000000000043be24 : add dh, dh ; ret 0x7502
0x000000000043be31 : add dh, dh ; ret 0x7504
0x000000000043bde9 : add dh, dh ; ret 0x7510
0x000000000043bdf6 : add dh, dh ; ret 0x7520
0x000000000043be03 : add dh, dh ; ret 0x7540
0x000000000041b505 : add dh, dh ; ret 0xf02
0x000000000047097a : add dh, dh ; ret 0xf08
0x00000000004c51e9 : add dl, bh ; call rsi
0x000000000046cfcb : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c1b44 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449dc6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000004624be : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462c12 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000449430 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043aef1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047e651 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x000000000048ad12 : add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047e9b1 : add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x0000000000415251 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000474809 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047481b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479b50 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045983d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041cb3d : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047c374 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049cb99 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000475a66 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047befd : add dword ptr [rax + 1], ecx ; ret
0x000000000040dbc6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e7b2 : add dword ptr [rax + 3], edi ; je 0x49e7c9 ; ret
0x000000000041c99a : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000004c4eb6 : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004ba31b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4ba387 ; retf
0x0000000000458326 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x00000000004028b3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b4fa : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439741 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004746ad : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004396d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415053 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004188ce : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004151ea : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465501 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471ce7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412f3f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047b464 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000047460d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004258c2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004738c4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004624bf : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450689 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041b0c6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044467c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452b63 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446d8e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489f24 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d723 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462c13 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048136a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048915c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c65a5 : add dword ptr [rax], 0xfaae1800 ; call rdx
0x0000000000481247 : add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x000000000040502a : add dword ptr [rax], eax ; add al, ch ; scasb al, byte ptr [rdi] ; retf
0x000000000049ad0b : add dword ptr [rax], eax ; add bl, ch ; retf
0x000000000040f9d6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c2d6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b44e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004739d4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004472fe : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000047ed47 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421169 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b27b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004115f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f1e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bf35 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004649f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e696 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e7c0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405a97 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c847 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040eddd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042368d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449884 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042569e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c10f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d9f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d85a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da1e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d933 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8be : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dabe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da92 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d900 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d88e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044c632 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463f80 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444b01 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b133a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b04ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b0312 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b030a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0aa2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b034a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0342 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ae2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049c0ab : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004016a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440e77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046a0a7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a074
0x000000000046bc9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bc71
0x0000000000486f15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486eea
0x000000000049c99d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000004428fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ed43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044ed71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c618 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a5fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000441064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440f30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440ea8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004412ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004628d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004621e9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c58b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415653 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444227 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041b50c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000049e67c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x00000000004251e8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049bf0e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444313 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467bc8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410532 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462bb2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044f188 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000445efc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fe9e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004494fe : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d20b : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a291 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004681e7 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x0000000000413988 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446ea5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004480b8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000043be15 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043be22 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043be2f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bde7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bdf4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043be01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004213d8 : add dword ptr [rax], eax ; ret
0x0000000000425cc1 : add dword ptr [rax], edi ; ret
0x00000000004258c6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043e297 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004ba864 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000047e402 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048a013 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041ecfd : add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x0000000000485f37 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442729 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bac4a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435632 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b982a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000040d5fd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c9439 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c9436 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000045c5ff : add dword ptr [rcx + 0x26f4a60d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000046a1b9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446eca : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447358 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041bb3a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439771 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461fd0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000049daef : add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000049ad06 : add dword ptr [rcx - 0x78], eax ; xchg eax, esi ; jo 0x49ad16 ; add byte ptr [rax], al ; jmp 0x49ace4
0x0000000000445ead : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004042ed : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004256b7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f8e1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041be45 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047767b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047521a : add dword ptr [rcx], edi ; retf
0x00000000004ba775 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c6dc5 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c6d05 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6d65 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c6d16 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6d76 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6dd6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c29b5 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7ba3 : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7af2 : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e2f8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045bd71 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041842e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a7ad : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004472fa : add dword ptr [rdi], ecx ; test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041d211 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474a27 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475294 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e1bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499fc0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000042ac76 : add dword ptr [rdx + 0x410d8d48], edx ; retf
0x0000000000403d75 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043dd82 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048849b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfba6 : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046d9c7 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004ba44f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000046dcb7 : add dword ptr [rdx - 0x77], eax ; je 0x46dc47 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dcb6 : add dword ptr [rdx - 0x77], eax ; je 0x46dc48 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c0e15 : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6ad5 : add dword ptr [rdx], 0x48 ; ret
0x00000000004c91c4 : add dword ptr [rdx], 0x54 ; ret
0x00000000004c6594 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6acc : add dword ptr [rdx], 0x5b ; ret
0x00000000004c916c : add dword ptr [rdx], 0x69 ; ret
0x00000000004c5004 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4ddc : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c0414 : add dword ptr [rdx], 2 ; ret
0x00000000004bfcb2 : add dword ptr [rdx], ecx ; ret
0x00000000004bf5d3 : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000416998 : add dword ptr [rip + 0x2b5c05], 1 ; ret
0x00000000004bf116 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf12c ; ret
0x00000000004bf124 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439752 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bffb6 : add dword ptr [rsi], 0xa ; ret
0x00000000004c0028 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1b45 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d4d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c250e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004978d7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7bba : add dword ptr es:[rdx], ecx ; ret
0x000000000041699a : add eax, 0x1002b5c ; ret
0x0000000000426d78 : add eax, 0x12ad3 ; ret
0x0000000000423848 : add eax, 0x14853 ; ret
0x00000000004261ea : add eax, 0x15e71 ; ret
0x00000000004267c4 : add eax, 0x17647 ; ret
0x00000000004213d5 : add eax, 0x1a966 ; ret
0x00000000004261ce : add eax, 0x1d ; ret
0x000000000044f6ec : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c168c : add eax, 0x2300e4a ; ret
0x00000000004886a1 : add eax, 0x244cfa ; ret
0x00000000004768b0 : add eax, 0x256a82 ; jne 0x4768f9 ; ret
0x00000000004740bc : add eax, 0x258de7 ; mov qword ptr [rsi], rax ; ret
0x000000000047405b : add eax, 0x258e50 ; ret
0x0000000000473f7a : add eax, 0x258f31 ; add rsp, 8 ; ret
0x000000000044cb02 : add eax, 0x27fbf1 ; ret
0x0000000000445792 : add eax, 0x287c71 ; ret
0x0000000000444241 : add eax, 0x2891aa ; test eax, eax ; je 0x444259 ; ret
0x0000000000420093 : add eax, 0x2aa6ec ; push rax ; retf 0x41
0x000000000041f2f5 : add eax, 0x2ab48a ; push rax ; retf 0x41
0x000000000041dcf6 : add eax, 0x2aca89 ; push rax ; retf 0x41
0x000000000041dd29 : add eax, 0x2ae8d6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416902 : add eax, 0x2b37b9 ; ret
0x0000000000416a06 : add eax, 0x2b5b99 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040158b : add eax, 0x2c8b00 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c1b43 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000004896a1 : add eax, 0x394d0000 ; retf
0x000000000043af88 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004397b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b486 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043b009 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x00000000004397f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047aa06 : add eax, 0x5b000000 ; ret
0x00000000004b1edd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418cc5 : add eax, 0x5c415d5b ; ret
0x00000000004b1eed : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000426e94 : add eax, 0x67 ; ret
0x000000000048a093 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e1b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042327d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a701 : add eax, 0x83480000 ; ret 0xe910
0x00000000004231d1 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004566dd : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043af8b : add eax, 0x8428d48 ; ret
0x00000000004261e2 : add eax, 0x8449 ; ret
0x000000000048577a : add eax, 0x89000001 ; ret 0x348
0x0000000000424d68 : add eax, 0x894d0000 ; retf
0x0000000000449a7d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449dde : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449dfb : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f68a : add eax, 0xc0310000 ; ret
0x000000000043b00d : add eax, 0xc428d48 ; ret
0x000000000043baed : add eax, 0xc478d48 ; ret
0x0000000000441312 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441337 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441480 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441519 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a287 : add eax, 0xf6410000 ; ret 0xf01
0x0000000000435623 : add eax, 0xf7f0ff3 ; ret
0x00000000004738bf : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004789ea : add eax, 0xfffffff8 ; ret
0x000000000043e295 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466771 : add eax, 1 ; ret
0x0000000000444ae5 : add eax, 2 ; push rax ; call rbx
0x0000000000466768 : add eax, 2 ; ret
0x0000000000421628 : add eax, 3 ; ret
0x0000000000426ee7 : add eax, 4 ; ret
0x000000000044f649 : add eax, dword ptr [0] ; ret
0x0000000000470d88 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418e63 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041792b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004712de : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000418e3f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044dd08 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fcc3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042341d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a8a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423441 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445736 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e7b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e7c7 ; ret
0x000000000044007c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000046a603 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044185d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004418b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441934 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441a34 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000412495 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000421629 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476983 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x4769f4 ; pop rbx ; ret
0x0000000000495c5a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e2f3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e50c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000448d4b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x0000000000442915 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000497629 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497649
0x0000000000418432 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004429b5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470978 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000445421 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044537b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444d2a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e510 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e530 : add eax, dword ptr [rax] ; ret
0x00000000004c5f6b : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bfc9a : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047eb31 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6d19 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004113a4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047cdbd : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7c73 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf6c2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046afba : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471b95 : add eax, dword ptr [rdi] ; call rax
0x0000000000478794 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475ee9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6d79 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6dd9 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf412 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c458a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfba2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c250a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004716fb : add eax, dword ptr [rsp] ; call rax
0x00000000004976cf : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e5d8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049a02e : add eax, eax ; jmp r8
0x000000000049b556 : add eax, eax ; jmp rax
0x000000000045a4d8 : add eax, eax ; ret
0x00000000004420d9 : add eax, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4420e9 ; call rbx
0x0000000000425e06 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049b1fe : add eax, ebp ; jmp rax
0x000000000049d58b : add eax, ebx ; cmp rdi, r8 ; jae 0x49d55b ; mov rdx, rcx ; jmp 0x49d573
0x0000000000416673 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425f0a : add eax, ecx ; ret
0x0000000000425f07 : add eax, edi ; add rax, rcx ; ret
0x00000000004a3299 : add eax, edi ; call qword ptr [rax]
0x00000000004c28c9 : add eax, edi ; call rsp
0x0000000000426144 : add eax, edi ; ret
0x0000000000423b16 : add eax, edx ; sub rax, rdi ; ret
0x000000000049bade : add eax, esi ; jmp rax
0x00000000004672e7 : add eax, esi ; ret
0x000000000045a4d7 : add eax, r8d ; ret
0x0000000000457a18 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b7fd : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000047bdad : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b93b7 : add ebp, ebp ; retf
0x00000000004716f7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x00000000004886da : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6d6a : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471393 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bfcb0 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478a81 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004854fa : add ebx, ebp ; ret 0x8d48
0x00000000004357e3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x00000000004268a4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426899 ; ret
0x0000000000486f11 : add ecx, 8 ; mov esi, 1 ; jmp 0x486eee
0x00000000004397a5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418299 : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000449a9f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004643a7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432aba : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x00000000004153a5 : add ecx, dword ptr [rax + 0x39] ; retf 0x8948
0x000000000046dbf9 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b4fe : add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004397a9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047dd78 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d53e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418d88 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004345d8 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004472c5 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e03d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e117 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000411b27 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048a053 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435552 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6d0a : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b424 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e3cf : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004397a6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046dc2b : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c1efa : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c53e8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b7fd : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000004520ac : add ecx, ebp ; ret
0x000000000046b3ab : add ecx, ebp ; retf 0xfffe
0x000000000042fcae : add ecx, ebx ; jmp r9
0x000000000042e652 : add ecx, ebx ; jmp rcx
0x000000000049a256 : add ecx, esi ; jmp rcx
0x0000000000470b77 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ed8f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004646b7 : add edi, dword ptr [rcx] ; retf 0xf48
0x000000000042fcab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004be379 : add edi, esi ; call rax
0x00000000004be8c9 : add edi, esi ; call rdi
0x00000000004726dc : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c9363 : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x00000000004763a5 : add edx, eax ; jmp 0x4763ba
0x0000000000479612 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452a73 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444330 : add edx, ebx ; loopne 0x444394 ; pop rbp ; ret
0x00000000004bf582 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c2602 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d4f7 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c943a : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435703 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f3cc : add esi, ebx ; ret
0x000000000043e5c0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fca8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004632d8 : add esi, esi ; ret 0x7420
0x0000000000487c37 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fe11 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e719 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420577 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e701 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473602 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004735e4 : add esp, 0x140 ; pop rbx ; ret
0x000000000043fecd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416df1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410c97 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f3a0 : add esp, 0x18 ; ret
0x0000000000444310 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004522f3 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048800c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445851 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004150ff : add esp, 0x20 ; pop rbx ; ret
0x000000000047b099 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040db98 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041495e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487f61 : add esp, 0x28 ; ret
0x000000000046ae02 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478679 : add esp, 0x30 ; pop rbx ; ret
0x000000000043ed60 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478706 : add esp, 0x38 ; ret
0x000000000047858c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046ad72 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478798 : add esp, 0x48 ; ret
0x000000000047851a : add esp, 0x50 ; jmp qword ptr [rax]
0x00000000004880b4 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046692c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f650 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478882 : add esp, 0x68 ; ret
0x000000000044272d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f931 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046aa8b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414517 : add esp, 0x80 ; ret
0x0000000000420036 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046ab89 : add esp, 0x90 ; pop rbx ; ret
0x000000000046aba7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041305d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040118f : add esp, 0x98 ; ret
0x000000000044f9a9 : add esp, 0xd0 ; ret
0x000000000040f417 : add esp, 0xd8 ; ret
0x0000000000478455 : add esp, 8 ; jmp rax
0x0000000000411043 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fc9c : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fe2a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417998 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebc0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f513 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487f97 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041de9e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004059e1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401863 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ca8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423969 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473ed1 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004baaab : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004c693a : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7bb9 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c7e51 : add esp, edi ; jmp qword ptr [rax]
0x0000000000446d8d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042384a : add qword ptr [rax], rax ; ret
0x000000000041be44 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c7ba2 : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047f49e : add r11b, bpl ; retf 0x1f0f
0x000000000042678c : add r11b, sil ; ret
0x00000000004357e2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435772 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435702 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f85d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495d00 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a02d : add r8, rax ; jmp r8
0x00000000004553bd : add r8b, bpl ; cld ; ret
0x0000000000455ef6 : add r8b, bpl ; ret
0x000000000048eaf7 : add r8b, bpl ; ret 0xf72c
0x000000000048bbf7 : add r8b, bpl ; ret 0xf75b
0x000000000045fdf7 : add r8b, bpl ; ret 0xfa19
0x000000000049f667 : add r8b, bpl ; ret 0xfa25
0x00000000004655ad : add r8b, bpl ; ret 0xfff9
0x0000000000474cc6 : add r8b, bpl ; retf 0xfff8
0x000000000042fcad : add r9, r11 ; jmp r9
0x00000000004ba869 : add r9b, bl ; retf 0xea91
0x000000000041f31d : add r9b, bpl ; retf 0xfffd
0x000000000044b7cb : add r9b, byte ptr [r8 + 0x39] ; int 0xf
0x0000000000449de3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e00 : add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000004974b2 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000004789e9 : add rax, -8 ; ret
0x000000000043e294 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466770 : add rax, 1 ; ret
0x0000000000466767 : add rax, 2 ; ret
0x0000000000466780 : add rax, 3 ; ret
0x000000000044f648 : add rax, qword ptr [0] ; ret
0x00000000004716fa : add rax, qword ptr [r12] ; call rax
0x0000000000471b94 : add rax, qword ptr [r15] ; call rax
0x0000000000448d4a : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000047eb30 : add rax, qword ptr [rbx] ; call rax
0x0000000000478793 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475ee8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f647 : add rax, qword ptr fs:[0] ; ret
0x000000000049badd : add rax, r14 ; jmp rax
0x000000000049b555 : add rax, r8 ; jmp rax
0x000000000049b1fd : add rax, rbp ; jmp rax
0x0000000000425f09 : add rax, rcx ; ret
0x0000000000425f06 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426143 : add rax, rdi ; ret
0x0000000000423b15 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047bdac : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004716f6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e651 : add rcx, r11 ; jmp rcx
0x000000000049a255 : add rcx, r14 ; jmp rcx
0x0000000000470b76 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ed8e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fcaa : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004be8c8 : add rdi, rsi ; call rdi
0x00000000004726db : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452a72 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000479611 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004763a4 : add rdx, rax ; jmp 0x4763bb
0x0000000000487c36 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fe10 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e718 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e700 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004735e3 : add rsp, 0x140 ; pop rbx ; ret
0x000000000043fecc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410c96 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f39f : add rsp, 0x18 ; ret
0x000000000044430f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004522f2 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000048800b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445850 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004150fe : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b098 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041495d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487f60 : add rsp, 0x28 ; ret
0x000000000046ae01 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478678 : add rsp, 0x30 ; pop rbx ; ret
0x000000000043ed5f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478705 : add rsp, 0x38 ; ret
0x000000000047858b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046ad71 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478797 : add rsp, 0x48 ; ret
0x0000000000478519 : add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004880b3 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046692b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f64f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478881 : add rsp, 0x68 ; ret
0x000000000044272c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046aa8a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414516 : add rsp, 0x80 ; ret
0x000000000046ab88 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041305c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040118e : add rsp, 0x98 ; ret
0x000000000044f9a8 : add rsp, 0xd0 ; ret
0x000000000040f416 : add rsp, 0xd8 ; ret
0x0000000000478454 : add rsp, 8 ; jmp rax
0x0000000000411042 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fc9b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fe29 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417997 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebbf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f512 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487f96 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041de9d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401862 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ca7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423968 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c37e : add sil, sil ; ret 0x7404
0x000000000048849a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3668 : and ah, ch ; clc ; jmp qword ptr [rax]
0x0000000000491c25 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000488498 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004886a4 : and al, 0 ; ret
0x000000000048c9ff : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48c9da
0x000000000043f67d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c458 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000447133 : and al, 0x10 ; call r12
0x000000000041b6bd : and al, 0x10 ; call rax
0x0000000000464f89 : and al, 0x10 ; call rbx
0x0000000000400c35 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440611 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447427 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447d8a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000487f5b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049cb05 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x00000000004505a6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000004655d5 : and al, 0x14 ; add al, ch ; ret
0x0000000000418cf6 : and al, 0x14 ; pop r12 ; ret
0x000000000041de9b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b97c : and al, 0x18 ; call r14
0x0000000000400c92 : and al, 0x18 ; call rax
0x0000000000464f84 : and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x000000000041b6b8 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444a58 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448170 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b160 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044712e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000465062 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418cc2 : and al, 0x1c ; je 0x418cd3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418cc1 : and al, 0x1c ; je 0x418cd4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044742c : and al, 0x20 ; call rax
0x0000000000466ae7 : and al, 0x20 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000450bc3 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b95e4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000478700 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489b4b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004478a7 : and al, 0x28 ; call r12
0x00000000004485d2 : and al, 0x28 ; call r14
0x0000000000446f34 : and al, 0x28 ; call r15
0x0000000000447d8f : and al, 0x28 ; call rax
0x000000000044795b : and al, 0x28 ; call rbx
0x0000000000466e02 : and al, 0x28 ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466b8f : and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x000000000041ebb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000478975 : and al, 0x28 ; ret
0x000000000048fbdf : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b1bc : and al, 0x30 ; call r14
0x00000000004735af : and al, 0x30 ; call r9
0x00000000004497da : and al, 0x30 ; call rbx
0x000000000048807f : and al, 0x30 ; je 0x488093 ; mov edi, 0x6cb140 ; call rax
0x000000000040e0d9 : and al, 0x30 ; lea r15, [rbx + r14] ; call rax
0x00000000004669cd : and al, 0x30 ; lea rcx, [rax + 1] ; call rbx
0x0000000000449c1a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446fd1 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447956 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041accb : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000004821ef : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048cd82 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004788ae : and al, 0x38 ; add rsp, 0x68 ; ret
0x00000000004735aa : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004497d5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478589 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478517 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000448b5a : and al, 0x40 ; call r15
0x0000000000466aec : and al, 0x40 ; call rbx
0x0000000000448f01 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043fecb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f39e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000041e1c3 : and al, 0x48 ; call rax
0x000000000046fa14 : and al, 0x48 ; lea edi, [rax + 0x6cb1e0] ; call rdx
0x000000000044226d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x00000000004478a2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446f2f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448b55 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004671f2 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000047882b : and al, 0x48 ; ret
0x000000000049df8c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044a9eb : and al, 0x49 ; mov esp, esi ; jmp 0x44a9c1
0x000000000044b977 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c9dd : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418cf1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466d00 : and al, 0x60 ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000041e4cb : and al, 0x68 ; call rax
0x000000000041f7ab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004116ce : and al, 0x74 ; ret 0x8b4c
0x0000000000472c4a : and al, 0x75 ; ret
0x000000000047b91e : and al, 0x78 ; call r12
0x000000000047bded : and al, 0x78 ; lea rdi, [rsp + 0x78] ; call r12
0x00000000004485cd : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b1b7 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b73f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c5c4 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004470b1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c6c44 : and al, 0x88 ; add byte ptr [rax], al ; or bh, ch ; cli ; jmp qword ptr [rdx]
0x000000000041bec6 : and al, 0x89 ; ret 0xb48b
0x000000000041be42 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000043f5d5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000046aeb9 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f479 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f4d9 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f539 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046ad29 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049bfeb : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000047872f : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400c39 : and al, 0xc ; call r12
0x0000000000400c8d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047bb9a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040888b : and al, 0xe8 ; call rbx
0x00000000004099e4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004099fa : and al, 0xe8 ; nop ; ret 0xffff
0x000000000040999b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409a1c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409a32 : and al, 0xe8 ; pop rax ; ret 0xffff
0x0000000000406a17 : and al, 0xe8 ; ret
0x0000000000409a43 : and al, 0xe8 ; ret 0xffff
0x000000000040cfc0 : and al, 0xe8 ; retf 0xff8c
0x000000000041d410 : and al, 0xe8 ; retf 0xffa1
0x00000000004091c0 : and al, 0xe8 ; retf 0xffca
0x00000000004091e0 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004098f3 : and al, 0xe8 ; xchg eax, edi ; ret
0x00000000004085b5 : and al, 0xe9 ; retf
0x00000000004785c0 : and al, 0xe9 ; retf 0x76
0x00000000004919c8 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cee5 : and al, 0xf ; ret 0x8348
0x000000000041c367 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c486 : and al, 0xf8 ; jne 0x42c362 ; ret
0x0000000000491981 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491987 : and al, 0xf8 ; ret
0x000000000049193b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491941 : and al, 0xfc ; ret
0x000000000044f717 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f71b : and al, 0xfe ; ret
0x0000000000441eaa : and al, 0xff ; ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41e0e8
0x000000000046a0a6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fb2c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000004897cf : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x4897aa
0x000000000043e716 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047ac12 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409231 : and al, 8 ; call 0x405c94
0x0000000000409230 : and al, 8 ; call 0x405c95
0x0000000000440528 : and al, 8 ; call rbx
0x0000000000487fd9 : and al, 8 ; je 0x487fed ; mov edi, 0x6cb140 ; call rax
0x000000000043f6e1 : and al, 8 ; jmp 0x43f658
0x000000000043faeb : and al, 8 ; mov eax, 0x101 ; syscall
0x000000000043fba2 : and al, 8 ; mov eax, 3 ; syscall
0x00000000004782c0 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041b774 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004091a0 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c98
0x000000000040919f : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c99
0x000000000040e296 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004422b2 : and al, 8 ; xor eax, eax ; syscall
0x00000000004a3600 : and al, al ; clc ; jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a09b8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491dce : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410d36 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040739e : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049ed23 : and al, byte ptr [rax] ; jne 0x49ed0d ; pop rbx ; ret
0x000000000049e0e4 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000042391a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000466de7 : and al, ch ; ret
0x0000000000403c10 : and al, ch ; retf 0x1a4
0x000000000045d43e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004c5869 : and bh, dl ; jmp rdi
0x0000000000474803 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004a3708 : and bl, ch ; clc ; jmp qword ptr [rax]
0x000000000046273b : and bl, ch ; retf 0x9066
0x000000000040dc3f : and bl, dh ; ret
0x000000000046751e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000419f33 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000414d24 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049e984 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419fc9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000410507 : and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x00000000004528ce : and byte ptr [rax + 1], cl ; ret
0x00000000004239e8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423b0d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046586e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048f720 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000488502 : and byte ptr [rax - 0x2f], cl ; jmp 0x4884c7
0x000000000040ea00 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000466ae8 : and byte ptr [rax - 0x73], cl ; je 0x466b17 ; call rbx
0x000000000041bbd3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045d36c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000040ed43 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469a34 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445e84 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00000000004523a6 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045ac4d : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044f024 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f038 ; call rax
0x000000000049d15b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445d1e : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000419f34 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412522 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004bddb8 : and byte ptr [rax - 3], ah ; jmp qword ptr [rax]
0x000000000043e5a3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049201e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044582d : and byte ptr [rbp + 0x44], ah ; add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x00000000004bdd0c : and byte ptr [rbp + rdi*8 - 1], ch ; add byte ptr [rsi - 3], ch ; jmp rax
0x0000000000466ce2 : and byte ptr [rbp - 0x73], cl ; jl 0x466c75 ; add al, 0xe8 ; ret
0x00000000004c00d0 : and byte ptr [rbp - 0xb], dl ; call qword ptr [rcx]
0x00000000004c7c76 : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bb388 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405be8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046751f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445853 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf6c5 : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bfc9d : and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000046059e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000455600 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000462f29 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004bdd2c : and byte ptr [rbx - 3], bh ; inc dword ptr [rax] ; jge 0x4bdd37 ; jmp rax
0x000000000049ab33 : and byte ptr [rbx], ah ; add byte ptr [rax], cl ; ret
0x0000000000414d25 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c44be : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450bc4 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000004522f5 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004919c5 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445e0c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x000000000040fa86 : and byte ptr [rdi], bl ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a3a30 : and byte ptr [rdi], cl ; stc ; jmp rax
0x0000000000445df9 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bdf0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000042e6ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c458d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000478824 : and byte ptr [rsi - 0x38b7ffb9], al ; and al, 0x48 ; ret
0x00000000004a35f8 : and byte ptr [rsi - 0x40df0008], bh ; clc ; jmp qword ptr [rax]
0x00000000004618ec : and byte ptr [rsi], bh ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466762 : and ch, 0xf ; je 0x466789 ; add rax, 2 ; ret
0x000000000046674d : and cl, 0xf ; je 0x466775 ; ret
0x00000000004a3608 : and cl, al ; clc ; jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a37f5 : and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x000000000041c6be : and cl, bpl ; ret 0xfff9
0x000000000047ea73 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004262cd : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000004a3704 : and cl, ch ; clc ; jmp qword ptr [rax]
0x000000000041c6bf : and cl, ch ; ret 0xfff9
0x00000000004268b7 : and dh, dh ; ret 0x7504
0x000000000045d43d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a36b4 : and dl, ah ; clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a3ad0 : and dl, byte ptr [rbx] ; stc ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a3ac8 : and dl, byte ptr [rcx + rdi*8] ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3ad8 : and dl, byte ptr [rdx] ; stc ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3ac0 : and dl, byte ptr [rip + 0x14a2fff9] ; stc ; jmp qword ptr [rdx]
0x00000000004a3664 : and dl, ch ; clc ; jmp qword ptr [rax]
0x00000000004c059d : and dword ptr [rax], eax ; add byte ptr [rax + 0x64], dl ; cmc ; jmp qword ptr [rax]
0x0000000000497d9e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457879 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bd221 : and dword ptr [rax], ecx ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4811
0x00000000004bb102 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415c8c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048ed8c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000045a675 : and dword ptr [rdi], esp ; add byte ptr [rbp + 0xa], dh ; jmp 0x45a6a7
0x00000000004b81b9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb101 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f64b : and eax, 0 ; ret
0x000000000049cc7a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x00000000004780cd : and eax, 0x25894c00 ; retf 0x2548
0x000000000047c9b6 : and eax, 0x2d0 ; ret
0x000000000040ea51 : and eax, 0x30 ; call rax
0x000000000040ea09 : and eax, 0x30 ; call rdx
0x00000000004768b3 : and eax, 0x38754000 ; ret
0x000000000046a3dd : and eax, 0x39480026 ; retf
0x000000000043e50d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e52d : and eax, 0x3fc00 ; ret
0x000000000043e4ec : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000471230 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f55b : and eax, 0x4e ; add byte ptr [rax], al ; ret
0x00000000004740bf : and eax, 0x6894800 ; ret
0x000000000043e560 : and eax, 0x7ff80000 ; ret
0x00000000004749a3 : and eax, 0x89485300 ; ret
0x000000000041afc6 : and eax, 0x950f4100 ; ret
0x0000000000442997 : and eax, 0xc ; cmp eax, 4 ; je 0x4429a8 ; ret
0x0000000000406314 : and eax, 0xe8ef894c ; ret
0x0000000000400d4f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000417189 : and eax, 0xf49004a ; retf 0xff31
0x0000000000444446 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478a7c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004c07d5 : and eax, dword ptr [rax] ; add byte ptr [rax + 0x69], bl ; cmc ; call qword ptr [rdx]
0x0000000000497bf5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491ca9 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x491cc9
0x0000000000415c8d : and ebp, edi ; pop rbx ; ret
0x0000000000442932 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442945 ; ret
0x00000000004b98b4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042fc65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f398 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000041a04b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fe6c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000416a3c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000041af05 : and ecx, dword ptr [rdx] ; call 0x417155
0x000000000049199e : and esi, 0xe0837fff ; jg 0x4919b7 ; ret 0x5488
0x000000000049ffb9 : and esp, ecx ; idiv edi ; nop dword ptr [rax] ; ret
0x000000000043eb2e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000004780cc : and rax, 0x25894c00 ; retf 0x2548
0x0000000000466f77 : bnd je 0x466f86 ; test edx, edx ; jne 0x466f78 ; ret
0x000000000042cd5a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426140 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426150 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426160 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426130 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042607f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042cf53 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004239b6 : bsf eax, edx ; ret
0x0000000000423b12 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042d070 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000423a02 : bsf rax, rdx ; ret
0x0000000000465937 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465bbb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465ac9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000004659c5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000465936 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465bba : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465ac8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000004659c4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047bca7 : call 0x1009f4ce
0x000000000047c60a : call 0x1009fe31
0x00000000004c3088 : call 0x114c28cb
0x00000000004c86c8 : call 0x114c8389
0x0000000000452785 : call 0x1f54f277
0x000000000044b2a8 : call 0x20735f8
0x000000000042c694 : call 0x24b751ed
0x00000000004c1b18 : call 0x274c1173
0x000000000047388a : call 0x400352
0x000000000047388a : call 0x400357
0x0000000000411bac : call 0x400396
0x000000000041189c : call 0x400397
0x0000000000474cc8 : call 0x4017c2
0x0000000000465582 : call 0x401802
0x000000000040999c : call 0x405c92
0x000000000044b34e : call 0x40763e
0x000000000041af08 : call 0x417152
0x000000000041bf11 : call 0x418162
0x000000000041d051 : call 0x419af2
0x00000000004205b1 : call 0x41c842
0x0000000000461b20 : call 0x41dd42
0x0000000000441e01 : call 0x41e0e2
0x0000000000408674 : call 0x41e0e6
0x00000000004517a9 : call 0x41e2a2
0x0000000000420380 : call 0x41f026
0x000000000040e871 : call 0x423988
0x000000000045c988 : call 0x4268f7
0x00000000004100df : call 0x42c352
0x0000000000400721 : call 0x43e476
0x0000000000473c60 : call 0x43fee2
0x0000000000456672 : call 0x442882
0x0000000000415e5a : call 0x4428c2
0x000000000045dc48 : call 0x45a702
0x0000000000456cb9 : call 0x463712
0x00000000004586f6 : call 0x4637d6
0x000000000046ea3b : call 0x46b492
0x000000000047805c : call 0x473c76
0x000000000048ce3c : call 0x479102
0x000000000047b497 : call 0x4911b5e7
0x000000000040fdb1 : call 0x49c7f2
0x00000000004baafa : call 0x4c15d4b5
0x0000000000434d6a : call 0x4fc25d68
0x0000000000434d69 : call 0x4fc25d69
0x000000000047d5f3 : call 0x7cd51f03
0x00000000004196fa : call 0xffffffff83466184
0x000000000044cb41 : call 0xffffffff894515ac
0x000000000047b80b : call 0xffffffff8a09e132
0x000000000047b972 : call 0xffffffff8a09e299
0x000000000047bb5f : call 0xffffffff8a09e486
0x000000000047c18b : call 0xffffffff8a09eab2
0x000000000047c2e8 : call 0xffffffff8a09ec0f
0x000000000047c4b6 : call 0xffffffff8a09eddd
0x00000000004baa5a : call 0xffffffffab597550
0x00000000004b8c23 : call 0xffffffffaf0e2a99
0x000000000047b48a : call 0xffffffffc270fcd2
0x000000000041bfe8 : call 0xffffffffc27b07f9
0x000000000045983c : call 0xffffffffc27ee046
0x000000000041c8a8 : call 0xffffffffc2cb10c1
0x000000000046929d : call 0xffffffffc37fdbaa
0x0000000000485e5a : call 0xffffffffc381aa64
0x0000000000466bcc : call 0xffffffffc3a2ad32
0x000000000044fb25 : call 0xffffffffc3f40a76
0x0000000000467bcc : call 0xffffffffc40dc405
0x0000000000426e57 : call 0xffffffffc412f7a8
0x0000000000423927 : call 0xffffffffc43ac278
0x000000000048b9c9 : call 0xffffffffc78201d6
0x000000000047345b : call 0xffffffffca8c43b0
0x000000000047a444 : call 0xffffffffca942f99
0x000000000047ff54 : call 0xffffffffca948aa9
0x000000000047a451 : call 0xffffffffce9c2fab
0x000000000047ff61 : call 0xffffffffce9c8abb
0x00000000004c4608 : call 0xffffffffd84c3f8d
0x0000000000452a75 : call qword ptr [r10 + rax*8]
0x00000000004a3a0f : call qword ptr [rax + 0x20fff91c]
0x00000000004a37f7 : call qword ptr [rax + 0x20fff91f]
0x0000000000410577 : call qword ptr [rax + 0x80]
0x00000000004bdda3 : call qword ptr [rax - 0x1f0002ac]
0x00000000004a37cb : call qword ptr [rax - 0x1f00072e]
0x00000000004a3777 : call qword ptr [rax - 0x1f000735]
0x00000000004a33b3 : call qword ptr [rax - 0x1f000784]
0x00000000004bddf3 : call qword ptr [rax - 0x2f000244]
0x00000000004bdde3 : call qword ptr [rax - 0x2f00024d]
0x00000000004bddd3 : call qword ptr [rax - 0x2f000256]
0x00000000004bddc3 : call qword ptr [rax - 0x2f00025f]
0x000000000040f52e : call qword ptr [rax]
0x0000000000400b58 : call qword ptr [rbx + 0x10]
0x00000000004015e8 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e418 : call qword ptr [rbx]
0x000000000049a74e : call qword ptr [rcx]
0x000000000046eb2d : call qword ptr [rdi]
0x00000000004a38e3 : call qword ptr [rdx + 0x22fff91a]
0x0000000000452a76 : call qword ptr [rdx + rax*8]
0x00000000004a38c3 : call qword ptr [rdx]
0x00000000004a383f : call qword ptr [rsi + 0x26fff91e]
0x0000000000492942 : call qword ptr [rsi]
0x0000000000476f0c : call r11
0x0000000000400c3b : call r12
0x000000000040e060 : call r14
0x00000000004035c1 : call r15
0x00000000004628db : call r8
0x00000000004735b1 : call r9
0x00000000004a33c3 : call rax
0x0000000000402c6d : call rbx
0x000000000040558a : call rcx
0x00000000004035c2 : call rdi
0x000000000040ea0e : call rdx
0x000000000040e061 : call rsi
0x0000000000400c3c : call rsp
0x0000000000443480 : cdq ; add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x000000000044f1e4 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004bd220 : cdq ; and dword ptr [rax], ecx ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4811
0x00000000004ba960 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416a07 : cdq ; pop rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c7079 : cdq ; std ; call rcx
0x0000000000485cfe : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bec3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000458f6a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004049e0 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045dd3d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041ecfc : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000040d5fc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e1bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047cdbc : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c28c8 : clc ; add eax, edi ; call rsp
0x000000000046dc2a : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425f08 : clc ; add rax, rcx ; ret
0x00000000004a37ca : clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3776 : clc ; call qword ptr [rax - 0x1f000735]
0x00000000004a33b2 : clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a329a : clc ; call qword ptr [rax]
0x00000000004c410a : clc ; call qword ptr [rbx]
0x00000000004a355a : clc ; call qword ptr [rcx]
0x00000000004c27aa : clc ; call qword ptr [rdi]
0x00000000004c3a1a : clc ; call qword ptr [rdx]
0x00000000004a35a2 : clc ; call qword ptr [rsi]
0x00000000004a33c2 : clc ; call rax
0x00000000004a3566 : clc ; call rcx
0x00000000004a35ae : clc ; call rdi
0x00000000004a3582 : clc ; call rsi
0x00000000004c28ca : clc ; call rsp
0x000000000042fc09 : clc ; cmp rcx, rax ; jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042fc08 : clc ; cmp rcx, rax ; jne 0x42fc3c ; xor eax, eax ; ret
0x0000000000474610 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412656 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040175b : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004550bb : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004566e2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a87d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a33ae : clc ; inc dword ptr [rax + 0x7b] ; clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a3296 : clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a364a : clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a3646 : clc ; inc dword ptr [rax - 0x14] ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a37d6 : clc ; inc dword ptr [rax - 0x2f00072a] ; xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a3782 : clc ; inc dword ptr [rax - 0x2f000731] ; sar al, 1 ; jmp qword ptr [rax]
0x00000000004a37c6 : clc ; inc dword ptr [rax - 0x2f] ; clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3772 : clc ; inc dword ptr [rax - 0x36] ; clc ; call qword ptr [rax - 0x1f000735]
0x00000000004a3406 : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a36b6 : clc ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a3736 : clc ; inc dword ptr [rax] ; jrcxz 0x4a3738 ; jmp rax
0x00000000004a3502 : clc ; inc dword ptr [rax] ; mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004a34da : clc ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a376e : clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x000000000044e489 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a33f6 : clc ; inc eax ; clc ; call rax
0x00000000004a34d2 : clc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004a361a : clc ; inc eax ; ret
0x00000000004a34b2 : clc ; inc eax ; sahf ; clc ; jmp rax
0x00000000004a33ce : clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x0000000000449c6e : clc ; jg 0x449bfd ; ret 0x5c77
0x00000000004a3602 : clc ; jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a360a : clc ; jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a374a : clc ; jmp qword ptr [rax + 0x30fff8ec]
0x00000000004a37aa : clc ; jmp qword ptr [rax - 0x1f000724]
0x00000000004a33c6 : clc ; jmp qword ptr [rax]
0x00000000004a355e : clc ; jmp qword ptr [rcx + 0x31fff8c4]
0x000000000047e368 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a3596 : clc ; jmp qword ptr [rsi - 0x3d]
0x00000000004c3e6a : clc ; jmp qword ptr [rsi]
0x00000000004a3622 : clc ; jmp rax
0x00000000004c3aaa : clc ; jmp rbx
0x00000000004c2ffa : clc ; jmp rsp
0x000000000042c487 : clc ; jne 0x42c361 ; ret
0x000000000049c660 : clc ; leave ; ret
0x00000000004b95c2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004316e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432057 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432257 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a67 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432457 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431703 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043594c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c6f8 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f409 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491982 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a3382 : clc ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004a33a2 : clc ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004a33f2 : clc ; push qword ptr [rax - 0x3f0007c1] ; clc ; call rax
0x00000000004a33ca : clc ; push qword ptr [rax - 0x7c] ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a337a : clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004a3696 : clc ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a371a : clc ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a339a : clc ; push qword ptr [rax] ; jb 0x4a339c ; call rax
0x00000000004a3732 : clc ; push qword ptr [rax] ; loope 0x4a3738 ; inc dword ptr [rax] ; jrcxz 0x4a373c ; jmp rax
0x00000000004a36ce : clc ; push qword ptr [rax] ; loopne 0x4a36d4 ; push rax ; loope 0x4a36d8 ; call rax
0x00000000004a367a : clc ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a3616 : clc ; push qword ptr [rax] ; ret
0x00000000004a3322 : clc ; push qword ptr [rax] ; sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x0000000000410d3a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415ce0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442ab1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415c88 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a354e : clc ; push qword ptr [rcx - 0x3e] ; clc ; push rcx ; ret 0xfff8
0x0000000000415165 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046ab6c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a3402 : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a36d2 : clc ; push rax ; loope 0x4a36d4 ; call rax
0x00000000004a369e : clc ; push rax ; out 0xf8, eax ; call rax
0x00000000004a3552 : clc ; push rcx ; ret 0xfff8
0x00000000004a359a : clc ; push rsi ; ret
0x0000000000416932 : clc ; ret
0x000000000042af24 : clc ; rol ch, 1 ; jns 0x42af05 ; retf 0xead3
0x000000000042b074 : clc ; rol ch, 1 ; jns 0x42b055 ; retf 0xead3
0x000000000042b1c4 : clc ; rol ch, 1 ; jns 0x42b1a5 ; retf 0xead3
0x000000000042b314 : clc ; rol ch, 1 ; jns 0x42b2f5 ; retf 0xead3
0x000000000042b464 : clc ; rol ch, 1 ; jns 0x42b445 ; retf 0xead3
0x000000000042b5b4 : clc ; rol ch, 1 ; jns 0x42b595 ; retf 0xead3
0x000000000042b704 : clc ; rol ch, 1 ; jns 0x42b6e5 ; retf 0xead3
0x000000000042b854 : clc ; rol ch, 1 ; jns 0x42b835 ; retf 0xead3
0x000000000042b9a4 : clc ; rol ch, 1 ; jns 0x42b985 ; retf 0xead3
0x000000000042baf4 : clc ; rol ch, 1 ; jns 0x42bad5 ; retf 0xead3
0x000000000042bc44 : clc ; rol ch, 1 ; jns 0x42bc25 ; retf 0xead3
0x000000000042bd94 : clc ; rol ch, 1 ; jns 0x42bd75 ; retf 0xead3
0x000000000042bee4 : clc ; rol ch, 1 ; jns 0x42bec5 ; retf 0xead3
0x000000000042c034 : clc ; rol ch, 1 ; jns 0x42c015 ; retf 0xead3
0x000000000042c184 : clc ; rol ch, 1 ; jns 0x42c165 ; retf 0xead3
0x0000000000496324 : clc ; rol ch, 1 ; jns 0x496305 ; retf 0xead3
0x00000000004964a4 : clc ; rol ch, 1 ; jns 0x496485 ; retf 0xead3
0x0000000000496624 : clc ; rol ch, 1 ; jns 0x496605 ; retf 0xead3
0x00000000004967a4 : clc ; rol ch, 1 ; jns 0x496785 ; retf 0xead3
0x0000000000496924 : clc ; rol ch, 1 ; jns 0x496905 ; retf 0xead3
0x0000000000496aa4 : clc ; rol ch, 1 ; jns 0x496a85 ; retf 0xead3
0x0000000000496c24 : clc ; rol ch, 1 ; jns 0x496c05 ; retf 0xead3
0x0000000000496da4 : clc ; rol ch, 1 ; jns 0x496d85 ; retf 0xead3
0x0000000000496f24 : clc ; rol ch, 1 ; jns 0x496f05 ; retf 0xead3
0x00000000004970a4 : clc ; rol ch, 1 ; jns 0x497085 ; retf 0xead3
0x0000000000497224 : clc ; rol ch, 1 ; jns 0x497205 ; retf 0xead3
0x00000000004973a4 : clc ; rol ch, 1 ; jns 0x497385 ; retf 0xead3
0x0000000000497524 : clc ; rol ch, 1 ; jns 0x497505 ; retf 0xead3
0x00000000004976a4 : clc ; rol ch, 1 ; jns 0x497685 ; retf 0xead3
0x0000000000497824 : clc ; rol ch, 1 ; jns 0x497805 ; retf 0xead3
0x0000000000478fda : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047824d : clc ; std ; jbe 0x47825c ; ret
0x000000000044ee75 : clc ; syscall
0x0000000000426781 : cld ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000046e3b8 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e50f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c80fa : cld ; call qword ptr [rax]
0x00000000004c8112 : cld ; call qword ptr [rdx]
0x0000000000480c6f : cld ; cmove rsi, r9 ; jmp 0x480c3e
0x000000000045c98b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004bee31 : cld ; hlt ; call qword ptr [rbx]
0x000000000047138e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e5be : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7e52 : cld ; jmp qword ptr [rax]
0x00000000004ba345 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4ba314 ; retf
0x0000000000431e72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432075 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432275 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432475 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043595e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000403966 : cld ; mov eax, 3 ; syscall
0x00000000004329a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431aa6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c86 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c86 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c06 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431e66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b86 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004318c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d06 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049193c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004268d8 : cld ; ret
0x00000000004b8a63 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b8a76 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000041fe69 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000420049 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000467436 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000041db9b : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047c989 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004141ff : cli ; add ch, al ; pop rdx ; retf
0x000000000046747a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458cdf : cli ; add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000489643 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048966c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045c54c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000410718 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e25c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044942f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474a26 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475293 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dd81 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b7fc : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004886a2 : cli ; and al, 0 ; ret
0x00000000004baa59 : cli ; call 0xffffffffab597551
0x00000000004c6192 : cli ; call rax
0x00000000004c65aa : cli ; call rdx
0x00000000004c51ea : cli ; call rsi
0x0000000000481574 : cli ; dec dword ptr [rdi] ; retf 0x8d89
0x000000000043296b : cli ; jg 0x43297e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435937 : cli ; jg 0x43594a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dd41 : cli ; jg 0x43dd53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dec6 : cli ; jg 0x43ded8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c5692 : cli ; jmp qword ptr [rax]
0x00000000004c6ba2 : cli ; jmp qword ptr [rdx]
0x00000000004c586a : cli ; jmp rdi
0x00000000004c5322 : cli ; jmp rdx
0x00000000004c688a : cli ; jmp rsi
0x00000000004c5f42 : cli ; jmp rsp
0x0000000000432278 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004262e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b532 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047b2e6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489ff8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004baee1 : cli ; push 0x6e ; ja 0x4bae6e ; ret 0x48f
0x00000000004b9985 : cli ; ret 0xac65
0x00000000004428bb : cli ; setae al ; ret
0x00000000004b9830 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000423a59 : cli ; test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x00000000004657c8 : cli ; test rdx, rdx ; je 0x4657f9 ; bsf rax, rdx ; ret
0x00000000004b85ca : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c943b : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495f58 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443c0c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041dee0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bf8aa : cmc ; call qword ptr [rax]
0x00000000004c00d2 : cmc ; call qword ptr [rcx]
0x00000000004c07da : cmc ; call qword ptr [rdx]
0x00000000004c06f2 : cmc ; call qword ptr [rsi]
0x00000000004c10ca : cmc ; call rdx
0x0000000000486f57 : cmc ; jmp 0x486f26
0x00000000004c05a2 : cmc ; jmp qword ptr [rax]
0x00000000004bff02 : cmc ; jmp qword ptr [rcx]
0x00000000004bf70a : cmc ; jmp qword ptr [rsi]
0x00000000004bb309 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434c0a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004420e7 : cmc ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000043d2d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b81b7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047ab2d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000441ce7 : cmc ; ret
0x000000000043d2d7 : cmc ; sub eax, edx ; ret
0x00000000004ba945 : cmc ; xlatb ; ret 0x4e27
0x000000000049ca67 : cmova eax, edx ; ret
0x00000000004672e1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417139 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417138 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f39b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464ef1 : cmove eax, ecx ; ret
0x000000000043f680 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004213b3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425e62 : cmove eax, edx ; ret
0x0000000000480c71 : cmove esi, ecx ; jmp 0x480c3c
0x0000000000464ef0 : cmove r8, rcx ; ret
0x000000000043f39a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b240 : cmove rax, r9 ; ret
0x00000000004213b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425e61 : cmove rax, rdx ; ret
0x0000000000480c70 : cmove rsi, r9 ; jmp 0x480c3d
0x0000000000414c7b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414c79 ; ret
0x0000000000463aeb : cmovg eax, ecx ; test rdx, rdx ; jne 0x463ae9 ; ret
0x0000000000400546 : cmovle eax, ecx ; jmp 0x400519
0x0000000000413713 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421433 : cmovne eax, edx ; ret
0x0000000000421432 : cmovne rax, rdx ; ret
0x0000000000443bb3 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000425ebd : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004566ad : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446c7c : cmovs eax, edx ; ret
0x0000000000419e70 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049c998 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489c70 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x0000000000426780 : cmp ah, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000480c6e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480c3f
0x00000000004be729 : cmp ah, dh ; call qword ptr [rdx]
0x0000000000440571 : cmp al, 0x24 ; call rbx
0x000000000049df8b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e0dd : cmp al, 0x33 ; call rax
0x00000000004b95c0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045f85c : cmp al, 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004b84c3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004bafab : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c8a5c : cmp al, 0xa6 ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x000000000048a9ab : cmp al, 9 ; ja 0x4895b0 ; jmp 0x48a989
0x000000000048dbe3 : cmp al, 9 ; ja 0x48c7d0 ; jmp 0x48dbc1
0x000000000049132b : cmp al, 9 ; ja 0x48f630 ; jmp 0x491309
0x00000000004c1e2d : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x3e], dl ; idiv edi ; retf 2
0x000000000043d796 : cmp al, byte ptr [rsi - 1] ; jne 0x43d7bc ; xor eax, eax ; ret
0x000000000043f868 : cmp al, ch ; ret 0x2b3
0x0000000000426136 : cmp al, dh ; ret
0x0000000000426135 : cmp al, r14b ; ret
0x00000000004c8c81 : cmp bh, ch ; call rcx
0x00000000004531b3 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c76b9 : cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004871d9 : cmp bl, ch ; ret 0x8148
0x000000000042cb93 : cmp bl, dh ; ret
0x00000000004103bb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045df26 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401353 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426c9f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426177 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440524 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041654e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004103bc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000459a9a : cmp byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004831e7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426166 : cmp byte ptr [rax], ah ; ret
0x0000000000415133 : cmp byte ptr [rax], al ; je 0x415144 ; ret
0x000000000049c245 : cmp byte ptr [rax], al ; je 0x49c2bb ; add rsp, 0x18 ; ret
0x0000000000421430 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426156 : cmp byte ptr [rax], dl ; ret
0x0000000000426155 : cmp byte ptr [rax], r10b ; ret
0x0000000000426165 : cmp byte ptr [rax], r12b ; ret
0x000000000042142f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c29b4 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6d75 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6dd5 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c6d15 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ed62 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004735ab : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000479a09 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000461589 : cmp byte ptr [rbx], cl ; jmp rax
0x00000000004649c7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476ee6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004c80f8 : cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c2ff8 : cmp byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004150f8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f0dd : cmp byte ptr [rdi], dl ; ret
0x000000000042fbf0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbc2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044ee11 : cmp byte ptr [rdx + 0x4a], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004be370 : cmp byte ptr [rsi + rdi*8], al ; jmp rax
0x000000000046b23c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449ae3 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045d70f : cmp ch, cl ; retf
0x000000000040d83d : cmp ch, cl ; retf 0xfffb
0x000000000041a970 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481ecb : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000473afe : cmp cl, byte ptr [rax - 0x77] ; retf
0x000000000046b23f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004302a1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x00000000004303f1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430541 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000430691 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x00000000004307e1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000430931 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000430a81 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000430bd1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430d21 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430e71 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000430fc1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000431111 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431261 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004313b1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000431501 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000432fea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043316a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004332ea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043346a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004335ea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043376a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004338ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433a6a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433bea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433d6a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433eea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043406a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004341ea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043436a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004344ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000040eebf : cmp cl, byte ptr [rdx] ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000004bb386 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000489706 : cmp cl, ch ; ret
0x000000000046b20e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b1ca ; xor eax, eax ; ret
0x000000000046e3b3 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043597b : cmp dl, 1 ; jb 0x43598d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd80 : cmp dl, 1 ; jb 0x43dd8e ; mov byte ptr [rdi], cl ; ret
0x000000000043defa : cmp dl, 1 ; jb 0x43df08 ; mov byte ptr [rdi], cl ; ret
0x00000000004bde10 : cmp dl, al ; std ; ljmp [rax] ; ret
0x0000000000464998 : cmp dword ptr [rax + 0x30], 0 ; je 0x4649a6 ; ret
0x000000000043471c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000461a6d : cmp dword ptr [rbx], ecx ; jmp rax
0x0000000000450a2e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415131 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415146 ; ret
0x0000000000442aa0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049ca64 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000048c9fd : cmp dword ptr [rsp + 0x10], 0 ; jne 0x48c9d4 ; jmp 0x48c9dc
0x00000000004897cd : cmp dword ptr [rsp + 8], 0 ; jne 0x4897a4 ; jmp 0x4897ac
0x000000000043f5d3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047460f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000415164 : cmp eax, -1 ; je 0x415179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415c87 : cmp eax, -1 ; je 0x415c98 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464baa : cmp eax, -1 ; je 0x464bbb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464bee : cmp eax, -1 ; je 0x464bff ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410d39 : cmp eax, -1 ; jne 0x410d46 ; pop rbx ; ret
0x0000000000415cdf : cmp eax, -1 ; jne 0x415cd0 ; pop rbx ; ret
0x0000000000442ab0 : cmp eax, -1 ; jne 0x442ab0 ; xor eax, eax ; leave ; ret
0x000000000047824c : cmp eax, -3 ; jbe 0x47825d ; ret
0x000000000047aef9 : cmp eax, 0x251ac6 ; call rax
0x000000000047adbc : cmp eax, 0x251c03 ; jmp rax
0x00000000004b88ab : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040dc39 : cmp eax, 0xfffff000 ; ja 0x40dc68 ; ret
0x000000000043f3c6 : cmp eax, 0xfffff000 ; ja 0x43f3d8 ; ret
0x000000000043f415 : cmp eax, 0xfffff000 ; ja 0x43f428 ; ret
0x000000000043f5a4 : cmp eax, 0xfffff000 ; ja 0x43f5e8 ; ret
0x000000000044fa41 : cmp eax, 0xfffff000 ; ja 0x44fa58 ; ret
0x000000000046a8b8 : cmp eax, 0xfffff000 ; ja 0x46a8d0 ; pop rbx ; ret
0x000000000046ac46 : cmp eax, 0xfffff000 ; ja 0x46ac58 ; ret
0x000000000046ac9b : cmp eax, 0xfffff000 ; ja 0x46acb0 ; ret
0x000000000043e60b : cmp eax, 2 ; je 0x43e61f ; xor eax, eax ; ret
0x000000000044299a : cmp eax, 4 ; je 0x4429a5 ; ret
0x0000000000413165 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413178 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441311 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474658 : cmp eax, dword ptr [rsi + rdx] ; jae 0x474608 ; xor eax, eax ; ret
0x00000000004ba777 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000416a39 : cmp eax, ecx ; jae 0x416a67 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d7b3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000478424 : cmp eax, esi ; je 0x478434 ; ret
0x0000000000442936 : cmp ebx, 0xa ; je 0x442941 ; ret
0x000000000044427e : cmp ebx, eax ; setne dl ; jmp 0x44426a
0x00000000004716f1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000046d6ce : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447d29 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004672e0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464eee : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fc0b : cmp ecx, eax ; jne 0x42fc39 ; xor eax, eax ; ret
0x0000000000473f36 : cmp ecx, edx ; jne 0x473f15 ; ret
0x00000000004c3089 : cmp edi, eax ; call qword ptr [rax]
0x000000000049d58e : cmp edi, eax ; jae 0x49d558 ; mov rdx, rcx ; jmp 0x49d570
0x000000000045a4c5 : cmp edi, ecx ; ja 0x45a4b0 ; mov eax, r8d ; ret
0x000000000046ae4e : cmp edi, edx ; ja 0x46ae7d ; ret
0x000000000047c988 : cmp edx, 0 ; mov eax, edx ; jle 0x47c9a0 ; ret
0x000000000041db9a : cmp edx, 0x6ca800 ; jne 0x41db69 ; ret
0x0000000000473f48 : cmp edx, eax ; jne 0x473ef2 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000441ea3 : cmp edx, eax ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004268a8 : cmp edx, ecx ; jne 0x426895 ; ret
0x00000000004428ba : cmp edx, edi ; setae al ; ret
0x0000000000466f76 : cmp edx, esi ; je 0x466f87 ; test edx, edx ; jne 0x466f79 ; ret
0x0000000000416a79 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000044d4f5 : cmp esi, 3 ; je 0x44d506 ; pop rbx ; ret
0x00000000004ba944 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464c4a : cmp esi, ecx ; jb 0x464c47 ; lea eax, [rdx + rdi] ; ret
0x0000000000415d1a : cmp esi, ecx ; jne 0x415d17 ; lea eax, [rdx + rdi] ; ret
0x0000000000464997 : cmp qword ptr [rax + 0x30], 0 ; je 0x4649a7 ; ret
0x0000000000415130 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415147 ; ret
0x000000000049ca63 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000048c9fc : cmp qword ptr [rsp + 0x10], 0 ; jne 0x48c9d5 ; jmp 0x48c9dd
0x00000000004897cc : cmp qword ptr [rsp + 8], 0 ; jne 0x4897a5 ; jmp 0x4897ad
0x000000000042cb92 : cmp r11b, r14b ; ret
0x0000000000442935 : cmp r11d, 0xa ; je 0x442942 ; ret
0x0000000000480c6d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480c40
0x0000000000474657 : cmp r8, qword ptr [rsi + rdx] ; jae 0x474609 ; xor eax, eax ; ret
0x000000000040dc38 : cmp rax, -0x1000 ; ja 0x40dc69 ; ret
0x000000000043f3c5 : cmp rax, -0x1000 ; ja 0x43f3d9 ; ret
0x000000000043f414 : cmp rax, -0x1000 ; ja 0x43f429 ; ret
0x000000000043f5a3 : cmp rax, -0x1000 ; ja 0x43f5e9 ; ret
0x000000000044fa40 : cmp rax, -0x1000 ; ja 0x44fa59 ; ret
0x000000000046a8b7 : cmp rax, -0x1000 ; ja 0x46a8d1 ; pop rbx ; ret
0x000000000046ac45 : cmp rax, -0x1000 ; ja 0x46ac59 ; ret
0x000000000046ac9a : cmp rax, -0x1000 ; ja 0x46acb1 ; ret
0x000000000047460e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000047824b : cmp rax, -3 ; jbe 0x47825e ; ret
0x0000000000413164 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413179 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416a38 : cmp rax, rcx ; jae 0x416a68 ; movzx eax, byte ptr [rax] ; ret
0x0000000000478423 : cmp rax, rsi ; je 0x478435 ; ret
0x0000000000464eed : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fc0a : cmp rcx, rax ; jne 0x42fc3a ; xor eax, eax ; ret
0x0000000000473f35 : cmp rcx, rdx ; jne 0x473f16 ; ret
0x000000000049d58d : cmp rdi, r8 ; jae 0x49d559 ; mov rdx, rcx ; jmp 0x49d571
0x000000000046ae4d : cmp rdi, rdx ; ja 0x46ae7e ; ret
0x0000000000473f47 : cmp rdx, r8 ; jne 0x473ef3 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004268a7 : cmp rdx, rcx ; jne 0x426896 ; ret
0x00000000004268a6 : cmp rdx, rcx ; jne 0x426897 ; ret
0x00000000004428b9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464c49 : cmp rsi, rcx ; jb 0x464c48 ; lea eax, [rdx + rdi] ; ret
0x0000000000415d19 : cmp rsi, rcx ; jne 0x415d18 ; lea eax, [rdx + rdi] ; ret
0x0000000000496557 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496857 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497757 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c8a5d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; adc byte ptr [rsi], dh ; std ; call rsp
0x000000000041c846 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425c15 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497457 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f689 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004a34d1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x000000000045c602 : cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8976 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8942 ; mov ecx, 0x5b92ac50 ; retf
0x000000000042a1b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497157 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004baa91 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004099e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000420095 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x00000000004a34d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004b845f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000043df05 : cmpsd dword ptr [rsi], dword ptr [rdi] ; shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000047ab21 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c7078 : cqo ; std ; call rcx
0x00000000004c27a8 : cwde ; add al, bh ; call qword ptr [rdi]
0x000000000041305f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b554 : cwde ; add rax, r8 ; jmp rax
0x00000000004c4c08 : cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x0000000000442544 : cwde ; mov eax, 3 ; syscall
0x0000000000414e8c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004394b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b8c6 : dec byte ptr [r8 - 0x75] ; ret
0x000000000048e345 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004394b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047a016 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b944 : dec byte ptr [rax - 0x73] ; ret
0x000000000045d09c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b8c7 : dec byte ptr [rax - 0x75] ; ret
0x000000000048e346 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000440bd8 : dec byte ptr [rax - 0x77] ; fucomip st(0) ; call rsp
0x000000000046567d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e29a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e56d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x00000000004830c3 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000478249 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478260 ; ret
0x000000000041b0fc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004106d9 : dec dword ptr [rax + 0x29] ; ret
0x00000000004395f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473b41 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e706 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041925d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d8dd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418915 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480d94 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485b8d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000470835 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047479a : dec dword ptr [rax + 0x63] ; ret
0x000000000045e82e : dec dword ptr [rax + 0x63] ; retf
0x000000000046a8ac : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x00000000004624bb : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462c0f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465bb9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000474611 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004595ce : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412657 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041073c : dec dword ptr [rax + 1] ; ret
0x000000000047dad7 : dec dword ptr [rax + 1] ; ret 0x3948
0x00000000004bdf37 : dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000045d656 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c98c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004118c7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480cfe : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043edcc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049af91 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000419233 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8b2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000046970e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478cdd : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x0000000000474805 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004103b8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481ec8 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004402ad : dec dword ptr [rax - 0x75] ; jge 0x4402b7 ; call rbx
0x0000000000440560 : dec dword ptr [rax - 0x75] ; jge 0x44056a ; call rbx
0x00000000004420f8 : dec dword ptr [rax - 0x75] ; jge 0x442102 ; call rbx
0x0000000000479307 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041bbbf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414141 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004786ac : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483f02 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x00000000004886d7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000426a18 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000045f29d : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf 0x72
0x000000000049ed8a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040175c : dec dword ptr [rax - 0x77] ; ret
0x000000000046ae3e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483f4f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041de81 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f8c2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e6ca : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004664f6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004837d9 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x00000000004552f7 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045fe96 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000048280d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042132e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b403 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402b88 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x000000000045915d : dec dword ptr [rax - 0x77] ; retf
0x000000000047d715 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x00000000004480be : dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000456461 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000049dad4 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000478611 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487a48 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463d8e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000484344 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x0000000000485cfb : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000047824a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47825f ; ret
0x0000000000453d71 : dec dword ptr [rax - 0x7d] ; jge 0x453dae ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040414c : dec dword ptr [rax - 0x7d] ; ret
0x000000000041920f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448c52 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470c3f : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470c2d : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000004570d4 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a216 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470ccb : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004856f2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000004531b6 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434720 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046ca60 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000049daeb : dec dword ptr [rbp + rcx*4 + 0x42] ; add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000047e56e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b5c9 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000478ddc : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000044076e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041b4ff : dec dword ptr [rbx + 0x2af2fe15] ; add dh, dh ; ret 0xf02
0x000000000047872c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000447e86 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x447e7f ; retf
0x000000000049b8ac : dec dword ptr [rcx + 0x21] ; retf 0x894c
0x0000000000484596 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004555b4 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dc63 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049b88e : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x000000000049b916 : dec dword ptr [rcx + 0x31] ; retf 0x894c
0x00000000004551c3 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046ca92 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455141 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047236a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049b8b7 : dec dword ptr [rcx + 0x39] ; retf 0x894c
0x000000000049d5fc : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x00000000004696e6 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045accc : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x000000000049b942 : dec dword ptr [rcx + 1] ; retf 0x894c
0x000000000049b94d : dec dword ptr [rcx + 9] ; retf 0x894c
0x0000000000452782 : dec dword ptr [rcx + rcx*4 - 0x18] ; jmp 0x452757
0x0000000000452e19 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000467e3e : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x0000000000480e0f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000004400e5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044056e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440178 : dec dword ptr [rcx - 0x75] ; jge 0x440182 ; call rbx
0x000000000044029f : dec dword ptr [rcx - 0x75] ; jge 0x4402a9 ; call rbx
0x00000000004403e2 : dec dword ptr [rcx - 0x75] ; jge 0x4403ec ; call rbx
0x0000000000440552 : dec dword ptr [rcx - 0x75] ; jge 0x44055c ; call rbx
0x0000000000441d70 : dec dword ptr [rcx - 0x75] ; jge 0x441d7a ; call rbx
0x0000000000441e98 : dec dword ptr [rcx - 0x75] ; jge 0x441ea2 ; call rbx
0x0000000000441fdb : dec dword ptr [rcx - 0x75] ; jge 0x441fe5 ; call rbx
0x00000000004420dc : dec dword ptr [rcx - 0x75] ; jge 0x4420e6 ; call rbx
0x000000000047cd7c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453db3 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004460f8 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e957 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000004563e3 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041b0fd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485e57 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381aa67
0x000000000043f465 : dec dword ptr [rdi] ; adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000043f559 : dec dword ptr [rdi] ; and eax, 0x4e ; add byte ptr [rax], al ; ret
0x0000000000484276 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486b2f : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000044286c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f36c : dec dword ptr [rdi] ; or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000446c7b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000404637 : dec dword ptr [rdi] ; retf
0x0000000000481575 : dec dword ptr [rdi] ; retf 0x8d89
0x000000000044284f : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004107f1 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000449414 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x000000000048b207 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x000000000043d640 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004708cc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000416a7b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485a4f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a87e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459c16 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043ecbd : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f4c5 : dec dword ptr [rdi] ; xor dword ptr [rdi + rcx*2], 0 ; ret
0x000000000047a39d : dec ecx ; ret
0x00000000004395f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462646 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448c51 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dc62 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004a32e9 : div bh ; call qword ptr [rax]
0x000000000040dc14 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x00000000004656c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047ab2c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a4d5 : div ecx ; add eax, r8d ; ret
0x000000000043e5c1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000463126 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047ab2b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d7b4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004394ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004395ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047930b : enter -0x74b8, 0x14 ; ret
0x000000000046d844 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d818
0x000000000046bf84 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x0000000000442a9e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000004401c4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004bde75 : enter -3, 0x60 ; leave ; std ; call rdx
0x00000000004ad49c : enter 0, 0 ; retf
0x00000000004b14f0 : enter 0, 0 ; retf 0
0x00000000004ae648 : enter 0x10, 0 ; retf
0x0000000000448d4f : enter 0x1388, -0x77 ; retf 0xe083
0x0000000000416a3a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a69e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000422a4d : enter 0x31c3, -0x40 ; ret
0x00000000004c1ed3 : enter 0x380e, 0x41 ; ret
0x00000000004188cd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041b0c5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b1c6 : enter 0x4f75, -0xd ; ret
0x00000000004bb0fc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004ade48 : enter 0xa, 0 ; retf
0x00000000004ae248 : enter 0xd, 0 ; retf
0x000000000042f736 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421481 : enter 0xf66, -0x15 ; ret
0x0000000000425f0b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004b16f0 : enter 1, 0 ; retf 1
0x00000000004aea00 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b18f0 : enter 2, 0 ; retf 2
0x00000000004b1af0 : enter 3, 0 ; retf 3
0x00000000004b1cf0 : enter 4, 0 ; retf 4
0x00000000004b1ef0 : enter 5, 0 ; retf 5
0x00000000004b20f0 : enter 6, 0 ; retf 6
0x00000000004b22f0 : enter 7, 0 ; retf 7
0x00000000004b24f0 : enter 8, 0 ; retf 8
0x00000000004b26f0 : enter 9, 0 ; retf 9
0x0000000000414dd7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004152d3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f419 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442aa6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041cb6f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411c30 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444312 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c9438 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004113a7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b809 : fadd st(1) ; call 0xffffffff8a09e134
0x000000000047b970 : fadd st(1) ; call 0xffffffff8a09e29b
0x000000000047c189 : fadd st(1) ; call 0xffffffff8a09eab4
0x000000000047c2e6 : fadd st(1) ; call 0xffffffff8a09ec11
0x00000000004779f5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f281 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ebb4 : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000441e02 : fcmovb st(0), st(2) ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004ba738 : fcmovb st(0), st(3) ; ret
0x000000000044f15e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004be024 : fcom st(0), st(5) ; std ; jmp rsp
0x00000000004c10c8 : fcom st(1) ; cmc ; call rdx
0x00000000004c6888 : fcom st(6) ; cli ; jmp rsi
0x00000000004c2349 : fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000468c87 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fa6a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fb4f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fe2f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041e0d6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb4b9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004015eb : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004b9720 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041de7f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004a37ad : fdiv st(0), st(0) ; jmp rax
0x0000000000485cf9 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004c8758 : fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004c6a09 : fdiv st(2), st(0) ; call rsi
0x0000000000440474 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004403e0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4403ee ; call rbx
0x00000000004402ab : fdivp st(5) ; dec dword ptr [rax - 0x75] ; jge 0x4402b9 ; call rbx
0x000000000044020a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044029d : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4402ab ; call rbx
0x000000000044029c : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4402ac ; call rbx
0x00000000004c6911 : fdivr st(2) ; jmp rdi
0x00000000004b8a75 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004beee8 : fdivr st(5) ; hlt ; call qword ptr [rax]
0x00000000004bdf39 : fdivr st(5) ; jmp rsp
0x000000000043d7b8 : fdivr st(7) ; ret
0x000000000046556a : ffree st(0) ; ret 0x4b
0x000000000043f5d2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004643a4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000489c6d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000043ff4c : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x0000000000440929 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb306 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000444225 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e1df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000045a4c8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a605 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432bf0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045c549 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000004126f5 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047b536 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004107e0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048ad0e : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000404e48 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426a42 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048d21c : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048ae22 : fimul word ptr [rax + 0x29] ; ret
0x00000000004119be : fimul word ptr [rax - 0x77] ; ret
0x0000000000459f5f : fimul word ptr [rax - 0x77] ; retf
0x000000000047319a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a50c : fimul word ptr [rbp + 0x11] ; retf
0x000000000047a4ce : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a528
0x000000000047ffde : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x480038
0x000000000044fb90 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000041180f : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000414e45 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004176f8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468102 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049ebb1 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474169 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048dcf3 : fisttp dword ptr [rax - 0x77] ; jl 0x48dd24 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000479571 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b550 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047958b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004690b5 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440e09 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e4fe : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000448057 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048e349 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041c909 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000045407a : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455dc5 : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x000000000047960f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b4ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f651 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f351 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432a3c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000042661d : fld dword ptr [rbx + 0x294807e1] ; retf 0x8548
0x00000000004690ba : fld dword ptr [rcx + 0xf] ; retf
0x000000000047d742 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400c9a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9761 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004919ca : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f719 : fldcw word ptr [rsp - 2] ; ret
0x0000000000426069 : fldenv [rsi + 0xf] ; je 0x4260c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce97 : fldenv [rsi + 0xf] ; je 0x42cef4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f6d1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f61 : fldenv [rsi + 0xf] ; xlatb ; ret
0x000000000047a574 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418e9f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e751 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047ea76 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043da87 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048f057 : fmul dword ptr [rax - 0x39] ; ret
0x00000000004587e1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004114a1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484599 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d193 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x00000000004698ec : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411b2a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045aede : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a7fd : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049aa95 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000049d58c : fmul dword ptr [rcx + rdi - 0x39] ; jae 0x49d55a ; mov rdx, rcx ; jmp 0x49d572
0x000000000045cf3b : fmul dword ptr [rdi] ; ret
0x000000000048ad27 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a3ac : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000421809 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004beefc : fmul qword ptr [rdx] ; add byte ptr [rax], al ; sar ch, 1 ; hlt ; call qword ptr [rdx]
0x000000000048ef52 : fmul st(0) ; ret
0x000000000048eed0 : fmulp st(1) ; ret
0x00000000004bafaa : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dbe5 : fpatan ; ret
0x00000000004c86f9 : frndint ; call qword ptr [rax]
0x000000000042f451 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b9447 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b97c0 : fstp st(0) ; ret 0xde5d
0x00000000004015ea : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b898b : fstp st(3), st(0) ; retf 0xeb83
0x000000000040dc68 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000041ada3 : fsub dword ptr [rdi] ; add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049ed22 : fsub dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000042f751 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438324 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004bad78 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047c9b2 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043dbcb : fsub qword ptr [rsi + 0xf] ; jmp 0x43db97
0x000000000042f551 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042159c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004401c2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441ccb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004420ca : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441738 : fsubp st(0) ; ret 0xffe8
0x0000000000441638 : fsubp st(0) ; ret 0xffe9
0x0000000000441230 : fsubp st(0) ; retf 0xffed
0x00000000004655ab : fsubr qword ptr [rax] ; add r8b, bpl ; ret 0xfff9
0x00000000004bb498 : fucom st(5) ; loop 0x4bb4f1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047eef5 : fucomi st(1) ; ret
0x0000000000440bdb : fucomip st(0) ; call rsp
0x000000000049e827 : fucomip st(0) ; ret
0x000000000041bf10 : fucomip st(0) ; ret 0xffff
0x000000000045bbef : fucomip st(0) ; retf
0x000000000045f2a0 : fucomip st(0) ; retf 0x72
0x0000000000418120 : fucomip st(0) ; retf 0xff97
0x00000000004458f2 : fucomip st(3) ; ret
0x000000000041f808 : fucomp st(0) ; retf
0x000000000043f7bf : fucomp st(2) ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000468106 : fucompp ; ret 0xfffe
0x00000000004baade : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494d59 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ecc0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000045c603 : hlt ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x00000000004c1b14 : hlt ; add byte ptr ss:[rax], al ; call 0x274c1177
0x0000000000495c59 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044272b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004be90a : hlt ; call qword ptr [rax]
0x00000000004bee32 : hlt ; call qword ptr [rbx]
0x00000000004be72a : hlt ; call qword ptr [rdx]
0x00000000004c1539 : hlt ; cmc ; call qword ptr [rdx]
0x000000000044a9ee : hlt ; jmp 0x44a9be
0x000000000048a9af : hlt ; jmp 0x48a9b6
0x00000000004b9848 : hlt ; jmp 0x4b981d
0x0000000000434b8a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043eb2f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043d2c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004c3a14 : hlt ; push rbp ; add byte ptr [rax], al ; test al, 0x9a ; clc ; call qword ptr [rdx]
0x00000000004436d8 : hlt ; push rcx ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004bfba9 : hlt ; ret
0x00000000004b9983 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d2c7 : hlt ; sub eax, edx ; ret
0x00000000004c185a : idiv bh ; ret
0x000000000043ec7d : idiv byte ptr [rax + 2] ; syscall
0x000000000044cb3f : idiv byte ptr [rdi + 0x4a60e8] ; mov eax, ecx ; syscall
0x00000000004016a6 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446c76 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004c1859 : idiv dil ; ret
0x000000000049d5fa : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049ba7f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a3292 : idiv edi ; jo 0x4a329f ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x000000000049ffbb : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049ff78 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0978 : idiv edi ; ret
0x00000000004c1e32 : idiv edi ; retf 2
0x0000000000441ce5 : imul eax ; cmc ; ret
0x000000000045c987 : imul eax ; movsxd rbx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x0000000000441d6b : imul eax ; outsd dx, dword ptr [rsi] ; ret
0x000000000046b438 : imul eax ; ret 0xfff8
0x0000000000441e93 : imul eax ; ret 0xfffd
0x000000000047a91f : imul eax ; retf
0x000000000044b44d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043be21 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004251e7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000424be7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000044732b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444279 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x0000000000440473 : imul ebx, esp, 0x8b49fffd ; call rbx
0x000000000047cd7f : imul ecx ; ret
0x00000000004133a4 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041d5f9 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c4295 : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x00000000004248e7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000049b8a9 : imul edi, ecx, -1 ; dec dword ptr [rcx + 0x21] ; retf 0x894c
0x00000000004242e7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000423fe7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000423ce7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x00000000004672e4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000497bf4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000043b29c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004bf704 : in al, 0x12 ; add byte ptr [rax], al ; test al, 0x25 ; cmc ; jmp qword ptr [rsi]
0x0000000000403916 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004badc1 : in al, 0x4c ; pop rax ; retf
0x00000000004c3e04 : in al, 0x59 ; add byte ptr [rax], al ; js 0x4c3dc9 ; clc ; call qword ptr [rcx]
0x00000000004c4104 : in al, 0x5c ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c4604 : in al, 0x61 ; add byte ptr [rax], al ; call 0xffffffffd84c3f91
0x00000000004c4c04 : in al, 0x67 ; add byte ptr [rax], al ; cwde ; in al, dx ; stc ; call qword ptr [rsi]
0x000000000042391c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e258 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004c6a04 : in al, 0x85 ; add byte ptr [rax], al ; pop rax ; fdiv st(2), st(0) ; call rsi
0x00000000004be028 : in al, 0xd6 ; std ; jmp rsp
0x0000000000485f3a : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457b58 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000434b6a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004268ab : in al, 0xf3 ; ret
0x00000000004a3699 : in al, 0xf8 ; call qword ptr [rax]
0x00000000004a373d : in al, 0xf8 ; call rax
0x00000000004a36b9 : in al, 0xf8 ; jmp rax
0x00000000004a3679 : in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004c4941 : in al, 0xf9 ; jmp rax
0x0000000000405569 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000474755 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004231d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000049e0e3 : in al, dx ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3649 : in al, dx ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a376d : in al, dx ; clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x00000000004a3669 : in al, dx ; clc ; jmp qword ptr [rax]
0x000000000047138d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000420094 : in al, dx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x00000000004919c9 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004423a4 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000431cea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434f6a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004654f7 : in al, dx ; or al, ch ; ret 1
0x000000000041cba7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c810c : in al, dx ; pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004bafad : in al, dx ; retf 0xae32
0x00000000004c4c09 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004c690c : in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x28], dh ; cli ; jmp rdi
0x00000000004baede : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae71 ; ret 0x48f
0x00000000004baedd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae72 ; ret 0x48f
0x000000000043ed48 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004b95e3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046743a : in eax, 0x29 ; retf 0x8d41
0x000000000042696a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000004521e2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8879 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a8ab : in eax, 0xdf ; loopne 0x45a83c ; ret 0xe680
0x00000000004bb499 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b963a : in eax, 0xe5 ; retf 0x2a91
0x0000000000466763 : in eax, 0xf ; je 0x466788 ; add rax, 2 ; ret
0x0000000000434bea : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c3ca : in eax, 0xf3 ; ret
0x00000000004a371d : in eax, 0xf8 ; call qword ptr [rax]
0x00000000004ba961 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000405475 : in eax, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048ad11 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000041f8f3 : in eax, dx ; call 0x42c353
0x000000000049ebff : in eax, dx ; jne 0x49ebe1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dae2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x0000000000431afa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434fea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495760 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478d1b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e422 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414c82 : in eax, dx ; ret
0x00000000004b93b8 : in eax, dx ; retf
0x000000000043dc32 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cca5 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043def8 : inc bl ; cmp dl, 1 ; jb 0x43df0a ; mov byte ptr [rdi], cl ; ret
0x00000000004329c6 : inc bl ; jb 0x4329d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004268d1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004150f2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045e10a : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044d4f6 : inc byte ptr [rbx] ; je 0x44d505 ; pop rbx ; ret
0x00000000004a3a1b : inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3803 : inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004bdd9f : inc dword ptr [rax + 0x52] ; std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bdd27 : inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x00000000004a33af : inc dword ptr [rax + 0x7b] ; clc ; call qword ptr [rax - 0x1f000784]
0x00000000004a3c2b : inc dword ptr [rax + 0xf] ; stc ; call rax
0x00000000004a3297 : inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a364b : inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004a3647 : inc dword ptr [rax - 0x14] ; clc ; inc dword ptr [rax - 0x12] ; clc ; call rax
0x00000000004bddaf : inc dword ptr [rax - 0x2f0002a5] ; pop rbp ; std ; jmp qword ptr [rax]
0x00000000004a37d7 : inc dword ptr [rax - 0x2f00072a] ; xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a3783 : inc dword ptr [rax - 0x2f000731] ; sar al, 1 ; jmp qword ptr [rax]
0x00000000004a37c7 : inc dword ptr [rax - 0x2f] ; clc ; call qword ptr [rax - 0x1f00072e]
0x00000000004a3773 : inc dword ptr [rax - 0x36] ; clc ; call qword ptr [rax - 0x1f000735]
0x000000000045348a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045563c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004601e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004538fc : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000042fc67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a37f3 : inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3407 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a36b7 : inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004a3d4b : inc dword ptr [rax] ; ja 0x4a3d4c ; call qword ptr [rax]
0x00000000004bdd2f : inc dword ptr [rax] ; jge 0x4bdd34 ; jmp rax
0x00000000004a3da3 : inc dword ptr [rax] ; jns 0x4a3da4 ; jmp qword ptr [rax]
0x00000000004a3737 : inc dword ptr [rax] ; jrcxz 0x4a3737 ; jmp rax
0x00000000004a3d83 : inc dword ptr [rax] ; js 0x4a3d84 ; jmp qword ptr [rax]
0x00000000004a3503 : inc dword ptr [rax] ; mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004bdd0f : inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x00000000004a3a0b : inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a34db : inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a376f : inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x0000000000460a96 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047cf85 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x000000000047138f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004735a0 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b3b0 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b435 ; ret
0x000000000041a4a5 : inc dword ptr [rbx + rcx*4 + 0x15] ; ret
0x00000000004605d7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d5fa : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d132 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e487 : inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004586bf : inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x000000000046874c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x00000000004076b2 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a732 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043e5bf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ef : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000444114 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000045e2a9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045e107 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x00000000004779c0 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047e9f3 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x00000000004a3b9f : inc dword ptr [rcx + rdx] ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x0000000000486f54 : inc dword ptr [rcx - 0x77] ; cmc ; jmp 0x486f29
0x000000000044e48a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000413c45 : inc dword ptr [rcx - 0x7f] ; retf 0
0x0000000000413d9a : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x0000000000413de5 : inc dword ptr [rcx - 0x80] ; retf 0xe980
0x00000000004c9435 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004a3977 : inc dword ptr [rdi + rbx - 7] ; call rsp
0x000000000048b259 : inc dword ptr [rdi + rcx + 0x44] ; retf 0xf741
0x000000000047fe60 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a38df : inc dword ptr [rdx] ; sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x000000000042bccd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a384b : inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x00000000004a33f7 : inc eax ; clc ; call rax
0x00000000004a34d3 : inc eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp rax
0x00000000004a3d77 : inc eax ; ja 0x4a3d78 ; call rax
0x00000000004a3d3b : inc eax ; jbe 0x4a3d3c ; call rax
0x00000000004a3dcf : inc eax ; jl 0x4a3dd0 ; call rax
0x00000000004a3d9b : inc eax ; js 0x4a3d9c ; jmp rax
0x00000000004a361b : inc eax ; ret
0x00000000004bde2b : inc eax ; ret 0xfffd
0x00000000004a34b3 : inc eax ; sahf ; clc ; jmp rax
0x00000000004a33cf : inc eax ; test eax, edi ; call qword ptr [rax]
0x0000000000464efc : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d7b9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412d18 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000004779fb : inc ebx ; sub eax, edx ; ret
0x0000000000460392 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000481366 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000484396 : inc esi ; add dh, byte ptr [rax] ; jmp 0x480e33
0x0000000000402c6b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x0000000000488236 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d747 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x0000000000401431 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004434e3 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000041d1a5 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004015ed : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041db9e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470e35 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000443429 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443456 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000047af36 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047bdb1 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x00000000004919cb : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f71a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bb49e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c568c : insb byte ptr [rdi], dx ; jb 0x4c5696 ; add al, dl ; sbb dl, bh ; jmp qword ptr [rax]
0x00000000004c618c : insb byte ptr [rdi], dx ; jge 0x4c6196 ; add byte ptr [rax + 0x7e], dl ; cli ; call rax
0x00000000004100e0 : insb byte ptr [rdi], dx ; ret 1
0x0000000000478ce0 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004ba866 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004bdd0d : insb byte ptr [rdi], dx ; std ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000494fe0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c51e5 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; js 0x4c51f0 ; cli ; call rsi
0x000000000043fdcf : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495ee0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462bb1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb49f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b984d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000400783 : insd dword ptr [rdi], dx ; retf
0x00000000004ba75f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478bc3 : int 0x48
0x000000000040600f : int 0x80
0x00000000004c1e51 : int 0xa
0x000000000044b7cf : int 0xf
0x0000000000488a0f : int 0xfc
0x000000000045a4d6 : int1 ; add eax, r8d ; ret
0x0000000000444a5c : int1 ; call rbx
0x0000000000473f34 : int1 ; cmp rcx, rdx ; jne 0x473f17 ; ret
0x000000000043de7b : int1 ; jl 0x43decc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9c : int1 ; jl 0x43deed ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deaf : int1 ; jl 0x43df00 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df84 : int1 ; jl 0x43dfd5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdc : int1 ; jl 0x43e02d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e079 : int1 ; jl 0x43e0ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480c73 : int1 ; jmp 0x480c3a
0x0000000000480c72 : int1 ; jmp 0x480c3b
0x000000000049a257 : int1 ; jmp rcx
0x00000000004ba724 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004349db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d293 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000470c35 : int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000043e5c2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bae76 : int1 ; ret 0x5803
0x00000000004a3554 : int1 ; ret 0xfff8
0x000000000048124b : int1 ; retf 0xfff9
0x00000000004a354c : int1 ; sar eax, 0xff ; jno 0x4a351d ; clc ; push rcx ; ret 0xfff8
0x000000000043d297 : int1 ; sub eax, edx ; ret
0x00000000004a3785 : iretd ; clc ; call rax
0x000000000041acfb : iretd ; mov eax, 3 ; syscall
0x000000000041accf : iretd ; mov eax, r8d ; syscall
0x000000000040dc3e : ja 0x40dc63 ; ret
0x0000000000426832 : ja 0x426843 ; ret
0x000000000042c358 : ja 0x42c352 ; ret 0x7401
0x0000000000435da3 : ja 0x435da7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b3e7 : ja 0x43b3ed ; ret
0x000000000043b403 : ja 0x43b40d ; mov dword ptr [rdi], ecx ; ret
0x000000000043b444 : ja 0x43b453 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4c9 : ja 0x43b4dd ; ret
0x000000000043b51f : ja 0x43b537 ; ret
0x000000000043b5a1 : ja 0x43b5bd ; ret
0x000000000043ba07 : ja 0x43ba11 ; lea rax, [rdi + 2] ; ret
0x000000000043ba23 : ja 0x43ba31 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043ba74 : ja 0x43ba87 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043bb59 : ja 0x43bb71 ; lea rax, [rdi + 0x10] ; ret
0x000000000043bbcf : ja 0x43bbeb ; lea rax, [rdi + 0x14] ; ret
0x000000000043bc51 : ja 0x43bc71 ; lea rax, [rdi + 0x18] ; ret
0x000000000043eb2d : ja 0x43eb59 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043f3cb : ja 0x43f3d3 ; ret
0x000000000043f41a : ja 0x43f423 ; ret
0x000000000043f5a9 : ja 0x43f5e3 ; ret
0x000000000043f64d : ja 0x43f697 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044fa46 : ja 0x44fa53 ; ret
0x000000000045a4c7 : ja 0x45a4ae ; mov eax, r8d ; ret
0x000000000046a8bd : ja 0x46a8cb ; pop rbx ; ret
0x000000000046ac4b : ja 0x46ac53 ; ret
0x000000000046aca0 : ja 0x46acab ; ret
0x000000000046ae50 : ja 0x46ae7b ; ret
0x000000000047903e : ja 0x479090 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484c34 : ja 0x484bc1 ; ret 0x348
0x00000000004875ab : ja 0x487538 ; ret 0x348
0x000000000048a9ad : ja 0x4895ae ; jmp 0x48a987
0x000000000048dbe5 : ja 0x48c7ce ; jmp 0x48dbbf
0x000000000049132d : ja 0x48f62e ; jmp 0x491307
0x00000000004a33a9 : ja 0x4a33a5 ; jmp rax
0x00000000004a3d4d : ja 0x4a3d4a ; call qword ptr [rax]
0x00000000004a3d51 : ja 0x4a3d4e ; jmp qword ptr [rax]
0x00000000004a3d79 : ja 0x4a3d76 ; call rax
0x00000000004a3d75 : ja 0x4a3d76 ; inc eax ; ja 0x4a3d7a ; call rax
0x00000000004a3d7d : ja 0x4a3d7a ; jmp rax
0x00000000004a3d81 : ja 0x4a3d82 ; inc dword ptr [rax] ; js 0x4a3d86 ; jmp qword ptr [rax]
0x00000000004baee4 : ja 0x4bae6b ; ret 0x48f
0x00000000004bdd25 : ja 0x4bdd2a ; inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x0000000000413168 : jae 0x413175 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416a3b : jae 0x416a65 ; movzx eax, byte ptr [rax] ; ret
0x0000000000443ffc : jae 0x443f89 ; retf 0x8d48
0x0000000000444224 : jae 0x444207 ; mov eax, 1 ; ret
0x000000000043f36d : jae 0x444446 ; ret
0x000000000047465b : jae 0x474605 ; xor eax, eax ; ret
0x000000000049d590 : jae 0x49d556 ; mov rdx, rcx ; jmp 0x49d56e
0x00000000004a33a1 : jae 0x4a33a1 ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004b94a2 : jae 0x4b9484 ; jo 0x4b9520 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba33e : jae 0x4ba319 ; push rsi ; pop rdx ; je 0x4ba30e ; ret 0xacfc
0x00000000004bf121 : jae 0x4bf139 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4def : jae 0x4c4dfd ; ret
0x00000000004302ca : jb 0x4302da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043041a : jb 0x43042a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043056a : jb 0x43057a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306ba : jb 0x4306ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043080a : jb 0x43081a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043095a : jb 0x43096a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aaa : jb 0x430aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bfa : jb 0x430c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d4a : jb 0x430d5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e9a : jb 0x430eaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fea : jb 0x430ffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043113a : jb 0x43114a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043128a : jb 0x43129a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313da : jb 0x4313ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043152a : jb 0x43153a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328c1 : jb 0x4328aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432924 : jb 0x43290d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004329c8 : jb 0x4329d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043597e : jb 0x43598a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd67 : jb 0x43dd77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dd73 : jb 0x43dd89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dd83 : jb 0x43dd8b ; mov byte ptr [rdi], cl ; ret
0x000000000043dee5 : jb 0x43def4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043def0 : jb 0x43df03 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043defd : jb 0x43df05 ; mov byte ptr [rdi], cl ; ret
0x0000000000464c4c : jb 0x464c45 ; lea eax, [rdx + rdi] ; ret
0x000000000049aef3 : jb 0x49aefd ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a339d : jb 0x4a3399 ; call rax
0x00000000004baaf8 : jb 0x4bab52 ; call 0x4c15d4b7
0x00000000004c568d : jb 0x4c5695 ; add al, dl ; sbb dl, bh ; jmp qword ptr [rax]
0x0000000000401438 : jbe 0x40144c ; syscall
0x0000000000414e8b : jbe 0x414e2b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426176 : jbe 0x4261b5 ; add rax, rdi ; ret
0x0000000000426186 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426196 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004261a6 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c3c3 : jbe 0x42c3de ; lea rdi, [rdi + 0x10] ; jne 0x42c3b9 ; ret
0x000000000045ac92 : jbe 0x45ac1f ; ret 0x8166
0x000000000046417a : jbe 0x4640f0 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047824f : jbe 0x47825a ; ret
0x000000000049dd86 : jbe 0x49dd98 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a3830 : jbe 0x4a384e ; stc ; jmp rsi
0x00000000004a3d3d : jbe 0x4a3d3a ; call rax
0x00000000004a3d39 : jbe 0x4a3d3a ; inc eax ; jbe 0x4a3d3e ; call rax
0x00000000004a3d41 : jbe 0x4a3d3e ; jmp rax
0x00000000004a3d49 : jbe 0x4a3d4a ; inc dword ptr [rax] ; ja 0x4a3d4e ; call qword ptr [rax]
0x00000000004bad7c : jbe 0x4bad4f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004bad7b : jbe 0x4bad50 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004c1aa1 : jbe 0x4c1a9b ; call qword ptr [rax]
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be420 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400c34 : je 0x400c62 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x00000000004016a3 : je 0x4016b7 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004021e9 : je 0x4021fd ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402435 : je 0x402449 ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402d14 : je 0x402d24 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f63 : je 0x402f7d ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403157 : je 0x403171 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403572 : je 0x403582 ; mov edi, 0x6cc0a0 ; call rax
0x00000000004035ba : je 0x4035cc ; mov edi, 0x6cc0a0 ; call r15
0x00000000004036ba : je 0x4036ca ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f8ee : je 0x40f8fd ; mov eax, edx ; pop rbx ; ret
0x0000000000412cf4 : je 0x412d30 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041427b : je 0x414221 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414e53 : je 0x414e0d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414fc3 : je 0x414f7d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415135 : je 0x415142 ; ret
0x0000000000415167 : je 0x415176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415c8a : je 0x415c95 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041782d : je 0x417a4e ; mov rdx, rax ; jmp 0x417858
0x0000000000417dfa : je 0x417e01 ; pop rbx ; ret
0x0000000000417ed7 : je 0x417edd ; call rax
0x0000000000418cc4 : je 0x418cd1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041acca : je 0x41acf9 ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041e1c2 : je 0x41e1eb ; call rax
0x000000000041ebb2 : je 0x41ebde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041f0f8 : je 0x41f0fe ; call rax
0x00000000004210f9 : je 0x421102 ; ret
0x0000000000421382 : je 0x421397 ; mov eax, 0x16 ; ret
0x00000000004213d1 : je 0x4213e3 ; lea rax, [rip + 0x1a966] ; ret
0x0000000000422b03 : je 0x422acd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004237d5 : je 0x4237dd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423844 : je 0x423856 ; lea rax, [rip + 0x14853] ; ret
0x00000000004239b4 : je 0x4239be ; bsf eax, edx ; ret
0x00000000004239b4 : je 0x4239bf ; bsf eax, edx ; ret
0x0000000000423a5d : je 0x423a75 ; bsf rax, rdx ; ret
0x0000000000423a5d : je 0x423a76 ; bsf rax, rdx ; ret
0x00000000004239fc : je 0x423a89 ; bsf rax, rdx ; ret
0x000000000042572b : je 0x425756 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000042606c : je 0x4260c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004261de : je 0x4261f1 ; lea rax, [rip + 0x8449] ; ret
0x00000000004267c0 : je 0x4267d2 ; lea rax, [rip + 0x17647] ; ret
0x0000000000426d74 : je 0x426d86 ; lea rax, [rip + 0x12ad3] ; ret
0x0000000000429243 : je 0x42920d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042add3 : je 0x42ad9d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042ce9a : je 0x42cef1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cf51 : je 0x42cf69 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000042f9c7 : je 0x42f9d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e4fd : je 0x43e4c6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4d5 : je 0x43e4c8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e4fd : je 0x43e4c8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e60e : je 0x43e61c ; xor eax, eax ; ret
0x000000000043e609 : je 0x43e629 ; cmp eax, 2 ; je 0x43e621 ; xor eax, eax ; ret
0x000000000043e65d : je 0x43e643 ; ret
0x000000000043e748 : je 0x43e758 ; mov edi, 0x6cc720 ; call rax
0x000000000043e760 : je 0x43e770 ; mov edi, 0x6cc720 ; call rax
0x000000000043eac0 : je 0x43eaa1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f4c8 : je 0x43f51d ; add byte ptr [rax], al ; ret
0x000000000043fe8a : je 0x43fe91 ; ret
0x0000000000440168 : je 0x440150 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004411d0 : je 0x4411e2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442939 : je 0x44293e ; ret
0x000000000044299d : je 0x4429a2 ; ret
0x0000000000443f33 : je 0x443f43 ; mov edi, 0x6cb140 ; call rax
0x00000000004440c1 : je 0x4440d1 ; mov edi, 0x6cb140 ; call rax
0x0000000000444248 : je 0x444252 ; ret
0x0000000000444264 : je 0x444279 ; mov dword ptr [rip + 0x285d2c], edx ; pop rbx ; ret
0x0000000000444a57 : je 0x444a83 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448b54 : je 0x448b83 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d4f8 : je 0x44d503 ; pop rbx ; ret
0x000000000044d4f3 : je 0x44d508 ; cmp esi, 3 ; je 0x44d508 ; pop rbx ; ret
0x000000000044da80 : je 0x44da90 ; mov edi, 0x6cc720 ; call rax
0x000000000044daaf : je 0x44dac7 ; mov edi, 0x6cc720 ; call rax
0x000000000044dbb0 : je 0x44dbb6 ; call rax
0x000000000044dc0f : je 0x44dc1f ; mov edi, 0x6cc720 ; call rax
0x000000000044dd88 : je 0x44dd9f ; mov edi, 0x6cc720 ; call rax
0x000000000044e068 : je 0x44e078 ; mov edi, 0x6cc720 ; call rax
0x000000000044e16c : je 0x44e172 ; call rax
0x000000000044f02b : je 0x44f031 ; call rax
0x000000000044f5eb : je 0x44f5f3 ; ret
0x0000000000450bc2 : je 0x450bef ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462f28 : je 0x462f52 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463bb6 : je 0x463c06 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463bb5 : je 0x463c07 ; add esp, 0x20 ; pop rbx ; ret
0x000000000046499c : je 0x4649a2 ; ret
0x00000000004649ca : je 0x464a2c ; pop rbp ; pop r12 ; ret
0x0000000000464a6f : je 0x464ad1 ; pop rbp ; pop r12 ; ret
0x0000000000464bad : je 0x464bb8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464bf1 : je 0x464bfc ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004657cc : je 0x4657f5 ; bsf rax, rdx ; ret
0x00000000004657cc : je 0x4657f6 ; bsf rax, rdx ; ret
0x000000000046575c : je 0x465809 ; bsf rax, rdx ; ret
0x0000000000466749 : je 0x466769 ; mov cl, dl ; and cl, 0xf ; je 0x466779 ; ret
0x0000000000466750 : je 0x466772 ; ret
0x0000000000466765 : je 0x466786 ; add rax, 2 ; ret
0x0000000000466aeb : je 0x466b14 ; call rbx
0x0000000000466b93 : je 0x466bbc ; call rbx
0x0000000000466ce0 : je 0x466d0f ; and byte ptr [rbp - 0x73], cl ; jl 0x466c77 ; add al, 0xe8 ; ret
0x0000000000466f78 : je 0x466f85 ; test edx, edx ; jne 0x466f77 ; ret
0x000000000046a962 : je 0x46a980 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046b1d5 : je 0x46b1c4 ; ret
0x000000000046dcba : je 0x46dc44 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470dc4 : je 0x470dd4 ; mov edi, 0x6cb100 ; call rax
0x0000000000474db8 : je 0x474dc8 ; mov edi, 0x6cb140 ; call rax
0x0000000000474de0 : je 0x474df0 ; mov edi, 0x6cb140 ; call rax
0x0000000000474e56 : je 0x474e66 ; mov edi, 0x6cb140 ; call rax
0x000000000047637b : je 0x47638f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047639e : je 0x4763ea ; shl rdx, 5 ; add rdx, rax ; jmp 0x4763c1
0x000000000047696c : je 0x476991 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000476923 : je 0x476997 ; mov edi, 0x6cb140 ; call rax
0x0000000000476987 : je 0x4769f0 ; pop rbx ; ret
0x0000000000476ac4 : je 0x476acb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476cbf : je 0x476cc6 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004782de : je 0x4782a9 ; mov edi, 0x6cb140 ; call rax
0x00000000004782bf : je 0x4782ed ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x0000000000478426 : je 0x478432 ; ret
0x000000000047843c : je 0x47844c ; mov edi, 0x6cb140 ; call rax
0x000000000047a88a : je 0x47a895 ; mov eax, edx ; pop rbx ; ret
0x000000000047b182 : je 0x47b196 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047bdec : je 0x47be1b ; js 0x47be41 ; lea edi, [rsp + 0x78] ; call r12
0x000000000047e858 : je 0x47e868 ; mov edi, 0x6cb140 ; call rax
0x000000000047e884 : je 0x47e894 ; mov edi, 0x6cb140 ; call rax
0x000000000047eb2a : je 0x47eb3e ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048785b : je 0x4877e8 ; ret 0x348
0x0000000000487fdb : je 0x487feb ; mov edi, 0x6cb140 ; call rax
0x0000000000488002 : je 0x488012 ; mov edi, 0x6cb140 ; call rax
0x0000000000488081 : je 0x488091 ; mov edi, 0x6cb140 ; call rax
0x00000000004880aa : je 0x4880ba ; mov edi, 0x6cb140 ; call rax
0x0000000000488500 : je 0x48852e ; and byte ptr [rax - 0x2f], cl ; jmp 0x4884c9
0x00000000004941e3 : je 0x4941ad ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496193 : je 0x49615d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000499fc5 : je 0x499fa3 ; ret
0x000000000049c290 : je 0x49c248 ; add rsp, 0x18 ; ret
0x000000000049c247 : je 0x49c2b9 ; add rsp, 0x18 ; ret
0x000000000049e183 : je 0x49e194 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e199 ; ret
0x000000000049e33d : je 0x49e3a7 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e7b8 : je 0x49e7c3 ; ret
0x000000000049ea2a : je 0x49ea3a ; mov edi, 0x6cb100 ; call rax
0x000000000049eaeb : je 0x49eafb ; mov edi, 0x6cb100 ; call rax
0x00000000004a078e : je 0x4a0799 ; call rax
0x00000000004a3ba4 : je 0x4a3bb9 ; stc ; jmp rsp
0x00000000004b88ac : je 0x4b88da ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b9608 : je 0x4b95d3 ; xor al, 0xd8 ; ret
0x00000000004b9847 : je 0x4b9844 ; jmp 0x4b981e
0x00000000004ba342 : je 0x4ba30a ; ret 0xacfc
0x00000000004bf11a : je 0x4bf128 ; ret
0x00000000004c1e28 : je 0x4c1e33 ; add byte ptr [rax], al ; or al, 0x3a ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004c5865 : je 0x4c586d ; add byte ptr [rax], cl ; and bh, dl ; jmp rdi
0x00000000004c5864 : je 0x4c586e ; add byte ptr [rax], cl ; and bh, dl ; jmp rdi
0x0000000000411cb2 : jg 0x411d2b ; mov eax, 3 ; syscall
0x0000000000412cf8 : jg 0x412d6e ; xor eax, eax ; syscall
0x0000000000426842 : jg 0x426894 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004268a0 : jg 0x4268ec ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000426967 : jg 0x426980 ; jne 0x426957 ; mov rax, rdi ; ret
0x000000000042c3c7 : jg 0x42c3de ; jne 0x42c3b5 ; ret
0x0000000000431ea9 : jg 0x431efc ; ret
0x0000000000431ef0 : jg 0x431f40 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000431ef5 : jg 0x431f48 ; retf
0x0000000000431f2f : jg 0x431f7a ; ret
0x0000000000431f6f : jg 0x431fba ; retf
0x00000000004320a9 : jg 0x4320fc ; ret 0x894c
0x00000000004320f0 : jg 0x432140 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004320f5 : jg 0x432148 ; retf 0x894c
0x000000000043212f : jg 0x43217a ; ret 0x894c
0x000000000043216b : jg 0x4321b6 ; retf 0x894c
0x00000000004328c0 : jg 0x43293c ; loopne 0x432891 ; jp 0x43294d ; jp 0x4328c0 ; ret
0x000000000043296c : jg 0x43297d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004349b8 : jg 0x434a09 ; loope 0x4349b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a2f : jg 0x434a7a ; ret 0xff2
0x0000000000434a48 : jg 0x434a99 ; loop 0x434a47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434abf : jg 0x434b0a ; ret
0x0000000000434ad8 : jg 0x434b29 ; jrcxz 0x434ad7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b68 : jg 0x434bb9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434be8 : jg 0x434c39 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c68 : jg 0x434cb9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ce8 : jg 0x434d39 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d68 : jg 0x434db9 ; call 0x4fc25d6a
0x0000000000434de8 : jg 0x434e39 ; jmp 0x4fc25dea
0x0000000000434e45 : jg 0x434e95 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434e4f : jg 0x434e9a ; retf 0xff2
0x0000000000434ec5 : jg 0x434f15 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434ecf : jg 0x434f1a ; retf
0x0000000000434f68 : jg 0x434fb9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe8 : jg 0x435039 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435078 : jg 0x4350c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350f8 : jg 0x435149 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043516c : jg 0x435177 ; ret
0x00000000004351c6 : jg 0x4351d9 ; ret
0x00000000004351c1 : jg 0x435211 ; psllq mm1, qword ptr [rdi] ; jg 0x4351de ; ret
0x0000000000435236 : jg 0x435249 ; ret
0x00000000004352a6 : jg 0x4352b9 ; ret
0x00000000004352a1 : jg 0x4352f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435316 : jg 0x435329 ; ret
0x0000000000435311 : jg 0x435361 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435386 : jg 0x435399 ; ret
0x0000000000435381 : jg 0x4353d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f6 : jg 0x435409 ; ret
0x00000000004353f1 : jg 0x435441 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435466 : jg 0x435479 ; ret
0x0000000000435461 : jg 0x4354b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354d6 : jg 0x4354e9 ; ret
0x00000000004354d1 : jg 0x435521 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435546 : jg 0x435559 ; ret
0x00000000004355b6 : jg 0x4355c9 ; ret
0x0000000000435626 : jg 0x435639 ; ret
0x0000000000435621 : jg 0x435671 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435696 : jg 0x4356a9 ; ret
0x0000000000435691 : jg 0x4356e1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435706 : jg 0x435719 ; ret
0x0000000000435701 : jg 0x435751 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435776 : jg 0x435789 ; ret
0x0000000000435771 : jg 0x4357c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357e6 : jg 0x4357f9 ; ret
0x00000000004357e1 : jg 0x435831 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435924 : jg 0x435935 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435938 : jg 0x435949 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435daa : jg 0x435da6 ; ret
0x000000000043b4b6 : jg 0x43b4c1 ; ret
0x000000000043b4c6 : jg 0x43b4d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b4da : jg 0x43b4e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b4f9 : jg 0x43b507 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b509 : jg 0x43b517 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b519 : jg 0x43b52a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b53a : jg 0x43b549 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b55a : jg 0x43b569 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b57a : jg 0x43b589 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b59a : jg 0x43b5ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b5dd : jg 0x43b5ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5fd : jg 0x43b60f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b61b : jg 0x43b62b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63b : jg 0x43b64b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65b : jg 0x43b66b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b67b : jg 0x43b68b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bb46 : jg 0x43bb55 ; lea rax, [rdi + 0xf] ; ret
0x000000000043bb56 : jg 0x43bb68 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043bb89 : jg 0x43bb9b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bba9 : jg 0x43bbbb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bccf : jg 0x43bd2f ; or eax, 0x1c478d48 ; ret
0x000000000043dd42 : jg 0x43dd52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dde3 : jg 0x43de34 ; loopne 0x43de38 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dec7 : jg 0x43ded7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043debd : jg 0x43dedd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e490 : jg 0x43e4cd ; ret 0x2b77
0x000000000044055d : jg 0x440542 ; std ; dec dword ptr [rax - 0x75] ; jge 0x44056d ; call rbx
0x0000000000449c6f : jg 0x449bfc ; ret 0x5c77
0x000000000047359d : jg 0x473569 ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000047f291 : jg 0x47f297 ; add byte ptr [rcx], bh ; ret
0x00000000004919a4 : jg 0x4919b1 ; ret 0x5488
0x00000000004c632d : jg 0x4c6335 ; add byte ptr [rax - 0x75], dh ; cli ; call rsi
0x000000000040e05e : jge 0x40e063 ; call r14
0x000000000044017b : jge 0x44017f ; call rbx
0x00000000004402a2 : jge 0x4402a6 ; call rbx
0x00000000004402b0 : jge 0x4402b4 ; call rbx
0x00000000004403e5 : jge 0x4403e9 ; call rbx
0x0000000000440555 : jge 0x440559 ; call rbx
0x0000000000440563 : jge 0x440567 ; call rbx
0x00000000004409b6 : jge 0x440981 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441d73 : jge 0x441d77 ; call rbx
0x0000000000441e9b : jge 0x441e9f ; call rbx
0x0000000000441fde : jge 0x441fe2 ; call rbx
0x00000000004420df : jge 0x4420e3 ; call rbx
0x00000000004420fb : jge 0x4420ff ; call rbx
0x0000000000442456 : jge 0x442407 ; mov eax, 3 ; syscall
0x0000000000442543 : jge 0x4424e4 ; mov eax, 3 ; syscall
0x0000000000453d74 : jge 0x453dab ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004664f4 : jge 0x4664f6 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466926 : jge 0x46692b ; call r12
0x000000000049c65f : jge 0x49c65c ; leave ; ret
0x000000000049c6f7 : jge 0x49c6fa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c78b : jge 0x49c788 ; leave ; ret
0x000000000049c7d7 : jge 0x49c7da ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c8a0 : jge 0x49c8a3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c92f : jge 0x49c92c ; leave ; ret
0x000000000049c980 : jge 0x49c983 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ed90 : jge 0x49eda5 ; call r12
0x00000000004a3df5 : jge 0x4a3df2 ; call rax
0x00000000004a3dfd : jge 0x4a3dfa ; call qword ptr [rax]
0x00000000004a3df9 : jge 0x4a3dfa ; push rax ; jge 0x4a3dfe ; call qword ptr [rax]
0x00000000004b890a : jge 0x4b88eb ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004ba254 : jge 0x4ba2c5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bdd31 : jge 0x4bdd32 ; jmp rax
0x00000000004c4609 : jge 0x4c4606 ; call rdi
0x00000000004c618d : jge 0x4c6195 ; add byte ptr [rax + 0x7e], dl ; cli ; call rax
0x0000000000400c38 : jl 0x400c62 ; or al, 0x41 ; call rsp
0x0000000000400c8c : jl 0x400cba ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000041402b : jl 0x414076 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b315 : jl 0x41b340 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b44c : jl 0x41b477 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004358a4 : jl 0x4358f3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004358e0 : jl 0x43592f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435ade : jl 0x435b2d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c45 : jl 0x435c94 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435da7 : jl 0x435df6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043de7c : jl 0x43decb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9d : jl 0x43deec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deb0 : jl 0x43deff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df85 : jl 0x43dfd4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdd : jl 0x43e02c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07a : jl 0x43e0c9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f5d4 : jl 0x43f600 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f5d4 : jl 0x43f601 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043faea : jl 0x43fb18 ; or byte ptr [rax + 0x101], bh ; syscall
0x000000000043fba1 : jl 0x43fbcf ; or byte ptr [rax + 3], bh ; syscall
0x0000000000440610 : jl 0x44063e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000441d60 : jl 0x441d2c ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000447426 : jl 0x447454 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447d89 : jl 0x447db7 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044816f : jl 0x44819d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448b59 : jl 0x448b83 ; call r15
0x0000000000448f00 : jl 0x448f2e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449c19 : jl 0x449c47 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044ab25 : jl 0x44ab53 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d0d8 : jl 0x44d103 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fbc2 : jl 0x44fbed ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004528cc : jl 0x4528f7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458f68 : jl 0x458f32 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ac4b : jl 0x45ac76 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045cb4c : jl 0x45cb77 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464915 : jl 0x4648b1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466ce5 : jl 0x466c72 ; add al, 0xe8 ; ret
0x00000000004735a9 : jl 0x4735d8 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047896f : jl 0x47899d ; adc byte ptr [rax - 0x39], cl ; and al, 0x28 ; ret
0x000000000047b91d : jl 0x47b947 ; js 0x47b966 ; call rsp
0x000000000047bc32 : jl 0x47bc5c ; js 0x47bc7b ; call rsp
0x000000000047bdf1 : jl 0x47be1b ; js 0x47be3a ; call rsp
0x000000000047bff9 : jl 0x47c023 ; js 0x47c042 ; call rsp
0x000000000047d5f7 : jl 0x47d5c3 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000004897ce : jl 0x4897f9 ; or byte ptr [rax], al ; jne 0x4897a3 ; jmp 0x4897ab
0x000000000048c9fe : jl 0x48ca29 ; adc byte ptr [rax], al ; jne 0x48c9d3 ; jmp 0x48c9db
0x000000000048dcf6 : jl 0x48dd21 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049acb2 : jl 0x49acdd ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a33b5 : jl 0x4a33b1 ; jmp rax
0x00000000004a3dd1 : jl 0x4a3dce ; call rax
0x00000000004a3dcd : jl 0x4a3dce ; inc eax ; jl 0x4a3dd2 ; call rax
0x00000000004a3dd9 : jl 0x4a3dd6 ; call qword ptr [rax]
0x00000000004a3dd5 : jl 0x4a3dd6 ; push rax ; jl 0x4a3dda ; call qword ptr [rax]
0x00000000004ba452 : jl 0x4ba4b1 ; leave ; retf
0x00000000004c059c : jl 0x4c05c6 ; add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rax]
0x00000000004c1a9c : jl 0x4c1adb ; add byte ptr [rax], al ; nop ; jbe 0x4c1aa0 ; call qword ptr [rax]
0x00000000004c6b9c : jl 0x4c6b2c ; add byte ptr [rax], al ; shl bl, 1 ; cli ; jmp qword ptr [rdx]
0x00000000004239fe : jle 0x423a07 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004239fe : jle 0x423a08 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d542 : jle 0x44d555 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047c98d : jle 0x47c99b ; ret
0x00000000004a3e15 : jle 0x4a3e12 ; call rax
0x00000000004a3e1d : jle 0x4a3e1a ; call qword ptr [rax]
0x00000000004a3e19 : jle 0x4a3e1a ; push rax ; jle 0x4a3e1e ; call qword ptr [rax]
0x00000000004b8902 : jle 0x4b889b ; xlatb ; retf 0xa1eb
0x00000000004ba4c5 : jle 0x4ba500 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004c6191 : jle 0x4c618f ; call rax
0x00000000004216dd : jmp 0x100c4029
0x0000000000421786 : jmp 0x100c40d2
0x00000000004218c6 : jmp 0x100c4212
0x0000000000421a06 : jmp 0x100c4352
0x0000000000421b46 : jmp 0x100c4492
0x0000000000421c86 : jmp 0x100c45d2
0x0000000000421dc6 : jmp 0x100c4712
0x0000000000421f06 : jmp 0x100c4852
0x0000000000422046 : jmp 0x100c4992
0x0000000000422186 : jmp 0x100c4ad2
0x00000000004222c6 : jmp 0x100c4c12
0x0000000000422406 : jmp 0x100c4d52
0x0000000000422546 : jmp 0x100c4e92
0x0000000000422686 : jmp 0x100c4fd2
0x00000000004227c6 : jmp 0x100c5112
0x0000000000422906 : jmp 0x100c5252
0x0000000000422b29 : jmp 0x100c5475
0x0000000000422bb6 : jmp 0x100c5502
0x0000000000422c86 : jmp 0x100c55d2
0x0000000000422d56 : jmp 0x100c56a2
0x0000000000422e16 : jmp 0x100c5762
0x0000000000422ee6 : jmp 0x100c5832
0x0000000000422fb6 : jmp 0x100c5902
0x0000000000423086 : jmp 0x100c59d2
0x0000000000423156 : jmp 0x100c5aa2
0x0000000000423226 : jmp 0x100c5b72
0x00000000004232f6 : jmp 0x100c5c42
0x00000000004233c6 : jmp 0x100c5d12
0x0000000000423496 : jmp 0x100c5de2
0x0000000000423566 : jmp 0x100c5eb2
0x0000000000423636 : jmp 0x100c5f82
0x0000000000423706 : jmp 0x100c6052
0x0000000000423bed : jmp 0x100c6539
0x0000000000423cc6 : jmp 0x100c6612
0x0000000000423e46 : jmp 0x100c6792
0x0000000000423fc6 : jmp 0x100c6912
0x0000000000424146 : jmp 0x100c6a92
0x00000000004242c6 : jmp 0x100c6c12
0x0000000000424446 : jmp 0x100c6d92
0x00000000004245c6 : jmp 0x100c6f12
0x0000000000424746 : jmp 0x100c7092
0x00000000004248c6 : jmp 0x100c7212
0x0000000000424a46 : jmp 0x100c7392
0x0000000000424bc6 : jmp 0x100c7512
0x0000000000424d46 : jmp 0x100c7692
0x0000000000424ec6 : jmp 0x100c7812
0x0000000000425046 : jmp 0x100c7992
0x00000000004251c6 : jmp 0x100c7b12
0x0000000000427077 : jmp 0x100c99c3
0x00000000004271fc : jmp 0x100c9b48
0x000000000042740c : jmp 0x100c9d58
0x000000000042761c : jmp 0x100c9f68
0x000000000042782c : jmp 0x100ca178
0x0000000000427a3c : jmp 0x100ca388
0x0000000000427c4c : jmp 0x100ca598
0x0000000000427e5c : jmp 0x100ca7a8
0x000000000042806c : jmp 0x100ca9b8
0x000000000042827c : jmp 0x100cabc8
0x000000000042848c : jmp 0x100cadd8
0x000000000042869c : jmp 0x100cafe8
0x00000000004288ac : jmp 0x100cb1f8
0x0000000000428abc : jmp 0x100cb408
0x0000000000428ccc : jmp 0x100cb618
0x0000000000428edc : jmp 0x100cb828
0x00000000004292af : jmp 0x100cbbfb
0x0000000000429418 : jmp 0x100cbd64
0x00000000004295b8 : jmp 0x100cbf04
0x0000000000429758 : jmp 0x100cc0a4
0x00000000004298f8 : jmp 0x100cc244
0x0000000000429a98 : jmp 0x100cc3e4
0x0000000000429c38 : jmp 0x100cc584
0x0000000000429dd8 : jmp 0x100cc724
0x0000000000429f78 : jmp 0x100cc8c4
0x000000000042a118 : jmp 0x100cca64
0x000000000042a2b8 : jmp 0x100ccc04
0x000000000042a458 : jmp 0x100ccda4
0x000000000042a5f8 : jmp 0x100ccf44
0x000000000042a798 : jmp 0x100cd0e4
0x000000000042a938 : jmp 0x100cd284
0x000000000042aad8 : jmp 0x100cd424
0x000000000042ae25 : jmp 0x100cd771
0x000000000042af2e : jmp 0x100cd87a
0x000000000042b07e : jmp 0x100cd9ca
0x000000000042b1ce : jmp 0x100cdb1a
0x000000000042b31e : jmp 0x100cdc6a
0x000000000042b46e : jmp 0x100cddba
0x000000000042b5be : jmp 0x100cdf0a
0x000000000042b70e : jmp 0x100ce05a
0x000000000042b85e : jmp 0x100ce1aa
0x000000000042b9ae : jmp 0x100ce2fa
0x000000000042bafe : jmp 0x100ce44a
0x000000000042bc4e : jmp 0x100ce59a
0x000000000042bd9e : jmp 0x100ce6ea
0x000000000042beee : jmp 0x100ce83a
0x000000000042c03e : jmp 0x100ce98a
0x000000000042c18e : jmp 0x100ceada
0x000000000042d1cd : jmp 0x100cfb19
0x000000000042d276 : jmp 0x100cfbc2
0x000000000042d396 : jmp 0x100cfce2
0x000000000042d4b6 : jmp 0x100cfe02
0x000000000042d5d6 : jmp 0x100cff22
0x000000000042d6f6 : jmp 0x100d0042
0x000000000042d816 : jmp 0x100d0162
0x000000000042d936 : jmp 0x100d0282
0x000000000042da56 : jmp 0x100d03a2
0x000000000042db76 : jmp 0x100d04c2
0x000000000042dc96 : jmp 0x100d05e2
0x000000000042ddb6 : jmp 0x100d0702
0x000000000042ded6 : jmp 0x100d0822
0x000000000042dff6 : jmp 0x100d0942
0x000000000042e116 : jmp 0x100d0a62
0x000000000042e236 : jmp 0x100d0b82
0x00000000004360d7 : jmp 0x100d8a23
0x000000000043625c : jmp 0x100d8ba8
0x000000000043645c : jmp 0x100d8da8
0x000000000043665c : jmp 0x100d8fa8
0x000000000043685c : jmp 0x100d91a8
0x0000000000436a5c : jmp 0x100d93a8
0x0000000000436c5c : jmp 0x100d95a8
0x0000000000436e5c : jmp 0x100d97a8
0x000000000043705c : jmp 0x100d99a8
0x000000000043725c : jmp 0x100d9ba8
0x000000000043745c : jmp 0x100d9da8
0x000000000043765c : jmp 0x100d9fa8
0x000000000043785c : jmp 0x100da1a8
0x0000000000437a5c : jmp 0x100da3a8
0x0000000000437c5c : jmp 0x100da5a8
0x0000000000437e5c : jmp 0x100da7a8
0x0000000000491c07 : jmp 0x10134553
0x0000000000491dac : jmp 0x101346f8
0x0000000000491ffc : jmp 0x10134948
0x000000000049224c : jmp 0x10134b98
0x000000000049249c : jmp 0x10134de8
0x00000000004926ec : jmp 0x10135038
0x000000000049293c : jmp 0x10135288
0x0000000000492b8c : jmp 0x101354d8
0x0000000000492ddc : jmp 0x10135728
0x000000000049302c : jmp 0x10135978
0x000000000049327c : jmp 0x10135bc8
0x00000000004934cc : jmp 0x10135e18
0x000000000049371c : jmp 0x10136068
0x000000000049396c : jmp 0x101362b8
0x0000000000493bbc : jmp 0x10136508
0x0000000000493e0c : jmp 0x10136758
0x000000000049424f : jmp 0x10136b9b
0x00000000004943e8 : jmp 0x10136d34
0x00000000004945c8 : jmp 0x10136f14
0x00000000004947a8 : jmp 0x101370f4
0x0000000000494978 : jmp 0x101372c4
0x0000000000494b58 : jmp 0x101374a4
0x0000000000494d38 : jmp 0x10137684
0x0000000000494f18 : jmp 0x10137864
0x00000000004950f8 : jmp 0x10137a44
0x00000000004952d8 : jmp 0x10137c24
0x00000000004954b8 : jmp 0x10137e04
0x0000000000495698 : jmp 0x10137fe4
0x0000000000495878 : jmp 0x101381c4
0x0000000000495a58 : jmp 0x101383a4
0x0000000000495c38 : jmp 0x10138584
0x0000000000495e18 : jmp 0x10138764
0x00000000004961e5 : jmp 0x10138b31
0x000000000049632e : jmp 0x10138c7a
0x00000000004964ae : jmp 0x10138dfa
0x000000000049662e : jmp 0x10138f7a
0x00000000004967ae : jmp 0x101390fa
0x000000000049692e : jmp 0x1013927a
0x0000000000496aae : jmp 0x101393fa
0x0000000000496c2e : jmp 0x1013957a
0x0000000000496dae : jmp 0x101396fa
0x0000000000496f2e : jmp 0x1013987a
0x00000000004970ae : jmp 0x101399fa
0x000000000049722e : jmp 0x10139b7a
0x00000000004973ae : jmp 0x10139cfa
0x000000000049752e : jmp 0x10139e7a
0x00000000004976ae : jmp 0x10139ffa
0x000000000049782e : jmp 0x1013a17a
0x0000000000497bd7 : jmp 0x1013a523
0x0000000000497d7c : jmp 0x1013a6c8
0x0000000000497fbc : jmp 0x1013a908
0x00000000004981fc : jmp 0x1013ab48
0x000000000049843c : jmp 0x1013ad88
0x000000000049867c : jmp 0x1013afc8
0x00000000004988bc : jmp 0x1013b208
0x0000000000498afc : jmp 0x1013b448
0x0000000000498d3c : jmp 0x1013b688
0x0000000000498f7c : jmp 0x1013b8c8
0x00000000004991bc : jmp 0x1013bb08
0x00000000004993fc : jmp 0x1013bd48
0x000000000049963c : jmp 0x1013bf88
0x000000000049987c : jmp 0x1013c1c8
0x0000000000499abc : jmp 0x1013c408
0x0000000000499cfc : jmp 0x1013c648
0x0000000000400549 : jmp 0x400516
0x00000000004007bd : jmp 0x400782
0x0000000000401081 : jmp 0x400fe1
0x0000000000402112 : jmp 0x402128
0x00000000004045e6 : jmp 0x403d50
0x00000000004118c3 : jmp 0x4117cb
0x0000000000416bd5 : jmp 0x416ba2
0x0000000000417ef3 : jmp 0x417f40
0x000000000041a4a1 : jmp 0x419ed2
0x000000000041aecd : jmp 0x41a3dc
0x000000000041aede : jmp 0x41acf9
0x0000000000421484 : jmp 0x42144a
0x00000000004215d8 : jmp 0x42159d
0x000000000042cfac : jmp 0x42cf72
0x000000000042d0f8 : jmp 0x42d0bd
0x000000000042ead8 : jmp 0x42eaa6
0x000000000042eb56 : jmp 0x42eb24
0x000000000042efe8 : jmp 0x42efb6
0x000000000042f066 : jmp 0x42f034
0x000000000043da8e : jmp 0x43da54
0x000000000043db5f : jmp 0x43db25
0x000000000043dbce : jmp 0x43db94
0x000000000043f6e3 : jmp 0x43f656
0x000000000043ff83 : jmp 0x43ff26
0x0000000000443d7c : jmp 0x44385f
0x00000000004458f3 : jmp 0x4458b9
0x0000000000445d6e : jmp 0x445d33
0x0000000000448263 : jmp 0x448231
0x000000000044a9ef : jmp 0x44a9bd
0x000000000044f52f : jmp 0x44f151
0x00000000004503c1 : jmp 0x4503cb
0x0000000000452786 : jmp 0x452753
0x0000000000456bb3 : jmp 0x456b8f
0x00000000004586fb : jmp 0x4584c9
0x000000000045a67a : jmp 0x45a6a2
0x0000000000462744 : jmp 0x462709
0x0000000000462743 : jmp 0x46270a
0x0000000000464edb : jmp 0x464ea1
0x0000000000464eda : jmp 0x464ea2
0x0000000000465feb : jmp 0x465e41
0x000000000046a0ab : jmp 0x46a070
0x000000000046a9a0 : jmp 0x46a966
0x000000000046bc9f : jmp 0x46bc6d
0x000000000046d84b : jmp 0x46d811
0x0000000000473c68 : jmp 0x473c35
0x00000000004796b1 : jmp 0x47967f
0x0000000000479d91 : jmp 0x479d5f
0x000000000047a4d2 : jmp 0x47a524
0x000000000047d63c : jmp 0x47d64e
0x000000000047c9a5 : jmp 0x47f16b
0x000000000047f4a0 : jmp 0x47f46d
0x000000000047ffe2 : jmp 0x480034
0x0000000000480c74 : jmp 0x480c39
0x000000000048439a : jmp 0x480e2f
0x000000000048549c : jmp 0x481f4c
0x00000000004839d5 : jmp 0x48399a
0x00000000004854fb : jmp 0x4854c0
0x0000000000485639 : jmp 0x485606
0x0000000000486f19 : jmp 0x486ee6
0x0000000000486f58 : jmp 0x486f25
0x00000000004871da : jmp 0x48719f
0x0000000000488505 : jmp 0x4884c4
0x000000000048a8c8 : jmp 0x489ab9
0x000000000048a9b3 : jmp 0x48a981
0x000000000048a9b0 : jmp 0x48a9b5
0x000000000048dbeb : jmp 0x48dbb9
0x000000000048dbe8 : jmp 0x48dbed
0x0000000000459f23 : jmp 0x49102873
0x0000000000491333 : jmp 0x491301
0x0000000000491cae : jmp 0x491cc4
0x000000000049642e : jmp 0x496444
0x0000000000496a2e : jmp 0x496a44
0x0000000000496d2e : jmp 0x496d44
0x000000000049702e : jmp 0x497044
0x000000000049732e : jmp 0x497344
0x000000000049762e : jmp 0x497644
0x000000000049ad0e : jmp 0x49acdc
0x00000000004b8b0a : jmp 0x4b8b49
0x00000000004b9849 : jmp 0x4b981c
0x00000000004ba4c9 : jmp 0x4ba497
0x00000000004ba840 : jmp 0x4ba7d4
0x00000000004ba83f : jmp 0x4ba7d5
0x00000000004baa16 : jmp 0x4ba9e4
0x0000000000434dea : jmp 0x4fc25de8
0x0000000000434de9 : jmp 0x4fc25de9
0x0000000000448db2 : jmp 0xffffffff810f10d8
0x0000000000449065 : jmp 0xffffffff810f138b
0x00000000004b8ab7 : jmp 0xffffffff9115a48e
0x00000000004693bb : jmp 0xffffffffbf091d0b
0x0000000000479041 : jmp 0xffffffffc3571996
0x000000000047b4d9 : jmp 0xffffffffca70fd21
0x000000000041cb3c : jmp 0xffffffffcb7b1346
0x000000000041ccad : jmp 0xffffffffcb7b14b7
0x000000000041d7e3 : jmp 0xffffffffcb7b1fed
0x000000000047b463 : jmp 0xffffffffcbd0fc6d
0x00000000004a3a6b : jmp qword ptr [rax + 0x16fff90f]
0x00000000004a3603 : jmp qword ptr [rax + 0x20fff8c0]
0x00000000004a360b : jmp qword ptr [rax + 0x20fff8c1]
0x00000000004a374b : jmp qword ptr [rax + 0x30fff8ec]
0x00000000004a37ab : jmp qword ptr [rax - 0x1f000724]
0x000000000041cd19 : jmp qword ptr [rax]
0x00000000004835fe : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c1d8b : jmp qword ptr [rbx]
0x00000000004a355f : jmp qword ptr [rcx + 0x31fff8c4]
0x00000000004bff03 : jmp qword ptr [rcx]
0x00000000004bb104 : jmp qword ptr [rdi]
0x00000000004a3adb : jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3ad3 : jmp qword ptr [rdx + 0x22fff912]
0x00000000004a3acb : jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3ac3 : jmp qword ptr [rdx + 0x22fff914]
0x00000000004a3abb : jmp qword ptr [rdx + 0x22fff915]
0x00000000004bde4f : jmp qword ptr [rdx - 0x1d00023a]
0x00000000004a38e7 : jmp qword ptr [rdx]
0x000000000047e369 : jmp qword ptr [rsi + 0xf]
0x00000000004a3597 : jmp qword ptr [rsi - 0x3d]
0x00000000004a3843 : jmp qword ptr [rsi]
0x00000000004216b9 : jmp r10
0x0000000000476b71 : jmp r11
0x000000000049a030 : jmp r8
0x000000000042fcb0 : jmp r9
0x00000000004a3623 : jmp rax
0x0000000000476b72 : jmp rbx
0x000000000042063e : jmp rcx
0x00000000004c586b : jmp rdi
0x00000000004216ba : jmp rdx
0x00000000004a3833 : jmp rsi
0x00000000004a399f : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dbe4 : jne 0x40dbc2 ; ret
0x000000000040dc15 : jne 0x40dc4f ; mov eax, 0xba ; syscall
0x000000000040fb4b : jne 0x40fb61 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410d3c : jne 0x410d43 ; pop rbx ; ret
0x0000000000413505 : jne 0x413512 ; ret
0x0000000000414c81 : jne 0x414c73 ; ret
0x0000000000415991 : jne 0x4159a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415ce2 : jne 0x415ccd ; pop rbx ; ret
0x0000000000415d1c : jne 0x415d15 ; lea eax, [rdx + rdi] ; ret
0x00000000004165d6 : jne 0x4165cb ; ret
0x000000000041dba0 : jne 0x41db63 ; ret
0x0000000000421624 : jne 0x421636 ; lea rax, [rip + 3] ; ret
0x0000000000426129 : jne 0x426185 ; xor rax, rax ; ret
0x00000000004260e9 : jne 0x4261a9 ; xor rax, rax ; ret
0x00000000004261ca : jne 0x4261dd ; lea rax, [rip + 0x1d] ; ret
0x00000000004268aa : jne 0x426893 ; ret
0x0000000000426a13 : jne 0x4268ff ; mov rax, rdi ; ret
0x0000000000426969 : jne 0x426955 ; mov rax, rdi ; ret
0x0000000000426e90 : jne 0x426ea2 ; lea rax, [rip + 0x67] ; ret
0x0000000000426ee3 : jne 0x426ef5 ; lea rax, [rip + 4] ; ret
0x000000000042c488 : jne 0x42c360 ; ret
0x000000000042c3c9 : jne 0x42c3b3 ; ret
0x000000000042e61c : jne 0x42e606 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042fc0d : jne 0x42fc37 ; xor eax, eax ; ret
0x000000000042f201 : jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042f229 : jne 0x42fc47 ; xor eax, eax ; ret
0x000000000043be35 : jne 0x43bdc6 ; lea rax, [rdi + 3] ; ret
0x000000000043be07 : jne 0x43bdc6 ; lea rax, [rdi + 7] ; ret
0x000000000043be06 : jne 0x43bdc7 ; lea rax, [rdi + 7] ; ret
0x000000000043d594 : jne 0x43d7a8 ; xor eax, eax ; ret
0x000000000043d799 : jne 0x43d7b9 ; xor eax, eax ; ret
0x000000000043d641 : jne 0x43d7bd ; xor eax, eax ; ret
0x000000000043d7b1 : jne 0x43d7be ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d8c1 : jne 0x43d8b2 ; ret
0x000000000043d971 : jne 0x43d962 ; ret
0x000000000043dae1 : jne 0x43dad6 ; lea rax, [rcx - 1] ; ret
0x000000000043dc31 : jne 0x43dc26 ; sub rax, 1 ; ret
0x000000000043f457 : jne 0x43f474 ; mov eax, 2 ; syscall
0x000000000043f4b7 : jne 0x43f4d4 ; mov eax, 0 ; syscall
0x000000000043f517 : jne 0x43f534 ; mov eax, 1 ; syscall
0x0000000000440928 : jne 0x440910 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044272a : jne 0x442728 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044279a : jne 0x442798 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004428e2 : jne 0x4428d9 ; pop rdx ; pop r10 ; ret
0x00000000004428d2 : jne 0x4428e4 ; nop ; mov eax, 0xca ; syscall
0x0000000000442ab3 : jne 0x442aad ; xor eax, eax ; leave ; ret
0x0000000000445d6c : jne 0x445d43 ; jmp 0x445d35
0x000000000044e485 : jne 0x44e48a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004521e1 : jne 0x4521cd ; mov rax, rsi ; ret
0x0000000000452265 : jne 0x452245 ; mov rax, rsi ; ret
0x000000000045a678 : jne 0x45a68a ; jmp 0x45a6a4
0x0000000000463af1 : jne 0x463ae3 ; ret
0x00000000004656c3 : jne 0x4656ce ; xor rax, rax ; ret
0x0000000000466895 : jne 0x4668a2 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466f3b : jne 0x466ef6 ; mov rax, rdx ; ret
0x0000000000466f7c : jne 0x466f73 ; ret
0x000000000046ad07 : jne 0x46ad24 ; mov eax, 3 ; syscall
0x000000000046ae97 : jne 0x46aeb4 ; mov eax, 0x14 ; syscall
0x000000000046b213 : jne 0x46b1c5 ; xor eax, eax ; ret
0x000000000046b1c7 : jne 0x46b21b ; ret
0x000000000046b20f : jne 0x46b21d ; test ecx, ecx ; jne 0x46b1c9 ; xor eax, eax ; ret
0x0000000000473f4a : jne 0x473ef0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473f38 : jne 0x473f13 ; ret
0x0000000000474057 : jne 0x47406a ; mov rax, qword ptr [rip + 0x258e50] ; ret
0x00000000004740a0 : jne 0x474073 ; ret
0x00000000004768b6 : jne 0x4768f3 ; ret
0x00000000004768b5 : jne 0x4768f4 ; ret
0x0000000000478703 : jne 0x478716 ; add rsp, 0x38 ; ret
0x00000000004787a5 : jne 0x4787b8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047887d : jne 0x4788c0 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000478935 : jne 0x478948 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047ab00 : jne 0x47ab16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c9a4 : jne 0x47c998 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047e2b8 : jne 0x47e275 ; nop word ptr [rax + rax] ; call rbx
0x00000000004897d2 : jne 0x48979f ; jmp 0x4897a7
0x000000000048ca02 : jne 0x48c9cf ; jmp 0x48c9d7
0x0000000000491a00 : jne 0x491a12 ; lea rax, [rip + 0x67] ; ret
0x0000000000491a53 : jne 0x491a65 ; lea rax, [rip + 4] ; ret
0x000000000049c353 : jne 0x49c34c ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c3b7 : jne 0x49c3ac ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c65b : jne 0x49c654 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c787 : jne 0x49c780 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c92b : jne 0x49c924 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cca4 : jne 0x49cc9b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cd04 : jne 0x49ccfb ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e189 : jne 0x49e193 ; ret
0x000000000049e1a4 : jne 0x49e1b3 ; ret
0x000000000049e3c4 : jne 0x49e3d3 ; ret
0x000000000049e7c3 : jne 0x49e7d2 ; mov eax, 8 ; ret
0x000000000049ebb5 : jne 0x49eba3 ; pop rbx ; ret
0x000000000049ec00 : jne 0x49ebe0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049ed25 : jne 0x49ed0b ; pop rbx ; ret
0x00000000004a33a5 : jne 0x4a33a1 ; call qword ptr [rax]
0x00000000004b8977 : jne 0x4b8941 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004ba90b : jne 0x4ba932 ; retf 0x32dd
0x00000000004261eb : jno 0x42624f ; add dword ptr [rax], eax ; ret
0x000000000042f4be : jno 0x42f4cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004358a0 : jno 0x4358a9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435ada : jno 0x435ae3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435c41 : jno 0x435c52 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435da6 : jno 0x435e2a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000044056b : jno 0x440550 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000445793 : jno 0x445815 ; sub byte ptr [rax], al ; ret
0x00000000004457a3 : jno 0x445825 ; sub byte ptr [rax], al ; ret
0x0000000000466893 : jno 0x4668a2 ; jne 0x4668a4 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466899 : jno 0x4668a6 ; ret
0x0000000000478f34 : jno 0x478f86 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a3550 : jno 0x4a3519 ; clc ; push rcx ; ret 0xfff8
0x00000000004a3550 : jno 0x4a351d ; clc ; push rcx ; ret 0xfff8
0x000000000041249b : jnp 0x41250f ; syscall
0x00000000004a33b1 : jnp 0x4a33b1 ; call qword ptr [rax - 0x1f000784]
0x00000000004a33b0 : jnp 0x4a33b2 ; call qword ptr [rax - 0x1f000784]
0x00000000004b9325 : jnp 0x4b92e2 ; ret
0x00000000004ba322 : jnp 0x4ba380 ; retf
0x00000000004ba729 : jnp 0x4ba776 ; retf 0x99e0
0x00000000004bb389 : jnp 0x4bb3ca ; retf
0x00000000004bdd2d : jnp 0x4bdd32 ; inc dword ptr [rax] ; jge 0x4bdd36 ; jmp rax
0x00000000004c5f3d : jnp 0x4c5f45 ; add byte ptr [rax], dh ; push rdx ; cli ; jmp rsp
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x000000000042af27 : jns 0x42af02 ; retf 0xead3
0x000000000042b077 : jns 0x42b052 ; retf 0xead3
0x000000000042b1c7 : jns 0x42b1a2 ; retf 0xead3
0x000000000042b317 : jns 0x42b2f2 ; retf 0xead3
0x000000000042b467 : jns 0x42b442 ; retf 0xead3
0x000000000042b5b7 : jns 0x42b592 ; retf 0xead3
0x000000000042b707 : jns 0x42b6e2 ; retf 0xead3
0x000000000042b857 : jns 0x42b832 ; retf 0xead3
0x000000000042b9a7 : jns 0x42b982 ; retf 0xead3
0x000000000042baf7 : jns 0x42bad2 ; retf 0xead3
0x000000000042bc47 : jns 0x42bc22 ; retf 0xead3
0x000000000042bd97 : jns 0x42bd72 ; retf 0xead3
0x000000000042bee7 : jns 0x42bec2 ; retf 0xead3
0x000000000042c037 : jns 0x42c012 ; retf 0xead3
0x000000000042c187 : jns 0x42c162 ; retf 0xead3
0x00000000004358a7 : jns 0x4358aa ; ret
0x0000000000435ae1 : jns 0x435ae4 ; ret
0x0000000000435c48 : jns 0x435c53 ; ret
0x000000000046a11c : jns 0x46a12b ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046f4ac : jns 0x46f4ba ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000496327 : jns 0x496302 ; retf 0xead3
0x00000000004964a7 : jns 0x496482 ; retf 0xead3
0x0000000000496627 : jns 0x496602 ; retf 0xead3
0x00000000004967a7 : jns 0x496782 ; retf 0xead3
0x0000000000496927 : jns 0x496902 ; retf 0xead3
0x0000000000496aa7 : jns 0x496a82 ; retf 0xead3
0x0000000000496c27 : jns 0x496c02 ; retf 0xead3
0x0000000000496da7 : jns 0x496d82 ; retf 0xead3
0x0000000000496f27 : jns 0x496f02 ; retf 0xead3
0x00000000004970a7 : jns 0x497082 ; retf 0xead3
0x0000000000497227 : jns 0x497202 ; retf 0xead3
0x00000000004973a7 : jns 0x497382 ; retf 0xead3
0x0000000000497527 : jns 0x497502 ; retf 0xead3
0x00000000004976a7 : jns 0x497682 ; retf 0xead3
0x0000000000497827 : jns 0x497802 ; retf 0xead3
0x000000000049c244 : jns 0x49c287 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a3da5 : jns 0x4a3da2 ; jmp qword ptr [rax]
0x00000000004b842e : jns 0x4b83c4 ; ret 0xf869
0x00000000004b842d : jns 0x4b83c5 ; ret 0xf869
0x00000000004ba83e : jns 0x4ba895 ; jmp 0x4ba7d6
0x00000000004bdd29 : jns 0x4bdd2a ; jmp qword ptr [rax]
0x00000000004bdd28 : jns 0x4bdd2b ; jmp qword ptr [rax]
0x000000000043e3ab : jns 0xffffffffe9336d95 ; retf
0x0000000000411cb3 : jo 0x411c73 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413384 : jo 0x4133d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041d409 : jo 0x41d43a ; add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x0000000000463b6a : jo 0x463b82 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046708c : jo 0x4670a0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a7da : jo 0x47a767 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a7d9 : jo 0x47a768 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000049ad0a : jo 0x49ad12 ; add byte ptr [rax], al ; jmp 0x49ace0
0x00000000004a3294 : jo 0x4a329d ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a33cc : jo 0x4a3359 ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a3399 : jo 0x4a3399 ; push qword ptr [rax] ; jb 0x4a339d ; call rax
0x00000000004a3384 : jo 0x4a33f1 ; clc ; call qword ptr [rax]
0x00000000004a33a4 : jo 0x4a341e ; clc ; call qword ptr [rax]
0x00000000004b94a4 : jo 0x4b951e ; mov ebp, 0xfb67d10d ; ret
0x00000000004c1331 : jo 0x4c1337 ; retf 0xe0a
0x00000000004c3df0 : jo 0x4c3dad ; clc ; call qword ptr [rcx]
0x00000000004c6330 : jo 0x4c62c0 ; cli ; call rsi
0x00000000004c6910 : jo 0x4c68ed ; cli ; jmp rdi
0x00000000004268f5 : jp 0x4268ef ; ret 0x7401
0x00000000004328c6 : jp 0x4328ba ; ret
0x0000000000432929 : jp 0x43291d ; ret
0x00000000004328bf : jp 0x432949 ; jb 0x4328ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004328c4 : jp 0x432949 ; jp 0x4328bc ; ret
0x0000000000464ed9 : jp 0x464f1e ; jmp 0x464ea3
0x000000000047b65e : jp 0x47b673 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004886d5 : jp 0x4886de ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004b9633 : jp 0x4b95ed ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004055f9 : jrcxz 0x405601 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405661 : jrcxz 0x405669 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000434ada : jrcxz 0x434ad5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ad9 : jrcxz 0x434ad6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442933 : jrcxz 0x4428f8 ; cmp r11d, 0xa ; je 0x442944 ; ret
0x0000000000447e8c : jrcxz 0x447e79 ; retf
0x000000000045b3b6 : jrcxz 0x45b42f ; ret
0x000000000045d3c8 : jrcxz 0x45d3c2 ; ret 0xf40
0x00000000004a3719 : jrcxz 0x4a3719 ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a3739 : jrcxz 0x4a3735 ; jmp rax
0x00000000004b8285 : jrcxz 0x4b82df ; ret
0x00000000004ba44d : jrcxz 0x4ba410 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004bafa9 : jrcxz 0x4baf8d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c6ba1 : jrcxz 0x4c6b9f ; jmp qword ptr [rdx]
0x000000000040922c : js 0x40924f ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040923f : js 0x40925a ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x0000000000409252 : js 0x409265 ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040926a : js 0x40928d ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040927d : js 0x409298 ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x0000000000409996 : js 0x4099b0 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099a7 : js 0x4099b9 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099bd : js 0x4099df ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099ce : js 0x4099e8 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099df : js 0x4099f1 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099f5 : js 0x409a17 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a06 : js 0x409a20 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a17 : js 0x409a29 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a2d : js 0x409a4f ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a3e : js 0x409a58 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a4f : js 0x409a61 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a65 : js 0x409a87 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a76 : js 0x409a90 ; mov qword ptr [rsp], rax ; call 0x405c98
0x000000000044272f : js 0x44278f ; pop rbp ; ret
0x000000000044279f : js 0x4427ff ; pop rbp ; ret
0x00000000004485ce : js 0x44861f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b1b8 : js 0x44b209 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c018 : js 0x44c069 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004553bb : js 0x4553ef ; add r8b, bpl ; cld ; ret
0x000000000045fdf5 : js 0x45fe28 ; add r8b, bpl ; ret 0xfa19
0x0000000000471392 : js 0x47139b ; pop rbx ; ret
0x000000000047a7dd : js 0x47a7eb ; ret
0x000000000047b91f : js 0x47b964 ; call rsp
0x000000000047bc34 : js 0x47bc79 ; call rsp
0x000000000047bdb3 : js 0x47bdf8 ; call rsp
0x000000000047bdf3 : js 0x47be38 ; call rsp
0x000000000047bdee : js 0x47be3f ; lea edi, [rsp + 0x78] ; call r12
0x000000000047bfb6 : js 0x47bffb ; call rsp
0x000000000047bffb : js 0x47c040 ; call rsp
0x000000000048eaf5 : js 0x48ead4 ; add r8b, bpl ; ret 0xf72c
0x000000000049c585 : js 0x49c592 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c592 : js 0x49c59e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3d85 : js 0x4a3d82 ; jmp qword ptr [rax]
0x00000000004a3d99 : js 0x4a3d9a ; inc eax ; js 0x4a3d9e ; jmp rax
0x00000000004a3d9d : js 0x4a3d9a ; jmp rax
0x00000000004a3da1 : js 0x4a3da2 ; inc dword ptr [rax] ; jns 0x4a3da6 ; jmp qword ptr [rax]
0x00000000004ba388 : js 0x4ba35c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004ba321 : js 0x4ba3a1 ; pop rdx ; retf
0x00000000004c3629 : js 0x4c3625 ; call qword ptr [rcx]
0x00000000004c3e08 : js 0x4c3dc5 ; clc ; call qword ptr [rcx]
0x00000000004c51e8 : js 0x4c51ed ; cli ; call rsi
0x00000000004c7168 : js 0x4c7185 ; sti ; call qword ptr [rax]
0x000000000041fe9d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000047122f : lahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000045c98a : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004434e2 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000443428 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443455 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004ba963 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000473f4b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042ba2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba252 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004baa54 : lahf ; push -0x57d3205 ; call 0xffffffffab597556
0x00000000004b8a60 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000440688 : lahf ; ret
0x0000000000485f3c : lahf ; ret 0x2941
0x000000000040fdde : lahf ; ret 0x3841
0x000000000044068e : lahf ; ret 0x3845
0x00000000004b81bd : lahf ; ret 0x871e
0x0000000000484111 : lahf ; ret 0xb60f
0x0000000000486ba8 : lahf ; ret 0xd129
0x0000000000486c1f : lahf ; ret 0xd629
0x0000000000486b31 : lahf ; ret 0xd729
0x000000000043e489 : lahf ; ret 0xea81
0x000000000049b8e6 : lahf ; ret 0xf45
0x00000000004bde84 : lahf ; retf 0xfffd
0x00000000004bddc1 : lahf ; std ; call qword ptr [rax - 0x2f00025f]
0x0000000000463d8c : lahf ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004114fd : lahf ; sub eax, 0x29480005 ; ret
0x000000000042c0bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bde8b : lcall [rax] ; retf
0x00000000004111e3 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000048839a : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cc73 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451a92 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000041102d : lcall [rbx + 0x5d] ; ret
0x00000000004749d6 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000420113 : lcall [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004bde83 : lcall [rdi - 0x4000236] ; retf
0x0000000000435166 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000415d2b : lea eax, [r8 - 1] ; ret
0x000000000046b23b : lea eax, [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x000000000043ffaf : lea eax, [rax + rax] ; ret
0x0000000000426154 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000426164 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000426134 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000415d2c : lea eax, [rax - 1] ; ret
0x00000000004c7165 : lea eax, [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x0000000000465acd : lea eax, [rcx + rsi] ; ret
0x000000000043dae4 : lea eax, [rcx - 1] ; ret
0x000000000043bb5c : lea eax, [rdi + 0x10] ; ret
0x000000000043bb71 : lea eax, [rdi + 0x11] ; ret
0x000000000043bb8f : lea eax, [rdi + 0x12] ; ret
0x000000000043bbaf : lea eax, [rdi + 0x13] ; ret
0x000000000043bbd2 : lea eax, [rdi + 0x14] ; ret
0x000000000043bbf1 : lea eax, [rdi + 0x15] ; ret
0x000000000043bc11 : lea eax, [rdi + 0x16] ; ret
0x000000000043bc31 : lea eax, [rdi + 0x17] ; ret
0x000000000043bc54 : lea eax, [rdi + 0x18] ; ret
0x000000000043bc79 : lea eax, [rdi + 0x19] ; ret
0x000000000043bc97 : lea eax, [rdi + 0x1a] ; ret
0x000000000043bcb7 : lea eax, [rdi + 0x1b] ; ret
0x000000000043bcd3 : lea eax, [rdi + 0x1c] ; ret
0x000000000043bcf3 : lea eax, [rdi + 0x1d] ; ret
0x000000000043bd13 : lea eax, [rdi + 0x1e] ; ret
0x000000000043bd33 : lea eax, [rdi + 0x1f] ; ret
0x000000000043baad : lea eax, [rdi + 0xa] ; ret
0x000000000043bacd : lea eax, [rdi + 0xb] ; ret
0x000000000043baef : lea eax, [rdi + 0xc] ; ret
0x000000000043bb0f : lea eax, [rdi + 0xd] ; ret
0x000000000043bb2f : lea eax, [rdi + 0xe] ; ret
0x000000000043bb49 : lea eax, [rdi + 0xf] ; ret
0x000000000043b9f7 : lea eax, [rdi + 1] ; ret
0x000000000043ba0a : lea eax, [rdi + 2] ; ret
0x000000000043ba15 : lea eax, [rdi + 3] ; ret
0x000000000043ba28 : lea eax, [rdi + 4] ; ret
0x000000000043ba3d : lea eax, [rdi + 5] ; ret
0x000000000043ba5b : lea eax, [rdi + 6] ; ret
0x000000000043ba67 : lea eax, [rdi + 7] ; ret
0x000000000043ba7a : lea eax, [rdi + 8] ; ret
0x000000000043ba8f : lea eax, [rdi + 9] ; ret
0x0000000000426189 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000426199 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000426083 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000042cf57 : lea eax, [rdi + rax] ; ret
0x00000000004659c9 : lea eax, [rdi + rsi] ; ret
0x0000000000478248 : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x478261 ; ret
0x000000000043b9e3 : lea eax, [rdi] ; ret
0x000000000043afcd : lea eax, [rdx + 0xa] ; ret
0x000000000043afed : lea eax, [rdx + 0xb] ; ret
0x000000000043b00f : lea eax, [rdx + 0xc] ; ret
0x000000000043b02f : lea eax, [rdx + 0xd] ; ret
0x000000000043b04f : lea eax, [rdx + 0xe] ; ret
0x000000000043aedf : lea eax, [rdx + 0xf] ; ret
0x000000000043af07 : lea eax, [rdx + 1] ; ret
0x000000000043af1d : lea eax, [rdx + 2] ; ret
0x000000000043af35 : lea eax, [rdx + 3] ; ret
0x000000000043af4b : lea eax, [rdx + 4] ; ret
0x000000000043af5d : lea eax, [rdx + 5] ; ret
0x000000000043af7b : lea eax, [rdx + 6] ; ret
0x000000000043ae87 : lea eax, [rdx + 7] ; ret
0x000000000043af8d : lea eax, [rdx + 8] ; ret
0x000000000043afad : lea eax, [rdx + 9] ; ret
0x0000000000415d1e : lea eax, [rdx + rdi] ; ret
0x000000000043e55c : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043aef5 : lea eax, [rdx] ; ret
0x0000000000426d77 : lea eax, [rip + 0x12ad3] ; ret
0x0000000000423847 : lea eax, [rip + 0x14853] ; ret
0x00000000004261e9 : lea eax, [rip + 0x15e71] ; ret
0x00000000004267c3 : lea eax, [rip + 0x17647] ; ret
0x00000000004213d4 : lea eax, [rip + 0x1a966] ; ret
0x00000000004261cd : lea eax, [rip + 0x1d] ; ret
0x0000000000426e93 : lea eax, [rip + 0x67] ; ret
0x00000000004261e1 : lea eax, [rip + 0x8449] ; ret
0x0000000000421627 : lea eax, [rip + 3] ; ret
0x0000000000426ee6 : lea eax, [rip + 4] ; ret
0x00000000004c53e5 : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c8b0 : lea eax, [rsp + 0x88] ; call r15
0x000000000047bfaf : lea ebx, [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8a71 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049cab5 : lea ebx, [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004669d0 : lea ecx, [rax + 1] ; call rbx
0x0000000000469a32 : lea ecx, [rax] ; mov rdx, rax ; jmp 0x469a43
0x000000000042fd07 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000043b27e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000452a6f : lea ecx, [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000464051 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a4d0 : lea ecx, [rdx] ; jmp 0x47a526
0x000000000047ffe0 : lea ecx, [rdx] ; jmp 0x480036
0x000000000046afb7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464f87 : lea ecx, [rsp + 0x10] ; call rbx
0x0000000000465060 : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466ae5 : lea ecx, [rsp + 0x20] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000466e00 : lea ecx, [rsp + 0x28] ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466cfe : lea ecx, [rsp + 0x60] ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000046fa16 : lea edi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021ec : lea edi, [rbx + 0x80] ; call rax
0x000000000040e0dc : lea edi, [rbx + rsi] ; call rax
0x0000000000426966 : lea edi, [rdi + 0x10] ; jne 0x426958 ; mov rax, rdi ; ret
0x000000000042c3c6 : lea edi, [rdi + 0x10] ; jne 0x42c3b6 ; ret
0x000000000047b91c : lea edi, [rsp + 0x78] ; call r12
0x000000000047bcc2 : lea edi, [rsp + 0x80] ; call r12
0x000000000047bacf : lea edi, [rsp + 0x88] ; call r14
0x00000000004165db : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465230 : lea edx, [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fdd4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000464ddd : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004216b6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000004301c8 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000463f91 : lea edx, [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464f82 : lea edx, [rsp + 0x18] ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466b8d : lea edx, [rsp + 0x28] ; lea rsi, [rsp + 0x40] ; call rbx
0x00000000004671f0 : lea edx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c7d6 : lea edx, [rsp + 0x80] ; call r12
0x0000000000485ffc : lea esi, [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048ce35 : lea esi, [rax*8 + 0x4b7f08] ; call 0x479109
0x0000000000466d03 : lea esi, [rsp + 0x30] ; call rbx
0x00000000004669cb : lea esi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466aea : lea esi, [rsp + 0x40] ; call rbx
0x000000000046b35d : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f5b1 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004740be : lea esp, [rip + 0x6894800] ; ret
0x00000000004216b5 : lea r10, [r10 + r9] ; jmp r10
0x000000000040e0db : lea r15, [rbx + r14] ; call rax
0x000000000044c8af : lea r8, [rsp + 0x88] ; call r15
0x00000000004c7164 : lea r8d, [rax] ; add byte ptr [rax + 0x18], bh ; sti ; call qword ptr [rax]
0x000000000042fd06 : lea r9, [r11 + r9] ; jmp r9
0x000000000047a4cf : lea r9, [rdx] ; jmp 0x47a527
0x000000000047ffdf : lea r9, [rdx] ; jmp 0x480037
0x0000000000464f86 : lea r9, [rsp + 0x10] ; call rbx
0x000000000046505f : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426153 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426163 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426133 : lea rax, [rax + rdi - 0x10] ; ret
0x0000000000465acc : lea rax, [rcx + rsi] ; ret
0x000000000043dae3 : lea rax, [rcx - 1] ; ret
0x000000000043bb5b : lea rax, [rdi + 0x10] ; ret
0x000000000043bb70 : lea rax, [rdi + 0x11] ; ret
0x000000000043bb8e : lea rax, [rdi + 0x12] ; ret
0x000000000043bbae : lea rax, [rdi + 0x13] ; ret
0x000000000043bbd1 : lea rax, [rdi + 0x14] ; ret
0x000000000043bbf0 : lea rax, [rdi + 0x15] ; ret
0x000000000043bc10 : lea rax, [rdi + 0x16] ; ret
0x000000000043bc30 : lea rax, [rdi + 0x17] ; ret
0x000000000043bc53 : lea rax, [rdi + 0x18] ; ret
0x000000000043bc78 : lea rax, [rdi + 0x19] ; ret
0x000000000043bc96 : lea rax, [rdi + 0x1a] ; ret
0x000000000043bcb6 : lea rax, [rdi + 0x1b] ; ret
0x000000000043bcd2 : lea rax, [rdi + 0x1c] ; ret
0x000000000043bcf2 : lea rax, [rdi + 0x1d] ; ret
0x000000000043bd12 : lea rax, [rdi + 0x1e] ; ret
0x000000000043bd32 : lea rax, [rdi + 0x1f] ; ret
0x000000000043baac : lea rax, [rdi + 0xa] ; ret
0x000000000043bacc : lea rax, [rdi + 0xb] ; ret
0x000000000043baee : lea rax, [rdi + 0xc] ; ret
0x000000000043bb0e : lea rax, [rdi + 0xd] ; ret
0x000000000043bb2e : lea rax, [rdi + 0xe] ; ret
0x000000000043bb48 : lea rax, [rdi + 0xf] ; ret
0x000000000043b9f6 : lea rax, [rdi + 1] ; ret
0x000000000043ba09 : lea rax, [rdi + 2] ; ret
0x000000000043ba14 : lea rax, [rdi + 3] ; ret
0x000000000043ba27 : lea rax, [rdi + 4] ; ret
0x000000000043ba3c : lea rax, [rdi + 5] ; ret
0x000000000043ba5a : lea rax, [rdi + 6] ; ret
0x000000000043ba66 : lea rax, [rdi + 7] ; ret
0x000000000043ba79 : lea rax, [rdi + 8] ; ret
0x000000000043ba8e : lea rax, [rdi + 9] ; ret
0x0000000000426188 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426198 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000426082 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000042cf56 : lea rax, [rdi + rax] ; ret
0x00000000004659c8 : lea rax, [rdi + rsi] ; ret
0x000000000043b9e2 : lea rax, [rdi] ; ret
0x000000000043afcc : lea rax, [rdx + 0xa] ; ret
0x000000000043afec : lea rax, [rdx + 0xb] ; ret
0x000000000043b00e : lea rax, [rdx + 0xc] ; ret
0x000000000043b02e : lea rax, [rdx + 0xd] ; ret
0x000000000043b04e : lea rax, [rdx + 0xe] ; ret
0x000000000043aede : lea rax, [rdx + 0xf] ; ret
0x000000000043af06 : lea rax, [rdx + 1] ; ret
0x000000000043af1c : lea rax, [rdx + 2] ; ret
0x000000000043af34 : lea rax, [rdx + 3] ; ret
0x000000000043af4a : lea rax, [rdx + 4] ; ret
0x000000000043af5c : lea rax, [rdx + 5] ; ret
0x000000000043af7a : lea rax, [rdx + 6] ; ret
0x000000000043ae86 : lea rax, [rdx + 7] ; ret
0x000000000043af8c : lea rax, [rdx + 8] ; ret
0x000000000043afac : lea rax, [rdx + 9] ; ret
0x000000000043aef4 : lea rax, [rdx] ; ret
0x0000000000426d76 : lea rax, [rip + 0x12ad3] ; ret
0x0000000000423846 : lea rax, [rip + 0x14853] ; ret
0x00000000004261e8 : lea rax, [rip + 0x15e71] ; ret
0x00000000004267c2 : lea rax, [rip + 0x17647] ; ret
0x00000000004213d3 : lea rax, [rip + 0x1a966] ; ret
0x00000000004261cc : lea rax, [rip + 0x1d] ; ret
0x0000000000426e92 : lea rax, [rip + 0x67] ; ret
0x00000000004261e0 : lea rax, [rip + 0x8449] ; ret
0x0000000000421626 : lea rax, [rip + 3] ; ret
0x0000000000426ee5 : lea rax, [rip + 4] ; ret
0x000000000049cab4 : lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b27d : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004669cf : lea rcx, [rax + 1] ; call rbx
0x0000000000469a31 : lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0x469a44
0x000000000046afb6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046fa15 : lea rdi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021eb : lea rdi, [rbx + 0x80] ; call rax
0x0000000000426965 : lea rdi, [rdi + 0x10] ; jne 0x426959 ; mov rax, rdi ; ret
0x000000000042c3c5 : lea rdi, [rdi + 0x10] ; jne 0x42c3b7 ; ret
0x000000000047b91b : lea rdi, [rsp + 0x78] ; call r12
0x000000000047bcc1 : lea rdi, [rsp + 0x80] ; call r12
0x000000000047bace : lea rdi, [rsp + 0x88] ; call r14
0x000000000042fdd3 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004301c7 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000004671ef : lea rdx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c7d5 : lea rdx, [rsp + 0x80] ; call r12
0x0000000000466d02 : lea rsi, [rsp + 0x30] ; call rbx
0x00000000004669ca : lea rsi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466ae9 : lea rsi, [rsp + 0x40] ; call rbx
0x000000000046b35c : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004780cb : leave ; and rax, 0x25894c00 ; retf 0x2548
0x0000000000488226 : leave ; cmove rax, rdx ; ret
0x000000000047af35 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043d8c0 : leave ; jne 0x43d8b3 ; ret
0x000000000043d970 : leave ; jne 0x43d963 ; ret
0x000000000043dc30 : leave ; jne 0x43dc27 ; sub rax, 1 ; ret
0x0000000000466f3a : leave ; jne 0x466ef7 ; mov rax, rdx ; ret
0x000000000046b212 : leave ; jne 0x46b1c6 ; xor eax, eax ; ret
0x000000000049a028 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444ae0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004009e4 : leave ; ret
0x00000000004ba454 : leave ; retf
0x00000000004b8c21 : leave ; retf 0x6ee8
0x00000000004b7d49 : leave ; retf 0xcccb
0x00000000004c3d69 : leave ; std ; call qword ptr [rbx]
0x00000000004bde79 : leave ; std ; call rdx
0x00000000004bde27 : ljmp [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x00000000004bde13 : ljmp [rax] ; ret
0x00000000004be33b : ljmp [rbx + rbp*8] ; std ; call rsp
0x00000000004be337 : ljmp [rbx + rbp*8] ; std ; ljmp [rbx + rbp*8] ; std ; call rsp
0x00000000004bdf33 : ljmp [rdi + rdx*8] ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000040fa10 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a7c5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042ea0e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fe5f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423510 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d240 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b73e : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ab20 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004ba346 : lodsb al, byte ptr [rsi] ; loop 0x4ba313 ; retf
0x000000000047841f : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478439 ; ret
0x00000000004bb0fd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004c00cc : lodsb al, byte ptr [rsi] ; sbb al, 0 ; add byte ptr [rax], ah ; push rbp ; cmc ; call qword ptr [rcx]
0x00000000004bddd9 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rax]
0x00000000004b897b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046b214 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000047acda : lodsd eax, dword ptr [rsi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000040739d : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004ba725 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004953a0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a19b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004790a2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000047626f : lodsd eax, dword ptr [rsi] ; retf
0x000000000041bf0a : loop 0x41bf19 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418169
0x000000000042e61d : loop 0x42e655 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434a4a : loop 0x434a45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a49 : loop 0x434a46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c93b : loop 0x45c8c8 ; ret
0x0000000000467cea : loop 0x467d3d ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004763a2 : loop 0x4763ad ; add rdx, rax ; jmp 0x4763bd
0x000000000049e16a : loop 0x49e160 ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3695 : loop 0x4a3695 ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a36b5 : loop 0x4a36b5 ; inc dword ptr [rax] ; in al, 0xf8 ; jmp rax
0x00000000004ba347 : loop 0x4ba312 ; retf
0x00000000004bb49a : loop 0x4bb4ef ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042c962 : loope 0x42c9b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004349ba : loope 0x4349b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349b9 : loope 0x4349b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043bf6b : loope 0x43bf75 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043e65e : loope 0x43e655 ; ret
0x000000000044432f : loope 0x44433a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046674e : loope 0x466763 ; je 0x466774 ; ret
0x000000000046ab7c : loope 0x46ab09 ; ret 0xf631
0x0000000000478f37 : loope 0x478f89 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478f68 : loope 0x478fbb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000478fdd : loope 0x479030 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049ed26 : loope 0x49ed85 ; ret
0x00000000004a36d5 : loope 0x4a36d1 ; call rax
0x00000000004a3735 : loope 0x4a3735 ; inc dword ptr [rax] ; jrcxz 0x4a3739 ; jmp rax
0x00000000004ba451 : loope 0x4ba4d3 ; pop rdx ; leave ; retf
0x0000000000400d50 : loopne 0x400d67 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000412b09 : loopne 0x412b70 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412bb7 : loopne 0x412c1e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414706 : loopne 0x41476a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416dd5 : loopne 0x416e39 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4b : loopne 0x420aad ; pop rbp ; pop r12 ; ret
0x000000000042669d : loopne 0x426701 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426732 : loopne 0x426796 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cc1d : loopne 0x42cc75 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430221 : loopne 0x430238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430220 : loopne 0x430239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430371 : loopne 0x430388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430370 : loopne 0x430389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c1 : loopne 0x4304d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c0 : loopne 0x4304d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430611 : loopne 0x430628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430610 : loopne 0x430629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430761 : loopne 0x430778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430760 : loopne 0x430779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b1 : loopne 0x4308c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b0 : loopne 0x4308c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a01 : loopne 0x430a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a00 : loopne 0x430a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4f : loopne 0x430b66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4e : loopne 0x430b67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca1 : loopne 0x430cb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca0 : loopne 0x430cb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df1 : loopne 0x430e08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df0 : loopne 0x430e09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f41 : loopne 0x430f58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f40 : loopne 0x430f59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431091 : loopne 0x4310a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431090 : loopne 0x4310a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e1 : loopne 0x4311f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e0 : loopne 0x4311f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431331 : loopne 0x431348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431330 : loopne 0x431349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431481 : loopne 0x431498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431480 : loopne 0x431499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004328c2 : loopne 0x43288f ; jp 0x43294b ; jp 0x4328be ; ret
0x000000000043dde5 : loopne 0x43de36 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dde4 : loopne 0x43de37 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f55c : loopne 0x43f5b0 ; add byte ptr [rax], al ; ret
0x00000000004426ba : loopne 0x44270d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442998 : loopne 0x4429ad ; cmp eax, 4 ; je 0x4429a7 ; ret
0x0000000000444332 : loopne 0x444392 ; pop rbp ; ret
0x0000000000451e90 : loopne 0x451f0f ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x000000000045a8ad : loopne 0x45a83a ; ret 0xe680
0x0000000000461e7b : loopne 0x461edf ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462233 : loopne 0x462295 ; pop rbp ; pop r12 ; ret
0x000000000046225d : loopne 0x4622bf ; pop rbp ; pop r12 ; ret
0x000000000046291b : loopne 0x46297d ; pop rbp ; pop r12 ; ret
0x000000000046298d : loopne 0x4629ef ; pop rbp ; pop r12 ; ret
0x0000000000463f5e : loopne 0x463ef7 ; mov eax, 0xffffffff ; ret
0x0000000000478a7d : loopne 0x478a86 ; sub eax, 1 ; ret
0x000000000047af34 : loopne 0x47af04 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000049f665 : loopne 0x49f64c ; add r8b, bpl ; ret 0xfa25
0x000000000049f666 : loopne 0x49f6ad ; add al, ch ; ret 0xfa25
0x00000000004a34d8 : loopne 0x4a3489 ; clc ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004a36b1 : loopne 0x4a36ad ; jmp qword ptr [rax]
0x00000000004a36d1 : loopne 0x4a36d1 ; push rax ; loope 0x4a36d5 ; call rax
0x00000000004a3724 : loopne 0x4a3711 ; clc ; jmp rax
0x00000000004a3724 : loopne 0x4a3715 ; clc ; jmp rax
0x00000000004a3728 : loopne 0x4a3717 ; clc ; jmp rax
0x00000000004a373c : loopne 0x4a3725 ; clc ; call rax
0x00000000004a382c : loopne 0x4a384e ; stc ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004a3d80 : loopne 0x4a3e00 ; stc ; inc dword ptr [rax] ; js 0x4a3d87 ; jmp qword ptr [rax]
0x00000000004a3da0 : loopne 0x4a3e21 ; stc ; inc dword ptr [rax] ; jns 0x4a3da7 ; jmp qword ptr [rax]
0x00000000004b8a74 : loopne 0x4b8a54 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bc618 : loopne 0x4bc5e4 ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004b848a : mov ah, 0x13 ; ret
0x00000000004a3974 : mov ah, 0x1f ; stc ; inc dword ptr [rdi + rbx - 7] ; call rsp
0x000000000041f318 : mov ah, 0x2a ; add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x00000000004b8930 : mov ah, 0xa5 ; ret
0x000000000046bf88 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004b8284 : mov ah, bl ; push rsi ; ret
0x000000000049a17a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c473 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004586f8 : mov al, 0 ; add cl, ch ; ret
0x000000000047ed80 : mov al, 0x13 ; retf
0x000000000040f5ed : mov al, 0x1b ; add al, bpl ; retf 0xff21
0x00000000004a3a18 : mov al, 0x1b ; stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3328 : mov al, 0x1e ; clc ; jmp rax
0x00000000004a3800 : mov al, 0x1e ; stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004517a3 : mov al, 0x27 ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e2a8
0x000000000047ef34 : mov al, 0x34 ; retf
0x00000000004a33f4 : mov al, 0x3f ; clc ; inc eax ; clc ; call rax
0x000000000049c291 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004a3d38 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a3d3f ; call rax
0x00000000004a3dcc : mov al, 0x7c ; stc ; inc eax ; jl 0x4a3dd3 ; call rax
0x00000000004a3df4 : mov al, 0x7d ; stc ; call rax
0x00000000004a3e14 : mov al, 0x7e ; stc ; call rax
0x00000000004a3470 : mov al, 0xca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004ba736 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004473d5 : mov al, 0xf ; retf 0xd285
0x000000000047f418 : mov al, 0xfe ; retf 0x4b
0x00000000004bfa95 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5b6d : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000043f9ba : mov al, 2 ; add bl, ch ; retf 0x4890
0x00000000004434e0 : mov al, byte ptr [rax] ; lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000439766 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439784 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043aef0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439740 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040fa0f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439750 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435781 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000400ed8 : mov bh, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004ba7c0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000468911 : mov bh, 0x3f ; add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000044d07b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cbfe : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043be08 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x000000000046a966 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004baa98 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004b9764 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b7d46 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000004c29b8 : mov bh, 1 ; ret
0x00000000004bae73 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043d6fe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fcdf : mov bl, 0x29 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004baafb : mov bl, 0x29 ; retf 0xbf4b
0x0000000000466f3c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e2b9 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba843 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004baae0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c3d29 : mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004bdde5 : mov bl, 0xfd ; call rax
0x00000000004c4108 : mov bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c4138 : mov bl, bl ; clc ; call qword ptr [rdx]
0x0000000000446ba8 : mov bl, byte ptr [rdx + 0x5a] ; add byte ptr [rax - 0x7f], cl ; ret 0x5a40
0x00000000004b8461 : mov bx, 0xf32d ; retf
0x000000000049ad07 : mov byte ptr [r14 + 0x170], dl ; jmp 0x49ace3
0x000000000041cb70 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x0000000000411a0c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b1cec : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041cb71 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00000000004472c8 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000411a0d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047bad2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c8b3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c6c45 : mov byte ptr [rax], al ; add byte ptr [rax], cl ; out dx, eax ; cli ; jmp qword ptr [rdx]
0x0000000000443e7c : mov byte ptr [rax], bpl ; add cl, ch ; ret
0x0000000000443e7d : mov byte ptr [rax], ch ; add cl, ch ; ret
0x0000000000451e92 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x00000000004c1a18 : mov byte ptr [rcx], al ; ret
0x000000000043bb58 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043b4c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bbce : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000043b51e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bc50 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000043b5a0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043ba06 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b3e6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043b402 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b443 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004baaf5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043184b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004329cc : mov byte ptr [rdi], cl ; ret
0x000000000043b9e0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3c0 : mov byte ptr [rdi], dh ; ret
0x00000000004357f3 : mov byte ptr [rdi], dl ; ret
0x000000000043af19 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000439769 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043af47 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000439787 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000484397 : mov byte ptr [rdx], 0x30 ; jmp 0x480e32
0x000000000043aef2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439742 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440de4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049ab30 : mov byte ptr [rip + 0x232029], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x000000000049ad08 : mov byte ptr [rsi + 0x170], dl ; jmp 0x49ace2
0x0000000000452263 : mov byte ptr [rsi], al ; jne 0x452247 ; mov rax, rsi ; ret
0x00000000004521df : mov byte ptr [rsi], dl ; jne 0x4521cf ; mov rax, rsi ; ret
0x000000000047a9c7 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b8282 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b95c3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba256 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004ba95f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb30a : mov ch, 0xab ; ret
0x00000000004bdde9 : mov ch, 0xfd ; call qword ptr [rax]
0x000000000042132c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f586 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004260eb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x00000000004bad61 : mov cl, 0x3f ; retf
0x0000000000470e34 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000463d8b : mov cl, 0x9f ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004bdde1 : mov cl, 0xfd ; call qword ptr [rax - 0x2f00024d]
0x00000000004c86f8 : mov cl, bl ; cld ; call qword ptr [rax]
0x000000000044f4fb : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413459 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000429105 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004216b4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba732 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004329ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046674b : mov cl, dl ; and cl, 0xf ; je 0x466777 ; ret
0x00000000004ba9ec : mov cs, edi ; ret 0x8b36
0x000000000042b53e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b3e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411eee : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004151f0 : mov dh, 0 ; pop rbx ; ret
0x000000000041316b : mov dh, 0 ; ret
0x00000000004357f1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004262c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dbe0 : mov dh, 0x17 ; test dl, dl ; jne 0x40dbc6 ; ret
0x00000000004a3848 : mov dh, 0x1d ; stc ; inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x0000000000461fce : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040db15 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462603 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d2d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d291 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d2b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448c50 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000444117 : mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000049a254 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b9722 : mov dh, 0x4e ; ret 0x474c
0x000000000046d9c5 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462ba9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d2d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d2c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d295 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d2a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d407 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d38a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000004480bc : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000046e4e7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044ee0f : mov dh, 0xb2 ; cmp byte ptr [rdx + 0x4a], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044f79d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b09d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047ae47 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ad76 : mov dh, 0xc0 ; ret
0x000000000043e4d8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e500 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000041402e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ba964 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004262ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b54f : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422a61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e664 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466922 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049cfda : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414e8e : mov dh, 2 ; pop rbx ; ret
0x0000000000411f01 : mov dh, 2 ; ret
0x000000000042e661 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a64 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004517a2 : mov dh, byte ptr [rax - 0x76b3ffd9] ; out dx, eax ; call 0x41e2a9
0x000000000040f9d4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e65c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004318d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000048ddf5 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004bad7e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047c9b4 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b65c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418cf3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000046a0a3 : mov dword ptr [r12], 1 ; jmp 0x46a078
0x000000000044a9e8 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44a9c4
0x0000000000400d52 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000466897 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435976 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435961 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463b29 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463b69 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464ac9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463b2d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464b67 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446bb8 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446bbb : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004157da : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442e66 : mov dword ptr [rax + 8], edx ; ret
0x00000000004268ce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049cfa3 : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000480602 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044dc38 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041c0e7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c9f8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a5b8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6ded : mov dword ptr [rax], eax ; add byte ptr [rax], dh ; or edi, ebx ; jmp rsi
0x0000000000400d53 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000464055 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004871d8 : mov dword ptr [rax], edi ; jmp 0x4871a1
0x000000000047aff5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004839d3 : mov dword ptr [rax], edx ; jmp 0x48399c
0x0000000000463f95 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047afe9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464de1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461b1a : mov dword ptr [rbp - 0x10d0], edx ; call 0x41dd48
0x00000000004423aa : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045dc42 : mov dword ptr [rbp - 0x470], eax ; call 0x45a708
0x00000000004423a6 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045666c : mov dword ptr [rbp - 0x4d8], edx ; call 0x442888
0x0000000000456cb3 : mov dword ptr [rbp - 0x4e0], ecx ; call 0x463718
0x0000000000455038 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000485633 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x48560c
0x00000000004725f1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x00000000004727da : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459a9f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471da0 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491791 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411c32 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c31 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d531 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478675 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411d07 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a998 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a96e
0x00000000004786ae : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004746af : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412509 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000478613 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487fb5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000416575 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x416561
0x0000000000414d23 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c9f3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f79f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414d9e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416521 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413382 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463bb4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004649c8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c97 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415055 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d547 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004151ec : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e096 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004150fc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004886d9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464acc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414d26 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000466898 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435977 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435962 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435951 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000004472fd : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046b29c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004854f9 : mov dword ptr [rcx], eax ; jmp 0x4854c2
0x00000000004c7c7a : mov dword ptr [rcx], eax ; ret
0x000000000049c3ba : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x00000000004175b2 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043bb6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000043bbab : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bc2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b51b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b59d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b4dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b5e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b600 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bc93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000043b5e3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414cb3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bc75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000043bcb3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000043b5c5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046751d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470d85 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470d57 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042cb91 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414ce3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004188d0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c411 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043bbed : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b53d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043bb8b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bc0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b4fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435635 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435478 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435718 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004355c5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435408 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043ba57 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435555 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435398 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b427 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004188d3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043ba39 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435328 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b419 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043baeb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000004352b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043bb0b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435248 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043baa9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043bb2b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004351d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b469 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414cb7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479074 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043bac9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043ba8b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000047a434 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b45b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004329c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004268d5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004268de : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c3c9 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431595 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478fdf : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043191c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c88 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c08 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b88 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a69 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431c9d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431ab5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431c99 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432079 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043174f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432076 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432276 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432476 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431599 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004315d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043174c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431848 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431794 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d08 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478f64 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047906e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c576 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043ba25 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043ba77 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000043ba04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b3e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000043b425 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043baa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043b467 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bac7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043b477 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004268d3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dd69 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b488 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b498 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268db : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b416 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b458 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dd76 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c967 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043b9f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000043ba12 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000043ba64 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004354e4 : mov dword ptr [rdi], edx ; ret
0x000000000043595f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004329ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a5dd : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043594e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435973 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a603 : mov dword ptr [rdi], esi ; ret
0x00000000004301b2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000040f9d3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cc1f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b65d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043af77 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004397a7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043af59 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439799 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043b00b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000043af89 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004397b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043b02b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000043afa9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004397c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043afc9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000043b04b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000004397d9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043afe9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000043aedb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000043972b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416676 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047aa04 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046ae1f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000049a05c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041aedc : mov dword ptr [rdx], eax ; jmp 0x41acfb
0x000000000043af04 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000043af32 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000043ae84 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000004124b1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc6a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a5df : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412d10 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004396d4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047afd5 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004165e2 : mov dword ptr [rdx], eax ; ret
0x0000000000463e76 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049ed1f : mov dword ptr [rip + 0x22d85b], ebx ; jne 0x49ed11 ; pop rbx ; ret
0x000000000044f5e5 : mov dword ptr [rip + 0x27c44d], edx ; je 0x44f5f9 ; ret
0x0000000000444266 : mov dword ptr [rip + 0x285d2c], edx ; pop rbx ; ret
0x000000000040158a : mov dword ptr [rip + 0x2c8b00], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x0000000000401437 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049e0e7 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043dd79 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dd6b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e0d1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c3fb : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004740c2 : mov dword ptr [rsi], eax ; ret
0x0000000000401434 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049cb03 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b6bb : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418cf4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b6b6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047bdb0 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047bfb3 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047bf02 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x000000000040922f : mov dword ptr [rsp + 8], eax ; call 0x405c96
0x0000000000440526 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b772 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004782be : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x00000000004919c6 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f715 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000046a0a4 : mov dword ptr [rsp], 1 ; jmp 0x46a077
0x0000000000409999 : mov dword ptr [rsp], eax ; call 0x405c95
0x000000000043f4d7 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046aeb7 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043f537 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043f477 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000046ad27 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044a9e9 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44a9c3
0x000000000044226b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041b777 : mov dword ptr [rsp], ecx ; call rdx
0x00000000004091a3 : mov dword ptr [rsp], edx ; call 0x405c95
0x000000000047c9b3 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044dc37 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c9f7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a5b7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000004871d7 : mov dword ptr fs:[rax], edi ; jmp 0x4871a2
0x00000000004839d2 : mov dword ptr fs:[rax], edx ; jmp 0x48399d
0x000000000046ae6c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004854f8 : mov dword ptr fs:[rcx], eax ; jmp 0x4854c3
0x000000000047aa03 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000004124b0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc69 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004329aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431ab0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b3d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400a41 : mov eax, 0 ; leave ; ret
0x000000000043f4b9 : mov eax, 0 ; syscall
0x000000000043e5a9 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043f8e0 : mov eax, 0x101 ; syscall
0x000000000046ac93 : mov eax, 0x106 ; syscall
0x000000000046ae99 : mov eax, 0x14 ; syscall
0x000000000046ace0 : mov eax, 0x15 ; syscall
0x00000000004210f4 : mov eax, 0x16 ; je 0x421107 ; ret
0x0000000000421290 : mov eax, 0x16 ; ret
0x000000000043f360 : mov eax, 0x18 ; syscall
0x0000000000442843 : mov eax, 0x19 ; syscall
0x000000000043ffe0 : mov eax, 0x1c ; syscall
0x000000000043e5a2 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000499fe0 : mov eax, 0x26 ; syscall
0x000000000043e59b : mov eax, 0x30 ; pop rbx ; ret
0x000000000046abd0 : mov eax, 0x3f ; syscall
0x000000000043e594 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426789 : mov eax, 0x435810 ; ret
0x0000000000425e5c : mov eax, 0x43d7d0 ; cmove rax, rdx ; ret
0x00000000004b887b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043f59c : mov eax, 0x48 ; syscall
0x000000000049a1a3 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426d3a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043f763 : mov eax, 0x4f ; syscall
0x000000000043e58d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043fdc0 : mov eax, 0x61 ; syscall
0x0000000000442860 : mov eax, 0x63 ; syscall
0x000000000046abf0 : mov eax, 0x66 ; syscall
0x000000000046ac10 : mov eax, 0x68 ; syscall
0x000000000046ac00 : mov eax, 0x6b ; syscall
0x000000000046ac20 : mov eax, 0x6c ; syscall
0x0000000000417da3 : mov eax, 0x6ca800 ; ret
0x000000000046fa17 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e586 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047e9f7 : mov eax, 0x89459673 ; retf
0x0000000000411041 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046cfcf : mov eax, 0x9e ; syscall
0x000000000043ffc0 : mov eax, 0xa ; syscall
0x000000000043ffa0 : mov eax, 0xb ; syscall
0x000000000040dc17 : mov eax, 0xba ; syscall
0x00000000004423a8 : mov eax, 0xc065894c ; syscall
0x00000000004672b0 : mov eax, 0xc9 ; syscall
0x00000000004428d5 : mov eax, 0xca ; syscall
0x000000000044fa39 : mov eax, 0xe ; syscall
0x000000000043ed47 : mov eax, 0xe5 ; syscall
0x000000000040dc2e : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044f7c1 : mov eax, 0xf ; syscall
0x0000000000420116 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000400541 : mov eax, 0xffffffff ; cmovle eax, ecx ; jmp 0x40051e
0x0000000000416bd0 : mov eax, 0xffffffff ; jmp 0x416ba7
0x00000000004111df : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000451a8e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411029 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411ca1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc6c : mov eax, 0xffffffff ; ret
0x000000000047a5fd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415652 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444226 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x000000000049cc40 : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004667b1 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049e7b3 : mov eax, 3 ; je 0x49e7c8 ; ret
0x000000000046a602 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000412494 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000004667c1 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x000000000049cc30 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000004667d1 : mov eax, 4 ; ret
0x000000000043f3be : mov eax, 4 ; syscall
0x00000000004667e1 : mov eax, 5 ; ret
0x000000000043f40d : mov eax, 5 ; syscall
0x00000000004667f1 : mov eax, 6 ; ret
0x000000000046ac3e : mov eax, 6 ; syscall
0x0000000000466801 : mov eax, 7 ; ret
0x000000000049cc11 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e57f : mov eax, 8 ; pop rbx ; ret
0x000000000049e7c5 : mov eax, 8 ; ret
0x0000000000442820 : mov eax, 8 ; syscall
0x000000000043ff53 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x000000000043ff13 : mov eax, 9 ; syscall
0x0000000000463eac : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414ddc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410d53 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004152d8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487c33 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004155fc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464f14 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047eb2d : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478491 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047409a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474079 ; ret
0x000000000044f62f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455412 : mov eax, dword ptr [rax*8 + 0x4b2de0] ; jmp rax
0x0000000000455463 : mov eax, dword ptr [rax*8 + 0x4b2ee0] ; jmp rax
0x0000000000457553 : mov eax, dword ptr [rax*8 + 0x4b2fe0] ; jmp rax
0x0000000000456086 : mov eax, dword ptr [rax*8 + 0x4b32e0] ; jmp rax
0x0000000000460261 : mov eax, dword ptr [rax*8 + 0x4b3760] ; jmp rax
0x0000000000461585 : mov eax, dword ptr [rax*8 + 0x4b3860] ; jmp rax
0x0000000000461a69 : mov eax, dword ptr [rax*8 + 0x4b3960] ; jmp rax
0x00000000004602f7 : mov eax, dword ptr [rax*8 + 0x4b3c60] ; jmp rax
0x00000000004c6f5d : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x16], dl ; sti ; jmp qword ptr [rdx]
0x000000000049c356 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049a059 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x00000000004749d9 : mov eax, dword ptr [rax] ; ret
0x00000000004409bc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445427 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475ee5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471b91 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aff1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004397a4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004397b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004397c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004397d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004397e6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004293aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ac82 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043af30 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000439770 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ae81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004396d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043af01 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439751 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464d5f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004165f0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416618 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0788 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a079f ; call rax
0x0000000000464f11 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416921 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a7d8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a7f0 ; ret
0x000000000049c361 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c3e1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c421 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c481 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c471 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c431 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044dc4c : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x0000000000478421 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x478437 ; ret
0x00000000004165df : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e185 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e197 ; ret
0x000000000049e1a0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e1b7 ; ret
0x000000000049e3c0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e3d7 ; ret
0x000000000043e657 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e649 ; ret
0x0000000000429106 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000041731e : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410cd0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000464057 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410210 : mov eax, dword ptr [rdx] ; ret
0x00000000004165d1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4165d0 ; ret
0x00000000004886a0 : mov eax, dword ptr [rip + 0x244cfa] ; ret
0x00000000004740bb : mov eax, dword ptr [rip + 0x258de7] ; mov qword ptr [rsi], rax ; ret
0x000000000047405a : mov eax, dword ptr [rip + 0x258e50] ; ret
0x000000000044cb01 : mov eax, dword ptr [rip + 0x27fbf1] ; ret
0x0000000000445791 : mov eax, dword ptr [rip + 0x287c71] ; ret
0x0000000000416901 : mov eax, dword ptr [rip + 0x2b37b9] ; ret
0x000000000049cc7c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000473f4c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049ccb1 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000463f97 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c456 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c90 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044742a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447d8d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e0d7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x00000000004788ac : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x000000000047872d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e714 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004749d8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cce5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a590 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041cb75 : mov eax, eax ; pop rbx ; ret
0x0000000000432aa5 : mov eax, eax ; ret
0x00000000004779c2 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041acd1 : mov eax, eax ; syscall
0x0000000000412c7a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000452784 : mov eax, ebp ; jmp 0x452755
0x000000000046316b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004637b9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046378c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f703 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411046 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x000000000047a573 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004133ed : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474ca8 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465fe9 : mov eax, ebx ; jmp 0x465e43
0x000000000040fa69 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb4e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fe2e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411d0b : mov eax, ebx ; pop rbx ; ret
0x00000000004424a8 : mov eax, ebx ; syscall
0x000000000047a437 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b1c5 : mov eax, ecx ; jne 0x46b21d ; ret
0x000000000046d843 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d819
0x000000000041c0ee : mov eax, ecx ; ret
0x000000000046a4c8 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x000000000040386b : mov eax, ecx ; syscall
0x0000000000416931 : mov eax, edi ; ret
0x000000000044ee74 : mov eax, edi ; syscall
0x0000000000487f5e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b163 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041ddf8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004175b5 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004726df : mov eax, edx ; call rax
0x000000000047c98b : mov eax, edx ; jle 0x47c99d ; ret
0x0000000000462f2b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c37a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e782 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc9f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f8f0 : mov eax, edx ; pop rbx ; ret
0x0000000000426e59 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x0000000000478a37 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046a9e3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487d88 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebc4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004521e4 : mov eax, esi ; ret
0x000000000043ddfb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043eb23 : mov eax, esi ; syscall
0x0000000000414705 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004421e4 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x0000000000414704 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004421e3 : mov eax, r12d ; syscall
0x00000000004126f9 : mov eax, r13d ; syscall
0x000000000044ee73 : mov eax, r15d ; syscall
0x000000000045a58f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a4c9 : mov eax, r8d ; ret
0x00000000004779c1 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041acd0 : mov eax, r8d ; syscall
0x0000000000411813 : mov eax, r9d ; syscall
0x00000000004ba774 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000467bc7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc40a
0x0000000000483a0e : mov ebp, 0x89000019 ; retf 0x348
0x00000000004a35f5 : mov ebp, 0xbe20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004ae4e4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7d3d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465938 : mov ebp, 0xf80148c0 ; ret
0x0000000000465bbc : mov ebp, 0xf80148c6 ; ret
0x00000000004b94a6 : mov ebp, 0xfb67d10d ; ret
0x00000000004555cc : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455b51 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d09f : mov ebp, 0xfffffb60 ; call rax
0x000000000047637f : mov ebp, 0xffffff78 ; call rax
0x000000000040158d : mov ebp, dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049c6fa : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004205af : mov ebp, eax ; call 0x41c844
0x0000000000440017 : mov ebp, eax ; call rax
0x0000000000473c66 : mov ebp, eax ; jmp 0x473c37
0x000000000041f8f2 : mov ebp, ebp ; call 0x42c354
0x00000000004409b9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000478a3d : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d637 : mov ebp, edi ; mov r15, rax ; jmp 0x47d653
0x0000000000440dbf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000486f56 : mov ebp, esi ; jmp 0x486f27
0x00000000004ba4c4 : mov ebx, 0x1b5c347e ; jmp 0x4ba49c
0x00000000004a35cc : mov ebx, 0x3bfff8c1 ; ret 0xfff8
0x0000000000434ec7 : mov ebx, 0x46f00ff2 ; retf
0x000000000047f49b : mov ebx, 0x4bcc00 ; jmp 0x47f472
0x00000000004a35d4 : mov ebx, 0x4bfff8c2 ; ret
0x0000000000431ed4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000431ef2 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000004021ed : mov ebx, 0x80 ; call rax
0x00000000004200b5 : mov ebx, 0xa0002aa6 ; retf
0x0000000000442934 : mov ebx, 0xafb8341 ; je 0x442943 ; ret
0x000000000047ec99 : mov ebx, 0xbe000000 ; pop rbp ; retf 0x4b
0x00000000004b7d3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000445d66 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445d49 ; jmp 0x445d3b
0x00000000004baae4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000440dc6 : mov ebx, eax ; call rax
0x0000000000448261 : mov ebx, eax ; jmp 0x448233
0x000000000044fb2f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044f026 : mov ebx, edi ; test rax, rax ; je 0x44f036 ; call rax
0x000000000046aab3 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047c9a6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004bf2cc : mov ecx, 0x41380e0a ; ret
0x00000000004b8979 : mov ecx, 0x5b92ac50 ; retf
0x00000000004ba44e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004b7d39 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046ae30 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000403864 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x000000000043595c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fd05 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464eeb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429103 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004ba904 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4ba939 ; retf 0x32dd
0x0000000000432073 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432273 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432473 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b400 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b441 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435633 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435553 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435475 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435405 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435395 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435325 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435245 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435715 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b3e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004735ad : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478587 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478515 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000467078 : mov ecx, edi ; call rbx
0x000000000046d846 : mov ecx, edi ; mov r15, rax ; jmp 0x46d816
0x0000000000432ac1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004155f7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000444a5b : mov ecx, esi ; call rbx
0x0000000000473f33 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473f18 ; ret
0x0000000000481245 : mov edi, 0x190 ; call 0x41dd47
0x0000000000442112 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000442690 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441ccd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041af1c : mov edi, 0x4a237c ; call 0x417157
0x000000000041af03 : mov edi, 0x4a23ab ; call 0x417157
0x00000000004424a3 : mov edi, 0x4a4c9d ; mov eax, ebx ; syscall
0x00000000004424d2 : mov edi, 0x4a4ca8 ; mov eax, ebx ; syscall
0x000000000044cb40 : mov edi, 0x4a60e8 ; mov eax, ecx ; syscall
0x000000000044f475 : mov edi, 0x4a6be0 ; mov eax, ecx ; syscall
0x000000000046557d : mov edi, 0x4b28dc ; call 0x401807
0x0000000000474cc3 : mov edi, 0x4b6094 ; call 0x4017c7
0x000000000040095c : mov edi, 0x4be420 ; call rax
0x0000000000470dc6 : mov edi, 0x6cb100 ; call rax
0x0000000000470e32 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x000000000047844f : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x0000000000443f35 : mov edi, 0x6cb140 ; call rax
0x000000000047696f : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000402f65 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402c6f : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402d16 : mov edi, 0x6cc060 ; call rax
0x00000000004035bc : mov edi, 0x6cc0a0 ; call r15
0x0000000000403574 : mov edi, 0x6cc0a0 ; call rax
0x0000000000445831 : mov edi, 0x6cc6d0 ; call rax
0x000000000043e74a : mov edi, 0x6cc720 ; call rax
0x0000000000402c68 : mov edi, 0x6cc720 ; call rbx
0x000000000047abb2 : mov edi, 0x6cc9c0 ; call rax
0x000000000047acdd : mov edi, 0x6cc9c4 ; call rdx
0x00000000004420f6 : mov edi, 0x8b48fffd ; jge 0x442104 ; call rbx
0x00000000004420e8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004a351d : mov edi, 0xbd20fff8 ; clc ; call rax
0x00000000004a357d : mov edi, 0xc056fff8 ; clc ; call rsi
0x000000000049c0aa : mov edi, 1 ; call r14
0x00000000004016a7 : mov edi, 1 ; call rax
0x000000000049c99c : mov edi, 1 ; jmp rax
0x0000000000409995 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405c99
0x00000000004099bc : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405c99
0x00000000004099a6 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405c99
0x0000000000440523 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d09e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047637e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c65e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466925 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e05d : mov edi, dword ptr [rbp] ; call r14
0x000000000044017a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000440128 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044ecc8 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464ed8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464ea4
0x00000000004b9766 : mov edi, dword ptr [rdx] ; ret
0x000000000047aef8 : mov edi, dword ptr [rip + 0x251ac6] ; call rax
0x000000000047adbb : mov edi, dword ptr [rip + 0x251c03] ; jmp rax
0x00000000004400e7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000447131 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044060f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447425 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447d88 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b97a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044816e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004478a5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x00000000004485d0 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446f32 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447959 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b1ba : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004497d8 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449c18 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448b58 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448eff : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400c37 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c8b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004422b0 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000440570 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049df8a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000473888 : mov edi, eax ; call 0x400354
0x0000000000473888 : mov edi, eax ; call 0x400359
0x0000000000408672 : mov edi, eax ; call 0x41e0e8
0x000000000042129a : mov edi, eax ; call rcx
0x000000000046d849 : mov edi, eax ; jmp 0x46d813
0x000000000047d63a : mov edi, eax ; jmp 0x47d650
0x00000000004521dd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4521d1 ; mov rax, rsi ; ret
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043ecb1 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041f8ef : mov edi, eax ; mov rbp, r13 ; call 0x42c357
0x00000000004205ac : mov edi, eax ; mov rbp, rax ; call 0x41c847
0x0000000000420638 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004421de : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ed8c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441ea0 : mov edi, ebp ; call 0x41e0e4
0x00000000004517a7 : mov edi, ebp ; call 0x41e2a4
0x00000000004100dd : mov edi, ebp ; call 0x42c354
0x000000000047e416 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e29c : mov edi, ebp ; call r14
0x000000000044fb77 : mov edi, ebp ; call r15
0x000000000041ebb6 : mov edi, ebp ; call rax
0x0000000000440e10 : mov edi, ebp ; call rbx
0x000000000043f761 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000044ee71 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044ef82 : mov edi, ebp ; mov eax, r8d ; syscall
0x00000000004500f4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f517 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044ef50 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000041bf0f : mov edi, ebx ; call 0x418164
0x0000000000421309 : mov edi, ebx ; call 0x41dd44
0x000000000044cab7 : mov edi, ebx ; call r12
0x0000000000444d2d : mov edi, ebx ; call r14
0x00000000004628d9 : mov edi, ebx ; call r8
0x00000000004122c7 : mov edi, ebx ; call rax
0x00000000004458f1 : mov edi, ebx ; jmp 0x4458bb
0x000000000049ebb3 : mov edi, ebx ; jne 0x49eba5 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000414e44 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041acfa : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041acce : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000411baa : mov edi, edi ; call 0x400398
0x0000000000441dff : mov edi, edi ; call 0x41e0e4
0x00000000004106b5 : mov edi, edi ; call rax
0x0000000000440e54 : mov edi, edi ; call rbx
0x0000000000465234 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c6331 : mov edi, edx ; call rsi
0x0000000000452261 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452249 ; mov rax, rsi ; ret
0x000000000043eb21 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043eb31 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000441e0c : mov edi, esi ; call 0x41e0e4
0x000000000045c986 : mov edi, esi ; call 0x4268f9
0x000000000040fdaf : mov edi, esi ; call 0x49c7f4
0x000000000044537e : mov edi, esi ; call r15
0x0000000000440e34 : mov edi, esi ; call rbx
0x0000000000411a97 : mov edi, esi ; mov eax, r9d ; syscall
0x0000000000441eae : mov edi, esp ; call 0x41e0e4
0x000000000044fb32 : mov edi, esp ; call r15
0x0000000000440deb : mov edi, esp ; call rbx
0x0000000000403918 : mov edi, esp ; mov eax, 3 ; syscall
0x000000000043ff11 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403b3c : mov edi, esp ; mov eax, r10d ; syscall
0x0000000000411811 : mov edi, esp ; mov eax, r9d ; syscall
0x0000000000467075 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445424 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004734f9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004734f8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000411ba9 : mov edi, r15d ; call 0x400399
0x000000000042677f : mov edx, 0x42fc80 ; cmove rax, rdx ; ret
0x0000000000434e47 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004320d4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x00000000004320f2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004427b6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004bddf1 : mov edx, 0xbc90fffd ; std ; call rax
0x00000000004b8c1e : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2a9e
0x000000000049af93 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446c77 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000040fcbe : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000046bc9a : mov edx, 1 ; jmp 0x46bc72
0x0000000000444aa0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463e78 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047afd1 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004122c0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000416571 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416565
0x000000000042ac7f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047afe5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004106ae : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049dd89 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x00000000004726d8 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b422 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b413 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b463 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b473 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431ab1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431e70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431701 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043ba10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004356a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043ba61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004354e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b9f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000043b3d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e4c9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049bfe9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000417834 : mov edx, eax ; jmp 0x417851
0x0000000000421330 : mov edx, eax ; jmp 0x4212fb
0x0000000000469a36 : mov edx, eax ; jmp 0x469a3f
0x000000000046b405 : mov edx, eax ; jmp 0x46b3fa
0x000000000044226f : mov edx, eax ; mov eax, r12d ; syscall
0x00000000004500f7 : mov edx, ebp ; call r15
0x00000000004100da : mov edx, ebp ; mov rdi, r13 ; call 0x42c357
0x000000000047e411 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e3d1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fb71 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000046ea36 : mov edx, ebp ; mov rsi, r15 ; call 0x46b497
0x000000000044fb8c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473c5c : mov edx, ebp ; xor edi, edi ; call 0x43fee6
0x00000000004126f4 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416579 : mov edx, ecx ; jmp 0x41655d
0x000000000049d593 : mov edx, ecx ; jmp 0x49d56b
0x000000000046ac91 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000442841 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044ef4d : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x000000000041dcf7 : mov edx, ecx ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x00000000004586f4 : mov edx, esp ; call 0x4637d8
0x000000000046ad96 : mov edx, esp ; syscall
0x000000000046ea35 : mov edx, r13d ; mov rsi, r15 ; call 0x46b498
0x000000000046ea34 : mov edx, r13d ; mov rsi, r15 ; call 0x46b499
0x0000000000473c5b : mov edx, r13d ; xor edi, edi ; call 0x43fee7
0x000000000046afb9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441336 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000004a09b7 : mov esi, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000446bb5 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ba726 : mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000446ba7 : mov esi, 0x4a5a5a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5a40
0x00000000004ba7c3 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004b88aa : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004429b8 : mov esi, 0x80 ; syscall
0x000000000047668f : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048a3af : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a3505 : mov esi, 0xbef0fff8 ; clc ; jmp rax
0x00000000004a35f9 : mov esi, 0xbf20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004a3519 : mov esi, 0xbf82fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b7d3e : mov esi, 0xc2c1c0bf ; ret
0x000000000041495b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e484 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440e76 : mov esi, 1 ; call rbx
0x0000000000486f14 : mov esi, 1 ; jmp 0x486eeb
0x0000000000441063 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440f2f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440ea7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004412ed : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004628d3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004621e8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000440061 : mov esi, 2 ; jmp rax
0x00000000004412e1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000441054 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440f20 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440e98 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000044007b : mov esi, 3 ; jmp rax
0x000000000044185c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004418b3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441933 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441a33 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c65a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cab9 : mov esi, dword ptr [rbx] ; call r14
0x000000000049df8e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x0000000000469d29 : mov esi, dword ptr [rdi] ; add byte ptr es:[rax + 1], cl ; retf
0x000000000049cb08 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e05a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000046a608 : mov esi, dword ptr [rdx] ; syscall
0x000000000049dd85 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004329a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400c33 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444a56 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450bc1 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ebb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447954 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004497d3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e1c1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000046a607 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x00000000004126f7 : mov esi, ebp ; mov eax, r13d ; syscall
0x0000000000411a94 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ecae : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7ae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a99c : mov esi, ebp ; xor edx, edx ; jmp 0x46a96a
0x000000000047aef6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251ac6] ; call rax
0x000000000044fb8f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000041180e : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421297 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414e89 : mov esi, ecx ; jbe 0x414e2d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000403b39 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000046ea39 : mov esi, edi ; call 0x46b494
0x000000000049c99a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d09b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e299 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452e1b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043f3bc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043f40b : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046ac3c : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044ef7f : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x00000000004422ad : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049c9f1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000467072 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000004500f1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e414 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e3d4 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fb43 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420635 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fb74 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042035a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb95 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047475b : mov esi, esp ; syscall
0x0000000000426131 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426161 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426151 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004a38ac : mov esp, 0x62fff919 ; sbb ecx, edi ; call rdx
0x000000000041c0c1 : mov esp, 0xba004bcc ; ret 0x4a23
0x000000000047ecb2 : mov esp, 0xbe000000 ; pop rbp ; retf 0x4b
0x0000000000423b13 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000474fa4 : mov esp, 0xe8004b60 ; ret
0x000000000042cd5b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426141 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43e478
0x0000000000478a3a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c6fe : mov esp, ecx ; ret
0x0000000000440014 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044a9ed : mov esp, esi ; jmp 0x44a9bf
0x000000000042cc1e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a05b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435950 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463b28 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463b68 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464ac8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463b2c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464b66 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004157d9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442e65 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000464054 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047aff4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463f94 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047afe8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464de0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461b19 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41dd49
0x00000000004423a9 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045dc41 : mov qword ptr [rbp - 0x470], rax ; call 0x45a709
0x00000000004423a5 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045666b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x442889
0x0000000000455037 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000485632 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x48560d
0x00000000004725f0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x00000000004727d9 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471d9f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d530 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478674 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411d06 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000004786ad : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004746ae : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412508 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000478612 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487fb4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000416574 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416562
0x0000000000414d22 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c9f2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414d9d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411c96 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415054 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004151eb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e095 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004886d8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c3b9 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004790ee : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bc2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b59c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b57c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b5df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414cb2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470d84 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470d56 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb90 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414ce2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004188cf : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c410 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043bbec : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b53c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bc0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b55c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435477 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435407 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435397 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435327 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043baea : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000004352b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bb0a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435247 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bb2a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004351d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4aa : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a433 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479073 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414cb6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004268dd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c3c8 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431594 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478fde : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043191b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c87 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c07 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ceb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b87 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a68 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478f69 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431598 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043174b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431847 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431793 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d07 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c575 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c966 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478f38 : mov qword ptr [rdi], r9 ; ret
0x000000000043ba76 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043b466 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b476 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b487 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b497 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268da : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b457 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043ba63 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004354e3 : mov qword ptr [rdi], rdx ; ret
0x000000000043594d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a602 : mov qword ptr [rdi], rsi ; ret
0x000000000040f9d2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043b00a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004397fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043b02a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000043981a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043b04a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000043983a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043aeda : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000043972a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416675 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ae83 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004396d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047afd4 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004165e1 : mov qword ptr [rdx], rax ; ret
0x0000000000463e75 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401589 : mov qword ptr [rip + 0x2c8b00], rax ; xor eax, eax ; ret
0x0000000000401436 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049e0e6 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e0d0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x00000000004740c1 : mov qword ptr [rsi], rax ; ret
0x0000000000401433 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041b6ba : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049cb02 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047bdaf : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047bfb2 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047bf01 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b771 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040922e : mov qword ptr [rsp + 8], rax ; call 0x405c97
0x0000000000440525 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409998 : mov qword ptr [rsp], rax ; call 0x405c96
0x000000000043f4d6 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046aeb6 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043f536 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043f476 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000046ad26 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041b776 : mov qword ptr [rsp], rcx ; call rdx
0x00000000004091a2 : mov qword ptr [rsp], rdx ; call 0x405c96
0x000000000044f60d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043298c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000401435 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000442840 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434e46 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x00000000004320f1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004b8c1d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2a9f
0x0000000000434ec6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000431ef1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040071e : mov r12, rax ; call 0x43e479
0x000000000044a9ec : mov r12, rsi ; jmp 0x44a9c0
0x000000000046bf87 : mov r12b, 0xe8 ; ret 0xfd34
0x0000000000440013 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d636 : mov r13, r15 ; mov r15, rax ; jmp 0x47d654
0x00000000004409b8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000486f55 : mov r13d, esi ; jmp 0x486f28
0x000000000049c659 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c65d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d848 : mov r15, rax ; jmp 0x46d814
0x000000000047d639 : mov r15, rax ; jmp 0x47d651
0x000000000047ed7f : mov r8b, 0x13 ; retf
0x000000000047ef33 : mov r8b, 0x34 ; retf
0x000000000047f417 : mov r8b, 0xfe ; retf 0x4b
0x000000000043f9b9 : mov r8b, 2 ; add bl, ch ; retf 0x4890
0x00000000004735ac : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000444a5a : mov r9, r14 ; call rbx
0x0000000000467077 : mov r9, r15 ; call rbx
0x0000000000411ca0 : mov rax, -1 ; pop rbx ; ret
0x0000000000412d12 : mov rax, -1 ; ret
0x000000000044f7c0 : mov rax, 0xf ; syscall
0x00000000004667a0 : mov rax, 1 ; ret
0x00000000004667b0 : mov rax, 2 ; ret
0x00000000004667c0 : mov rax, 3 ; ret
0x00000000004667d0 : mov rax, 4 ; ret
0x00000000004667e0 : mov rax, 5 ; ret
0x00000000004667f0 : mov rax, 6 ; ret
0x0000000000466800 : mov rax, 7 ; ret
0x0000000000475ee4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414ddb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410d52 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004152d7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487c32 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004155fb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464f13 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047eb2c : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478490 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f62e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455411 : mov rax, qword ptr [rax*8 + 0x4b2de0] ; jmp rax
0x0000000000455462 : mov rax, qword ptr [rax*8 + 0x4b2ee0] ; jmp rax
0x0000000000457552 : mov rax, qword ptr [rax*8 + 0x4b2fe0] ; jmp rax
0x0000000000456085 : mov rax, qword ptr [rax*8 + 0x4b32e0] ; jmp rax
0x0000000000460260 : mov rax, qword ptr [rax*8 + 0x4b3760] ; jmp rax
0x0000000000461584 : mov rax, qword ptr [rax*8 + 0x4b3860] ; jmp rax
0x0000000000461a68 : mov rax, qword ptr [rax*8 + 0x4b3960] ; jmp rax
0x00000000004602f6 : mov rax, qword ptr [rax*8 + 0x4b3c60] ; jmp rax
0x000000000049c355 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000004409bb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445426 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471b90 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aff0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004396d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0787 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a07a0 ; call rax
0x0000000000464f10 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416920 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c360 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c3e0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c420 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c480 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c470 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c430 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044dc4b : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x0000000000478420 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478438 ; ret
0x00000000004165de : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004165d0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4165d1 ; ret
0x0000000000474059 : mov rax, qword ptr [rip + 0x258e50] ; ret
0x000000000044cb00 : mov rax, qword ptr [rip + 0x27fbf1] ; ret
0x0000000000445790 : mov rax, qword ptr [rip + 0x287c71] ; ret
0x0000000000416900 : mov rax, qword ptr [rip + 0x2b37b9] ; ret
0x000000000049cc7b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049ccb0 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c455 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c8f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447429 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447d8c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e0d6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x00000000004788ab : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416dd3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a49 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452783 : mov rax, r13 ; jmp 0x452756
0x000000000041cce4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041cb74 : mov rax, r8 ; pop rbx ; ret
0x0000000000432aa4 : mov rax, r8 ; ret
0x000000000046b1c4 : mov rax, r9 ; jne 0x46b21e ; ret
0x000000000046b245 : mov rax, r9 ; ret
0x0000000000412c79 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004637b8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046378b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474831 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c589 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004133ec : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474ca7 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fa68 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb4d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fe2d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411d0a : mov rax, rbx ; pop rbx ; ret
0x000000000041c0ed : mov rax, rcx ; ret
0x0000000000416930 : mov rax, rdi ; ret
0x0000000000487f5d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b162 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041ddf7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004175b4 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004726de : mov rax, rdx ; call rax
0x000000000041e781 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041799b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e5c7 : mov rax, rdx ; pop rbx ; ret
0x0000000000426e58 : mov rax, rdx ; ret
0x000000000046a9e2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487d87 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebc3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000004521e3 : mov rax, rsi ; ret
0x000000000043ddfa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c6f9 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041f8f1 : mov rbp, r13 ; call 0x42c355
0x0000000000478a3c : mov rbp, r9 ; nop ; jmp rdx
0x00000000004205ae : mov rbp, rax ; call 0x41c845
0x0000000000440016 : mov rbp, rax ; call rax
0x0000000000473c65 : mov rbp, rax ; jmp 0x473c38
0x0000000000440dc5 : mov rbx, rax ; call rax
0x0000000000448260 : mov rbx, rax ; jmp 0x448234
0x000000000044fb2e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044f025 : mov rbx, rdi ; test rax, rax ; je 0x44f037 ; call rax
0x000000000046aab2 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043b440 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478586 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478514 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d845 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d817
0x0000000000432ac0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473f32 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473f19 ; ret
0x000000000044056f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e05c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440179 : mov rdi, qword ptr [r13] ; call rbx
0x00000000004400e6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440127 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440522 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d09d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047637d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466924 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004402ae : mov rdi, qword ptr [rbp] ; call rbx
0x000000000044ecc7 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464ed7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464ea5
0x0000000000447130 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044b979 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004478a4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004485cf : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446f31 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447958 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b1b9 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004497d7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448b57 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004422af : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049df89 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000441ead : mov rdi, r12 ; call 0x41e0e5
0x000000000044fb31 : mov rdi, r12 ; call r15
0x0000000000440dea : mov rdi, r12 ; call rbx
0x0000000000403917 : mov rdi, r12 ; mov eax, 3 ; syscall
0x000000000043ff10 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403b3b : mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000411810 : mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000467074 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445423 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000441e9f : mov rdi, r13 ; call 0x41e0e5
0x00000000004517a6 : mov rdi, r13 ; call 0x41e2a5
0x00000000004100dc : mov rdi, r13 ; call 0x42c355
0x000000000040e29b : mov rdi, r13 ; call r14
0x0000000000440e0f : mov rdi, r13 ; call rbx
0x000000000044ee70 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044ef81 : mov rdi, r13 ; mov eax, r8d ; syscall
0x00000000004500f3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044ef4f : mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000441e0b : mov rdi, r14 ; call 0x41e0e5
0x000000000044537d : mov rdi, r14 ; call r15
0x0000000000440e33 : mov rdi, r14 ; call rbx
0x0000000000411a96 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000441dfe : mov rdi, r15 ; call 0x41e0e5
0x00000000004106b4 : mov rdi, r15 ; call rax
0x0000000000440e53 : mov rdi, r15 ; call rbx
0x0000000000465233 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043ecb0 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041acf9 : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041accd : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000473887 : mov rdi, rax ; call 0x400355
0x0000000000408671 : mov rdi, rax ; call 0x41e0e9
0x0000000000421299 : mov rdi, rax ; call rcx
0x000000000041f8ee : mov rdi, rax ; mov rbp, r13 ; call 0x42c358
0x00000000004205ab : mov rdi, rax ; mov rbp, rax ; call 0x41c848
0x0000000000420637 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004421dd : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ed8b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fb76 : mov rdi, rbp ; call r15
0x000000000041ebb5 : mov rdi, rbp ; call rax
0x00000000004412f2 : mov rdi, rbp ; call rbx
0x000000000043f760 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000041f516 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bf0e : mov rdi, rbx ; call 0x418165
0x0000000000421308 : mov rdi, rbx ; call 0x41dd45
0x000000000044cab6 : mov rdi, rbx ; call r12
0x0000000000444d2c : mov rdi, rbx ; call r14
0x00000000004628d8 : mov rdi, rbx ; call r8
0x00000000004122c6 : mov rdi, rbx ; call rax
0x00000000004458f0 : mov rdi, rbx ; jmp 0x4458bc
0x000000000049ebb2 : mov rdi, rbx ; jne 0x49eba6 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000414e43 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000043eb20 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043eb30 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000040fdae : mov rdi, rsi ; call 0x49c7f5
0x000000000049bfe8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049dd88 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047afd0 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047afe4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431700 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e4c8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000004586f3 : mov rdx, r12 ; call 0x4637d9
0x000000000047e410 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e3d0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044ef4c : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000417833 : mov rdx, rax ; jmp 0x417852
0x000000000042132f : mov rdx, rax ; jmp 0x4212fc
0x0000000000469a35 : mov rdx, rax ; jmp 0x469a40
0x000000000046b404 : mov rdx, rax ; jmp 0x46b3fb
0x000000000044226e : mov rdx, rax ; mov eax, r12d ; syscall
0x00000000004500f6 : mov rdx, rbp ; call r15
0x00000000004100d9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c358
0x00000000004126f3 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416578 : mov rdx, rcx ; jmp 0x41655e
0x000000000049d592 : mov rdx, rcx ; jmp 0x49d56c
0x000000000046ac90 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046ad95 : mov rdx, rsp ; syscall
0x000000000049df8d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049cb07 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e059 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049cab8 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444a55 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450bc0 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ebb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e1c0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044ef7e : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047e413 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e3d3 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fb42 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fb73 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420359 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb94 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000411a93 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041f7ad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049c9f0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000467071 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000046ea38 : mov rsi, r15 ; call 0x46b495
0x000000000040e298 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452e1a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403b38 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x00000000004126f6 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043ecad : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046a99b : mov rsi, rbp ; xor edx, edx ; jmp 0x46a96b
0x000000000047aef5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251ac6] ; call rax
0x000000000044fb8e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000041180d : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421296 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414e88 : mov rsi, rcx ; jbe 0x414e2e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049c999 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043f3bb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043f40a : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046ac3b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000047475a : mov rsi, rsp ; syscall
0x0000000000478a39 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c6fd : mov rsp, rcx ; ret
0x0000000000435975 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442c89 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004268cd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c7075 : mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x0000000000443a26 : mov word ptr [rax], gs ; add dh, dh ; ret 0x7420
0x000000000043bb6c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000043b4dc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bc74 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000043b5c4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435717 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043ba38 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000043b418 : mov word ptr [rdi + 4], dx ; ret
0x000000000043ba8a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000043b45a : mov word ptr [rdi + 8], dx ; ret
0x00000000004329c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431c9c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431ab4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431c98 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b3e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dd75 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043571b : mov word ptr [rdi], cx ; ret
0x000000000043b9f3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435783 : mov word ptr [rdi], dx ; ret
0x0000000000435972 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043af58 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000439798 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043af03 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439753 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000417206 : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1b42 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dd78 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7af0 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7ba0 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f714 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004329be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048abad : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004bde08 : movabs al, byte ptr [0x38fffdc2b0fffdc2] ; ret 0xfffd
0x00000000004c9361 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0b09 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x000000000045ed89 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x00000000004a360c : movabs al, byte ptr [0xa0fff8c220fff8c1] ; ret 0xfff8
0x00000000004a37ac : movabs al, byte ptr [0xb0fff8c7e0fff8dc] ; retf 0xfff8
0x00000000004a3614 : movabs al, byte ptr [0xc0fff8c330fff8c2] ; ret
0x000000000048efa5 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464ed3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000446561 : movabs al, byte ptr [0xfb3d8b4c00000010] ; ret
0x000000000040077b : movabs byte ptr [0x6d05c7347401e580], al ; retf
0x00000000004ba863 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004ba4c1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000443060 : movabs dword ptr [0x950f000000010028], eax ; ret 0xc985
0x00000000004b8907 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004b91ba : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000430222 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043021e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b4b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b67d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004353ef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043537f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043530f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043529f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bccd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b61d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043522f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bced : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b63d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004351bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b65d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004357df : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043576f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043568f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043561f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355af : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043553f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354cf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043545f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426849 ; ret
0x0000000000426845 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043494b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004349bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb44 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b4c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b507 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b578 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b538 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b558 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b679 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b619 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b639 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b659 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004351c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b4b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b67e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004353f0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435380 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435310 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b61e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435230 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b63e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004351c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b65e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004357e0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435770 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435700 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435690 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435620 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355b0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435540 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354d0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435460 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426848 ; ret
0x0000000000426846 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043494c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004349bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004350f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435077 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f67 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ee7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e67 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434de7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d67 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ce7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c67 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434be7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ad7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a47 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb45 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b4c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b518 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b508 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b579 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b539 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b559 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b67a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b61a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516b : movq qword ptr [rdi], mm0 ; ret
0x00000000004351c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004c28c4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; clc ; add eax, edi ; call rsp
0x00000000004b95e2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba83d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba896 ; jmp 0x4ba7d7
0x0000000000415b4a : movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000041ada8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c10c4 : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; add al, bl ; sal ebp, 1 ; call rdx
0x00000000004b84c5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047465c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417607 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004baadd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004bae75 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba731 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000478f92 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x00000000004b91c1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491983 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000049193d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004779f1 : movsx eax, dl ; neg eax ; ret
0x000000000043ff58 : movsxd r10, r10d ; syscall
0x00000000004216b1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432d86 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fd02 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000049bad9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b551 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x000000000049a029 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b552 : movsxd rax, dword ptr [rax + rbx*4] ; add rax, r8 ; jmp rax
0x000000000049a02a : movsxd rax, dword ptr [rax + rcx*4] ; add r8, rax ; jmp r8
0x0000000000442861 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b9560 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000049b1f9 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000049bada : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000045c989 : movsxd rbx, dword ptr [rdi - 0x38b70004] ; ret 0xffb0
0x00000000004ba38a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x000000000042e64d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b279 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a251 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000040eb65 : movsxd rcx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000046633c : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000432d87 : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042fd03 : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042e64e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b27a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004216b2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a252 : movsxd rcx, dword ptr [rsi + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000442455 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000442542 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x000000000041249a : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000411cb1 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000412cf7 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000043fae9 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x101 ; syscall
0x000000000043fba0 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 3 ; syscall
0x00000000004a3379 : movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000041345b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043f6c2 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044cbba : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dc34 : movsxd rdi, ecx ; syscall
0x000000000043f59a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044fa37 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044f518 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044f8b7 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044edc1 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000403965 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000403964 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044edc0 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044f517 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042fdcf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042fdd0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004133a6 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x000000000043ff59 : movsxd rdx, edx ; syscall
0x000000000043d25c : movsxd rsi, esi ; ret 0x7520
0x000000000049193e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491984 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f79c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b09c : movzx eax, al ; neg eax ; ret
0x000000000047ae46 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ad75 : movzx eax, al ; ret
0x000000000041402c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415cc6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411eed : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004151ef : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041316a : movzx eax, byte ptr [rax] ; ret
0x000000000049cfd9 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422a48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e660 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414e8d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411f00 : movzx eax, byte ptr [rdx] ; ret
0x000000000041402d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e4d7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e4ff : movzx eax, dl ; pop rbx ; ret
0x000000000043d8ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d8b9 ; ret
0x000000000043d96a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d969 ; ret
0x000000000042f504 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422a60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e663 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dbdf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dbc7 ; ret
0x000000000042e531 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422b8f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e3c3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d284 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d2e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d2d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d2b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d294 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435110 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f2b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d26b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004357f0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004262c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004262e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435090 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435780 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466921 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046ad74 : movzx rax, al ; ret
0x0000000000465a07 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000049d474 : mul dword ptr [rdx] ; add cl, ch ; ret
0x0000000000463127 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000416a7f : neg eax ; ret
0x000000000043f5d1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000410578 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041354c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043483b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bc5e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462e1b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e96c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000481246 : nop ; add dword ptr [rax], eax ; add al, ch ; int1 ; retf 0xfff9
0x0000000000405029 : nop ; add dword ptr [rax], eax ; add al, ch ; scasb al, byte ptr [rdi] ; retf
0x000000000041b27a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004681e6 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x00000000004bf115 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf12d ; ret
0x00000000004bf123 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e71f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444c1f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042612f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000004887ff : nop ; call rax
0x00000000004c8c80 : nop ; cmp bh, ch ; call rcx
0x00000000004c1aa0 : nop ; jbe 0x4c1a9c ; call qword ptr [rax]
0x00000000004a33b4 : nop ; jl 0x4a33b2 ; jmp rax
0x00000000004118c2 : nop ; jmp 0x4117cc
0x0000000000478a3f : nop ; jmp rdx
0x00000000004a3398 : nop ; jo 0x4a339a ; push qword ptr [rax] ; jb 0x4a339e ; call rax
0x00000000004009e3 : nop ; leave ; ret
0x00000000004bdde4 : nop ; mov bl, 0xfd ; call rax
0x00000000004318cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431aaf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046acdf : nop ; mov eax, 0x15 ; syscall
0x000000000043ffdf : nop ; mov eax, 0x1c ; syscall
0x000000000046abef : nop ; mov eax, 0x66 ; syscall
0x000000000043ffbf : nop ; mov eax, 0xa ; syscall
0x00000000004428d4 : nop ; mov eax, 0xca ; syscall
0x0000000000416f2f : nop ; mov eax, 0xffffffff ; ret
0x000000000041020f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046afbf : nop ; mov eax, edi ; ret
0x0000000000431e6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043ba0f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000044283f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000411c9f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415c4f : nop ; mov rax, -1 ; ret
0x0000000000417244 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044825f : nop ; mov rbx, rax ; jmp 0x448235
0x000000000044825e : nop ; mov rbx, rax ; jmp 0x448236
0x00000000004458ef : nop ; mov rdi, rbx ; jmp 0x4458bd
0x000000000041ebaf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b4af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004a3378 : nop ; movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000044edbf : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000046273f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46270e
0x000000000046273e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46270f
0x00000000004934ed : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bdda4 : nop ; push rsp ; std ; jmp rax
0x000000000043dc4f : nop ; ret
0x00000000004099fc : nop ; ret 0xffff
0x00000000004a3778 : nop ; retf
0x00000000004a37cc : nop ; sar al, cl ; jmp rax
0x00000000004a3a10 : nop ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004bddd4 : nop ; stosb byte ptr [rdi], al ; std ; call rax
0x000000000041661f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004262ef : nop ; xor eax, eax ; ret
0x00000000004261af : nop ; xor rax, rax ; ret
0x000000000047845b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e2bb : nop dword ptr [rax + rax] ; call rbx
0x000000000043b3eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047adc3 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412d1b : nop dword ptr [rax + rax] ; ret
0x00000000004134db : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046676c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042037d : nop dword ptr [rax] ; call 0x41f029
0x0000000000400b55 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e119 : nop dword ptr [rax] ; call rax
0x0000000000499fdd : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x00000000004672ad : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x0000000000416a5c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410c9d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c8e4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e4c4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e884 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e6bc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406345 : nop dword ptr [rax] ; ret
0x000000000049e61d : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004114e4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e2ba : nop word ptr [rax + rax] ; call rbx
0x0000000000412d1a : nop word ptr [rax + rax] ; ret
0x00000000004134da : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444ae1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000042a017 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046ae82 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046ae31 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041c0e9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c9fa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496dd0 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496d29 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496d49
0x000000000046adff : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452a70 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422a46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041cb72 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469a33 : or al, 0x20 ; mov rdx, rax ; jmp 0x469a42
0x000000000041b778 : or al, 0x24 ; call rdx
0x0000000000443f31 : or al, 0x24 ; je 0x443f45 ; mov edi, 0x6cb140 ; call rax
0x00000000004c1e2c : or al, 0x3a ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x0000000000462742 : or al, 0x40 ; jmp 0x46270b
0x0000000000462741 : or al, 0x40 ; jmp 0x46270c
0x0000000000400c3a : or al, 0x41 ; call rsp
0x0000000000417ed0 : or al, 0x47 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ee4 ; call rax
0x000000000044584f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478730 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c8e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004745ab : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b183 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b65f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046248a : or al, 0x7e ; ret
0x0000000000462c7a : or al, 0x7e ; retf
0x0000000000462873 : or al, 0x7e ; retf 0xffb8
0x00000000004c632c : or al, 0x7f ; add byte ptr [rax], al ; jo 0x4c62c4 ; cli ; call rsi
0x000000000045d409 : or al, 0x83 ; ret
0x0000000000458d0c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004216b3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000429104 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432d88 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fd04 : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000048a16b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046afb8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e64f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b27b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004bee2c : or al, 0xa ; add byte ptr [rax], al ; cld ; hlt ; call qword ptr [rbx]
0x00000000004c922c : or al, 0xae ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x000000000042fd08 : or al, 0xb ; jmp r9
0x000000000043b27f : or al, 0xb ; jmp rcx
0x000000000049a253 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x00000000004bdf38 : or al, 0xd8 ; std ; jmp rsp
0x0000000000435313 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426833 : or al, 0xf3 ; ret
0x0000000000462bab : or al, 0xf6 ; ret 0xf04
0x000000000045d38c : or al, 0xf6 ; ret 0xf08
0x00000000004c7bb4 : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004beee5 : or al, byte ptr [rax] ; add al, bl ; std ; hlt ; call qword ptr [rax]
0x00000000004beefd : or al, byte ptr [rax] ; add al, dl ; std ; hlt ; call qword ptr [rdx]
0x000000000044fba1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422cdd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a221 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d01 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bee2d : or al, byte ptr [rax] ; add byte ptr [rax - 4], al ; hlt ; call qword ptr [rbx]
0x000000000049c0ce : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043ffc1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004248e8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000408406 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408cec : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047d720 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489c97 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6d1b : or al, byte ptr [rcx] ; ret
0x0000000000496fd7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477679 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000409232 : or al, ch ; pop rax ; retf 0xffff
0x0000000000408ec7 : or al, ch ; ret
0x000000000040c2c8 : or al, ch ; ret 0xff99
0x00000000004654f8 : or al, ch ; ret 1
0x0000000000409148 : or al, ch ; retf
0x000000000040abc0 : or al, ch ; retf 0xffb0
0x0000000000409245 : or al, ch ; retf 0xffff
0x00000000004a3784 : or bh, 0xf8 ; call rax
0x00000000004c6c48 : or bh, ch ; cli ; jmp qword ptr [rdx]
0x0000000000442e68 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004403d2 : or bl, ch ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004354d3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044fa47 : or bl, dh ; ret
0x000000000040a475 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415056 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472571 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410727 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047414f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439728 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e566 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e972 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b562 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x00000000004409e7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004971b2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a193 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049bad7 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004397e7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004643ff : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000043faec : or byte ptr [rax + 0x101], bh ; syscall
0x000000000047b533 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000410728 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416eab : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472572 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041cb67 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000416a37 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000442695 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bfe9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479375 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000470c36 : or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000047b9ff : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041d7da : or byte ptr [rax + 0x440f4802], ch ; retf 0x8348
0x00000000004c5c32 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c251c : or byte ptr [rax + 0xb], cl ; ret
0x0000000000469656 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000475aeb : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f4c : or byte ptr [rax + 1], cl ; ret
0x000000000041b317 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043fba3 : or byte ptr [rax + 3], bh ; syscall
0x0000000000467dbc : or byte ptr [rax - 0x39], cl ; ret
0x00000000004261cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004261df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418c33 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000474058 : or byte ptr [rax - 0x75], cl ; add eax, 0x258e50 ; ret
0x0000000000440521 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000004091a1 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405c97
0x00000000004099a8 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x000000000040e03a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409253 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x000000000043972d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474150 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fe2c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b775 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439729 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f515 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000464208 : or byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x000000000041799a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047dfc7 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472ea0 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e973 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472e49 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e161 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x0000000000472e9f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000040b563 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b331 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x00000000004719d6 : or byte ptr [rax - 0x7bf0ffc2], al ; retf 0xa
0x000000000041bfe5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b07fc
0x000000000041bfe4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b07fd
0x000000000041cba8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fbc4 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440917 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c976 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c9fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000046300e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000473108 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c532 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000411028 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004107dd : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422f3c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a19c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000417844 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000417805 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422f3d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422f61 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a19d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004157dc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041dca6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049cc12 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444aa1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044f8b2 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043e580 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e7c6 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442821 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000424a68 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a476 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004897d0 : or byte ptr [rax], al ; jne 0x4897a1 ; jmp 0x4897a9
0x00000000004424a1 : or byte ptr [rax], al ; mov edi, 0x4a4c9d ; mov eax, ebx ; syscall
0x00000000004424d0 : or byte ptr [rax], al ; mov edi, 0x4a4ca8 ; mov eax, ebx ; syscall
0x000000000044f473 : or byte ptr [rax], al ; mov edi, 0x4a6be0 ; mov eax, ecx ; syscall
0x000000000044ee6e : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000042ba7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049d9b0 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478d1c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e1f9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000447e88 : or byte ptr [rbp - 0x161c8637], al ; retf
0x0000000000489ff3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047409c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000475d6d : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000041dea0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004059e3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401865 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412caa : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cb96 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462740 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46270d
0x00000000004c723b : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000457a17 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f771 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047d70f : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x00000000004429b4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470d59 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a56b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a194 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c379 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f50a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049bad8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7bb6 : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0a2f : or byte ptr [rcx + 0xb], al ; ret
0x0000000000461fcb : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048007b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000479610 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e297 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a572 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049cab3 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000411a0a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004397e8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000457368 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x0000000000464400 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489b52 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d739 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e18a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fe43 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448aa9 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041d04f : or byte ptr [rcx], al ; call 0x419af4
0x000000000045b251 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d6b6 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cedf : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x0000000000442a2e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451b90 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004179db : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb0fe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000471217 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470e31 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004782c1 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004035bb : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bfaa3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4dec : or byte ptr [rdi + 0xb], al ; jae 0x4c4e00 ; ret
0x0000000000482218 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047186f : or byte ptr [rdi], 0x84 ; retf 3
0x0000000000449e33 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d079 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004151ee : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462601 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487f99 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000415057 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049ca66 : or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004302cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dd04 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455b56 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049ca65 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004c5868 : or byte ptr [rdx], ah ; cli ; jmp rdi
0x0000000000486f13 : or byte ptr [rsi + 1], bh ; jmp 0x486eec
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004bf8a8 : or byte ptr [rsi], ch ; cmc ; call qword ptr [rax]
0x0000000000476986 : or byte ptr [rsp + 0x5b], dh ; ret
0x000000000047b2e7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cc00 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411ede : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412727 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464e9f : or cl, byte ptr [rax - 0x77] ; ret
0x0000000000411a10 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042548a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004526d7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000049d2cc : or cl, byte ptr [rbp + 0x39] ; retf 0xdb77
0x000000000048a133 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463e77 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489ff9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408108 : or cl, ch ; ret
0x0000000000462a12 : or cl, ch ; ret 0xfffc
0x0000000000407f08 : or cl, ch ; retf
0x000000000045736c : or cl, ch ; retf 0xfffe
0x0000000000488225 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004baae2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004353f3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e1a5 : or dh, bl ; ret
0x00000000004ba90a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047e2b7 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041bbc3 : or dh, dh ; ret 0x7404
0x000000000041bb3e : or dh, dh ; ret 0xf04
0x000000000040283e : or dh, dh ; ret 0xfdf
0x00000000004bc620 : or dl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x000000000040db17 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004021ea : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047637c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x000000000042391e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422e6d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b92f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041033f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000043ff54 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000043ff14 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000049373e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000497029 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497049
0x00000000004b2b17 : or dword ptr [rax], ecx ; retf
0x00000000004ba253 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000048a113 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042fa86 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412520 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478e6c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fe66 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000042004c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004016a4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x00000000004787a6 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048f71d : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000048dbe4 : or dword ptr [rdi], ecx ; xchg esp, ebx ; jmp 0x48dbf1
0x000000000048a9ac : or dword ptr [rdi], ecx ; xchg esp, esi ; jmp 0x48a9b9
0x00000000004baaae : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004749b9 : or dword ptr [rip + 0x2567b0], 1 ; pop rbx ; ret
0x000000000041d04c : or dword ptr [rsi + rax + 8], 1 ; call 0x419af7
0x00000000004970cf : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6d18 : or eax, 0x10a0303 ; ret
0x00000000004c6dc8 : or eax, 0x1370303 ; ret
0x000000000043bcd1 : or eax, 0x1c478d48 ; ret
0x0000000000415992 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6d08 : or eax, 0x34b0303 ; ret
0x00000000004c6d68 : or eax, 0x35b0303 ; ret
0x0000000000461ffa : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462702 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042cf52 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000048a187 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429e77 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429ee1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a0f9d : or eax, 0x834825eb ; ret 0x4810
0x00000000004245e8 : or eax, 0x894d0000 ; retf
0x00000000004b8901 : or eax, 0xcad7947e ; jmp 0x4b88ad
0x00000000004ae239 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ae245 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004baa93 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba733 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440e4e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004352a3 : or eax, 0xf7f0ff3 ; ret
0x000000000044444c : or eax, 0xffffffff ; ret
0x00000000004c7bb7 : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045e02f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422c0d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a081 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ffa1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000424768 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d4f4 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7bb8 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c429b : or eax, dword ptr [rdx] ; retf
0x00000000004c723d : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000004c9081 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e02e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044286e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f36e : or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000416614 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c9437 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435463 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a7de : or ebx, esi ; ret
0x000000000041d53a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418d84 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fb4c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040fcf7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000447c45 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a14f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4db6 : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c964 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c6df1 : or edi, ebx ; jmp rsi
0x00000000004c4dee : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf120 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435383 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412521 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004c80f9 : or esp, edi ; call qword ptr [rax]
0x00000000004c8111 : or esp, edi ; call qword ptr [rdx]
0x000000000041d04b : or qword ptr [rsi + rax + 8], 1 ; call 0x419af8
0x00000000004354d2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435462 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4ded : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435382 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c9080 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x00000000004c723c : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042c963 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cbff : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462a11 : or r9b, r13b ; ret 0xfffc
0x00000000004c4db5 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6dc7 : or rax, 0x1370303 ; ret
0x00000000004c6d07 : or rax, 0x34b0303 ; ret
0x00000000004c6d67 : or rax, 0x35b0303 ; ret
0x0000000000461ff9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462701 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044444b : or rax, 0xffffffffffffffff ; ret
0x0000000000496eb2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c429a : or rax, qword ptr [rdx] ; retf
0x000000000044fb33 : out 0x41, eax ; call rdi
0x0000000000411812 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403b3d : out 0x44, eax ; mov eax, edx ; syscall
0x0000000000475a99 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fb44 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420636 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fb75 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445425 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000467076 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fb96 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415ce3 : out 0x5b, al ; ret
0x00000000004734fa : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042035b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004ba320 : out 0x78, al ; jnp 0x4ba382 ; retf
0x000000000047e415 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e3d5 : out 0x89, al ; out dx, eax ; call rax
0x00000000004032cb : out 0x89, eax ; ret 0x8948
0x00000000004740bd : out 0x8d, eax ; and eax, 0x6894800 ; ret
0x00000000004b88b1 : out 0xb3, al ; retf 0xe80
0x0000000000403919 : out 0xb8, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043ff12 : out 0xb8, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004420f5 : out 0xbf, eax ; std ; dec dword ptr [rax - 0x75] ; jge 0x442105 ; call rbx
0x00000000004b95e0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000049e498 : out 0xe8, eax ; ret 0xffe7
0x000000000040640f : out 0xe8, eax ; retf
0x0000000000434c6a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434cea : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bb308 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004a367d : out 0xf8, al ; call qword ptr [rax]
0x00000000004a369d : out 0xf8, al ; push rax ; out 0xf8, eax ; call rax
0x00000000004a36a1 : out 0xf8, eax ; call rax
0x00000000004a3701 : out 0xf8, eax ; jmp qword ptr [rax]
0x00000000004a3721 : out 0xf8, eax ; jmp rax
0x000000000049e7c1 : out 2, al ; jne 0x49e7d4 ; mov eax, 8 ; ret
0x0000000000401756 : out 3, eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c7d9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041d53d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004009a9 : out dx, al ; call rax
0x00000000004a364d : out dx, al ; clc ; call rax
0x00000000004ba737 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041de7e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004126f8 : out dx, al ; mov eax, r13d ; syscall
0x000000000043191a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c354 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000043ff0f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000411a95 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ecaf : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7af : out dx, al ; mov rdi, rbx ; call rax
0x000000000043507a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b7de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004baa92 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba31f : out dx, al ; out 0x78, al ; jnp 0x4ba383 ; retf
0x000000000047f01b : out dx, al ; retf 0x4b
0x000000000046a99d : out dx, al ; xor edx, edx ; jmp 0x46a969
0x000000000041b8c3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e695 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418d87 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ed8d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441ea1 : out dx, eax ; call 0x41e0e3
0x00000000004517a8 : out dx, eax ; call 0x41e2a3
0x00000000004100de : out dx, eax ; call 0x42c353
0x000000000047e417 : out dx, eax ; call qword ptr [rbx]
0x000000000040e29d : out dx, eax ; call r14
0x000000000044fb78 : out dx, eax ; call r15
0x000000000041ebb7 : out dx, eax ; call rax
0x0000000000440e11 : out dx, eax ; call rbx
0x00000000004c6c49 : out dx, eax ; cli ; jmp qword ptr [rdx]
0x00000000004bb385 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000043f762 : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000044ee72 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044ef83 : out dx, eax ; mov eax, r8d ; syscall
0x000000000043174a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431846 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431792 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004500f5 : out dx, eax ; mov rdx, rbp ; call r15
0x00000000004350fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b8dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f518 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415c8e : out dx, eax ; pop rbx ; ret
0x000000000042ead3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaab
0x000000000042eb51 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb29
0x000000000042efe3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbb
0x000000000042f061 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f039
0x000000000042e6d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426ffd : out dx, eax ; ret
0x000000000043da03 : out dx, eax ; ret 0xf66
0x000000000040999d : out dx, eax ; ret 0xffff
0x000000000047fe4d : out dx, eax ; retf
0x000000000043d9e6 : out dx, eax ; retf 0x4466
0x00000000004baa5b : out dx, eax ; retf 0xab0d
0x000000000042165a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042fbec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044ef51 : out dx, eax ; xor eax, eax ; syscall
0x00000000004297ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043be2e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004baee3 : outsb dx, byte ptr [rsi] ; ja 0x4bae6c ; ret 0x48f
0x0000000000409a1e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b9912 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b8c24 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004ba258 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bdd11 : outsb dx, byte ptr [rsi] ; std ; jmp rax
0x0000000000426c9a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000421808 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000431ed2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004320d2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042f9ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042fa8d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042f5b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042f632 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000465a0a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f9f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b95e6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000432087 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042fa92 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465a5a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000431f52 : outsd dx, dword ptr [rsi] ; retf
0x0000000000429199 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000432152 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042efda : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042eaca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000044206d : outsd dx, dword ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b95e5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041aedf : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422b02 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000466764 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046674f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422b01 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004ba9e5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ba9e6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004239af : pmovmskb edx, mm4 ; test edx, edx ; je 0x4239c3 ; bsf eax, edx ; ret
0x00000000004c73bd : pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x00000000004428e5 : pop r10 ; ret
0x00000000004bae6f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e88a : pop r12 ; jmp rax
0x000000000042063c : pop r12 ; jmp rcx
0x000000000044005f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440079 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004734fd : pop r12 ; pop r13 ; jmp rax
0x000000000048ef4c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eeca : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044182b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402133 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040150f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401632 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f5b5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004059e6 : pop r12 ; pop r13 ; ret
0x000000000047b58c : pop r12 ; pop r14 ; ret
0x000000000046b361 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x00000000004734ff : pop r13 ; jmp rax
0x000000000048ef4e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eecc : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044182d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402135 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401511 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401634 : pop r13 ; pop r14 ; ret
0x000000000040f5b7 : pop r13 ; pop rbp ; ret
0x00000000004059e8 : pop r13 ; ret
0x000000000048ef50 : pop r14 ; fmul st(0) ; ret
0x000000000048eece : pop r14 ; fmulp st(1) ; ret
0x000000000044182f : pop r14 ; pop r15 ; jmp rax
0x0000000000402137 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401513 : pop r14 ; pop r15 ; ret
0x0000000000401636 : pop r14 ; ret
0x0000000000441831 : pop r15 ; jmp rax
0x0000000000402139 : pop r15 ; pop rbp ; ret
0x0000000000401515 : pop r15 ; ret
0x00000000004188d1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000473456 : pop rax ; add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c43b5
0x000000000042678b : pop rax ; add r11b, sil ; ret
0x00000000004c6a08 : pop rax ; fdiv st(2), st(0) ; call rsi
0x00000000004c3628 : pop rax ; js 0x4c3626 ; call qword ptr [rcx]
0x00000000004c3d28 : pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004188d2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000478616 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000409a34 : pop rax ; ret 0xffff
0x00000000004badc3 : pop rax ; retf
0x000000000041dd18 : pop rax ; retf 0x2a
0x000000000048825f : pop rax ; retf 0x6c
0x0000000000409234 : pop rax ; retf 0xffff
0x00000000004c4135 : pop rbp ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rdx]
0x000000000047930a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000004ba865 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000041dea2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000418cf2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x00000000004b91c0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041e889 : pop rbp ; pop r12 ; jmp rax
0x000000000042063b : pop rbp ; pop r12 ; jmp rcx
0x000000000044005e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440078 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004734fc : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048ef4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eec9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044182a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040150e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401631 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059e5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b58b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048ef4f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048eecd : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044182e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402136 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401512 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; pop r14 ; ret
0x000000000040f5b8 : pop rbp ; pop rbp ; ret
0x000000000047a578 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x000000000047ec85 : pop rbp ; retf 0x4b
0x0000000000479312 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004bddb5 : pop rbp ; std ; jmp qword ptr [rax]
0x0000000000444269 : pop rbp ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000412cac : pop rbp ; sub rax, rdx ; ret
0x00000000004479ee : pop rbx ; add al, bpl ; retf 0xfb9d
0x00000000004c7ba6 : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b81b8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e52c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e55f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b81b6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000049ed21 : pop rbx ; fsub dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000487c3a : pop rbx ; jmp rax
0x00000000004111de : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000004749d7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e5c3 : pop rbx ; mov eax, eax ; ret
0x0000000000462f2a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a58e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000047696e : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000414e46 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004637b7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420358 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f5b4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b360 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dea1 : pop rbx ; pop rbp ; jmp rax
0x000000000041e888 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042063a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044005d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440077 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004734fb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401630 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059e4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b58a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412cab : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d55 : pop rbx ; ret
0x00000000004bb4a0 : pop rbx ; ret 0x6f9
0x00000000004205e1 : pop rbx ; ret 0xffff
0x00000000004b897d : pop rbx ; retf
0x00000000004bde80 : pop rbx ; retf 0xfffd
0x00000000004bddb1 : pop rbx ; std ; call rax
0x0000000000416a08 : pop rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000466bc9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000044092a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047adb8 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251c03] ; jmp rax
0x00000000004c3ded : pop rcx ; add byte ptr [rax], al ; jo 0x4c3db0 ; clc ; call qword ptr [rcx]
0x00000000004c3e05 : pop rcx ; add byte ptr [rax], al ; js 0x4c3dc8 ; clc ; call qword ptr [rcx]
0x00000000004c3d25 : pop rcx ; add byte ptr [rax], al ; pop rax ; mov bl, 0xf8 ; call qword ptr [rdi]
0x0000000000491c24 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000474799 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x000000000041f317 : pop rcx ; mov ah, 0x2a ; add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x0000000000488e8f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004302c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042bf6d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431ce9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431af9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba75e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441832 : pop rdi ; jmp rax
0x00000000004b9721 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e33e : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431919 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431749 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431845 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431791 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040213a : pop rdi ; pop rbp ; ret
0x0000000000401516 : pop rdi ; ret
0x0000000000446baa : pop rdx ; add byte ptr [rax - 0x7f], cl ; ret 0x5a40
0x00000000004a3429 : pop rdx ; clc ; jmp qword ptr [rax]
0x00000000004ba341 : pop rdx ; je 0x4ba30b ; ret 0xacfc
0x00000000004ba453 : pop rdx ; leave ; retf
0x00000000004bb307 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004428e4 : pop rdx ; pop r10 ; ret
0x0000000000478617 : pop rdx ; pop rbx ; ret
0x0000000000446ba9 : pop rdx ; pop rdx ; add byte ptr [rax - 0x7f], cl ; ret 0x5a40
0x0000000000442909 : pop rdx ; pop rsi ; ret
0x00000000004428e6 : pop rdx ; ret
0x0000000000414202 : pop rdx ; retf
0x00000000004bae70 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042ead4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaaa
0x000000000042eb52 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb28
0x000000000042efe4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efba
0x000000000042f062 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f038
0x000000000042be6e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004739d3 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004261ec : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048ef51 : pop rsi ; fmul st(0) ; ret
0x000000000048eecf : pop rsi ; fmulp st(1) ; ret
0x000000000042c975 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441830 : pop rsi ; pop r15 ; jmp rax
0x0000000000402138 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401514 : pop rsi ; pop r15 ; ret
0x0000000000401637 : pop rsi ; ret
0x0000000000429a00 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004489f6 : pop rsp ; add al, bpl ; ret 0xfb8d
0x00000000004c4105 : pop rsp ; add byte ptr [rax], al ; mov bl, bl ; clc ; call qword ptr [rbx]
0x000000000042a700 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047bfb4 : pop rsp ; and al, 0x78 ; call r12
0x000000000041e88b : pop rsp ; jmp rax
0x000000000042063d : pop rsp ; jmp rcx
0x0000000000440060 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000044007a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422f60 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004734fe : pop rsp ; pop r13 ; jmp rax
0x000000000048ef4d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048eecb : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044182c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402134 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401510 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401633 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f5b6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004059e7 : pop rsp ; pop r13 ; ret
0x000000000047b58d : pop rsp ; pop r14 ; ret
0x000000000046b362 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x0000000000445e18 : pop rsp ; retf
0x000000000047a459 : pop rsp ; retf 0x4df0
0x00000000004ba4c7 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004c8125 : popfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c813d : popfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004a34b1 : popfq ; clc ; inc eax ; sahf ; clc ; jmp rax
0x00000000004ba44c : popfq ; jrcxz 0x4ba411 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000049b8f9 : popfq ; ret 0xf45
0x00000000004bb202 : popfq ; retf 0xde4f
0x00000000004944b0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f939 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004351c2 : psllq mm1, qword ptr [r15] ; jg 0x4351dd ; ret
0x00000000004351c3 : psllq mm1, qword ptr [rdi] ; jg 0x4351dc ; ret
0x000000000043b4f6 : psllq mm1, qword ptr [rdi] ; jg 0x43b50a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b4f5 : psllq mm1, qword ptr [rdi] ; jg 0x43b50b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b557 : psllq mm1, qword ptr [rdi] ; jg 0x43b56c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004c5449 : psubd mm7, mm7 ; retf
0x000000000049e0e2 : push -0x14 ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004b9224 : push -0x30 ; retf 0xe72e
0x00000000004bde28 : push -0x3f00023e ; ret 0xfffd
0x00000000004b88ae : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004baa55 : push -0x57d3205 ; call 0xffffffffab597555
0x00000000004b8a61 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000452bdf : push -0x76000005 ; ret 0x8941
0x000000000047be6e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000487a46 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000048109f : push -0x7c000006 ; ret 0x8908
0x0000000000485bba : push -0x9000007 ; ret 0xf02
0x000000000043be14 : push -0x9ffffff ; ret 0x7501
0x00000000004bdd09 : push -3 ; jmp qword ptr [rax]
0x00000000004ba255 : push 0x1b6e41b5 ; std ; retf
0x00000000004768b2 : push 0x25 ; add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000049c248 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f7ac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004b6f09 : push 0x4b ; add byte ptr [rax], al ; ret 0x4b68
0x00000000004bdd05 : push 0x6a50fffd ; std ; jmp qword ptr [rax]
0x00000000004baee2 : push 0x6e ; ja 0x4bae6d ; ret 0x48f
0x0000000000415a56 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004ba7c2 : push 0xfd4cbe ; retf 0xf64
0x0000000000485a4c : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a4d1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004bddfb : push qword ptr [rax + 0x38fffd9d] ; ret 0xfffd
0x00000000004bde0b : push qword ptr [rax + 0x38fffdc2] ; ret 0xfffd
0x00000000004a3a17 : push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3383 : push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004a33a3 : push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x00000000004a3ba3 : push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3dcb : push qword ptr [rax - 0x3f000684] ; jl 0x4a3dd4 ; call rax
0x00000000004a3d37 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3d40 ; call rax
0x00000000004a33f3 : push qword ptr [rax - 0x3f0007c1] ; clc ; call rax
0x00000000004a33cb : push qword ptr [rax - 0x7c] ; clc ; inc eax ; test eax, edi ; call qword ptr [rax]
0x00000000004a3a67 : push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a337b : push qword ptr [rax] ; clc ; call rax
0x00000000004a3293 : push qword ptr [rax] ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a32e7 : push qword ptr [rax] ; div bh ; call qword ptr [rax]
0x00000000004a3697 : push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a371b : push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004a339b : push qword ptr [rax] ; jb 0x4a339b ; call rax
0x00000000004a3733 : push qword ptr [rax] ; loope 0x4a3737 ; inc dword ptr [rax] ; jrcxz 0x4a373b ; jmp rax
0x00000000004a36cf : push qword ptr [rax] ; loopne 0x4a36d3 ; push rax ; loope 0x4a36d7 ; call rax
0x00000000004a367b : push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a3617 : push qword ptr [rax] ; ret
0x00000000004a3323 : push qword ptr [rax] ; sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x000000000043d798 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410d3b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000041563d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464a55 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004649fd : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415ce1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442ab2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415c89 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466d1a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a354f : push qword ptr [rcx - 0x3e] ; clc ; push rcx ; ret 0xfff8
0x0000000000411211 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004748c9 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a4d2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dc3d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f5a8 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f64c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f3ca : push qword ptr [rdi + 3] ; ret
0x000000000043f419 : push qword ptr [rdi + 4] ; ret
0x000000000046ac9f : push qword ptr [rdi + 6] ; ret
0x000000000044fa45 : push qword ptr [rdi + 8] ; ret
0x000000000046a8bc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415166 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3973 : push qword ptr [rdi + rbx + 0x1f44fff9] ; stc ; call rsp
0x000000000049f661 : push qword ptr [rdx + rcx - 0x42] ; loopne 0x49f650 ; add r8b, bpl ; ret 0xfa25
0x00000000004a382f : push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x000000000046ab6d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x0000000000414d9f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b890c : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a3a48 : push rax ; adc al, 0xf9 ; call rax
0x00000000004a3a58 : push rax ; adc bh, cl ; call rax
0x000000000046420b : push rax ; adc byte ptr [rax - 0x77], cl ; adc al, ch ; retf
0x0000000000463b2a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416621 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b280 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004a3c37 : push rax ; adc eax, 0x1560fff9 ; stc ; jmp rax
0x00000000004a3a50 : push rax ; adc edi, ecx ; call rax
0x00000000004183f4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000493e2d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000414da0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f370 : push rax ; add byte ptr [rax], al ; ret
0x000000000041a6bf : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425e05 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045d36b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000444ae8 : push rax ; call rbx
0x00000000004a3403 : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004c05a0 : push rax ; cmc ; jmp qword ptr [rax]
0x000000000045df25 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004bde73 : push rax ; enter -3, 0x60 ; leave ; std ; call rdx
0x00000000004a3678 : push rax ; in al, 0xf8 ; push qword ptr [rax] ; out 0xf8, al ; call qword ptr [rax]
0x00000000004a376c : push rax ; in al, dx ; clc ; inc dword ptr [rax] ; xabort -1 ; retf 0xfff8
0x00000000004a3d47 : push rax ; jbe 0x4a3d4c ; inc dword ptr [rax] ; ja 0x4a3d50 ; call qword ptr [rax]
0x00000000004a3dfb : push rax ; jge 0x4a3dfc ; call qword ptr [rax]
0x00000000004a3dd7 : push rax ; jl 0x4a3dd8 ; call qword ptr [rax]
0x00000000004a3e1b : push rax ; jle 0x4a3e1c ; call qword ptr [rax]
0x00000000004c6190 : push rax ; jle 0x4c6190 ; call rax
0x000000000047851c : push rax ; jmp qword ptr [rax]
0x000000000049cca3 : push rax ; jne 0x49cc9c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cd03 : push rax ; jne 0x49ccfc ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a3718 : push rax ; jrcxz 0x4a371a ; push qword ptr [rax] ; in eax, 0xf8 ; call qword ptr [rax]
0x00000000004bddc0 : push rax ; lahf ; std ; call qword ptr [rax - 0x2f00025f]
0x00000000004b897a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a3694 : push rax ; loop 0x4a3696 ; push qword ptr [rax] ; in al, 0xf8 ; call qword ptr [rax]
0x00000000004a36d3 : push rax ; loope 0x4a36d3 ; call rax
0x00000000004bdde0 : push rax ; mov cl, 0xfd ; call qword ptr [rax - 0x2f00024d]
0x0000000000446bba : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a35f4 : push rax ; mov ebp, 0xbe20fff8 ; clc ; jmp qword ptr [rax]
0x00000000004bddf0 : push rax ; mov edx, 0xbc90fffd ; std ; call rax
0x0000000000416573 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416563
0x00000000004880b6 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b978 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418c32 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000457367 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x000000000041bbc2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041bb3d : push rax ; or dh, dh ; ret 0xf04
0x0000000000422e6c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a369f : push rax ; out 0xf8, eax ; call rax
0x00000000004a3700 : push rax ; out 0xf8, eax ; jmp qword ptr [rax]
0x000000000046692e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bdd08 : push rax ; push -3 ; jmp qword ptr [rax]
0x00000000004c9230 : push rax ; push rax ; std ; jmp qword ptr [rbx]
0x0000000000446bbc : push rax ; push rsp ; ret
0x00000000004c1e30 : push rax ; ret 0xfff7
0x000000000041cf9c : push rax ; retf
0x000000000041dcfb : push rax ; retf 0x41
0x0000000000488234 : push rax ; retf 0x6c
0x000000000046ea3c : push rax ; retf 0xffff
0x0000000000457b4b : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004a3828 : push rax ; sbb bh, cl ; jmp rax
0x0000000000410502 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x0000000000416616 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464aca : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c9231 : push rax ; std ; jmp qword ptr [rbx]
0x00000000004bddd0 : push rax ; test al, 0xfd ; call qword ptr [rax - 0x2f000256]
0x0000000000415cdd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b890d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049ed97 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000479a6f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004c3a15 : push rbp ; add byte ptr [rax], al ; test al, 0x9a ; clc ; call qword ptr [rdx]
0x0000000000440771 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000474808 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004c00d1 : push rbp ; cmc ; call qword ptr [rcx]
0x000000000046bf83 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x00000000004955f8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045736b : push rbp ; or cl, ch ; retf 0xfffe
0x000000000046aab0 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004c6596 : push rbp ; ret
0x0000000000465231 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042612a : push rbp ; xor rax, rax ; ret
0x0000000000400b59 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047ae44 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d9c6 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423849 : push rbx ; add qword ptr [rax], rax ; ret
0x00000000004baaf9 : push rbx ; call 0x4c15d4b6
0x000000000041654d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044d4f2 : push rbx ; je 0x44d509 ; cmp esi, 3 ; je 0x44d509 ; pop rbx ; ret
0x00000000004649c9 : push rbx ; je 0x464a2d ; pop rbp ; pop r12 ; ret
0x0000000000464a6e : push rbx ; je 0x464ad2 ; pop rbp ; pop r12 ; ret
0x000000000046aab1 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000462baa : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416eaa : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004151ed : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000416572 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416564
0x000000000040d789 : push rbx ; ret
0x0000000000416551 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000416576 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000414144 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004122c1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba33c : push rbx ; xchg eax, edx ; jae 0x4ba31b ; push rsi ; pop rdx ; je 0x4ba310 ; ret 0xacfc
0x00000000004436d9 : push rcx ; add byte ptr [rax + 0xf], cl ; ret
0x000000000047b45f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fc71
0x00000000004b95c5 : push rcx ; call qword ptr [rsi]
0x0000000000435add : push rcx ; jl 0x435b2e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c44 : push rcx ; jl 0x435c95 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049d9af : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a3553 : push rcx ; ret 0xfff8
0x00000000004a095b : push rcx ; retf
0x0000000000489ff5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043ba3a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435329 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475a65 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043baec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b4fd : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004315d8 : push rdi ; clc ; ret
0x0000000000431750 : push rdi ; cld ; ret
0x0000000000432277 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434c09 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b89 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004349da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414ce4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434a6a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d408 : push rdi ; or al, 0x83 ; ret
0x000000000045d38b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a56a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048007a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a571 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bcd0 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000487a45 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042f9ee : push rdi ; ret
0x0000000000401085 : push rdi ; ret 0
0x000000000042fa8e : push rdi ; ret 0xff3
0x000000000042f5b3 : push rdi ; retf
0x000000000041f8f5 : push rdi ; retf 0
0x000000000042f633 : push rdi ; retf 0xcab2
0x0000000000432477 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c9a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432077 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c6ba : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x00000000004106af : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465a0b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004436f9 : push rdx ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c3625 : push rdx ; add byte ptr [rax], al ; pop rax ; js 0x4c3629 ; call qword ptr [rcx]
0x000000000046affa : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c5f41 : push rdx ; cli ; jmp rsp
0x00000000004c5c35 : push rdx ; ret
0x0000000000456cba : push rdx ; retf 0
0x00000000004a38d4 : push rdx ; sbb al, 0xf9 ; jmp rdx
0x0000000000446bb6 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004bdda1 : push rdx ; std ; call qword ptr [rax - 0x1f0002ac]
0x000000000042e6d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043dfd9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43e030 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463f92 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000467d76 : push rsi ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004355c1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435631 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b485 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435551 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b423 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e6e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004749a2 : push rsi ; and eax, 0x89485300 ; ret
0x0000000000431702 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431e71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431aa5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431c85 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431e65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004318c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004baee0 : push rsi ; cli ; push 0x6e ; ja 0x4bae6f ; ret 0x48f
0x000000000043d2d6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d2c6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d296 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a357c : push rsi ; mov edi, 0xc056fff8 ; clc ; call rsi
0x000000000042c9fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba340 : push rsi ; pop rdx ; je 0x4ba30c ; ret 0xacfc
0x000000000041ed92 : push rsi ; ret
0x0000000000485bbd : push rsi ; ret 0xf02
0x000000000045eea8 : push rsi ; ret 0xf10
0x00000000004a3590 : push rsi ; ret 0xfff8
0x000000000043d2a6 : push rsi ; sub eax, edx ; ret
0x00000000004b8908 : push rsi ; xchg eax, ebp ; jge 0x4b88ed ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042e6fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b6bc : push rsp ; and al, 0x10 ; call rax
0x0000000000464f83 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466b8e : push rsp ; and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x00000000004478a1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446f2e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004671f1 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b976 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e4ca : push rsp ; and al, 0x68 ; call rax
0x000000000041f7aa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004485cc : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b1b6 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491980 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000049193a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041afc5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004c7074 : push rsp ; mov word ptr [rax], es ; add byte ptr [rax - 0x67], cl ; std ; call rcx
0x00000000004952f9 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000041be4a : push rsp ; ret
0x0000000000441e88 : push rsp ; ret 0xfffd
0x0000000000478de2 : push rsp ; retf 0x45f8
0x000000000047a3f0 : push rsp ; retf 0x48f8
0x000000000047081f : push rsp ; retf 0xeb08
0x00000000004a399c : push rsp ; sbb edi, ecx ; jmp rsp
0x00000000004bdda5 : push rsp ; std ; jmp rax
0x00000000004bab0a : push rsp ; syscall
0x00000000004296c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c80f5 : pushfq ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c810d : pushfq ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x00000000004470b0 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041427c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a3c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c73bc : pushfq ; pop qword ptr [rax] ; add al, dl ; sub bh, bl ; call rsp
0x0000000000468653 : pushfq ; ret 0xb60f
0x000000000049b8c0 : pushfq ; ret 0xf45
0x00000000004a3794 : rcl ah, 0xf8 ; call qword ptr [rax]
0x00000000004a3788 : rcl al, 1 ; clc ; jmp qword ptr [rax]
0x0000000000425e5d : rcl bh, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004a37dc : rcl bh, 1 ; clc ; jmp qword ptr [rax]
0x0000000000492bad : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bac51 : rcl byte ptr [rdi], cl ; retf
0x00000000004a3a3c : rcl byte ptr [rip + 0x1550fff9], 1 ; stc ; call rax
0x00000000004ba77a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004ba33f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba30d ; ret 0xacfc
0x00000000004ba779 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004ba33b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba311 ; ret 0xacfc
0x00000000004420cc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a37e8 : rcr bl, 0xf8 ; call qword ptr [rax]
0x000000000049869d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5690 : rcr byte ptr [rax], 1 ; cli ; jmp qword ptr [rax]
0x000000000046317a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000044092c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462f2c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a577 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004bddb4 : rcr byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x0000000000442a30 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004176ff : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041ecce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b589 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec5e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c597 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c37b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e783 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040fca0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004924bd : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba75d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478a79 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004baab1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000440209 : rcr esi, cl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000432ac6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae640 : ret 0x10
0x000000000044f6bb : ret 0x100
0x0000000000462b5f : ret 0x107
0x00000000004763a6 : ret 0x10eb
0x000000000041be72 : ret 0x110
0x000000000047a54c : ret 0x114d
0x0000000000447368 : ret 0x1189
0x00000000004460fb : ret 0x11e9
0x000000000048367a : ret 0x12
0x000000000047480c : ret 0x1272
0x000000000049d763 : ret 0x1374
0x000000000046dcbf : ret 0x1376
0x000000000046ae41 : ret 0x1477
0x000000000041b561 : ret 0x148
0x0000000000415cf2 : ret 0x149
0x0000000000419e73 : ret 0x14c
0x0000000000435e9c : ret 0x14d
0x000000000040781a : ret 0x168
0x000000000040761a : ret 0x16a
0x0000000000423b7a : ret 0x17
0x000000000040681a : ret 0x178
0x0000000000435dd9 : ret 0x180f
0x000000000044f156 : ret 0x1874
0x0000000000426195 : ret 0x1876
0x0000000000417835 : ret 0x18eb
0x00000000004681e5 : ret 0x190
0x0000000000488c02 : ret 0x1a75
0x00000000004bacba : ret 0x1ad4
0x00000000004b944d : ret 0x1b49
0x000000000041dcaf : ret 0x1be
0x00000000004b0310 : ret 0x1d4
0x00000000004b0aa8 : ret 0x1d5
0x0000000000400d05 : ret 0x1d89
0x0000000000447cb3 : ret 0x1e76
0x0000000000449847 : ret 0x1f0f
0x000000000041e90e : ret 0x1f76
0x000000000044f5d7 : ret 0x200
0x0000000000446eac : ret 0x2176
0x00000000004a1066 : ret 0x22
0x0000000000423918 : ret 0x2288
0x000000000042fbf2 : ret 0x2373
0x000000000043f547 : ret 0x23e8
0x00000000004af318 : ret 0x24
0x0000000000414819 : ret 0x2501
0x00000000004768c2 : ret 0x2560
0x000000000041de5d : ret 0x2575
0x000000000045a67e : ret 0x2721
0x0000000000401356 : ret 0x2773
0x0000000000465806 : ret 0x2774
0x00000000004313a6 : ret 0x280f
0x0000000000426185 : ret 0x2876
0x000000000047f618 : ret 0x28f5
0x0000000000485f3d : ret 0x2941
0x000000000041071d : ret 0x2948
0x000000000049b84a : ret 0x2949
0x0000000000432b11 : ret 0x294c
0x000000000041282b : ret 0x294d
0x000000000041e553 : ret 0x2a
0x000000000041e81b : ret 0x2a75
0x000000000043f86a : ret 0x2b3
0x00000000004103bf : ret 0x2b48
0x000000000044639e : ret 0x2b49
0x000000000043e492 : ret 0x2b77
0x000000000043e137 : ret 0x2c76
0x0000000000483604 : ret 0x2e
0x0000000000462745 : ret 0x2e66
0x0000000000446285 : ret 0x3101
0x0000000000403766 : ret 0x3145
0x000000000046fdc2 : ret 0x314c
0x00000000004af808 : ret 0x33
0x0000000000489efa : ret 0x33b
0x000000000046ad37 : ret 0x33e8
0x0000000000403f11 : ret 0x348
0x000000000044c2db : ret 0x349
0x0000000000488c58 : ret 0x357e
0x00000000004ba59a : ret 0x3827
0x000000000047bd62 : ret 0x3840
0x000000000040fddf : ret 0x3841
0x000000000044068f : ret 0x3845
0x0000000000426175 : ret 0x3876
0x0000000000443229 : ret 0x3880
0x00000000004150fb : ret 0x389
0x00000000004b8c26 : ret 0x38ae
0x000000000047a9a6 : ret 0x38b
0x000000000044fbb1 : ret 0x3948
0x000000000041d132 : ret 0x3949
0x000000000044d0f6 : ret 0x394c
0x0000000000452a78 : ret 0x394d
0x000000000043d8b2 : ret 0x3a01
0x000000000042fbdb : ret 0x3a73
0x000000000044cc03 : ret 0x3a76
0x0000000000442a21 : ret 0x3b01
0x00000000004672ca : ret 0x3bba
0x000000000040e62e : ret 0x3ce8
0x0000000000445ac5 : ret 0x3d83
0x000000000046a182 : ret 0x3e9
0x000000000049b5cf : ret 0x3ee9
0x0000000000419212 : ret 0x4007
0x00000000004669d6 : ret 0x408d
0x00000000004782df : ret 0x40bf
0x0000000000445eb0 : ret 0x4101
0x0000000000455090 : ret 0x4108
0x0000000000456b58 : ret 0x4110
0x000000000041c84c : ret 0x4117
0x000000000046ef5c : ret 0x412f
0x000000000043f99d : ret 0x4164
0x0000000000446c7e : ret 0x41c3
0x000000000042e56a : ret 0x4266
0x00000000004682e2 : ret 0x428d
0x000000000044cbfa : ret 0x4372
0x000000000044d68b : ret 0x4389
0x0000000000445d6f : ret 0x438b
0x00000000004a3f48 : ret 0x43e4
0x00000000004a4938 : ret 0x43f0
0x0000000000411413 : ret 0x4401
0x0000000000455617 : ret 0x440f
0x0000000000464747 : ret 0x4410
0x000000000047b851 : ret 0x448d
0x0000000000489b55 : ret 0x44c6
0x00000000004624c2 : ret 0x4502
0x000000000046d958 : ret 0x4574
0x0000000000463008 : ret 0x45f6
0x00000000004b9724 : ret 0x474c
0x000000000049d9b3 : ret 0x4776
0x000000000045a483 : ret 0x47e9
0x0000000000448735 : ret 0x4801
0x000000000042c7e1 : ret 0x4802
0x000000000042c8bd : ret 0x4803
0x00000000004042f0 : ret 0x4804
0x000000000042c88d : ret 0x4805
0x000000000042c875 : ret 0x4806
0x00000000004238a3 : ret 0x4808
0x000000000044f164 : ret 0x4809
0x0000000000458944 : ret 0x480f
0x000000000041b0c9 : ret 0x4810
0x000000000044cad0 : ret 0x4811
0x00000000004530c2 : ret 0x481e
0x000000000041b00b : ret 0x4820
0x000000000045bb8c : ret 0x482d
0x000000000044467f : ret 0x4830
0x0000000000401352 : ret 0x4838
0x000000000042e476 : ret 0x4840
0x00000000004239b8 : ret 0x48c3
0x000000000046747d : ret 0x48d
0x0000000000473b44 : ret 0x48e9
0x00000000004baee6 : ret 0x48f
0x0000000000402ffe : ret 0x4901
0x000000000044beb3 : ret 0x4904
0x000000000042cafe : ret 0x4906
0x00000000004571c8 : ret 0x4908
0x000000000046a219 : ret 0x4909
0x0000000000422c12 : ret 0x4910
0x0000000000420e86 : ret 0x4920
0x000000000041fe00 : ret 0x4930
0x000000000047e754 : ret 0x4976
0x0000000000417cd0 : ret 0x4a22
0x000000000041bdf2 : ret 0x4a23
0x000000000046556c : ret 0x4b
0x000000000046ca82 : ret 0x4b30
0x00000000004b6f10 : ret 0x4b68
0x0000000000405975 : ret 0x4c01
0x000000000042ca41 : ret 0x4c02
0x000000000044c9bf : ret 0x4c04
0x0000000000485c85 : ret 0x4c08
0x00000000004527b6 : ret 0x4c40
0x0000000000448980 : ret 0x4c88
0x0000000000446d91 : ret 0x4d02
0x00000000004ba947 : ret 0x4e27
0x0000000000469a37 : ret 0x4eb
0x0000000000444b38 : ret 0x4ee9
0x000000000044598e : ret 0x4f74
0x000000000042fbc4 : ret 0x5173
0x000000000044ef63 : ret 0x527e
0x0000000000462d88 : ret 0x5389
0x0000000000485cd7 : ret 0x53e8
0x000000000045b07b : ret 0x53e9
0x000000000047baed : ret 0x5438
0x00000000004919a6 : ret 0x5488
0x000000000044cf7a : ret 0x5489
0x000000000045acd3 : ret 0x548b
0x00000000004b8bac : ret 0x5508
0x000000000040557f : ret 0x5525
0x00000000004212f2 : ret 0x575
0x000000000046dccd : ret 0x576
0x00000000004bae78 : ret 0x5803
0x000000000040e7eb : ret 0x589
0x00000000004b8880 : ret 0x591c
0x0000000000446baf : ret 0x5a40
0x00000000004b95e7 : ret 0x5ae4
0x0000000000449c71 : ret 0x5c77
0x000000000045977b : ret 0x5fe8
0x00000000004bb312 : ret 0x62c1
0x000000000045c543 : ret 0x6348
0x0000000000411a32 : ret 0x6349
0x000000000047f207 : ret 0x63e8
0x000000000049a800 : ret 0x65e9
0x0000000000489f27 : ret 0x6610
0x0000000000426102 : ret 0x6620
0x0000000000423a05 : ret 0x66c3
0x000000000047481e : ret 0x674
0x00000000004b889f : ret 0x67b2
0x000000000047d86d : ret 0x6876
0x000000000049dbb2 : ret 0x68e8
0x000000000043ee5d : ret 0x6b8
0x000000000049b8a7 : ret 0x6be9
0x00000000004bb4a1 : ret 0x6f9
0x0000000000432b5e : ret 0x7280
0x00000000004761f9 : ret 0x728d
0x000000000043e2fb : ret 0x72e9
0x0000000000415641 : ret 0x7401
0x000000000041ea0f : ret 0x7402
0x000000000041bbc5 : ret 0x7404
0x0000000000410f33 : ret 0x7408
0x0000000000400edc : ret 0x7420
0x0000000000458d12 : ret 0x7450
0x000000000043be19 : ret 0x7501
0x000000000043be26 : ret 0x7502
0x00000000004268b9 : ret 0x7504
0x000000000043d254 : ret 0x7508
0x000000000043bdeb : ret 0x7510
0x00000000004268b4 : ret 0x7518
0x000000000043bdf8 : ret 0x7520
0x000000000043be05 : ret 0x7540
0x0000000000473191 : ret 0x758b
0x000000000042eab2 : ret 0x7677
0x0000000000446392 : ret 0x774
0x0000000000478d3a : ret 0x777
0x000000000049b69b : ret 0x77e9
0x000000000046dc5a : ret 0x7874
0x000000000041b4fa : ret 0x7ae9
0x0000000000446eda : ret 0x7b8
0x0000000000426092 : ret 0x7e20
0x000000000042180c : ret 0x7f10
0x00000000004619c6 : ret 0x7f3c
0x0000000000432e7e : ret 0x80
0x00000000004229e9 : ret 0x8000
0x0000000000469a3c : ret 0x8001
0x00000000004728ff : ret 0x8005
0x000000000047d726 : ret 0x8008
0x000000000046a422 : ret 0x8010
0x0000000000473a3e : ret 0x8018
0x0000000000470308 : ret 0x804
0x000000000046c6c0 : ret 0x8116
0x00000000004871db : ret 0x8148
0x000000000045ac94 : ret 0x8166
0x0000000000419fcc : ret 0x820f
0x00000000004040d0 : ret 0x8301
0x000000000047dc61 : ret 0x8308
0x000000000042e680 : ret 0x830f
0x000000000043e1c0 : ret 0x8341
0x00000000004213b5 : ret 0x8348
0x000000000041b5c3 : ret 0x8349
0x000000000047fdc9 : ret 0x8364
0x000000000043f4e7 : ret 0x83e8
0x0000000000411380 : ret 0x840
0x000000000046b2a2 : ret 0x8401
0x0000000000417849 : ret 0x840f
0x000000000043e260 : ret 0x8444
0x000000000049b817 : ret 0x8445
0x000000000045c535 : ret 0x8504
0x0000000000462c16 : ret 0x8508
0x0000000000412f42 : ret 0x850f
0x0000000000468545 : ret 0x8545
0x00000000004192e2 : ret 0x8548
0x000000000044ef75 : ret 0x854d
0x0000000000459b0c : ret 0x858b
0x00000000004573ad : ret 0x85c6
0x00000000004553fa : ret 0x85c7
0x000000000049aa98 : ret 0x85e9
0x0000000000400c9e : ret 0x860f
0x000000000044f8c5 : ret 0x870f
0x00000000004b81be : ret 0x871e
0x00000000004619cd : ret 0x875
0x00000000004261a5 : ret 0x876
0x0000000000489b50 : ret 0x87e
0x000000000044e95a : ret 0x87e9
0x000000000047e514 : ret 0x87f6
0x0000000000447ec1 : ret 0x8804
0x000000000045e202 : ret 0x880f
0x000000000044ee17 : ret 0x8840
0x00000000004472c2 : ret 0x8901
0x0000000000470cce : ret 0x8908
0x0000000000400d46 : ret 0x890f
0x000000000044d07f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x00000000004113fb : ret 0x8945
0x0000000000449d31 : ret 0x8948
0x00000000004101ad : ret 0x8949
0x0000000000403b37 : ret 0x894c
0x0000000000445e8f : ret 0x894d
0x000000000047960b : ret 0x894e
0x00000000004837dc : ret 0x89e9
0x000000000047836e : ret 0x8b
0x000000000046270a : ret 0x8b04
0x000000000046af93 : ret 0x8b05
0x00000000004ba9ee : ret 0x8b36
0x000000000044f1ea : ret 0x8b41
0x00000000004014c4 : ret 0x8b48
0x0000000000410b76 : ret 0x8b49
0x000000000047958e : ret 0x8b4a
0x00000000004116d0 : ret 0x8b4c
0x0000000000480605 : ret 0x8d01
0x00000000004526da : ret 0x8d04
0x0000000000459840 : ret 0x8d0f
0x000000000040d38f : ret 0x8d48
0x00000000004032e6 : ret 0x8d49
0x0000000000465d88 : ret 0x8d4a
0x0000000000411686 : ret 0x8d4c
0x000000000041c8ac : ret 0x8d4e
0x00000000004106c1 : ret 0x8e0f
0x00000000004014ee : ret 0x900
0x0000000000421435 : ret 0x90c3
0x000000000041265b : ret 0x938b
0x0000000000485b90 : ret 0x940f
0x000000000048a7a6 : ret 0x941
0x0000000000465aa8 : ret 0x94c
0x000000000047ae3f : ret 0x950f
0x0000000000455b59 : ret 0x9522
0x0000000000403978 : ret 0x953d
0x00000000004b9813 : ret 0x9576
0x0000000000481940 : ret 0x9589
0x000000000041b511 : ret 0x976
0x0000000000468f6e : ret 0x9be
0x0000000000488cd9 : ret 0x9e74
0x00000000004105d8 : ret 0x9e9
0x000000000045985c : ret 0x9ee8
0x0000000000473f49 : ret 0x9f75
0x00000000004ade40 : ret 0xa
0x0000000000491910 : ret 0xa074
0x000000000046aec7 : ret 0xa3e8
0x00000000004b9503 : ret 0xa514
0x00000000004b9987 : ret 0xac65
0x000000000049de6e : ret 0xace8
0x00000000004ba344 : ret 0xacfc
0x000000000043e2e6 : ret 0xaf0f
0x000000000041beaf : ret 0xb48b
0x00000000004028b9 : ret 0xb60f
0x00000000004682fb : ret 0xb70f
0x000000000043ed90 : ret 0xb8
0x000000000045fe99 : ret 0xb848
0x000000000044efb5 : ret 0xb87f
0x0000000000426787 : ret 0xb8c3
0x0000000000467232 : ret 0xb8e9
0x0000000000484a22 : ret 0xb908
0x00000000004b984e : ret 0xb9b9
0x000000000045637d : ret 0xbb41
0x0000000000478e62 : ret 0xbc41
0x000000000049bc35 : ret 0xbc80
0x000000000046094e : ret 0xbd83
0x0000000000484c10 : ret 0xbe08
0x00000000004b95a4 : ret 0xbe57
0x000000000045ad68 : ret 0xbf07
0x0000000000483ff1 : ret 0xbf08
0x00000000004228a9 : ret 0xc000
0x000000000048efae : ret 0xc001
0x000000000048ef62 : ret 0xc002
0x0000000000412e83 : ret 0xc031
0x000000000046b800 : ret 0xc084
0x0000000000425f50 : ret 0xc085
0x000000000040e976 : ret 0xc148
0x000000000046739d : ret 0xc269
0x000000000045b236 : ret 0xc283
0x000000000042fa94 : ret 0xc2b2
0x000000000043e501 : ret 0xc35b
0x00000000004b7d42 : ret 0xc4c3
0x00000000004b9158 : ret 0xc4ff
0x0000000000432bf8 : ret 0xc580
0x000000000049b84d : ret 0xc5e9
0x0000000000482810 : ret 0xc6e9
0x0000000000421331 : ret 0xc6eb
0x00000000004382f0 : ret 0xc748
0x000000000041c15c : ret 0xc789
0x00000000004150ec : ret 0xc883
0x000000000047d373 : ret 0xc931
0x0000000000443069 : ret 0xc985
0x0000000000423871 : ret 0xc9ff
0x000000000048139d : ret 0xcb73
0x00000000004b8bea : ret 0xcca7
0x00000000004baccd : ret 0xcd11
0x000000000041d541 : ret 0xce31
0x0000000000404d84 : ret 0xce80
0x0000000000480c75 : ret 0xce83
0x0000000000418d8b : ret 0xcf31
0x00000000004ae240 : ret 0xd
0x000000000047bc7a : ret 0xd021
0x000000000044251f : ret 0xd029
0x0000000000432a6c : ret 0xd073
0x000000000040558e : ret 0xd089
0x0000000000464385 : ret 0xd108
0x0000000000486ba9 : ret 0xd129
0x000000000049a466 : ret 0xd284
0x0000000000485aa7 : ret 0xd309
0x00000000004890bb : ret 0xd348
0x000000000045b253 : ret 0xd529
0x0000000000486c20 : ret 0xd629
0x00000000004670ed : ret 0xd721
0x0000000000486b32 : ret 0xd729
0x000000000043e2eb : ret 0xd889
0x00000000004ba765 : ret 0xd8f
0x00000000004779f3 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047ba40 : ret 0xda38
0x000000000040f8e5 : ret 0xdaf7
0x00000000004483f1 : ret 0xdb85
0x00000000004ba846 : ret 0xdcd9
0x000000000046a980 : ret 0xdd72
0x00000000004b97c2 : ret 0xde5d
0x0000000000410cb5 : ret 0xde74
0x000000000049b412 : ret 0xde89
0x00000000004b8551 : ret 0xde9e
0x0000000000486ff8 : ret 0xdee9
0x0000000000422769 : ret 0xe000
0x000000000043bda9 : ret 0xe074
0x0000000000446ecd : ret 0xe077
0x0000000000443d09 : ret 0xe083
0x000000000044b453 : ret 0xe183
0x0000000000444282 : ret 0xe1eb
0x000000000044735b : ret 0xe277
0x000000000040dbcc : ret 0xe281
0x0000000000400e4d : ret 0xe283
0x000000000043f487 : ret 0xe3e8
0x0000000000466450 : ret 0xe575
0x0000000000417827 : ret 0xe675
0x0000000000457d83 : ret 0xe680
0x00000000004ba966 : ret 0xe71f
0x0000000000401348 : ret 0xe72
0x0000000000452c10 : ret 0xe783
0x000000000046e145 : ret 0xe874
0x00000000004596f5 : ret 0xe87f
0x0000000000454f92 : ret 0xe883
0x000000000046e4ee : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x00000000004256a3 : ret 0xe901
0x0000000000402b82 : ret 0xe902
0x0000000000449e39 : ret 0xe904
0x000000000047b671 : ret 0xe907
0x0000000000423906 : ret 0xe908
0x0000000000429526 : ret 0xe910
0x00000000004531b9 : ret 0xe920
0x000000000041fea3 : ret 0xe96e
0x00000000004b8cc7 : ret 0xe970
0x0000000000488c1c : ret 0xe974
0x000000000042004f : ret 0xe977
0x000000000043e48a : ret 0xea81
0x0000000000457d07 : ret 0xeac0
0x0000000000400d21 : ret 0xeac1
0x0000000000422c36 : ret 0xeb10
0x000000000041fe6f : ret 0xeb5b
0x000000000040e5ea : ret 0xeb72
0x0000000000402218 : ret 0xebe8
0x00000000004bb478 : ret 0xec2
0x000000000047f5a9 : ret 0xec75
0x0000000000470838 : ret 0xed75
0x000000000044afae : ret 0xed85
0x0000000000445e0f : ret 0xee75
0x00000000004bb11a : ret 0xef32
0x00000000004188b6 : ret 0xef75
0x0000000000443b81 : ret 0xefc1
0x0000000000422629 : ret 0xf000
0x000000000040d558 : ret 0xf001
0x000000000040286a : ret 0xf01
0x000000000041a296 : ret 0xf02
0x000000000041bb40 : ret 0xf04
0x000000000045d38e : ret 0xf08
0x000000000045a217 : ret 0xf0e9
0x000000000046b406 : ret 0xf0eb
0x000000000041b283 : ret 0xf0f
0x00000000004217c2 : ret 0xf10
0x0000000000462135 : ret 0xf229
0x000000000044fe46 : ret 0xf301
0x000000000045d3ca : ret 0xf40
0x00000000004684cd : ret 0xf43
0x000000000049b8c1 : ret 0xf45
0x00000000004643aa : ret 0xf48
0x000000000045a7d4 : ret 0xf4c
0x0000000000403356 : ret 0xf4e8
0x0000000000402b8b : ret 0xf4e9
0x0000000000443cec : ret 0xf631
0x00000000004215d9 : ret 0xf66
0x000000000043e0ac : ret 0xf685
0x000000000041be93 : ret 0xf710
0x000000000048eafa : ret 0xf72c
0x000000000047a075 : ret 0xf74
0x0000000000426c2c : ret 0xf748
0x0000000000465ef0 : ret 0xf749
0x000000000048bbfa : ret 0xf75b
0x0000000000432b1e : ret 0xf80
0x00000000004224e9 : ret 0xf800
0x00000000004b8430 : ret 0xf869
0x00000000004a38d0 : ret 0xf91c
0x000000000040450a : ret 0xf929
0x000000000045fdfa : ret 0xfa19
0x000000000049f66a : ret 0xfa25
0x0000000000459c19 : ret 0xfa80
0x000000000048abb6 : ret 0xfa81
0x00000000004055a2 : ret 0xfac1
0x000000000046891a : ret 0xfb57
0x00000000004489fa : ret 0xfb8d
0x00000000004223a9 : ret 0xfc00
0x000000000048c0f6 : ret 0xfc01
0x000000000048c0aa : ret 0xfc02
0x000000000043f5da : ret 0xfc3
0x000000000046bf8a : ret 0xfd34
0x0000000000446fa0 : ret 0xfd83
0x000000000044f44d : ret 0xfde8
0x0000000000402840 : ret 0xfdf
0x0000000000422269 : ret 0xfe00
0x000000000043e1e3 : ret 0xfe83
0x0000000000432a3e : ret 0xfec5
0x0000000000422129 : ret 0xff00
0x000000000049184e : ret 0xff2
0x000000000042e49a : ret 0xff3
0x0000000000421fe9 : ret 0xff80
0x0000000000488ef6 : ret 0xff81
0x0000000000488eaa : ret 0xff82
0x000000000040c2ca : ret 0xff99
0x0000000000487190 : ret 0xff9f
0x00000000004527a2 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048ee97 : ret 0xffbf
0x0000000000421ea9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042116e : ret 0xffdf
0x000000000044f608 : ret 0xffe0
0x000000000040867a : ret 0xffe2
0x000000000049e49a : ret 0xffe7
0x000000000044173a : ret 0xffe8
0x000000000044163a : ret 0xffe9
0x0000000000459ebc : ret 0xffee
0x000000000040ee6c : ret 0xffef
0x000000000040db1e : ret 0xfff0
0x00000000004c4211 : ret 0xfff3
0x00000000004c1e31 : ret 0xfff7
0x00000000004a3555 : ret 0xfff8
0x000000000041c6c1 : ret 0xfff9
0x000000000043f199 : ret 0xfffb
0x00000000004219a9 : ret 0xfffc
0x0000000000441e03 : ret 0xfffd
0x0000000000405338 : ret 0xfffe
0x000000000041081a : ret 0xffff
0x00000000004100e1 : ret 1
0x0000000000419e5a : ret 2
0x000000000042f852 : ret 3
0x0000000000426259 : ret 4
0x000000000041a7a6 : ret 5
0x0000000000418f00 : ret 6
0x00000000004b22e4 : ret 7
0x000000000040a47e : ret 8
0x000000000043c85a : ret 9
0x000000000042c48a : retf
0x0000000000404a07 : retf 0
0x0000000000432abd : retf 0x1073
0x0000000000447020 : retf 0x1089
0x00000000004ae7a0 : retf 0x11
0x000000000047ff8d : retf 0x114d
0x000000000040b412 : retf 0x12c
0x0000000000448dbb : retf 0x1308
0x000000000040ab12 : retf 0x135
0x000000000041d600 : retf 0x1373
0x0000000000449004 : retf 0x148
0x0000000000446e24 : retf 0x1489
0x0000000000448947 : retf 0x149
0x0000000000432d57 : retf 0x14c
0x0000000000423c52 : retf 0x16
0x000000000044906e : retf 0x1608
0x000000000047a47d : retf 0x194d
0x0000000000442842 : retf 0x19b8
0x0000000000403c12 : retf 0x1a4
0x0000000000418e48 : retf 0x1b73
0x000000000047d718 : retf 0x1b8
0x00000000004812eb : retf 0x1ba
0x00000000004b0348 : retf 0x1d4
0x00000000004b0ae8 : retf 0x1d5
0x0000000000429447 : retf 0x1f0f
0x0000000000442aa2 : retf 0x1f8
0x000000000049e682 : retf 0x1fc
0x000000000041923a : retf 0x2173
0x00000000004073a6 : retf 0x22
0x000000000041d8b9 : retf 0x2273
0x000000000047f5a3 : retf 0x2348
0x00000000004af358 : retf 0x24
0x000000000048845a : retf 0x2446
0x000000000047a82d : retf 0x252a
0x00000000004780d2 : retf 0x2548
0x000000000046edca : retf 0x25b1
0x0000000000468df2 : retf 0x263a
0x0000000000468bf2 : retf 0x2648
0x000000000045a6da : retf 0x272d
0x0000000000451c72 : retf 0x27ab
0x00000000004301b9 : retf 0x280f
0x0000000000490c6f : retf 0x2941
0x0000000000410f07 : retf 0x2948
0x00000000004101fa : retf 0x294c
0x000000000041dd19 : retf 0x2a
0x00000000004b963c : retf 0x2a91
0x000000000041ff22 : retf 0x2aa8
0x000000000041cc2d : retf 0x2b06
0x00000000004183a2 : retf 0x2b23
0x00000000004144d5 : retf 0x2b80
0x0000000000405322 : retf 0x2c6d
0x00000000004b8aba : retf 0x2c90
0x000000000046a121 : retf 0x2d75
0x000000000040eb55 : retf 0x2e66
0x000000000044cc0e : retf 0x2f72
0x0000000000469ceb : retf 0x2f74
0x000000000048d4a2 : retf 0x306
0x000000000045ac50 : retf 0x30be
0x000000000043ff4f : retf 0x3140
0x00000000004345fa : retf 0x3148
0x00000000004ba8a5 : retf 0x3159
0x00000000004ba90d : retf 0x32dd
0x00000000004af848 : retf 0x33
0x00000000004b91c3 : retf 0x33e6
0x00000000004434e7 : retf 0x348
0x0000000000459868 : retf 0x349
0x000000000044345a : retf 0x34c
0x00000000004b96f1 : retf 0x3617
0x00000000004345d6 : retf 0x377
0x00000000004495d7 : retf 0x3948
0x00000000004704a3 : retf 0x3980
0x00000000004bdca9 : retf 0x3b9a
0x000000000045bf45 : retf 0x3be9
0x00000000004bad06 : retf 0x3d8a
0x00000000004b859b : retf 0x3ec
0x000000000041dcfc : retf 0x41
0x0000000000470994 : retf 0x4108
0x00000000004a3471 : retf 0x42
0x000000000042e54c : retf 0x4266
0x000000000047f39a : retf 0x42f6
0x000000000042919a : retf 0x4466
0x0000000000488a00 : retf 0x4489
0x0000000000404de5 : retf 0x44f6
0x0000000000478de3 : retf 0x45f8
0x0000000000416555 : retf 0x476
0x000000000041c37f : retf 0x4801
0x000000000046d47f : retf 0x4802
0x000000000040d9fb : retf 0x4803
0x000000000040d9ab : retf 0x4804
0x000000000040d85f : retf 0x4805
0x000000000040d9d3 : retf 0x4806
0x000000000040da23 : retf 0x4807
0x000000000040d938 : retf 0x4808
0x000000000040d8c3 : retf 0x4809
0x000000000040dac3 : retf 0x480a
0x000000000040da97 : retf 0x480b
0x000000000040d905 : retf 0x480c
0x000000000040d893 : retf 0x480d
0x000000000049deb3 : retf 0x4810
0x00000000004bd228 : retf 0x4811
0x0000000000425ffe : retf 0x4890
0x000000000047a3f1 : retf 0x48f8
0x000000000047e353 : retf 0x4b
0x000000000046e9a1 : retf 0x4b4d
0x000000000041c4c0 : retf 0x4b83
0x000000000047bdcb : retf 0x4c01
0x000000000041b6d7 : retf 0x4c04
0x000000000048625f : retf 0x4c8b
0x0000000000418262 : retf 0x4d01
0x0000000000413d9d : retf 0x4d80
0x000000000047a448 : retf 0x4de8
0x0000000000478ce1 : retf 0x4df0
0x000000000047a46c : retf 0x4df8
0x000000000046390d : retf 0x5077
0x0000000000447a2e : retf 0x5355
0x000000000049190a : retf 0x5489
0x000000000044cbe8 : retf 0x5576
0x000000000040ea03 : retf 0x6411
0x00000000004302a3 : retf 0x6601
0x00000000004303f3 : retf 0x6602
0x0000000000430543 : retf 0x6603
0x0000000000430693 : retf 0x6604
0x00000000004307e3 : retf 0x6605
0x0000000000430933 : retf 0x6606
0x0000000000430a83 : retf 0x6607
0x0000000000430bd3 : retf 0x6608
0x0000000000430d23 : retf 0x6609
0x0000000000430e73 : retf 0x660a
0x0000000000430fc3 : retf 0x660b
0x0000000000431113 : retf 0x660c
0x0000000000431263 : retf 0x660d
0x00000000004313b3 : retf 0x660e
0x0000000000431503 : retf 0x660f
0x00000000004345f5 : retf 0x676
0x00000000004bac25 : retf 0x67ca
0x00000000004673d8 : retf 0x694d
0x0000000000432bf3 : retf 0x6a77
0x000000000046ac92 : retf 0x6b8
0x0000000000488235 : retf 0x6c
0x00000000004b8c22 : retf 0x6ee8
0x0000000000432de2 : retf 0x70e
0x000000000045f2a2 : retf 0x72
0x00000000004baae6 : retf 0x7272
0x00000000004785c2 : retf 0x76
0x00000000004ba2bf : retf 0x76a5
0x000000000047a3b6 : retf 0x77f
0x00000000004b9142 : retf 0x79f5
0x000000000046a146 : retf 0x7a80
0x0000000000462ab9 : retf 0x7a8b
0x00000000004345de : retf 0x8148
0x00000000004324ad : retf 0x820f
0x00000000004196fc : retf 0x8304
0x0000000000432d71 : retf 0x830f
0x000000000048b591 : retf 0x8341
0x000000000041cb39 : retf 0x8348
0x0000000000422d85 : retf 0x8349
0x0000000000466292 : retf 0x840f
0x00000000004480c1 : retf 0x8440
0x000000000048a5e5 : retf 0x8445
0x00000000004b9a30 : retf 0x8481
0x000000000040f252 : retf 0x850f
0x00000000004020aa : retf 0x8545
0x000000000040e151 : retf 0x8548
0x0000000000432dac : retf 0x870f
0x0000000000478c01 : retf 0x877
0x000000000047b360 : retf 0x880f
0x000000000047ca28 : retf 0x8820
0x0000000000448d73 : retf 0x8880
0x0000000000420ab2 : retf 0x8902
0x0000000000410f3f : retf 0x8920
0x000000000046a20d : retf 0x8941
0x0000000000486f1a : retf 0x8945
0x0000000000402a82 : retf 0x8948
0x0000000000405255 : retf 0x8949
0x000000000040eec4 : retf 0x894c
0x0000000000446c99 : retf 0x894d
0x000000000040448a : retf 0x8b48
0x000000000040e325 : retf 0x8b49
0x0000000000409bd5 : retf 0x8b4c
0x000000000045a942 : retf 0x8d
0x000000000046833d : retf 0x8d0f
0x000000000046743c : retf 0x8d41
0x0000000000400499 : retf 0x8d48
0x000000000041b56a : retf 0x8d49
0x00000000004237c4 : retf 0x8d4a
0x000000000043b32d : retf 0x8d4c
0x0000000000486f59 : retf 0x8d4f
0x0000000000481578 : retf 0x8d89
0x000000000044939e : retf 0x8e0f
0x0000000000422b43 : retf 0x9066
0x00000000004ba38e : retf 0x93a2
0x000000000049197a : retf 0x948
0x000000000048ae7a : retf 0x950f
0x000000000045c550 : retf 0x97e
0x00000000004ba72b : retf 0x99e0
0x00000000004baa9a : retf 0x9d7d
0x000000000047bca2 : retf 0x9e0f
0x00000000004719dc : retf 0xa
0x00000000004bb3a5 : retf 0xa020
0x00000000004b8905 : retf 0xa1eb
0x00000000004ba98b : retf 0xa2fe
0x000000000040f30a : retf 0xa375
0x00000000004baa5c : retf 0xab0d
0x00000000004bafae : retf 0xae32
0x000000000042d762 : retf 0xb
0x0000000000449bd5 : retf 0xb0e9
0x00000000004b97a9 : retf 0xb51a
0x0000000000426482 : retf 0xb60f
0x000000000046748f : retf 0xb70f
0x000000000049daf2 : retf 0xb9e9
0x000000000047835e : retf 0xba
0x00000000004baab3 : retf 0xbb9a
0x000000000041050a : retf 0xbd75
0x00000000004baafd : retf 0xbf4b
0x00000000004624fe : retf 0xc001
0x0000000000413411 : retf 0xc031
0x00000000004ba77d : retf 0xc0fe
0x000000000040e167 : retf 0xc148
0x0000000000465a6e : retf 0xc149
0x0000000000432c2f : retf 0xc1c4
0x000000000045a462 : retf 0xc3
0x0000000000463194 : retf 0xc748
0x000000000048b3b1 : retf 0xc77
0x0000000000403d11 : retf 0xc80f
0x000000000040054a : retf 0xc883
0x0000000000403a1d : retf 0xc90f
0x000000000042f634 : retf 0xcab2
0x00000000004b7d4a : retf 0xcccb
0x0000000000409c41 : retf 0xd
0x0000000000456a2f : retf 0xd039
0x00000000004897d3 : retf 0xd0eb
0x0000000000458ce2 : retf 0xd189
0x00000000004b9566 : retf 0xd1cb
0x000000000043e5d0 : retf 0xd231
0x00000000004473d7 : retf 0xd285
0x00000000004bac77 : retf 0xd39
0x000000000049d594 : retf 0xd3eb
0x000000000047bc87 : retf 0xd989
0x000000000040dc4d : retf 0xdaf7
0x000000000049d2cf : retf 0xdb77
0x00000000004bb203 : retf 0xde4f
0x000000000041cee6 : retf 0xde9
0x00000000004059be : retf 0xdf75
0x00000000004b9833 : retf 0xdf7f
0x000000000041657a : retf 0xdfeb
0x00000000004ae3a0 : retf 0xe
0x0000000000448d53 : retf 0xe083
0x00000000004c1333 : retf 0xe0a
0x0000000000456986 : retf 0xe0c1
0x00000000004b92de : retf 0xe152
0x000000000044941c : retf 0xe281
0x000000000049b3ab : retf 0xe283
0x00000000004728f7 : retf 0xe2c1
0x00000000004268a9 : retf 0xe475
0x00000000004b98bc : retf 0xe496
0x00000000004536b7 : retf 0xe677
0x00000000004b9226 : retf 0xe72e
0x00000000004b88b3 : retf 0xe80
0x0000000000480c5b : retf 0xe873
0x0000000000470575 : retf 0xe875
0x0000000000443194 : retf 0xe901
0x0000000000443164 : retf 0xe902
0x0000000000443154 : retf 0xe904
0x0000000000443144 : retf 0xe908
0x0000000000413de8 : retf 0xe980
0x00000000004ba86c : retf 0xea91
0x000000000044411b : retf 0xeac0
0x000000000043e539 : retf 0xeac1
0x0000000000421781 : retf 0xead3
0x00000000004681c1 : retf 0xeaf7
0x0000000000470820 : retf 0xeb08
0x00000000004b898d : retf 0xeb83
0x00000000004bb181 : retf 0xebbf
0x000000000045c66c : retf 0xebff
0x000000000040b2da : retf 0xf
0x0000000000432fec : retf 0xf01
0x000000000043316c : retf 0xf02
0x000000000047bc82 : retf 0xf029
0x00000000004332ec : retf 0xf03
0x000000000043346c : retf 0xf04
0x00000000004335ec : retf 0xf05
0x000000000043376c : retf 0xf06
0x00000000004338ec : retf 0xf07
0x0000000000433a6c : retf 0xf08
0x0000000000433bec : retf 0xf09
0x0000000000433d6c : retf 0xf0a
0x0000000000433eec : retf 0xf0b
0x000000000043406c : retf 0xf0c
0x00000000004341ec : retf 0xf0d
0x000000000043436c : retf 0xf0e
0x00000000004344ec : retf 0xf0f
0x00000000004805fb : retf 0xf189
0x000000000042ad6d : retf 0xf1c5
0x000000000047ba02 : retf 0xf40
0x00000000004258c8 : retf 0xf41
0x000000000041ed03 : retf 0xf44
0x0000000000423b10 : retf 0xf48
0x000000000041d1a9 : retf 0xf4c
0x00000000004ba7c8 : retf 0xf64
0x0000000000416bd6 : retf 0xf66
0x000000000048b25d : retf 0xf741
0x000000000042e69a : retf 0xf748
0x00000000004a39bc : retf 0xf91e
0x000000000042ae3f : retf 0xf9c5
0x0000000000457f2d : retf 0xfac1
0x00000000004479f2 : retf 0xfb9d
0x00000000004bde44 : retf 0xfdc5
0x0000000000434e51 : retf 0xff2
0x000000000040f5f2 : retf 0xff21
0x000000000042eacb : retf 0xff3
0x000000000041718f : retf 0xff31
0x0000000000400e90 : retf 0xff83
0x000000000040cfc2 : retf 0xff8c
0x0000000000418122 : retf 0xff97
0x000000000041d412 : retf 0xffa1
0x000000000040abc2 : retf 0xffb0
0x0000000000462875 : retf 0xffb8
0x0000000000411bb2 : retf 0xffc0
0x00000000004091c2 : retf 0xffca
0x0000000000461612 : retf 0xffe5
0x0000000000451471 : retf 0xffe6
0x000000000040b569 : retf 0xffed
0x0000000000404c7c : retf 0xfff0
0x000000000048b9bc : retf 0xfff2
0x000000000040b337 : retf 0xfff7
0x0000000000443c5c : retf 0xfff8
0x000000000048124c : retf 0xfff9
0x0000000000453902 : retf 0xfffa
0x0000000000473891 : retf 0xfffb
0x000000000043f091 : retf 0xfffc
0x000000000041f320 : retf 0xfffd
0x0000000000410743 : retf 0xfffe
0x00000000004091a8 : retf 0xffff
0x000000000041d20a : retf 1
0x0000000000415e5c : retf 2
0x000000000044b7d2 : retf 3
0x00000000004725c2 : retf 4
0x0000000000419b3a : retf 5
0x000000000044137a : retf 6
0x000000000042acca : retf 7
0x000000000040fdb3 : retf 8
0x000000000042e7eb : retf 9
0x000000000043d975 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e5c5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000466f4b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416627 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004779fe : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004262ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e472 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465802 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041f08f : rol byte ptr [rax + 0x755f067b], 1 ; retf 0x8948
0x00000000004b1ce0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447c48 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489ff6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000457b4c : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x0000000000460655 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e9bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c2f6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f9ab : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a9a1 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042ce82 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004821f1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b1d1 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b1c8 ; ret
0x0000000000478a7b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442dd6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416a78 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004a33fc : rol byte ptr [rbx - 8], 1 ; jmp rax
0x00000000004667c2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004728f4 : rol byte ptr [rbx], 0x89 ; retf 0xe2c1
0x000000000043e481 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c5ab : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004409b7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e3b5 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004a33f8 : rol byte ptr [rcx - 8], 0xff ; rol byte ptr [rbx - 8], 1 ; jmp rax
0x00000000004667a2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e296 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e0c2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e2f7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000432a6e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466802 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004667b2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444ae6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c9b7 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000004667f2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049989d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042af25 : rol ch, 1 ; jns 0x42af04 ; retf 0xead3
0x000000000042b075 : rol ch, 1 ; jns 0x42b054 ; retf 0xead3
0x000000000042b1c5 : rol ch, 1 ; jns 0x42b1a4 ; retf 0xead3
0x000000000042b315 : rol ch, 1 ; jns 0x42b2f4 ; retf 0xead3
0x000000000042b465 : rol ch, 1 ; jns 0x42b444 ; retf 0xead3
0x000000000042b5b5 : rol ch, 1 ; jns 0x42b594 ; retf 0xead3
0x000000000042b705 : rol ch, 1 ; jns 0x42b6e4 ; retf 0xead3
0x000000000042b855 : rol ch, 1 ; jns 0x42b834 ; retf 0xead3
0x000000000042b9a5 : rol ch, 1 ; jns 0x42b984 ; retf 0xead3
0x000000000042baf5 : rol ch, 1 ; jns 0x42bad4 ; retf 0xead3
0x000000000042bc45 : rol ch, 1 ; jns 0x42bc24 ; retf 0xead3
0x000000000042bd95 : rol ch, 1 ; jns 0x42bd74 ; retf 0xead3
0x000000000042bee5 : rol ch, 1 ; jns 0x42bec4 ; retf 0xead3
0x000000000042c035 : rol ch, 1 ; jns 0x42c014 ; retf 0xead3
0x000000000042c185 : rol ch, 1 ; jns 0x42c164 ; retf 0xead3
0x0000000000496325 : rol ch, 1 ; jns 0x496304 ; retf 0xead3
0x00000000004964a5 : rol ch, 1 ; jns 0x496484 ; retf 0xead3
0x0000000000496625 : rol ch, 1 ; jns 0x496604 ; retf 0xead3
0x00000000004967a5 : rol ch, 1 ; jns 0x496784 ; retf 0xead3
0x0000000000496925 : rol ch, 1 ; jns 0x496904 ; retf 0xead3
0x0000000000496aa5 : rol ch, 1 ; jns 0x496a84 ; retf 0xead3
0x0000000000496c25 : rol ch, 1 ; jns 0x496c04 ; retf 0xead3
0x0000000000496da5 : rol ch, 1 ; jns 0x496d84 ; retf 0xead3
0x0000000000496f25 : rol ch, 1 ; jns 0x496f04 ; retf 0xead3
0x00000000004970a5 : rol ch, 1 ; jns 0x497084 ; retf 0xead3
0x0000000000497225 : rol ch, 1 ; jns 0x497204 ; retf 0xead3
0x00000000004973a5 : rol ch, 1 ; jns 0x497384 ; retf 0xead3
0x0000000000497525 : rol ch, 1 ; jns 0x497504 ; retf 0xead3
0x00000000004976a5 : rol ch, 1 ; jns 0x497684 ; retf 0xead3
0x0000000000497825 : rol ch, 1 ; jns 0x497804 ; retf 0xead3
0x00000000004b7d40 : rol cl, 0xc2 ; ret
0x00000000004682cf : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004bde24 : rol dl, 1 ; std ; ljmp [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x000000000046674c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000004268a5 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000403d78 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x00000000004345d0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432ddb : rol dword ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x0000000000467488 : rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x0000000000400593 : rol dword ptr [rbx + rbp*8], 0xcc ; mov qword ptr [rdi], rcx ; ret
0x00000000004033fa : rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c2806 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000046b243 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044432d : rol ecx, 0xe1 ; add edx, ebx ; loopne 0x444397 ; pop rbp ; ret
0x0000000000426172 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4261b9 ; add rax, rdi ; ret
0x0000000000423b17 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000410aca : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473a89 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446e9a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000460504 : ror byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000049d6b8 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cee1 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049ca62 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046ae4c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ae7f ; ret
0x00000000004428b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479476 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401345 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b1f7 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047bc7c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf 0xf029
0x0000000000443225 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467c50 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f50d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dbfc : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f4fe : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000479ffe : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cd5c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426142 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488cd6 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488c19 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423b14 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae0e8 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004262e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488476 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046929a : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdbad
0x000000000045dd3a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b618 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426132 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426162 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426152 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041be47 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c166 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000004155fa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000479313 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000049d591 : ror byte ptr [rax - 0x77], 0xca ; jmp 0x49d56d
0x0000000000412ab5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a0b5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000459859 : ror byte ptr [rax - 0x77], 1 ; ret 0x9ee8
0x000000000040dbc9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046ac8f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000410b39 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420d82 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004179dd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413501 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413516 ; ret
0x000000000047ae39 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fe0f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ad70 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cce6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004787a8 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cf2e : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c8a5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb10c4
0x00000000004720c2 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472e4c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456ec2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a87a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000490d3e : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000475fcd : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449433 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469d0e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448974 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047ab2a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000488224 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dc5f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049d9ac : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000041b567 : ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x0000000000447cb0 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446ea9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447330 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048d21f : ror byte ptr [rcx + 0x39], cl ; retf
0x0000000000403b64 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046b1c3 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465232 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f79e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472575 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e134 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004116ca : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426a69 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044f7c2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000498f9d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004427bc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000004682f8 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041dedd : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046aff7 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f036 : ror byte ptr [rdi], 0x84 ; ret
0x00000000004113ae : ror byte ptr [rdi], 0x84 ; retf
0x000000000046f507 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b566 : ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b334 : ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000463d91 : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000479a0f : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045ed8f : ror byte ptr [rdi], 0x84 ; retf 3
0x00000000004466fc : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043827a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b6 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459eb9 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x000000000044b9b0 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044f8d6 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000457ec7 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490bf8 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044251c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c3ac : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047baea : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b4f7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x00000000004619c3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047ae3c : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485aa4 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047ba3d : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000040fcfa : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000046722f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x00000000004670ea : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f8e2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466d1e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fddc : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dbde : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dbc8 ; ret
0x00000000004a3c28 : ror byte ptr [rdi], 1 ; stc ; inc dword ptr [rax + 0xf] ; stc ; call rax
0x0000000000419309 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d8d5 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484347 : ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x000000000047bd5f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047be73 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457ec6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004a3478 : ror dl, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004345db : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000041b564 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x00000000004107e3 : ror dword ptr [rax + 0x29], cl ; ret
0x0000000000410b3c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041cb6a : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047bc9f : ror dword ptr [rax + 0x39], 1 ; retf 0x9e0f
0x0000000000467e40 : ror dword ptr [rax + 0xf], 0xaf ; retf
0x000000000040e14d : ror dword ptr [rax + 0xf], 1 ; retf 0x8548
0x000000000047d196 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047bc7f : ror dword ptr [rax + 1], cl ; retf 0xf029
0x00000000004239e4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423b09 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046586a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000472e9c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a303 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a480 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432ac2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045bbec : ror dword ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000047e2c1 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414c7d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x414c77 ; ret
0x0000000000463aed : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x463ae7 ; ret
0x000000000040eb68 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405372 : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000486f12 : ror dword ptr [rax], 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486eed
0x00000000004bc619 : ror dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x000000000044ef72 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000047fa55 : ror dword ptr [rcx + rcx*4 + 0xd], 1 ; retf
0x000000000042c965 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441e9e : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e0e6
0x0000000000441eac : ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41e0e6
0x0000000000441dfd : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41e0e6
0x0000000000441e0a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41e0e6
0x000000000043bda7 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004809e5 : ror dword ptr [rdi], 0x83 ; retf
0x000000000042f228 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f934 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f706 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042f686 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f9c4 : ror dword ptr [rdi], 0x85 ; je 0x42f9d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f4bb : ror dword ptr [rdi], 0x85 ; jno 0x42f4d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f583 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f200 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004681eb : ror dword ptr [rdi], 0x94 ; ret
0x00000000004890b8 : ror dword ptr [rdi], 0x95 ; ret 0xd348
0x0000000000414c7c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x414c78 ; ret
0x0000000000463aec : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x463ae8 ; ret
0x0000000000446ea4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000488496 : sahf ; and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a34b5 : sahf ; clc ; jmp rax
0x00000000004015ec : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b92e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479951 : sahf ; ret 0x148
0x00000000004b8c25 : sahf ; ret 0x38ae
0x00000000004510c0 : sahf ; ret 0x8348
0x000000000047bca4 : sahf ; ret 0xe8c1
0x000000000049b8d3 : sahf ; ret 0xf45
0x00000000004b975c : sahf ; retf
0x0000000000416a7e : sal bh, 0xd8 ; ret
0x000000000043e5d9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004229e7 : sal bh, 1 ; ret 0x8000
0x00000000004228a7 : sal bh, 1 ; ret 0xc000
0x0000000000422767 : sal bh, 1 ; ret 0xe000
0x0000000000422627 : sal bh, 1 ; ret 0xf000
0x00000000004224e7 : sal bh, 1 ; ret 0xf800
0x00000000004223a7 : sal bh, 1 ; ret 0xfc00
0x0000000000422267 : sal bh, 1 ; ret 0xfe00
0x0000000000422127 : sal bh, 1 ; ret 0xff00
0x0000000000421fe7 : sal bh, 1 ; ret 0xff80
0x0000000000421ea7 : sal bh, 1 ; ret 0xffc0
0x0000000000421d67 : sal bh, 1 ; ret 0xffe0
0x0000000000421c27 : sal bh, 1 ; ret 0xfff0
0x0000000000421ae7 : sal bh, 1 ; ret 0xfff8
0x00000000004219a7 : sal bh, 1 ; ret 0xfffc
0x0000000000421867 : sal bh, 1 ; ret 0xfffe
0x000000000045a4d4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466f3f : sal bl, 1 ; ret
0x00000000004735a2 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426128 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e1a3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e188 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458d0e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004428d1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000413504 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004428e1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004165d5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043dae0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000414c80 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e61b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dbe3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047409f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000466f7b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000047e3fd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004a33a0 : sal byte ptr [rbx - 8], 1 ; push qword ptr [rax + 0x75] ; clc ; call qword ptr [rax]
0x000000000041d5f7 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000423a5c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004730e7 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf 0x894c
0x00000000004428b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440dc2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004a3d78 : sal byte ptr [rdi - 7], 0xff ; sal byte ptr [rdi - 7], 1 ; jmp rax
0x00000000004a3d7c : sal byte ptr [rdi - 7], 1 ; jmp rax
0x00000000004657cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047639d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4763c2
0x0000000000423913 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a3d3c : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3d40 : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d6d1 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040db19 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b181 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000478d1f : sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x0000000000473f37 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004155f8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c10c9 : sal ebp, 1 ; call rdx
0x0000000000432ac5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a3789 : sar al, 1 ; jmp qword ptr [rax]
0x00000000004a37cd : sar al, cl ; jmp rax
0x0000000000485b8a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483f4c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484593 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d683 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471391 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a7dc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449e31 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3df8 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a3dff ; call qword ptr [rax]
0x000000000044dba9 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44dbbd ; call rax
0x000000000044427d : sar byte ptr [rcx], cl ; ret
0x0000000000474fa2 : sar byte ptr [rdi + 0x4b60bc], 0xe8 ; ret
0x000000000047502c : sar byte ptr [rdi + 0x4bc718], 0x83 ; ret
0x00000000004bdd80 : sar byte ptr [rdi], 0xfd ; call qword ptr [rax]
0x000000000046bc99 : sar byte ptr [rdx + 1], 0xeb ; retf
0x00000000004789b0 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x00000000004a09b6 : sar byte ptr [rsi + 0x22], cl ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004412ec : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c98c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b95bf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a3e18 : sar byte ptr [rsi - 7], 1 ; push rax ; jle 0x4a3e1f ; call qword ptr [rax]
0x00000000004420da : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x000000000044206e : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004bef00 : sar ch, 1 ; hlt ; call qword ptr [rdx]
0x00000000004c2f51 : sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004133a7 : sar dword ptr [rax + 2], 1 ; syscall
0x00000000004358a3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4358ae ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c6e : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004688cb : sar dword ptr [rdi], 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a354d : sar eax, 0xff ; jno 0x4a351c ; clc ; push rcx ; ret 0xfff8
0x00000000004a35c9 : sar eax, 0xff ; mov ebx, 0x3bfff8c1 ; ret 0xfff8
0x00000000004a358d : sar eax, 0xff ; push rsi ; ret 0xfff8
0x0000000000474461 : sar eax, 0xff ; xor eax, eax ; ret
0x00000000004a37c9 : sar eax, 1 ; call qword ptr [rax - 0x1f00072e]
0x0000000000464c5c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000047cdbb : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000441fd9 : sar ebp, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441f46 : sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b9323 : sar ecx, 1 ; jnp 0x4b92e4 ; ret
0x00000000004262e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464c5b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004262e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004c1538 : sbb ah, dh ; cmc ; call qword ptr [rdx]
0x00000000004c00cd : sbb al, 0 ; add byte ptr [rax], ah ; push rbp ; cmc ; call qword ptr [rcx]
0x000000000043ffe1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000049440a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494363 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c2b3c : sbb al, 0x47 ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; clc ; call qword ptr [rax]
0x0000000000418cc3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x00000000004c5f3c : sbb al, 0x7b ; add byte ptr [rax], al ; xor byte ptr [rdx - 6], dl ; jmp rsp
0x0000000000467c4e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000463263 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004ba622 : sbb al, 0x8c ; retf
0x00000000004c813c : sbb al, 0x9d ; add byte ptr [rax], al ; xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x0000000000470b79 : sbb al, 0xb8 ; retf 0
0x000000000049cab6 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a3815 : sbb al, 0xf9 ; call qword ptr [rax]
0x00000000004a3a11 : sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a38d5 : sbb al, 0xf9 ; jmp rdx
0x000000000047bfb0 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004bfefd : sbb al, byte ptr [rax] ; add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000004945ea : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460c05 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004945e9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a460 : sbb al, ch ; retf 0xc3
0x00000000004a38e5 : sbb bh, cl ; jmp qword ptr [rdx]
0x00000000004a3829 : sbb bh, cl ; jmp rax
0x00000000004c7169 : sbb bl, bh ; call qword ptr [rax]
0x00000000004b93b2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b80a5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000478614 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049ed9b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041087a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047ae36 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004717db : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000478615 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417243 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048dcf8 : sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000410b36 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043eada : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448171 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000410503 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000041825b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000004099be : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x000000000040922d : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x000000000040d83a : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf 0xfffb
0x0000000000414ce1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490a46 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416552 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000049114e : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000416577 : sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x00000000004105d1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041df77 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412653 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ed9c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c7de : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449514 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c7dd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000047876b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000041559f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043f361 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004947ca : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000464f85 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444a59 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416df3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cc21 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410c99 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416617 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004bddb0 : sbb byte ptr [rbx - 3], 0xff ; rcr byte ptr [rbp - 3], 1 ; jmp qword ptr [rax]
0x0000000000419037 : sbb byte ptr [rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x000000000044fe01 : sbb byte ptr [rcx + 0x29], cl ; retf
0x0000000000464acb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004716f9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b6b9 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000465063 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041cb73 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410b73 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041087b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000004a3a2c : sbb byte ptr [rcx], 0xf9 ; jmp qword ptr [rax]
0x000000000047fa53 : sbb byte ptr [rcx], bh ; ror dword ptr [rcx + rcx*4 + 0xd], 1 ; retf
0x00000000004650b7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047ae37 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000497fdd : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000404124 : sbb byte ptr [rdi], cl ; retf
0x000000000041e692 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c19e8 : sbb byte ptr [rsi - 0xa], cl ; jmp rbx
0x0000000000419036 : sbb byte ptr cs:[rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x0000000000412d05 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004235dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cd9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004234e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bcca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b299 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423689 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042302d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b78a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afaa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042350d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d9f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004230fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429b33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a833 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a353 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bfbb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ab73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429993 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a693 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041881f : sbb cl, ch ; retf
0x00000000004c5691 : sbb dl, bh ; jmp qword ptr [rax]
0x0000000000476b6f : sbb dl, dh ; jmp r11
0x0000000000494708 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cc8c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494691 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494709 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442844 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000049270e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000453458 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x0000000000418ee2 : sbb dword ptr [rbx], ebp ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004ba95d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004550b6 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d7b7 : sbb eax, -1 ; ret
0x0000000000442aa5 : sbb eax, 0 ; leave ; ret
0x00000000004a3a0d : sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3849 : sbb eax, 0x1d46fff9 ; stc ; call rsi
0x00000000004a3325 : sbb eax, 0x1eb0fff8 ; clc ; jmp rax
0x000000000049ed20 : sbb eax, 0x22d85b ; jne 0x49ed10 ; pop rbx ; ret
0x00000000004b93b3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000049426d : sbb eax, 0x894d0000 ; retf
0x000000000040121d : sbb eax, 0xb8004a12 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000412825 : sbb eax, 0xf48004a ; ret 0x294d
0x0000000000412579 : sbb eax, 0xf48004a ; ret 0x8948
0x00000000004944b1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494529 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004924be : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000478a7a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049ca61 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d7b5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004c2b41 : sbb eax, edi ; call qword ptr [rax]
0x00000000004ba4c8 : sbb ebp, ebx ; retf
0x000000000047b7e9 : sbb ebx, 0x89000001 ; ret
0x000000000045c540 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446bb7 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a38b1 : sbb ecx, edi ; call rdx
0x00000000004a3a2d : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a3831 : sbb ecx, edi ; jmp rsi
0x00000000004a382d : sbb ecx, edi ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004ba259 : sbb edi, ebp ; retf
0x00000000004a38e1 : sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a385d : sbb edi, ecx ; call qword ptr [rsi]
0x00000000004a3a1d : sbb edi, ecx ; call rax
0x00000000004a3a19 : sbb edi, ecx ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a399d : sbb edi, ecx ; jmp rsp
0x000000000049694f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049664f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049754f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c922d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; push rax ; push rax ; std ; jmp qword ptr [rbx]
0x0000000000425bfd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049784f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bd1e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004c65a9 : scasb al, byte ptr [rdi] ; cli ; call rdx
0x0000000000496f4f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba909 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000496c4f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000040502e : scasb al, byte ptr [rdi] ; retf
0x000000000042be1d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042569d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004013a4 : scasd eax, dword ptr [rdi] ; ret
0x000000000041071c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e2fa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420d88 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004014c3 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e2e5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044fac0 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048847d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467e43 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488481 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x00000000004b9634 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b88af : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004428bc : setae al ; ret
0x0000000000416a7c : setne al ; neg eax ; ret
0x0000000000444280 : setne dl ; jmp 0x444268
0x0000000000465ea5 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004c6ba0 : shl bl, 1 ; cli ; jmp qword ptr [rdx]
0x000000000044e165 : shl byte ptr [rcx + 0x4a], 0 ; test rax, rax ; je 0x44e179 ; call rax
0x0000000000497d9d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d9ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042165b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043bda3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004215d5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fbbb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fbd2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465a46 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465a57 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fab1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3380 : shl byte ptr [rsi - 8], 1 ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004af310 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b91bd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b94a8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000043d9e2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042165f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000465a42 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043d85b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042fb36 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fbed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fb51 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f4c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042fa11 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444331 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044432e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000478fdc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478f67 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478f36 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c961 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004763a1 : shl edx, 5 ; add rdx, rax ; jmp 0x4763be
0x0000000000478fdb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478f66 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478f35 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004763a0 : shl rdx, 5 ; add rdx, rax ; jmp 0x4763bf
0x000000000047639f : shl rdx, 5 ; add rdx, rax ; jmp 0x4763c0
0x00000000004b8a64 : shr al, cl ; add al, 0x3d ; retf
0x00000000004a36a8 : shr bl, 1 ; clc ; call rax
0x000000000046a99f : shr bl, cl ; ret
0x0000000000445d6d : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x000000000042e61f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000467486 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x000000000044c928 : shr byte ptr [rcx], cl ; ret
0x00000000004682e0 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004262eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004ba867 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004c73c0 : shr byte ptr [rdx], 1 ; sti ; call rsp
0x00000000004a36a4 : shr cl, 1 ; clc ; call rax
0x000000000045ed37 : shr cl, cl ; ret
0x000000000043df06 : shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000426d79 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e50a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e4e9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004790ec : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479071 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000479040 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464d63 : shr edx, 2 ; sub eax, edx ; ret
0x00000000004790eb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479070 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000047903f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464d62 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae4e9 : sldt word ptr [rax] ; ret
0x0000000000445dfc : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a822 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a3a0e : stc ; call qword ptr [rax + 0x20fff91c]
0x00000000004a37f6 : stc ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3816 : stc ; call qword ptr [rax]
0x00000000004a38e2 : stc ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a38c2 : stc ; call qword ptr [rdx]
0x00000000004a383e : stc ; call qword ptr [rsi + 0x26fff91e]
0x00000000004a385e : stc ; call qword ptr [rsi]
0x00000000004a3806 : stc ; call rax
0x0000000000467079 : stc ; call rbx
0x00000000004c460a : stc ; call rdi
0x00000000004a38b2 : stc ; call rdx
0x00000000004a384e : stc ; call rsi
0x00000000004a397a : stc ; call rsp
0x000000000047ab22 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487a47 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485cfa : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3a1a : stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3802 : stc ; inc dword ptr [rax + 0x1e] ; stc ; call rax
0x00000000004a3c2a : stc ; inc dword ptr [rax + 0xf] ; stc ; call rax
0x00000000004a37f2 : stc ; inc dword ptr [rax] ; and cl, bh ; call qword ptr [rax + 0x20fff91f]
0x00000000004a3d4a : stc ; inc dword ptr [rax] ; ja 0x4a3d4d ; call qword ptr [rax]
0x00000000004a3da2 : stc ; inc dword ptr [rax] ; jns 0x4a3da5 ; jmp qword ptr [rax]
0x00000000004a3d82 : stc ; inc dword ptr [rax] ; js 0x4a3d85 ; jmp qword ptr [rax]
0x00000000004a3a0a : stc ; inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3b9e : stc ; inc dword ptr [rcx + rdx] ; stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3976 : stc ; inc dword ptr [rdi + rbx - 7] ; call rsp
0x00000000004a38de : stc ; inc dword ptr [rdx] ; sbb edi, ecx ; call qword ptr [rdx + 0x22fff91a]
0x00000000004a384a : stc ; inc dword ptr [rsi + 0x1d] ; stc ; call rsi
0x00000000004a3d76 : stc ; inc eax ; ja 0x4a3d79 ; call rax
0x00000000004a3d3a : stc ; inc eax ; jbe 0x4a3d3d ; call rax
0x00000000004a3dce : stc ; inc eax ; jl 0x4a3dd1 ; call rax
0x00000000004a3d9a : stc ; inc eax ; js 0x4a3d9d ; jmp rax
0x000000000042add2 : stc ; je 0x42ad9e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496192 : stc ; je 0x49615e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a3a6a : stc ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a37fa : stc ; jmp qword ptr [rax]
0x00000000004a3ada : stc ; jmp qword ptr [rdx + 0x22fff911]
0x00000000004a3ad2 : stc ; jmp qword ptr [rdx + 0x22fff912]
0x00000000004a3aca : stc ; jmp qword ptr [rdx + 0x22fff913]
0x00000000004a3ac2 : stc ; jmp qword ptr [rdx + 0x22fff914]
0x00000000004a3aba : stc ; jmp qword ptr [rdx + 0x22fff915]
0x00000000004a38e6 : stc ; jmp qword ptr [rdx]
0x00000000004a3842 : stc ; jmp qword ptr [rsi]
0x00000000004a382a : stc ; jmp rax
0x00000000004a38d6 : stc ; jmp rdx
0x00000000004a3832 : stc ; jmp rsi
0x00000000004a399e : stc ; jmp rsp
0x00000000004b9324 : stc ; jnp 0x4b92e3 ; ret
0x0000000000432478 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d847 : stc ; mov r15, rax ; jmp 0x46d815
0x00000000004a3a16 : stc ; push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3ba2 : stc ; push qword ptr [rax + rdx - 7] ; jmp rsp
0x00000000004a3dca : stc ; push qword ptr [rax - 0x3f000684] ; jl 0x4a3dd5 ; call rax
0x00000000004a3d36 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3d41 ; call rax
0x00000000004a3a66 : stc ; push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x16fff90f]
0x00000000004a3972 : stc ; push qword ptr [rdi + rbx + 0x1f44fff9] ; stc ; call rsp
0x00000000004a382e : stc ; push qword ptr [rsi + 0x19] ; stc ; jmp rsi
0x00000000004a3c36 : stc ; push rax ; adc eax, 0x1560fff9 ; stc ; jmp rax
0x00000000004a3d46 : stc ; push rax ; jbe 0x4a3d4d ; inc dword ptr [rax] ; ja 0x4a3d51 ; call qword ptr [rax]
0x00000000004a3dfa : stc ; push rax ; jge 0x4a3dfd ; call qword ptr [rax]
0x00000000004a3dd6 : stc ; push rax ; jl 0x4a3dd9 ; call qword ptr [rax]
0x00000000004a3e1a : stc ; push rax ; jle 0x4a3e1d ; call qword ptr [rax]
0x000000000040dc35 : stc ; syscall
0x0000000000435da4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041d1a2 : std ; add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x00000000004bdda2 : std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bddf2 : std ; call qword ptr [rax - 0x2f000244]
0x00000000004bdde2 : std ; call qword ptr [rax - 0x2f00024d]
0x00000000004bddd2 : std ; call qword ptr [rax - 0x2f000256]
0x00000000004bddc2 : std ; call qword ptr [rax - 0x2f00025f]
0x00000000004bdd82 : std ; call qword ptr [rax]
0x00000000004c3d6a : std ; call qword ptr [rbx]
0x00000000004bddc6 : std ; call rax
0x00000000004c707a : std ; call rcx
0x00000000004bde7a : std ; call rdx
0x00000000004be33e : std ; call rsp
0x00000000004bdf36 : std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x00000000004402ac : std ; dec dword ptr [rax - 0x75] ; jge 0x4402b8 ; call rbx
0x000000000044055f : std ; dec dword ptr [rax - 0x75] ; jge 0x44056b ; call rbx
0x00000000004420f7 : std ; dec dword ptr [rax - 0x75] ; jge 0x442103 ; call rbx
0x000000000043f7c1 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044016a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044056d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440177 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440183 ; call rbx
0x000000000044029e : std ; dec dword ptr [rcx - 0x75] ; jge 0x4402aa ; call rbx
0x00000000004403e1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4403ed ; call rbx
0x0000000000440551 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44055d ; call rbx
0x0000000000441d6f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441d7b ; call rbx
0x0000000000441e97 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441ea3 ; call rbx
0x0000000000441fda : std ; dec dword ptr [rcx - 0x75] ; jge 0x441fe6 ; call rbx
0x00000000004420db : std ; dec dword ptr [rcx - 0x75] ; jge 0x4420e7 ; call rbx
0x00000000004403df : std ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4403ef ; call rbx
0x00000000004beee9 : std ; hlt ; call qword ptr [rax]
0x00000000004bef01 : std ; hlt ; call qword ptr [rdx]
0x00000000004bdd9e : std ; inc dword ptr [rax + 0x52] ; std ; call qword ptr [rax - 0x1f0002ac]
0x00000000004bdd26 : std ; inc dword ptr [rax + 0x79] ; std ; jmp qword ptr [rax]
0x00000000004bddae : std ; inc dword ptr [rax - 0x2f0002a5] ; pop rbp ; std ; jmp qword ptr [rax]
0x00000000004bdd2e : std ; inc dword ptr [rax] ; jge 0x4bdd35 ; jmp rax
0x00000000004bdd0e : std ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; std ; jmp rax
0x000000000047359f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bde2a : std ; inc eax ; ret 0xfffd
0x000000000047824e : std ; jbe 0x47825b ; ret
0x00000000004bdd0a : std ; jmp qword ptr [rax]
0x00000000004c9232 : std ; jmp qword ptr [rbx]
0x00000000004bde4e : std ; jmp qword ptr [rdx - 0x1d00023a]
0x00000000004c2f52 : std ; jmp qword ptr [rdx]
0x00000000004bdd12 : std ; jmp rax
0x00000000004bde52 : std ; jmp rdx
0x00000000004bdf3a : std ; jmp rsp
0x00000000004bde8a : std ; lcall [rax] ; retf
0x00000000004bde82 : std ; lcall [rdi - 0x4000236] ; retf
0x00000000004bde26 : std ; ljmp [rax - 0x3e] ; std ; inc eax ; ret 0xfffd
0x00000000004bde12 : std ; ljmp [rax] ; ret
0x00000000004be33a : std ; ljmp [rbx + rbp*8] ; std ; call rsp
0x00000000004be336 : std ; ljmp [rbx + rbp*8] ; std ; ljmp [rbx + rbp*8] ; std ; call rsp
0x00000000004bdf32 : std ; ljmp [rdi + rdx*8] ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x000000000046a886 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000041345c : std ; mov eax, 3 ; syscall
0x000000000047d638 : std ; mov r15, rax ; jmp 0x47d652
0x000000000043f75f : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x0000000000431c9b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bddfa : std ; push qword ptr [rax + 0x38fffd9d] ; ret 0xfffd
0x00000000004bde0a : std ; push qword ptr [rax + 0x38fffdc2] ; ret 0xfffd
0x00000000004bde72 : std ; push rax ; enter -3, 0x60 ; leave ; std ; call rdx
0x00000000004ba25a : std ; retf
0x0000000000458af1 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440dc0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000048915b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c716a : sti ; call qword ptr [rax]
0x00000000004c73c2 : sti ; call rsp
0x000000000046bde7 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474804 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004664f5 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000463d8d : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000044e486 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004586be : sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x00000000004c6f62 : sti ; jmp qword ptr [rdx]
0x00000000004c6df2 : sti ; jmp rsi
0x0000000000432078 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043f6c3 : sti ; mov eax, 0x48 ; syscall
0x000000000046a601 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044cbbb : sti ; mov eax, 3 ; syscall
0x0000000000446569 : sti ; ret
0x000000000048ee96 : sti ; ret 0xffbf
0x00000000004bde88 : sti ; retf
0x000000000044f027 : sti ; test rax, rax ; je 0x44f035 ; call rax
0x0000000000440010 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000443453 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004a34dd : stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004b9984 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004091e2 : stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004bddd5 : stosb byte ptr [rdi], al ; std ; call rax
0x00000000004684c8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004684c9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000444242 : stosb byte ptr [rdi], al ; xchg eax, ecx ; sub byte ptr [rax], al ; test eax, eax ; je 0x444258 ; ret
0x000000000047abaf : stosd dword ptr [rdi], eax ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000041af04 : stosd dword ptr [rdi], eax ; and ecx, dword ptr [rdx] ; call 0x417156
0x00000000004baa8c : stosd dword ptr [rdi], eax ; ret
0x00000000004ba98a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x000000000046bde6 : stosd dword ptr [rdi], eax ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004684c7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bae71 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000469eff : sub ah, byte ptr [rsi] ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000469efe : sub ah, byte ptr ss:[rsi] ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004c10c5 : sub al, 0 ; add al, bl ; sal ebp, 1 ; call rdx
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040158e : sub al, 0 ; xor eax, eax ; ret
0x00000000004553bc : sub al, 0x4b ; add al, ch ; cld ; ret
0x0000000000455ef5 : sub al, 0x4b ; add al, ch ; ret
0x000000000045fdf6 : sub al, 0x4b ; add al, ch ; ret 0xfa19
0x00000000004c2f4c : sub al, 0x4b ; add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x0000000000444268 : sub al, 0x5d ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000442c8a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c7e4c : sub al, 0x9a ; add byte ptr [rax], al ; xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x000000000042f203 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bdf34 : sub al, 0xd7 ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x00000000004be33c : sub al, 0xeb ; std ; call rsp
0x00000000004be338 : sub al, 0xeb ; std ; ljmp [rbx + rbp*8] ; std ; call rsp
0x000000000041dccd : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041dcf9 : sub al, byte ptr [rax] ; push rax ; retf 0x41
0x000000000041f0f3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f103 ; call rax
0x0000000000480ec1 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045fe93 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f93a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463f5c : sub bh, bh ; loopne 0x463ef9 ; mov eax, 0xffffffff ; ret
0x00000000004c73c1 : sub bh, bl ; call rsp
0x00000000004bde20 : sub bl, al ; std ; call rax
0x00000000004bde14 : sub bl, al ; std ; ljmp [rax] ; ret
0x000000000049e171 : sub bl, dh ; ret
0x000000000049e170 : sub bl, r14b ; ret
0x000000000041087e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dcbc : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046caa6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045d370 : sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000483ca7 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041087f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466b90 : sub byte ptr [rax - 0x73], cl ; je 0x466bbf ; call rbx
0x000000000041c6bb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041ebb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040564f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004105d5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462e2c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042572d : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d4b9 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048221c : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041aca5 : sub byte ptr [rax], 0x4a ; add byte ptr [rax + 2], bh ; syscall
0x000000000044280d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478701 : sub byte ptr [rax], al ; jne 0x478718 ; add rsp, 0x38 ; ret
0x000000000044426a : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000445795 : sub byte ptr [rax], al ; ret
0x0000000000444244 : sub byte ptr [rax], al ; test eax, eax ; je 0x444256 ; ret
0x000000000043fe85 : sub byte ptr [rax], al ; test rax, rax ; je 0x43fe96 ; ret
0x000000000040db9a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414960 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444223 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444222 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bf5d2 : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x000000000046557f : sub byte ptr [rbx], cl ; call 0x401805
0x000000000044d0da : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000049af61 : sub byte ptr [rcx - 0x77], cl ; xchg dword ptr [rax - 0x17000000], esp ; retf
0x0000000000488034 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041eccc : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b09b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004c1d28 : sub byte ptr [rdx - 9], al ; call qword ptr [rax]
0x000000000041aca6 : sub byte ptr [rdx], cl ; mov eax, 2 ; syscall
0x000000000047bb5d : sub cl, al ; call 0xffffffff8a09e488
0x000000000047c4b4 : sub cl, al ; call 0xffffffff8a09eddf
0x0000000000471c7e : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000004684ca : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414145 : sub cl, ch ; ret 0xfffe
0x0000000000476f0a : sub dl, dh ; call r11
0x00000000004b982d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000415a5b : sub dword ptr [rax + 0x39], ecx ; retf
0x000000000046dcc9 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x00000000004ba4c2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004302c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4302dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43042d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43057d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43081d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43096d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43114d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43129d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4313ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43153d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430223 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043021f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000042f9e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004bad7a : sub dword ptr [rsi], 0x76 ; retf
0x0000000000469f7b : sub dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000469f70 : sub dword ptr [rsi], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041eca9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004114fe : sub eax, 0x29480005 ; ret
0x000000000041cb42 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045d441 : sub eax, 0x83000000 ; ret
0x00000000004b84c6 : sub eax, 0xea4ca798 ; retf
0x000000000043ed5c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d544 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043dc34 : sub eax, 1 ; ret
0x00000000004784a6 : sub eax, dword ptr [0] ; ret
0x0000000000416a09 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416996 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5c05], 1 ; ret
0x0000000000416905 : sub eax, dword ptr [rax] ; ret
0x0000000000417ed2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ee2 ; call rax
0x000000000040185f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499fc1 : sub eax, dword ptr [rcx + r8*4] ; je 0x499fa7 ; ret
0x0000000000499fc2 : sub eax, dword ptr [rcx + rax*4] ; je 0x499fa6 ; ret
0x000000000041713e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e65a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e646 ; ret
0x00000000004165f3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004152ad : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466bcb : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415d29 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000047a69d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000422a4c : sub eax, ecx ; ret
0x0000000000423b19 : sub eax, edi ; ret
0x0000000000473885 : sub eax, edx ; mov rdi, rax ; call 0x400357
0x0000000000412cae : sub eax, edx ; ret
0x000000000043dde7 : sub eax, edx ; vzeroupper ; ret
0x000000000041540e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412b08 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b971e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b81b5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479685 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044432c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000442851 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416620 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416615 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426174 : sub edx, eax ; jbe 0x4261b7 ; add rax, rdi ; ret
0x0000000000426184 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426194 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004261a4 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000004421e1 : sub edx, esi ; mov eax, r12d ; syscall
0x00000000004106b2 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004122c4 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000474754 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046ad92 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415e54 : sub esp, 0x80 ; call 0x4428c8
0x000000000046a4cb : sub esp, 0x98 ; syscall
0x00000000004a1121 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046aab6 : sub esp, 8 ; syscall
0x0000000000415d28 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000417ed1 : sub r8d, dword ptr [r8] ; test rax, rax ; je 0x417ee3 ; call rax
0x000000000043dc33 : sub rax, 1 ; ret
0x00000000004784a5 : sub rax, qword ptr [0] ; ret
0x000000000041713d : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004784a4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466bca : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423b18 : sub rax, rdi ; ret
0x0000000000473884 : sub rax, rdx ; mov rdi, rax ; call 0x400358
0x0000000000412cad : sub rax, rdx ; ret
0x000000000043dde6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426173 : sub rdx, rax ; jbe 0x4261b8 ; add rax, rdi ; ret
0x00000000004421e0 : sub rdx, rsi ; mov eax, r12d ; syscall
0x00000000004106b1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004122c3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046ad91 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415e53 : sub rsp, 0x80 ; call 0x4428c9
0x000000000046a4ca : sub rsp, 0x98 ; syscall
0x00000000004a1120 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046aab5 : sub rsp, 8 ; syscall
0x00000000004003da : syscall
0x000000000044391f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046d8d7 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494d58 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495c58 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494b78 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495a78 : test ah, dl ; add eax, 0x894d0000 ; retf
0x0000000000415729 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a1b3 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c483 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c5588 : test al, 0x14 ; cli ; jmp rdx
0x00000000004bf708 : test al, 0x25 ; cmc ; jmp qword ptr [rsi]
0x00000000004be728 : test al, 0x38 ; hlt ; call qword ptr [rdx]
0x000000000041d746 : test al, 0x6c ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x000000000041d1a4 : test al, 0x6c ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x000000000041db9d : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x000000000044e484 : test al, 0x75 ; sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004b8a77 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c3a18 : test al, 0x9a ; clc ; call qword ptr [rdx]
0x00000000004b845e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047dcad : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000442457 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000442519 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a34d9 : test al, 0xf8 ; inc dword ptr [rax] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004bddd1 : test al, 0xfd ; call qword ptr [rax - 0x2f000256]
0x000000000043f5d6 : test al, 2 ; cmove eax, edx ; ret
0x00000000004107f3 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000049329c : test al, ah ; or eax, 0x894d0000 ; retf
0x0000000000497d9c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e61a : test al, al ; jne 0x42e608 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000049869c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004924bc : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a33cd : test al, bh ; inc eax ; test eax, edi ; call qword ptr [rax]
0x000000000041a750 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000492bac : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004213d6 : test ax, 1 ; ret
0x0000000000484349 : test bh, bl ; retf 0xffff
0x00000000004bb384 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004466fe : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004191f4 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x00000000004b9831 : test bh, dl ; retf 0xdf7f
0x000000000046b1d3 : test bl, bl ; je 0x46b1c6 ; ret
0x000000000045bd73 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004751c5 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043f598 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000451e96 : test byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000047c5c3 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004bf8a4 : test byte ptr [rax + rax], dl ; add byte ptr [rax], cl ; cmc ; call qword ptr [rax]
0x00000000004947c8 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000047bb99 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004671ee : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004422ae : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000440681 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440dc4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004751c6 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fcc1 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498d5c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c690d : test byte ptr [rax], al ; add byte ptr [rax - 0x28], dh ; cli ; jmp rdi
0x000000000043bf7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043b3ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041692a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411efa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442e08 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004168ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e4ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bdba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049965c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049845c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046627c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000444d28 : test byte ptr [rax], bh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000049304c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041930b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466294 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a9c6 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004952f8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449416 : test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x0000000000417606 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047adba : test byte ptr [rbx + 0x251c033d], 0 ; jmp rax
0x00000000004954d8 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e1e7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x00000000004494fc : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041782e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000004956b8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000004500f2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049c9f2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000467073 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000004c65a4 : test byte ptr [rcx - 0x51e80000], al ; cli ; call rdx
0x0000000000457b5a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000440012 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047e9ad : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x000000000047e64d : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000422dc6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7af5 : test byte ptr [rcx], al ; ret
0x0000000000495898 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x0000000000418097 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fbae : test byte ptr [rdi], 0x84 ; ret
0x000000000044048a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047175e : test byte ptr [rdi], 0x85 ; ret
0x000000000045e10d : test byte ptr [rdi], 0x88 ; retf
0x000000000047bc77 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486c1d : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465ebc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465ea4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004115f4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004945e8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004738be : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046575d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048b209 : test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x0000000000494998 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405a95 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004239fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000040042b : test byte ptr [rsi], bl ; add byte ptr [rax + 2], dil ; syscall
0x00000000004967ce : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004964ce : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x00000000004976ce : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496dce : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004970ce : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044e66d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494408 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e4d2 : test ch, 0xf0 ; je 0x43e4cb ; movzx eax, cl ; pop rbx ; ret
0x000000000044f186 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x000000000041dedf : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049426b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000432dda : test cl, al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x70e
0x0000000000445dfb : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a821 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000423e66 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424166 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425066 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424d66 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000424a66 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424766 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d8bf : test cl, cl ; jne 0x43d8b4 ; ret
0x000000000043d96f : test cl, cl ; jne 0x43d964 ; ret
0x000000000043dc2f : test cl, cl ; jne 0x43dc28 ; sub rax, 1 ; ret
0x0000000000420856 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4c9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x00000000004688ad : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446c75 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044dd06 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043be04 : test dl, 0x40 ; jne 0x43bdc9 ; lea rax, [rdi + 7] ; ret
0x000000000043be32 : test dl, 4 ; jne 0x43bdc9 ; lea rax, [rdi + 3] ; ret
0x000000000041a7a5 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041d209 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040dbe2 : test dl, dl ; jne 0x40dbc4 ; ret
0x000000000043dadf : test dl, dl ; jne 0x43dad8 ; lea rax, [rcx - 1] ; ret
0x0000000000426d39 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460c2b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047dd74 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x00000000004c6a05 : test dword ptr [rax], eax ; add byte ptr [rax - 0x24], bl ; cli ; call rsi
0x000000000045c7b9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b1fb : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b1fa : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c6af : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f4e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f936 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ebe9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418430 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451dcb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004260ea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426a50 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000004101a6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f4bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f2dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004503be : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000040420c : test dword ptr [rcx], 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000041b50a : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dc5a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426c3a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f860 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047ce63 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000449fde : test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000045b3ac : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c4c5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f984 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f202 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004466ff : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440e2d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d642 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c7ae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f708 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b990d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba760 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432e76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004427bb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be420 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402d12 : test eax, eax ; je 0x402d26 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f61 : test eax, eax ; je 0x402f7f ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403155 : test eax, eax ; je 0x403173 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403570 : test eax, eax ; je 0x403584 ; mov edi, 0x6cc0a0 ; call rax
0x00000000004036b8 : test eax, eax ; je 0x4036cc ; mov edi, 0x6cc0a0 ; call rax
0x0000000000417df8 : test eax, eax ; je 0x417e03 ; pop rbx ; ret
0x0000000000417ed5 : test eax, eax ; je 0x417edf ; call rax
0x000000000041f0f6 : test eax, eax ; je 0x41f100 ; call rax
0x00000000004237d3 : test eax, eax ; je 0x4237df ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e746 : test eax, eax ; je 0x43e75a ; mov edi, 0x6cc720 ; call rax
0x000000000043e75e : test eax, eax ; je 0x43e772 ; mov edi, 0x6cc720 ; call rax
0x000000000043fe88 : test eax, eax ; je 0x43fe93 ; ret
0x00000000004440bf : test eax, eax ; je 0x4440d3 ; mov edi, 0x6cb140 ; call rax
0x0000000000444246 : test eax, eax ; je 0x444254 ; ret
0x000000000044da7e : test eax, eax ; je 0x44da92 ; mov edi, 0x6cc720 ; call rax
0x000000000044daad : test eax, eax ; je 0x44dac9 ; mov edi, 0x6cc720 ; call rax
0x000000000044dbae : test eax, eax ; je 0x44dbb8 ; call rax
0x000000000044dc0d : test eax, eax ; je 0x44dc21 ; mov edi, 0x6cc720 ; call rax
0x000000000044dd86 : test eax, eax ; je 0x44dda1 ; mov edi, 0x6cc720 ; call rax
0x000000000044e066 : test eax, eax ; je 0x44e07a ; mov edi, 0x6cc720 ; call rax
0x000000000044e16a : test eax, eax ; je 0x44e174 ; call rax
0x000000000044f029 : test eax, eax ; je 0x44f033 ; call rax
0x0000000000470dc2 : test eax, eax ; je 0x470dd6 ; mov edi, 0x6cb100 ; call rax
0x0000000000474db6 : test eax, eax ; je 0x474dca ; mov edi, 0x6cb140 ; call rax
0x0000000000474dde : test eax, eax ; je 0x474df2 ; mov edi, 0x6cb140 ; call rax
0x0000000000474e54 : test eax, eax ; je 0x474e68 ; mov edi, 0x6cb140 ; call rax
0x0000000000476921 : test eax, eax ; je 0x476999 ; mov edi, 0x6cb140 ; call rax
0x00000000004782dc : test eax, eax ; je 0x4782ab ; mov edi, 0x6cb140 ; call rax
0x000000000047843a : test eax, eax ; je 0x47844e ; mov edi, 0x6cb140 ; call rax
0x000000000047b180 : test eax, eax ; je 0x47b198 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e856 : test eax, eax ; je 0x47e86a ; mov edi, 0x6cb140 ; call rax
0x000000000047e882 : test eax, eax ; je 0x47e896 ; mov edi, 0x6cb140 ; call rax
0x0000000000488000 : test eax, eax ; je 0x488014 ; mov edi, 0x6cb140 ; call rax
0x00000000004880a8 : test eax, eax ; je 0x4880bc ; mov edi, 0x6cb140 ; call rax
0x000000000049ea28 : test eax, eax ; je 0x49ea3c ; mov edi, 0x6cb100 ; call rax
0x000000000049eae9 : test eax, eax ; je 0x49eafd ; mov edi, 0x6cb100 ; call rax
0x00000000004a078c : test eax, eax ; je 0x4a079b ; call rax
0x00000000004165d4 : test eax, eax ; jne 0x4165cd ; ret
0x0000000000426127 : test eax, eax ; jne 0x426187 ; xor rax, rax ; ret
0x00000000004428e0 : test eax, eax ; jne 0x4428db ; pop rdx ; pop r10 ; ret
0x000000000047409e : test eax, eax ; jne 0x474075 ; ret
0x000000000049e187 : test eax, eax ; jne 0x49e195 ; ret
0x000000000049e1a2 : test eax, eax ; jne 0x49e1b5 ; ret
0x000000000049e3c2 : test eax, eax ; jne 0x49e3d5 ; ret
0x0000000000471390 : test eax, eax ; js 0x47139d ; pop rbx ; ret
0x000000000047a7db : test eax, eax ; js 0x47a7ed ; ret
0x000000000046b1c2 : test eax, eax ; mov rax, r9 ; jne 0x46b220 ; ret
0x00000000004a33d1 : test eax, edi ; call qword ptr [rax]
0x0000000000426050 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000473812 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000445d6a : test ebx, ebx ; jne 0x445d45 ; jmp 0x445d37
0x000000000047aafe : test ebx, ebx ; jne 0x47ab18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ebb0 : test ebx, ebx ; mov rdi, rbx ; jne 0x49eba8 ; pop rbx ; ret
0x000000000041a7af : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bdf2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000466f39 : test ecx, ecx ; jne 0x466ef8 ; mov rax, rdx ; ret
0x000000000046b211 : test ecx, ecx ; jne 0x46b1c7 ; xor eax, eax ; ret
0x00000000004472fc : test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041e694 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421380 : test edi, edi ; je 0x421399 ; mov eax, 0x16 ; ret
0x000000000042016c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004239b2 : test edx, edx ; je 0x4239c0 ; bsf eax, edx ; ret
0x00000000004239b2 : test edx, edx ; je 0x4239c1 ; bsf eax, edx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a77 ; bsf rax, rdx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a78 ; bsf rax, rdx ; ret
0x00000000004657ca : test edx, edx ; je 0x4657f7 ; bsf rax, rdx ; ret
0x00000000004657ca : test edx, edx ; je 0x4657f8 ; bsf rax, rdx ; ret
0x0000000000413503 : test edx, edx ; jne 0x413514 ; ret
0x0000000000414c7f : test edx, edx ; jne 0x414c75 ; ret
0x0000000000463aef : test edx, edx ; jne 0x463ae5 ; ret
0x0000000000466f7a : test edx, edx ; jne 0x466f75 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000040eddb : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d213 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bde5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040dc13 : test esi, esi ; jne 0x40dc51 ; mov eax, 0xba ; syscall
0x00000000004656c1 : test esi, esi ; jne 0x4656d0 ; xor rax, rax ; ret
0x000000000043bdff : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b1d2 : test r11b, r11b ; je 0x46b1c7 ; ret
0x000000000047409d : test r8, r8 ; jne 0x474076 ; ret
0x00000000004237d2 : test r8d, r8d ; je 0x4237e0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b1c1 : test r8d, r8d ; mov rax, r9 ; jne 0x46b221 ; ret
0x0000000000466f38 : test r9d, r9d ; jne 0x466ef9 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417df7 : test rax, rax ; je 0x417e04 ; pop rbx ; ret
0x0000000000417ed4 : test rax, rax ; je 0x417ee0 ; call rax
0x000000000041f0f5 : test rax, rax ; je 0x41f101 ; call rax
0x000000000043fe87 : test rax, rax ; je 0x43fe94 ; ret
0x000000000044dbad : test rax, rax ; je 0x44dbb9 ; call rax
0x000000000044e169 : test rax, rax ; je 0x44e175 ; call rax
0x000000000044f028 : test rax, rax ; je 0x44f034 ; call rax
0x000000000047b17f : test rax, rax ; je 0x47b199 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a078b : test rax, rax ; je 0x4a079c ; call rax
0x00000000004165d3 : test rax, rax ; jne 0x4165ce ; ret
0x0000000000445d69 : test rbx, rbx ; jne 0x445d46 ; jmp 0x445d38
0x000000000047aafd : test rbx, rbx ; jne 0x47ab19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ebaf : test rbx, rbx ; mov rdi, rbx ; jne 0x49eba9 ; pop rbx ; ret
0x0000000000423a5a : test rdx, rdx ; je 0x423a78 ; bsf rax, rdx ; ret
0x0000000000423a5a : test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x00000000004657c9 : test rdx, rdx ; je 0x4657f8 ; bsf rax, rdx ; ret
0x00000000004657c9 : test rdx, rdx ; je 0x4657f9 ; bsf rax, rdx ; ret
0x0000000000413502 : test rdx, rdx ; jne 0x413515 ; ret
0x0000000000414c7e : test rdx, rdx ; jne 0x414c76 ; ret
0x0000000000463aee : test rdx, rdx ; jne 0x463ae6 ; ret
0x00000000004656c0 : test rsi, rsi ; jne 0x4656d1 ; xor rax, rax ; ret
0x0000000000413715 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043593a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432c5a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432b90 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432959 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dd40 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000432a9f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004328c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432926 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dcea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435926 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043590d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043debb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043debf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dd55 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dd59 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435c43 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435adc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004358de : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004358a2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435da5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043e078 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043dfdb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043de7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042add1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004055f5 : vpsubsb xmm8, xmm15, xmmword ptr [rbx + 0x29480001] ; ret
0x000000000043dde9 : vzeroupper ; ret
0x00000000004a3771 : xabort -1 ; retf 0xfff8
0x00000000004a35a0 : xchg ah, al ; clc ; call qword ptr [rsi]
0x00000000004235df : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cdb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004609e9 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004234eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bccc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049792d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004424b7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000496431 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000497631 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496d31 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000497031 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496729 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a1a2 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a1b2 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a179 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042abdf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235bb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b29b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042368b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000004a385c : xchg byte ptr [rbx], bl ; stc ; call qword ptr [rsi]
0x000000000049badc : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042302f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b9635 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000042b78c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446e22 : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000049aef2 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000042350f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422da1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004896a0 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x00000000004230ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004969d6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b35 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a835 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004978d6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496fd6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496cd6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a355 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004966ce : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bfbd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049575f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049557f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495f57 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494e77 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495d77 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004345cf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042ab75 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e75 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429995 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a695 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466ce6 : xchg dword ptr [rax + rbp*8], eax ; ret
0x000000000049af64 : xchg dword ptr [rax - 0x17000000], esp ; retf
0x00000000004456dc : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c6b9d : xchg dword ptr [rax], eax ; add al, dl ; jrcxz 0x4c6ba3 ; jmp qword ptr [rdx]
0x0000000000470d86 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004b9638 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000048f71f : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000445276 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b91bf : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000483a0d : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476981 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e02d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004849f5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e775 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b842c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000482a2b : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449882 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000049e67a : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x1fc
0x0000000000482aa7 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487963 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004428de : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4428dd ; pop rdx ; pop r10 ; ret
0x000000000046e4e8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485779 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b85cb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494ab8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447cab : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464916 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004115a2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004531b2 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b8909 : xchg eax, ebp ; jge 0x4b88ec ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000041afca : xchg eax, ebp ; ret
0x000000000047bd61 : xchg eax, ebp ; ret 0x3840
0x0000000000462d87 : xchg eax, ebp ; ret 0x5389
0x000000000041c369 : xchg eax, ebp ; ret 0x8348
0x000000000046708e : xchg eax, ebp ; ret 0x8b4c
0x000000000048a7a5 : xchg eax, ebp ; ret 0x941
0x0000000000403977 : xchg eax, ebp ; ret 0x953d
0x0000000000467d7b : xchg eax, ebp ; ret 0xb60f
0x0000000000467231 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b7ff : xchg eax, ebp ; ret 0xc084
0x000000000045b235 : xchg eax, ebp ; ret 0xc283
0x0000000000443068 : xchg eax, ebp ; ret 0xc985
0x00000000004890ba : xchg eax, ebp ; ret 0xd348
0x00000000004670ec : xchg eax, ebp ; ret 0xd721
0x000000000040f8e4 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444281 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466d20 : xchg eax, ebp ; ret 0xe883
0x000000000049b96d : xchg eax, ebp ; ret 0xf45
0x0000000000467cef : xchg eax, ebp ; ret 0xf748
0x00000000004b91c2 : xchg eax, ebp ; retf 0x33e6
0x0000000000416a7d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485b89 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004ba61c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004152d2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a220 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e650 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004c8729 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000004bafac : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000043b27c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042fdd2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ba4c3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4ba49d
0x000000000044fbb0 : xchg eax, ebx ; ret 0x3948
0x000000000045070e : xchg eax, ebx ; ret 0x3949
0x000000000041137f : xchg eax, ebx ; ret 0x840
0x0000000000450be3 : xchg eax, ebx ; ret 0x8548
0x0000000000464384 : xchg eax, ebx ; ret 0xd108
0x00000000004033f9 : xchg eax, ebx ; rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000469a8b : xchg eax, ecx ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000421167 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ac81 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000444243 : xchg eax, ecx ; sub byte ptr [rax], al ; test eax, eax ; je 0x444257 ; ret
0x00000000004293af : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8975 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8943 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004098f5 : xchg eax, edi ; ret
0x00000000004b92dd : xchg eax, edi ; retf 0xe152
0x000000000044251b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000441f45 : xchg eax, edi ; sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004ba61b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8a78 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485b9f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000041792a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba33d : xchg eax, edx ; jae 0x4ba31a ; push rsi ; pop rdx ; je 0x4ba30f ; ret 0xacfc
0x00000000004b897c : xchg eax, edx ; pop rbx ; retf
0x00000000004a1065 : xchg eax, edx ; ret 0x22
0x000000000046e3bb : xchg eax, edx ; ret 0x8348
0x0000000000475296 : xchg eax, edx ; ret 0xb60f
0x000000000044251e : xchg eax, edx ; ret 0xd029
0x00000000004b842f : xchg eax, edx ; ret 0xf869
0x00000000004a38e4 : xchg eax, edx ; sbb bh, cl ; jmp qword ptr [rdx]
0x00000000004237d7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e950 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004698e6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434687 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c8c8 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x00000000004ba728 : xchg eax, esi ; jnp 0x4ba777 ; retf 0x99e0
0x000000000049ad09 : xchg eax, esi ; jo 0x49ad13 ; add byte ptr [rax], al ; jmp 0x49ace1
0x000000000042ea0d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e96b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004baccc : xchg eax, esi ; ret 0xcd11
0x000000000042e9bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444278 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004956b9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004baedf : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bae70 ; ret 0x48f
0x0000000000458af4 : xchg eax, esp ; ret
0x000000000046d8c7 : xchg eax, esp ; ret 0x1f0f
0x000000000047c3ae : xchg eax, esp ; ret 0x3840
0x000000000047baec : xchg eax, esp ; ret 0x5438
0x000000000041b4f9 : xchg eax, esp ; ret 0x7ae9
0x00000000004619c5 : xchg eax, esp ; ret 0x7f3c
0x000000000043e1bf : xchg eax, esp ; ret 0x8341
0x0000000000449e35 : xchg eax, esp ; ret 0x8348
0x000000000043e25f : xchg eax, esp ; ret 0x8444
0x000000000046f4b1 : xchg eax, esp ; ret 0x8545
0x000000000047ae3e : xchg eax, esp ; ret 0x950f
0x0000000000455b58 : xchg eax, esp ; ret 0x9522
0x00000000004028b8 : xchg eax, esp ; ret 0xb60f
0x000000000046bc5c : xchg eax, esp ; ret 0xc283
0x000000000047bc79 : xchg eax, esp ; ret 0xd021
0x0000000000485aa6 : xchg eax, esp ; ret 0xd309
0x000000000047ba3f : xchg eax, esp ; ret 0xda38
0x000000000040fcfc : xchg eax, esp ; ret 0xdaf7
0x000000000049b90c : xchg eax, esp ; ret 0xf45
0x0000000000459c18 : xchg eax, esp ; ret 0xfa80
0x000000000043e1e2 : xchg eax, esp ; ret 0xfe83
0x000000000046ad6f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004b8903 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x00000000004118c1 : xchg eax, r8d ; jmp 0x4117cd
0x0000000000418ea4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000476077 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004baaf6 : xchg esp, eax ; jb 0x4bab54 ; call 0x4c15d4b9
0x000000000048dbe6 : xchg esp, ebx ; jmp 0x48dbef
0x000000000043ecbf : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048a9ae : xchg esp, esi ; jmp 0x48a9b7
0x00000000004115a1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004191f5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469ea5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000425e5e : xlatb ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004b1339 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fcac : xlatb ; add r9, r11 ; jmp r9
0x000000000043eac1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a37dd : xlatb ; clc ; jmp qword ptr [rax]
0x00000000004a0977 : xlatb ; idiv edi ; ret
0x000000000046ae4f : xlatb ; ja 0x46ae7c ; ret
0x00000000004b94a3 : xlatb ; jo 0x4b951f ; mov ebp, 0xfb67d10d ; ret
0x0000000000452262 : xlatb ; mov byte ptr [rsi], al ; jne 0x452248 ; mov rax, rsi ; ret
0x000000000040dc2d : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043eb22 : xlatb ; mov eax, esi ; syscall
0x000000000043eb32 : xlatb ; mov eax, r8d ; syscall
0x00000000004b88b0 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000421529 : xlatb ; ret
0x00000000004ba946 : xlatb ; ret 0x4e27
0x0000000000465aa7 : xlatb ; ret 0x94c
0x0000000000425f4f : xlatb ; ret 0xc085
0x0000000000421520 : xlatb ; ret 0xc148
0x00000000004239d4 : xlatb ; ret 0xf66
0x00000000004215bd : xlatb ; retf
0x00000000004b8904 : xlatb ; retf 0xa1eb
0x0000000000465b84 : xlatb ; retf 0xc148
0x00000000004b9832 : xlatb ; retf 0xdf7f
0x0000000000421780 : xlatb ; retf 0xead3
0x000000000042ce81 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bda6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004229e6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004228a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422766 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422626 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004224e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004223a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422266 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422126 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421fe6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421ea6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421d66 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421c26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421ae6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004219a6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421866 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043bda2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465a45 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465a56 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bdf35 : xlatb ; std ; dec dword ptr [rax + rbx*8] ; std ; jmp rsp
0x00000000004a3698 : xor ah, ah ; clc ; call qword ptr [rax]
0x00000000004c1855 : xor al, 0 ; add byte ptr [rax], ch ; idiv dil ; ret
0x00000000004b842a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004ba4c6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000040557d : xor al, 0x89 ; ret 0x5525
0x00000000004c8154 : xor al, 0x9d ; add byte ptr [rax], al ; cmp byte ptr [rcx], cl ; cld ; call qword ptr [rax]
0x00000000004c8754 : xor al, 0xa3 ; add byte ptr [rax], al ; fdiv st(2) ; cld ; call qword ptr [rax]
0x00000000004621e7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b960a : xor al, 0xd8 ; ret
0x00000000004a36d0 : xor al, ah ; clc ; push rax ; loope 0x4a36d6 ; call rax
0x000000000044537a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004a3660 : xor al, ch ; clc ; jmp qword ptr [rax]
0x00000000004a3750 : xor bh, bl ; clc ; jmp rax
0x00000000004a3618 : xor bl, al ; clc ; inc eax ; ret
0x00000000004261ac : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000004402aa : xor bl, dh ; std ; dec dword ptr [rax - 0x75] ; jge 0x4402ba ; call rbx
0x000000000042606d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004268a1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000049e964 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421431 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467bcd : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449c1b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004238df : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464a52 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004268a2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004c06f0 : xor byte ptr [rax - 0xb], ch ; call qword ptr [rsi]
0x0000000000410d4d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ea52 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ea0a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e59c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046499a : xor byte ptr [rax], al ; je 0x4649a4 ; ret
0x00000000004a3a68 : xor byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x16fff90f]
0x0000000000415990 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004035b3 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fbab : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a337c : xor byte ptr [rbp - 8], ah ; call rax
0x000000000049e4be : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0da7 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426c9b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415cde : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004c6df0 : xor byte ptr [rbx], cl ; sti ; jmp rsi
0x0000000000443e79 : xor byte ptr [rcx + 0x28884005], cl ; add cl, ch ; ret
0x000000000041fe01 : xor byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000420a48 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041accc : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458b27 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b890e : xor byte ptr [rcx], ah ; retf
0x0000000000410d4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f9d5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004c7e50 : xor byte ptr [rcx], al ; cld ; jmp qword ptr [rax]
0x00000000004c8110 : xor byte ptr [rcx], cl ; cld ; call qword ptr [rdx]
0x000000000047049f : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x000000000046a964 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000463bb0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458af2 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c5f40 : xor byte ptr [rdx - 6], dl ; jmp rsp
0x00000000004a339c : xor byte ptr [rdx - 8], dh ; call rax
0x00000000004c1e4f : xor byte ptr [rdx], al ; int 0xa
0x00000000004c168f : xor byte ptr [rdx], al ; ret
0x00000000004a3324 : xor byte ptr [rip + 0x1eb0fff8], bl ; clc ; jmp rax
0x000000000042e6ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465a0c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042606e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e0da : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004ba61e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b88ff : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4b88af
0x00000000004a371c : xor ch, ah ; clc ; call qword ptr [rax]
0x00000000004a3734 : xor cl, ah ; clc ; inc dword ptr [rax] ; jrcxz 0x4a373a ; jmp rax
0x000000000046608b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000412cf5 : xor cl, byte ptr [rax + 0x63] ; jg 0x412d71 ; xor eax, eax ; syscall
0x00000000004731b6 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d5ff : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000045608a : xor cl, byte ptr [rbx] ; jmp rax
0x0000000000440f52 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a367c : xor dh, ah ; clc ; call qword ptr [rax]
0x00000000004a3ab8 : xor dl, byte ptr [rsi] ; stc ; jmp qword ptr [rdx + 0x22fff915]
0x0000000000476ede : xor dl, dh ; jmp r11
0x0000000000476ff0 : xor dl, dh ; ret
0x000000000040dc16 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420d85 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a47d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004b98b6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000041df7a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004c1535 : xor dword ptr [rax], eax ; add byte ptr [rax], bl ; hlt ; cmc ; call qword ptr [rdx]
0x000000000043f4c7 : xor dword ptr [rdi + rcx*2], 0 ; ret
0x00000000004413f3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000049e239 : xor eax, 0x22eb12 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e0e1 : xor eax, 0x22ec6a ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000048e5e9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004693b6 : xor eax, 0x89480026 ; jmp 0xffffffffbf091d10
0x000000000045a7ce : xor eax, 0xf4c004b ; ret 0xf4c
0x000000000040ea4f : xor eax, dword ptr [0x30] ; call rax
0x000000000049cf2d : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004787a7 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047887f : xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004748ca : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451c89 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047805a : xor eax, eax ; call 0x473c78
0x0000000000465237 : xor eax, eax ; call rbx
0x000000000046ae4b : xor eax, eax ; cmp rdi, rdx ; ja 0x46ae80 ; ret
0x00000000004428b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442ab5 : xor eax, eax ; leave ; ret
0x000000000046bc98 : xor eax, eax ; mov edx, 1 ; jmp 0x46bc74
0x0000000000463179 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044092b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442a2f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041eccd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b588 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec5d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042396c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041250c : xor eax, eax ; pop rbx ; ret
0x0000000000401590 : xor eax, eax ; ret
0x000000000042e61e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000412cfa : xor eax, eax ; syscall
0x000000000043e4f8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046b1d0 : xor eax, eax ; test r11b, r11b ; je 0x46b1c9 ; ret
0x0000000000413500 : xor eax, eax ; test rdx, rdx ; jne 0x413517 ; ret
0x00000000004c2ff9 : xor eax, edi ; jmp rsp
0x00000000004173f9 : xor ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a3564 : xor ebp, eax ; clc ; call rcx
0x0000000000467b03 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474168 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e164 : xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x000000000046a97d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x00000000004480a1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000425a29 : xor ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000466515 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000044f162 : xor ecx, eax ; ret 0x4809
0x0000000000473c5e : xor edi, edi ; call 0x43fee4
0x0000000000400cd0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ea07 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000444ae3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044427c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44426c
0x000000000045a4d3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047ab29 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a99e : xor edx, edx ; jmp 0x46a968
0x0000000000473ed4 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004155f9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004179dc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000488223 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440dc1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000445379 : xor esi, dword ptr [rdx] ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x000000000043ec7c : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403869 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044cb3e : xor esi, esi ; mov edi, 0x4a60e8 ; mov eax, ecx ; syscall
0x00000000004016a5 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047adb9 : xor esi, esi ; mov edi, dword ptr [rip + 0x251c03] ; jmp rax
0x0000000000440011 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440dc3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440de8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440e0d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440e31 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440e51 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004695e6 : xor esp, dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000465236 : xor r8d, r8d ; call rbx
0x000000000040ea4e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea4d : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004260ef : xor rax, rax ; ret
0x000000000040ea06 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ea05 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11356
